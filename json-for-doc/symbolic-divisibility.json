{	"classes" : {		"TKTWorkerPool" : {			"hash" : 425728,			"definition" : "Object subclass: #TKTWorkerPool\r\tuses: TTaskScheduler - {#scheduleTaskExecution:}\r\tinstanceVariableNames: 'poolMaxSize freeWorkers poolWorker workers priority'\r\tclassVariableNames: ''\r\tpackage: 'TaskIt-Worker'",			"comment" : [				"! TKTWorkerPool",				"",				"A TaskIT worker pool is pool of worker runners, equivalent to a ThreadPool from other programming languages. Its main purpose is to provide several worker runners and decouple us from the management of threads/processes. A worker pool is a runner in the sense we use the schedule: message to schedule tasks in it. Internally, all runners inside a worker pool share a single task queue.",				"",				"Different applications may have different concurrency needs, thus, TaskIT worker pools do not provide a default amount of workers. Before using a pool, we need to specify the maximum number of workers in the pool using the poolMaxSize: message. A worker pool will create new workers on demand.",				"",				"[[[language=smalltalk",				"pool := TKTWorkerPool new.",				"pool poolMaxSize: 5.",				"]]]",				"",				"TaskIT worker pools use internally an extra worker to synchronize the access to its task queue. Because of this, a worker pool has to be manually started using the start message before scheduled messages start to be executed.",				"",				"[[[language=smalltalk",				"pool := TKTWorkerPool new.",				"pool poolMaxSize: 5.",				"pool start.",				"pool schedule: [ 1 logCr ].",				"]]]",				"",				"Once we are done with the worker pool, we can stop it by sending it the stop message.",				"",				"[[[language=smalltalk",				"pool stop.",				"]]]"			],			"category" : "TaskIt-Worker"		},		"MalNodeWithNext" : {			"hash" : 1769216,			"definition" : "MalGraphNode subclass: #MalNodeWithNext\r\tinstanceVariableNames: 'nextNodes'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"A basic node able to host the model and to represent edges with no additional class.",				"Edges are navigable in one way through the nextNodes instance variable."			],			"category" : "Moose-Algos-Graph"		},		"TaSequence" : {			"hash" : 1301248,			"definition" : "TaAbstractComposition subclass: #TaSequence\r\tinstanceVariableNames: 'members'\r\tclassVariableNames: ''\r\tpackage: 'TraitsV2-Compositions'",			"comment" : [				"I represent a sequence of traits in a trait composition.",				"When two traits are operated with + I appear.",				"The methods and slots are the union of my inner members.",				"I solve when there are conflicts."			],			"category" : "TraitsV2-Compositions"		},		"NSLinearScale" : {			"hash" : 5625600,			"definition" : "NSScale subclass: #NSLinearScale\r\tinstanceVariableNames: 'clamp input output'\r\tclassVariableNames: ''\r\tpackage: 'NumericInterpolator-Scales'",			"comment" : [				"I follow the linear function"			],			"category" : "NumericInterpolator-Scales"		},		"AthensBalloonImagePaint" : {			"hash" : 1832704,			"definition" : "AthensPaint subclass: #AthensBalloonImagePaint\r\tinstanceVariableNames: 'form origin direction tileFlag'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Balloon-Paint'",			"comment" : [				"i representing an image (form) paint  "			],			"category" : "Athens-Balloon-Paint"		},		"GreatestCommonDivisor" : {			"hash" : 2319872,			"definition" : "QuoRemComplementary subclass: #GreatestCommonDivisor\r\tinstanceVariableNames: 'equations point'\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Numbers'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tequations:\t\t<Object>",				"\tpoint:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Containers-Essentials-Numbers"		},		"Base64MimeConverter class" : {			"hash" : 1368064,			"definition" : "Base64MimeConverter class\r\tinstanceVariableNames: ''",			"comment" : [				"This class encodes and decodes data in Base64 format.  This is MIME encoding.  We translate a whole stream at once, taking a Stream as input and giving one as output.  Returns a whole stream for the caller to use.",				"           0 A            17 R            34 i            51 z",				"           1 B            18 S            35 j            52 0",				"           2 C            19 T            36 k            53 1",				"           3 D            20 U            37 l            54 2",				"           4 E            21 V            38 m            55 3",				"           5 F            22 W            39 n            56 4",				"           6 G            23 X            40 o            57 5",				"           7 H            24 Y            41 p            58 6",				"           8 I            25 Z            42 q            59 7",				"           9 J            26 a            43 r            60 8",				"          10 K            27 b            44 s            61 9",				"          11 L            28 c            45 t            62 +",				"          12 M            29 d            46 u            63 /",				"          13 N            30 e            47 v",				"          14 O            31 f            48 w         (pad) =",				"          15 P            32 g            49 x",				"          16 Q            33 h            50 y",				"Outbound: bytes are broken into 6 bit chunks, and the 0-63 value is converted to a character.  3 data bytes go into 4 characters.",				"Inbound: Characters are translated in to 0-63 values and shifted into 8 bit bytes.",				"",				"(See: N. Borenstein, Bellcore, N. Freed, Innosoft, Network Working Group, Request for Comments: RFC 1521, September 1993, MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies. Sec 6.2)",				"",				"By Ted Kaehler, based on Tim Olson's Base64Filter."			],			"category" : "Network-MIME-Converter"		},		"DailyNonInteractiveTranscript" : {			"hash" : 919808,			"definition" : "NonInteractiveTranscript subclass: #DailyNonInteractiveTranscript\r\tinstanceVariableNames: 'date'\r\tclassVariableNames: ''\r\tpackage: 'Transcript-NonInteractive-Base'",			"comment" : [				"I am DailyNonInteractiveTranscript, a NonInteractiveTranscript that writes to a dated file, switching to a new file each day.",				"",				"\t(DailyNonInteractiveTranscript onFileNamed: 'server-{1}.log') install."			],			"category" : "Transcript-NonInteractive-Base"		},		"OmStoreFactory class" : {			"hash" : 4180480,			"definition" : "OmStoreFactory class\r\tinstanceVariableNames: 'current'",			"comment" : [				"I provide a facade to create and reuse OmStore hierarchy instances."			],			"category" : "Ombu-Stores"		},		"ZnServerTransactionTiming" : {			"hash" : 1423104,			"definition" : "Object subclass: #ZnServerTransactionTiming\r\tinstanceVariableNames: 'requestDuration handlerDuration responseDuration'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Logging'",			"comment" : [				"I am ZnServerTransactionTiming.",				"",				"I hold timing information related to the handling of an HTTP transaction by a server."			],			"category" : "Zinc-HTTP-Logging"		},		"MicAbstractAnnotatedBlock" : {			"hash" : 6537984,			"definition" : "MicAbstractBlock subclass: #MicAbstractAnnotatedBlock\r\tinstanceVariableNames: 'label isClosed body'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Model'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbody:\t\t<Object>",				"\tisClosed:\t\t<Object>",				"\tlabel:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Microdown-Model"		},		"ComposedSortFunction" : {			"hash" : 4454912,			"definition" : "SortFunction subclass: #ComposedSortFunction\r\tinstanceVariableNames: 'baseSortFunction'\r\tclassVariableNames: ''\r\tpackage: 'SortFunctions-Core'",			"comment" : [				"A ComposedSortFunction is an abstract class wrapping over another SortFunction for the sake of composition.",				"",				"Subclasses have to define the composition behavior via collate:with: message.",				"",				"Instances variables:",				"\tbaseSortFunction\t\t<SortFunction>\tthe wrapped sort function"			],			"category" : "SortFunctions-Core"		},		"SDL2TouchGestureExample2" : {			"hash" : 4118272,			"definition" : "SDL2TouchExample subclass: #SDL2TouchGestureExample2\r\tinstanceVariableNames: 'circleSize negativeColor positiveColor circleCenter hasAbortedSwipe discoMode blackBackground blackBackgroundPosition'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'SDL2Constants SDL2Types'\r\tpackage: 'OSWindow-SDL2-Examples-Gesture'",			"comment" : [				"Only one gesture at the time, you can scroll to move the circle, pinch to zoom, rotate to rotate, double tap to change the color of the circle and swipe to have a little surprise"			],			"category" : "OSWindow-SDL2-Examples-Gesture"		},		"Form class" : {			"hash" : 430592,			"definition" : "Form class\r\tinstanceVariableNames: ''",			"comment" : [				"A rectangular array of pixels, used for holding images.  All pictures, including character images are Forms.  The depth of a Form is how many bits are used to specify the color at each pixel.  The actual bits are held in a Bitmap, whose internal structure is different at each depth.  Class Color allows you to deal with colors without knowing how they are actually encoded inside a Bitmap.",				"\t  The supported depths (in bits) are 1, 2, 4, 8, 16, and 32.  The number of actual colors at these depths are: 2, 4, 16, 256, 32768, and 16 million.",				"\tForms are indexed starting at 0 instead of 1; thus, the top-left pixel of a Form has coordinates 0@0.",				"\tForms are combined using BitBlt.  See the comment in class BitBlt.  Forms that repeat many times to fill a large destination are InfiniteForms.",				"",				"\tcolorAt: x@y\t\tReturns the abstract Color at this location",				"\tdisplayAt: x@y\t\tshows this form on the screen",				"\tdisplayOn: aMedium at: x@y\tshows this form in a Window, a Form, or other DisplayMedium",				"\tfillColor: aColor\t\tSet all the pixels to the color.",				"\tedit\t\tlaunch an editor to change the bits of this form.",				"\tpixelValueAt: x@y\tThe encoded color.  The encoding depends on the depth."			],			"category" : "Graphics-Display Objects-Forms"		},		"MCVersionLoader" : {			"hash" : 297984,			"definition" : "Object subclass: #MCVersionLoader\r\tinstanceVariableNames: 'versions'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Loading'",			"comment" : [				"A MCVersionLoader is responsible for loading a given version. "			],			"category" : "Monticello-Loading"		},		"ExternalObject class" : {			"hash" : 959488,			"definition" : "ExternalObject class\r\tinstanceVariableNames: ''",			"comment" : [				"External objects represent entities that are not part of the Pharo universe. They are accessed using a unique handle which is interpreted depending on the actual entity that is represented. ",				"",				"Instance variables:",				"\thandle\t<ByteArray | ExternalAddress>"			],			"category" : "FFI-Kernel"		},		"RGMetaclassTraitV2Strategy" : {			"hash" : 5247488,			"definition" : "RGTraitV2DescriptionStrategy subclass: #RGMetaclassTraitV2Strategy\r\tinstanceVariableNames: 'baseClass'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbaseClass:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"CompilationContext" : {			"hash" : 1243136,			"definition" : "Object subclass: #CompilationContext\r\tinstanceVariableNames: 'requestor failBlock noPattern class logged interactive compiledMethod options environment productionEnvironment parserClass semanticAnalyzerClass astTranslatorClass bytecodeGeneratorClass compiledMethodTrailer encoderClass astTransformPlugins requestorScopeClass bindings compiledMethodClass'\r\tclassVariableNames: 'DefaultOptions DefaultTransformationPlugins'\r\tpackage: 'OpalCompiler-Core-FrontEnd'",			"comment" : [				"The compilationContext holds all information that is needed in the whole compiler chain.",				"",				"requestor <Object> usually a textEditor. This can be used to bind editor variables (typically variables local to a workspace/playground) and to properly write error messages inlined.",				"failBlock <BlockClosure> block with non local return used to abort the compilation (like an exception).",				"noPattern <Boolean> false if compiling a method which has selector and arguments at the beginning (the so-called pattern) and true if compiling something without selector and arguments (such as a DoIt).",				"class <Behavior> the behavior in which the code is compiled into (used to know inst var names & methodClass for example)",				"logged <Boolean> true if the sources will be logged in external logging system (change file, epicea, ...)",				"interactive <Boolean> Interactive mode is typically used in the IDE (showing errors when compiling code inlined,  pop-ups for some errors/warnings, ...), non-interactive mode is used for headless & code loading to compile code by logging into stdout or Transcript but no interaction required by the user.",				"options <Set of Symbols> See optionsDescription method comment class side",				"environment <SystemDictionary> place to look for literal variables (Globals for instance)"			],			"category" : "OpalCompiler-Core-FrontEnd"		},		"SpTablePresenter" : {			"hash" : 2211072,			"definition" : "SpAbstractListPresenter << #SpTablePresenter\r\ttraits: {SpTSearchable};\r\tslots: {\r\t\t\t #columns => ObservableSlot .\r\t\t\t #showColumnHeaders => ObservableSlot .\r\t\t\t #isResizable => ObservableSlot };\r\ttag: 'Widgets-Table';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter for a table.",				"A table has columns with a type (See column types section).",				" ",				"**IMPORTANT:** A table presenter does not contain other presenters. Instead, it maps the model provided (See `SpAbstractListPresenter>>#items:`) with the columns defined. If you need this behavior, you will need to use `SpComponentListPresenter`."			],			"category" : "Spec2-Core-Widgets-Table"		},		"ConfigurableHistoryIterator" : {			"hash" : 724224,			"definition" : "Object subclass: #ConfigurableHistoryIterator\r\tinstanceVariableNames: 'undoStack redoStack undoAction redoAction'\r\tclassVariableNames: ''\r\tpackage: 'System-History-Iterators'",			"comment" : [				"I am an history iterator you can configure with two blocks. One to define what to do during the redo action and the second to define what to do during the undo action. ",				"",				"Then you can register context objects to me and ask to undo and redo actions, I will then use my undo and redo actions with my stored context to execute it.",				"",				"Examples",				"--------------------",				"\t",				"\t| saved history |",				"\thistory := self",				"\t\tundo: [ :integer | saved := integer ]",				"\t\tredo: [ :integer | saved := integer asString ].",				"\t",				"\thistory hasPrevious. \"false\"",				"\thistory hasNext. \"false\" ",				"\t",				"\thistory register: 3.",				"\t",				"\thistory current. \"3\"",				"\thistory hasNext. \"false\"",				"\thistory hasPrevious. \"true\"",				"\t",				"\thistory undo.",				"\tsaved. \"3\"",				"\t",				"\thistory hasPrevious. \"false\"",				"\thistory undo. \"EXCEPTION: NothingToUndo\"",				"\t",				"\thistory undoIfEmpty: [ saved := nil ].",				"\tsaved. \"nil\"",				"\t",				"\thistory register: 3.",				"\thistory register: 4.",				"\t",				"\thistory undo.",				"\thistory undo.",				"\t",				"\thistory hasNext. \"true\"",				"\thistory redo.",				"\tsaved. \"'3'\"",				"\thistory redo.",				"\tsaved. \"'4'\"",				"\thistory redo. \"EXCEPTION: NothingToRedo\"",				"\t",				"\thistory redoIfEmpty: [ saved := nil ].",				"\tsaved. \"nil\"",				"\t",				" ",				"Internal Representation and Key Implementation Points.",				"--------------------",				"",				"    Instance Variables",				"\tredoAction:\t\t<aValuable>\t\tA valuable to execute when we redo an action.",				"\tredoStack:\t\t<aStack>\t\t\tA stack containing the contexts that can be redone.",				"\tundoAction:\t\t<aValuable>\t\tA valuable to execute when we undo an action.",				"\tundoStack:\t\t<aStack>\t\t\tA stack containing the contexts that can be undone.",				"\t\t\t\t\t\t",				"\tI work with a system of two stacks:",				"\t- One stack to store contexts to undo ",				"\t- One stack to store contexts to redo",				"\t",				"\tWhen the user wants to undo something, I'll pop the undo stack, evaluate the undo action with it and push it on the redo stack.",				"\tWhen the user wants to redo something, I'll pop the redo stack, evaluate the redo action with it and push it on the undo stack.",				"\t",				"\tWhen the user add a new context on the undo stack, I flush the redo stack."			],			"category" : "System-History-Iterators"		},		"ExecutionCounter" : {			"hash" : 3024640,			"definition" : "Object subclass: #ExecutionCounter\r\tinstanceVariableNames: 'node link count'\r\tclassVariableNames: 'Counters'\r\tpackage: 'Reflectivity-Breakpoints'",			"comment" : [				"I am a meta-object that can be put on any AST node to count execution",				"",				"To install a watchpoint in a node: ",				"\tExecutionCounter installOn: aNode",				"\t",				"Class CounterIconStyler then renders an icon in the editor, mouse over it to see the current counter value."			],			"category" : "Reflectivity-Breakpoints"		},		"SDL_Texture" : {			"hash" : 4076032,			"definition" : "SDL2Handle subclass: #SDL_Texture\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpoolDictionaries: 'SDL2Constants SDL2Types'\r\tpackage: 'OSWindow-SDL2-Bindings'",			"comment" : [				"I represent a handle of GL texture, coming from SDL2 library"			],			"category" : "OSWindow-SDL2-Bindings"		},		"HandMorph" : {			"hash" : 1654016,			"definition" : "Morph subclass: #HandMorph\r\tinstanceVariableNames: 'mouseFocus keyboardFocus eventListeners mouseListeners mouseClickState mouseOverHandler lastMouseEvent targetOffset damageRecorder cacheCanvas cachedCanvasHasHoles temporaryCursor temporaryCursorOffset hardwareCursor hasChanged savedPatch lastEventBuffer captureBlock recentModifiers pendingEventQueue supressNextKeyPress'\r\tclassVariableNames: 'DoubleClickTime EventStats NormalCursor PasteBuffer ShowEvents UpperHandLimit'\r\tpackage: 'Morphic-Core-Kernel'",			"comment" : [				"The cursor may be thought of as the HandMorph.  The hand's submorphs hold anything being carried by dragging.  ",				"",				"There is some minimal support for multiple hands in the same world."			],			"category" : "Morphic-Core-Kernel"		},		"HaloMorph class" : {			"hash" : 579072,			"definition" : "HaloMorph class\r\tinstanceVariableNames: ''",			"comment" : [				"This morph provides a halo of handles for its target morph. Dragging, duplicating, rotating, and resizing to be done by mousing down on the appropriate handle. There are also handles for help and for a menu of infrequently used operations."			],			"category" : "Morphic-Base-Widgets"		},		"TraitChange" : {			"hash" : 1298688,			"definition" : "Object subclass: #TraitChange\r\tinstanceVariableNames: 'addedSelectors removedSelectors updatedSelectors'\r\tclassVariableNames: ''\r\tpackage: 'TraitsV2-Changes'",			"comment" : [				"I implement the logic to propagate the changes when a trait is modified.",				"",				"I am used as:",				"",				" - A new selector has been added or updated: ",				"",				"    TraitChange addSelector: #aSelector on: aTrait.",				"",				"- A selector has been removed from a trait",				"  ",				"   TraitChange removeSelector: #aSelector on: aTrait.",				"",				"I handle the removal or the addition. ",				"I propagate to the users of the trait.",				"If the removal was shadowing a method from the trait composition, the method from the trait composition is installed and the change propagated accordly. "			],			"category" : "TraitsV2-Changes"		},		"FFITestPointerStructure class" : {			"hash" : 1580800,			"definition" : "FFITestPointerStructure class\r\tinstanceVariableNames: ''",			"comment" : [				"A pointer structure for test purposes"			],			"category" : "UnifiedFFI-Tests-Test-Data"		},		"RSSVGExporter" : {			"hash" : 2314752,			"definition" : "RSRoassalExporter subclass: #RSSVGExporter\r\tinstanceVariableNames: 'stream pathTransform maxSize convertions shouldUsePathLabel shouldHaveFontDefs fontURLServer'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Exporters-Core'",			"comment" : [				"This new exporter, is similar to RTSVGExporter from roassal2 a pure smalltalk object that allow to the user to convert the roassal3 shapes into an svg shape"			],			"category" : "Roassal3-Exporters-Core"		},		"RandomExponential" : {			"hash" : 2323456,			"definition" : "Random subclass: #RandomExponential\r\tinstanceVariableNames: 'lambda'\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Random'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tlambda:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Containers-Essentials-Random"		},		"MCDefinitionIndex" : {			"hash" : 272896,			"definition" : "Object subclass: #MCDefinitionIndex\r\tinstanceVariableNames: 'definitions'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Patching'",			"comment" : [				"I'm a simple container of MCDefinitions which can be added or removed."			],			"category" : "Monticello-Patching"		},		"RBPackageEnvironment" : {			"hash" : 3135232,			"definition" : "RBBrowserEnvironmentWrapper subclass: #RBPackageEnvironment\r\tinstanceVariableNames: 'packages'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Environment'",			"comment" : [				"I am a RBBrowserEnvironment on a set of packages or package names.",				"I containt all entities are defined in this packages.",				"(classes and class that have extensions from this packages)",				"",				"Example:",				"(RBBrowserEnvironment new) forPackageNames:{ 'Morphic-Base'}."			],			"category" : "Refactoring-Environment"		},		"MenubarMorph" : {			"hash" : 1906432,			"definition" : "DockingBarMorph subclass: #MenubarMorph\r\tinstanceVariableNames: 'menuBarItems'\r\tclassVariableNames: 'ShowMenubar'\r\tpackage: 'Morphic-Widgets-Menubar-View'",			"comment" : [				"Description",				"--------------------",				"",				"I am a Morph of the form of a Menubar that can be displayed at the top of the World. ",				"",				"You can disable me with: `self showMenubar: false`.",				"",				"For now, when you open me, by default I will use the world menu pragma to collect the items to display. If you want a custom menu, just update the WorldMenu pragma to use.",				" ",				"Internal Representation and Key Implementation Points.",				"--------------------",				"",				"    Instance Variables",				"\tmenuBarItems:\t\t<aCollection>\tA collection of items to show at the root of the Menubar. Those items can also contains submenus."			],			"category" : "Morphic-Widgets-Menubar-View"		},		"EmbossedStringMorph" : {			"hash" : 605440,			"definition" : "StringMorph subclass: #EmbossedStringMorph\r\tinstanceVariableNames: 'style trackPaneColor'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Basic'",			"comment" : [				"A label that underdraws to the top-left and/or bottom-right with a lighter and/or darker colour to the receiver."			],			"category" : "Morphic-Base-Basic"		},		"FFIExternalObjectType" : {			"hash" : 498944,			"definition" : "FFIExternalReferenceType subclass: #FFIExternalObjectType\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-Types'",			"comment" : [				"I'm en external object type (a pointer)"			],			"category" : "UnifiedFFI-Types"		},		"CTDfsShapeBuilder" : {			"hash" : 2856960,			"definition" : "Object subclass: #CTDfsShapeBuilder\r\tinstanceVariableNames: 'metaColor metaFontSize metaExtent prototypeLabel goldenRatios'\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Outliner'",			"comment" : [				"I provide basic shape constructors to be assembled in an outliner shape."			],			"category" : "Containers-Essentials-Outliner"		},		"RSInspectableInteraction" : {			"hash" : 5794304,			"definition" : "RSInteraction subclass: #RSInspectableInteraction\r\tinstanceVariableNames: 'highlightable inspectorWindow inspectShapeBlock selectedShape'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Inspector-Interactions'",			"comment" : [				"I allow to inspect another view or windows. It can be configurable to set the kind of view you want to inspect"			],			"category" : "Roassal3-Inspector-Interactions"		},		"SpDynamicWidgetChange" : {			"hash" : 2468608,			"definition" : "SpPresenter subclass: #SpDynamicWidgetChange\r\tinstanceVariableNames: 'boolean button bottom'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Examples-Standalone'",			"comment" : [				"I am a dummy proto to see how easy it is to replace a subwidget with another one dynamically.",				"",				"slef example"			],			"category" : "Spec2-Examples-Standalone"		},		"OmFuelEntryWriter" : {			"hash" : 4174080,			"definition" : "OmEntryWriter subclass: #OmFuelEntryWriter\r\tinstanceVariableNames: 'serializer'\r\tclassVariableNames: ''\r\tpackage: 'Ombu-Persistence'",			"comment" : [				"I implement how to write entries to a stream using Fuel serializer."			],			"category" : "Ombu-Persistence"		},		"NSLnScale" : {			"hash" : 5626112,			"definition" : "NSLinearScale subclass: #NSLnScale\r\tinstanceVariableNames: 'linear'\r\tclassVariableNames: ''\r\tpackage: 'NumericInterpolator-Scales'",			"comment" : [				"I use natural logarithms to compute scales."			],			"category" : "NumericInterpolator-Scales"		},		"OSWorldRenderer" : {			"hash" : 4001792,			"definition" : "AbstractWorldRenderer subclass: #OSWorldRenderer\r\tinstanceVariableNames: 'driver osWindow display windowCloseAction previousFrameRenderingTime'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Morphic'",			"comment" : [				"I know how to render the world in an OSWindow"			],			"category" : "OSWindow-Core-Morphic"		},		"PluggableListMorph" : {			"hash" : 1927424,			"definition" : "ScrollPane subclass: #PluggableListMorph\r\tinstanceVariableNames: 'list getListSelector getListSizeSelector getListElementSelector getIndexSelector setIndexSelector keystrokeActionSelector autoDeselect lastKeystrokeTime lastKeystrokes doubleClickSelector handlesBasicKeys potentialDropRow listMorph hScrollRangeCache dragItemSelector dropItemSelector wantsDropSelector wrapSelector searchedElement multipleSelection dragOnOrOff setSelectionListSelector getSelectionListSelector resetListSelector keystrokeSelector backgroundColoringBlockOrSelector separatorBlockOrSelector separatorSize separatorColor lastNonZeroIndex canMove selectionColor selectionColorToUse enabled getEnabledSelector'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Pluggable-Lists'",			"comment" : [				"...",				"",				"When a PluggableListMorph is in focus, type in a letter (or several",				"letters quickly) to go to the next item that begins with that letter.",				"Special keys (up, down, home, etc.) are also supported."			],			"category" : "Morphic-Widgets-Pluggable-Lists"		},		"TabLabelMorph" : {			"hash" : 1956096,			"definition" : "PanelMorph subclass: #TabLabelMorph\r\tinstanceVariableNames: 'tabSelector normalLabel selectedLabel'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-PolyTabs'",			"comment" : [				"Specially themed label used for tab selector items. "			],			"category" : "Morphic-Widgets-PolyTabs"		},		"DTMockPlugin" : {			"hash" : 2978048,			"definition" : "DrTestsPlugin subclass: #DTMockPlugin\r\tinstanceVariableNames: 'hasBeenRun'\r\tclassVariableNames: ''\r\tpackage: 'DrTests-Tests'",			"comment" : [				"A Mock object used in test"			],			"category" : "DrTests-Tests"		},		"LabelPresenter" : {			"hash" : 890880,			"definition" : "AbstractWidgetPresenter subclass: #LabelPresenter\r\tinstanceVariableNames: 'labelHolder emphasis'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"A LabelPresenter is a spec presenter for Labels.",				"See AbstractWidgetPresenter",				"",				"self example",				"",				"I provide the following variables and their accessors",				"- label is the text displayed that I display.",				"",				"I am specializing defaultColor to change the color of my text.",				"",				"todo",				"- emphasis"			],			"category" : "Spec-Core-Widgets"		},		"SettingDontTranslateDescriptionRule" : {			"hash" : 4138496,			"definition" : "ReNodeRewriteRule subclass: #SettingDontTranslateDescriptionRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'System-Settings-Rules'",			"comment" : [				"When defining a description of a setting, you don't need to translate it. It will be done by the setting itself."			],			"category" : "System-Settings-Rules"		},		"CNSelectorExtractorTest" : {			"hash" : 4411904,			"definition" : "TestCase subclass: #CNSelectorExtractorTest\r\tinstanceVariableNames: ''\r\tclassVariableNames: 'selectorExtractor'\r\tpackage: 'Tools-CodeNavigation-Tests'",			"comment" : [				"A CNSelectorExtractorTest is a test class for testing the behavior of CNSelectorExtractor"			],			"category" : "Tools-CodeNavigation-Tests"		},		"RGMetaclassStrategy" : {			"hash" : 5244928,			"definition" : "RGClassDescriptionStrategy subclass: #RGMetaclassStrategy\r\tinstanceVariableNames: 'baseClass'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbaseClass:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"RSAbstractSunburstLayout" : {			"hash" : 5786880,			"definition" : "RSLayout subclass: #RSAbstractSunburstLayout\r\tinstanceVariableNames: 'hasCenter radialSpacing builder firstNode'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Sunburst'",			"comment" : [				"I am the abstract class for sunburst visualizations in Roassal2, check my subclasses ",				"",				"* RTSunburstConstanWidthLayout",				"* RtSunburstExtentLayout",				"",				"You can use this layout in with RTLayoutBuilder or with RTSunburstBuilder",				"and their examples to get more info"			],			"category" : "Roassal3-Sunburst"		},		"FLLargeIdentityHashedCollection" : {			"hash" : 557312,			"definition" : "Collection subclass: #FLLargeIdentityHashedCollection\r\tinstanceVariableNames: 'tally tallies'\r\tclassVariableNames: 'PermutationMap'\r\tpackage: 'Fuel-Core-Collections'",			"comment" : [				"I share behavior for special HashedCollections that are optimized for including a large number of elements."			],			"category" : "Fuel-Core-Collections"		},		"EFFormatter class" : {			"hash" : 3104256,			"definition" : "EFFormatter class\r\tinstanceVariableNames: ''",			"comment" : [				"Enlumineur is a replacement of BlueInk pretty printer (now packaged in pharo-contributions/configurableFormatter).",				"",				"It was developed by Hugo Lasnier during 6 months internship within RMOD and supervised by S. Ducasse and G. Polito during 2019.",				"The code was revisited and cleaned but there are probably more glitches left. ",				"",				"Enlumineur enhancements compared to BlueInk are:",				"",				"- systematic test coverage with more than 270 tests",				"- full revisiting of settings with description and examples",				"- no way to break the code by entering a non space character to indent code",				"- support for {.....} long list",				"- cleaning coupled settings",				"- support for to:do: block like statement (multiline arguments)",				"- removal of \"traditional parentheses\" whatever it meant.",				"- new line and more indentations after the opening bracket",				"- A dedicated UI was in preparation but should be redone before introduced in Pharo.",				" See package Enlumineur-UI (https://github.com/Ducasse/enlumineur)",				"",				"Enlumineur should be improved to be able to reformat the full code of Pharo.",				"The tests are a first step to make sure that we understand what is impacted by a change.",				"",				"Implementation remarks",				"\t  - willBeMultiline: too costly because it formats the code to see if it fits.",				"\tWe should have other heuristics.",				"\t- formatBlock: should be improved and speed up. ",				"\tformatBlock2: is a first alternative but it broke some tests that should be evaluated. ",				"\t- Some Node extensions should be pushed to the packages their belong to. "			],			"category" : "EnlumineurFormatter-Core"		},		"TabMorph class" : {			"hash" : 611840,			"definition" : "TabMorph class\r\tinstanceVariableNames: ''",			"comment" : [				"I represent a simple tab",				"I have a IconicListItem which wrap my label and my icon.",				"I also have a morph to display when selected.",				"This morph can in fact be anything responding to #asMorph. Moreover it could be a block for lazy initialization.",				"",				"I also have a state representing if I am selecting or not, enabled or not, etc"			],			"category" : "Morphic-Widgets-Tabs-Morphs"		},		"MicPathResolver" : {			"hash" : 6565632,			"definition" : "MicrodownVisitor subclass: #MicPathResolver\r\tinstanceVariableNames: 'root originFile microdown'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Core'",			"comment" : [				"`MicPathResolver` resolves paths and urls of the document into absolute references based on the kind of resolutionSource and the kind of paths.",				"",				"Imagine we have the following file that we want to resolve on a local disk",				"",				"```",				"\t'SUnit' / 'SUnit.mic'.",				"\twith contents:  '![aFile](figures/setUp.png)'",				"```",				"",				"We should get a figure whose reference is `FileSystem workingDirectory / 'SUnit' / 'figures' / 'setUp.png'`.",				"",				"Here are the possible combinations",				"",				"- aPath (e.g., figures/tmp.png) => full path := parent path + path",				"- aUrl  (`http://files.pharo.org/logos/p.png`) => full path := http://files.pharo.org/logos/p.png",				"",				"then the root resolution impacts the full path:",				"",				"- if this is an url e.g., `http://pharo.org/resources` we should get",				"  - \t\t`SUnit/figures/setUp.png` => `http://pharo.org/resources/SUnit/figures/setUp.png`",				"  -      `http://files.pharo.org/logos/p.png` => `http://files.pharo.org/logos/p.png`",				"- else a file system e.g., `~ducasse/pillar/books/`",				"  - `SUnit/figures/setUp.png` =>`~ducasse/pillar/books/SUnit/figures/setUp.png`",				"  - `http://files.pharo.org/logos/p.png` => `http://files.pharo.org/logos/p.png`"			],			"category" : "Microdown-Core"		},		"ReAsOrderedCollectionNotNeededRule" : {			"hash" : 2883072,			"definition" : "ReNodeRewriteRule subclass: #ReAsOrderedCollectionNotNeededRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"A prior conversion to an Array or OrderedCollection is not necessary when adding all elements to a collection."			],			"category" : "GeneralRules-Migrated"		},		"FreeTypeFontFamilyMember" : {			"hash" : 710400,			"definition" : "AbstractFontFamilyMember subclass: #FreeTypeFontFamilyMember\r\tinstanceVariableNames: 'fileInfo stretchName stretchValue weightName weightValue slantName slantValue isSimulatedStyle'\r\tclassVariableNames: ''\r\tpackage: 'FreeType-FontManager'",			"comment" : [				"FreeType FontFamily member  "			],			"category" : "FreeType-FontManager"		},		"DelayMicrosecondTickerSimulation" : {			"hash" : 929536,			"definition" : "DelayMicrosecondTicker subclass: #DelayMicrosecondTickerSimulation\r\tinstanceVariableNames: 'vmSimNow vmSimTheTimerSemaphore vmSimNextWakeupTick'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Delays'",			"comment" : [				"To facilitate unit tests without interferring with the live VM interface,",				"I simulate the VM code for the microsecond primitives."			],			"category" : "Kernel-Delays"		},		"MockSourceEditor" : {			"hash" : 3745280,			"definition" : "Object subclass: #MockSourceEditor\r\tinstanceVariableNames: 'text selectionStart selectionEnd'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Tests-FromOld'",			"comment" : [				"A mock object mocking a source editor"			],			"category" : "OpalCompiler-Tests-FromOld"		},		"RSAbstractRegularTreeLayout" : {			"hash" : 5759232,			"definition" : "RSAbstractGraphLayout subclass: #RSAbstractRegularTreeLayout\r\tinstanceVariableNames: 'alreadyLayoutedNodes topGap leftGap nodesByLayer isLayered shouldBeHorizontallyReversed shouldBeVerticallyReversed'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Layouts-Core"		},		"Color class" : {			"hash" : 908544,			"definition" : "Color class\r\tinstanceVariableNames: ''",			"comment" : [				"This class represents abstract color, regardless of the depth of bitmap it will be shown in.  At the very last moment a Color is converted to a pixelValue that depends on the depth of the actual Bitmap inside the Form it will be used with.  The supported depths (in bits) are 1, 2, 4, 8, 16, and 32.  The number of actual colors at these depths are: 2, 4, 16, 256, 32768, and 16 million.  (See comment in BitBlt.)  To change the depth of the Display and set how many colors you can see, execute: (Display newDepth: 8).  (See comment in DisplayMedium)",				"",				"\tColor is represented as the amount of light in red, green, and blue.  White is (1.0, 1.0, 1.0) and black is (0, 0, 0).  Pure red is (1.0, 0, 0).  These colors are \"additive\".  Think of Color's instance variables as:",				"\tr\tamount of red, a Float between 0.0 and 1.0.",				"\tg\tamount of green, a Float between 0.0 and 1.0.",				"\tb\tamount of blue, a Float between 0.0 and 1.0.",				"(But, in fact, the three are encoded as values from 0 to 1023 and combined in a single integer, rgb.  The user does not need to know this.)",				"",				"\tMany colors are named.  You find a color by name by sending a message to class Color, for example (Color lightBlue).  Also, (Color red: 0.2 green: 0.6 blue: 1.0) or (Color r: 0.2 g: 0.6 b: 1.0) creates a color. (see below)",				"\tA color is essentially immutable.  Once you set red, green, and blue, you cannot change them.  Instead, create a new Color and use it.",				"\t",				"\tApplications such as contour maps and bar graphs will want to display one of a set of shades based on a number.  Convert the range of this number to an integer from 1 to N.  Then call (Color green lightShades: N) to get an Array of colors from white to green.  Use the Array messages at:, atPin:, or atWrap: to pull out the correct color from the array.  atPin: gives the first (or last) color if the index is out of range.  atWrap: wraps around to the other end if the index is out of range.",				"\t\t",				"Messages:",				"\tmixed: proportion with: aColor\tAnswer this color mixed with the given color additively. The proportion, a number between 0.0 and 1.0, determines what what fraction of the receiver to use in the mix.",				"",				"\t+ \tadd two colors",				"\t- \tsubtract two colors",				"\t*\tmultiply the values of r, g, b by a number or an Array of factors.  ((Color named: #white) * 0.3) gives a darkish gray.  (aColor * #(0 0 0.9)) gives a color with slightly less blue.",				"\t/\tdivide a color by a factor or an array of three factors.",				"",				"\terrorForDepth: d     How close the nearest color at this depth is to this abstract color.  Sum of the squares of the RGB differences, square rooted and normalized to 1.0.  Multiply by 100 to get percent.",				"",				"\thue\t\t\tReturns the hue of the color. On a wheel from 0 to 360 with pure red at 0 and again at 360.",				"\tsaturation\tReturns the saturation of the color.  0.0 to 1.0",				"\tbrightness\tReturns the brightness of the color.  0.0 to 1.0",				"",				"\tname    Look to see if this Color has a name.",				"",				"\tlightShades: thisMany\t\tAn array of thisMany colors from white to the receiver. ",				"\tdarkShades: thisMany\t\tAn array of thisMany colors from black to the receiver.  Array is of length num.",				"\tmix: color2 shades: thisMany\t\tAn array of thisMany colors from the receiver to color2.",				"\twheel: thisMany\t\t\tAn array of thisMany colors around the color wheel starting and ending at the receiver.",				"",				"\tpixelValueForDepth: d    Returns the bits that appear be in a Bitmap of this depth for this color.  Represents the nearest available color at this depth.  Normal users do not need to know which pixelValue is used for which color. ",				"",				"Messages to Class Color.",				"\tred: r green: g blue: b\t\tReturn a color with the given r, g, and b components.",				"\tr: g: b:\t\tSame as above, for fast typing.",				"",				" \thue: h saturation: s brightness: b\t\tCreate a color with the given hue, saturation, and brightness.",				"",				"\tpink",				" \tblue",				"\tred ...\tMany colors have messages that return an instance of Color.",				"\tcanUnderstand: #brown\t  Returns true if #brown is a defined color.",				"\tnames\t\tAn OrderedCollection of the names of the colors.",				"\tnamed: #notAllThatGray put: aColor    Add a new color to the list and create an access message and a class variable for it.",				"",				"   colorFromPixelValue: value depth: d    Returns a Color whose bit pattern (inside a Bitmap) at this depth is the number specified.  Normal users do not need to use this.",				"",				"(See also comments in these classes: Form, Bitmap, BitBlt,.)"			],			"category" : "Colors-Base"		},		"RSMultilineLabelBuilder" : {			"hash" : 5667584,			"definition" : "RSObject subclass: #RSMultilineLabelBuilder\r\tinstanceVariableNames: 'labelShape layout textBlock wrapStrategy'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Builders-Text'",			"comment" : [				"I am a builder that can create labels with multiline in roassal3 from objects",				"",				"```Smalltalk",				"canvas := RSCanvas new.",				"shapeBuilder := RSMultilineLabelBuilder new.",				"shapeBuilder labelShape",				" fontSize: 20;",				" italic.",				"canvas add:(shapeBuilder shapeFor: '\"tu est loin, ",				"très loin de tous ces regards vicieux ",				"qui s''alimentent de ta lumière\"').",				"canvas nodes when: RSMouseClick do: [ :evt | canvas nodes last inspect ].",				"canvas showEncompassingRectangles.",				"canvas @ RSCanvasController",				"```"			],			"category" : "Roassal3-Builders-Text"		},		"MCThreeWayMerger" : {			"hash" : 278016,			"definition" : "MCMerger subclass: #MCThreeWayMerger\r\tinstanceVariableNames: 'index operations provisions redundantAdds'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Merging'",			"comment" : [				"A MCThreeWayMerger is more advanced merge operation.",				"Operations are subclasses of MCPatchOperation:  addition (MCAddition), modification of an entity (MCModification ) and removal (MCRemoval)."			],			"category" : "Monticello-Merging"		},		"FTCellMorph" : {			"hash" : 570624,			"definition" : "FTSelectableMorph subclass: #FTCellMorph\r\tinstanceVariableNames: 'topSeparator'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Base'",			"comment" : [				"I represent a cell for the table. ",				"",				"Description",				"------------------",				"",				"I contains other Morph that need to be render. I should be answered in FTDataSource>>#cellTable:column:row:, with this method a FTTableContainer can display all the needed cells.",				"",				"Technically, FTDataSource can answer  any kind of morph, but I'm better prepared  for the role so is recommendable  to  use me.",				"",				"Public API and Key Messages",				"-------------------",				"",				"- #withTopSeparator \t\tthis is use to put a separator before the cell. (For exmple on a FTOutlineDataSource).",				"",				"Example",				"-------------------",				"",				"FTCellMorph new",				"\t\taddMorphBack: 'Example' asMorph;",				"\t\twithTopSeparator;",				"\t\topenInWindow.",				" ",				"Internal Representation and Key Implementation Points.",				"-----------------",				"",				"    Instance Variables",				"\ttopSeparator:\t\tThis is a boolean to know if the cell need a topSeparator."			],			"category" : "Morphic-Widgets-FastTable-Base"		},		"SpVersatileDialogPresenter" : {			"hash" : 1560576,			"definition" : "SpDynamicPresenter subclass: #SpVersatileDialogPresenter\r\tuses: SpTDynamicPresenter\r\tinstanceVariableNames: 'mainMessage mainIcon contentArea buttons moreOptionsButton moreOptionsText lessOptionsText moreOptionsArea footnoteIcon footnoteArea moreOptionsVisible mainMessagePresenter mainIconPresenter contentAreaPresenter moreOptionsAreaPresenter footnoteIconPresenter footnoteAreaPresenter result defaultButtonId'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Morphic-Widgets'",			"comment" : [				"A am versatile presenter for modal dialog windows with the customizable content",				"",				"I have:",				"- title",				"- main message      - the basic text of the dialog ",				"- main icon         - the icon that is displayed next to the main message ",				"                      or next to the content area, if any ",				"- content area      - a text or another presenter with the detailed information of the dialog ",				"- buttons           - added using addButton:text:value",				"- more options text - a label of the button that shows more options of the dialog",				"- less options text - a label of the button that shows more options of the dialog in case",				"                      that the options are visible",				"- footnote icon     - an icon that is displayed next to the footnote ",				"- footnote area     - a text or another presenter with the footnote"			],			"category" : "Spec2-Morphic-Widgets"		},		"PopupChoiceDialogWindow" : {			"hash" : 1948928,			"definition" : "ModelDependentDialogWindow subclass: #PopupChoiceDialogWindow\r\tinstanceVariableNames: 'choice labels lines choicesMorph choiceMenus filter filterMorph updatingFilter'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Windows'",			"comment" : [				"Presents a list of options in a popup format. If the list is long it will split into multiple columns. If very long, the columns will be scrollable. Maximum extent of the content area is half the display extent."			],			"category" : "Polymorph-Widgets-Windows"		},		"AbstractWorldRenderer" : {			"hash" : 1648384,			"definition" : "Object subclass: #AbstractWorldRenderer\r\tinstanceVariableNames: 'world alreadyActivated'\r\tclassVariableNames: 'IsLoggingRenderingProfileToFile IsProfilingRenderingTime MainWorldRenderer RenderingProfilingLogOutput'\r\tpackage: 'Morphic-Core-Worlds'",			"comment" : [				"I implement the logic to render a world.",				"I have different implementations to start the world."			],			"category" : "Morphic-Core-Worlds"		},		"StIconBookBuilder" : {			"hash" : 6588672,			"definition" : "Object subclass: #StIconBookBuilder\r\tinstanceVariableNames: 'bookIcon pageIcon'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-DocumentationReader'",			"comment" : [				"I set pageIcon when the topic has not subtopics.",				"I set bookIcon when the topic has subtopics."			],			"category" : "NewTools-DocumentationReader"		},		"MWSession" : {			"hash" : 3386112,			"definition" : "Object subclass: #MWSession\r\tinstanceVariableNames: 'stackCounter decorators home'\r\tclassVariableNames: ''\r\tpackage: 'MethodWrappers'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tdecorators:\t\t<Object>",				"\thome:\t\t<Object>",				"\tstackCounter:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "MethodWrappers"		},		"StInspectorRefreshService" : {			"hash" : 5402112,			"definition" : "TKTService subclass: #StInspectorRefreshService\r\tinstanceVariableNames: 'inspectors mutex'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Inspector-View'",			"comment" : [				"I'm a service to process refresh of inspectors. ",				"I keep a registry of all opened inspectors and execute the required stepping (by default every 500ms), but I'm only active if I have inspectors registered (otherwise, I will stop until a new inspector is registered) "			],			"category" : "NewTools-Inspector-View"		},		"OSButtonState" : {			"hash" : 4003840,			"definition" : "Object subclass: #OSButtonState\r\tinstanceVariableNames: 'buttons'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Events'",			"comment" : [				"I am holding a set of mouse buttons state (pressed or not).",				"Used by various mouse events."			],			"category" : "OSWindow-Core-Events"		},		"RSLissajous" : {			"hash" : 2293760,			"definition" : "Object subclass: #RSLissajous\r\tinstanceVariableNames: 'canvas nCircles color gap circleSize dotSize cell'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-Animations'",			"comment" : [				"Based on https://es.wikipedia.org/wiki/Curva_de_Lissajous"			],			"category" : "Roassal3-Experimental-Animations"		},		"CoASTNodeFetcherHeuristic" : {			"hash" : 5295360,			"definition" : "Object subclass: #CoASTNodeFetcherHeuristic\r\tinstanceVariableNames: 'next'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Model-Heuristics'",			"comment" : [				"I implement a fetcher heuristic for an AST node.",				"My responsibility is to build a fetcher for a given node in a given context.",				"I am implemented as a chain of responsibility: I treat the build request if possible, otherwise I forward the request to the next heuristic.",				"",				"My main method #fetcherFor:inContext: is a template method.",				"My subclasses should redefine:",				" - #appliesForNode:inContext: returning a boolean if the heuristic applies for context/node",				" - #buildFetcherFor:inContext: returning the effective heuristic built"			],			"category" : "HeuristicCompletion-Model-Heuristics"		},		"RGPointerLayout" : {			"hash" : 5263360,			"definition" : "RGLayout subclass: #RGPointerLayout\r\tinstanceVariableNames: 'slots'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tslots:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"DisplayScreen class" : {			"hash" : 466432,			"definition" : "DisplayScreen class\r\tinstanceVariableNames: ''",			"comment" : [				"There is only one instance of me, Display. It is a global and is used to handle general user requests to deal with the whole display screen. ",				"\tAlthough I offer no protocol, my name provides a way to distinguish this special instance from all other Forms. This is useful, for example, in dealing with saving and restoring the system.",				"\tTo change the depth of your Display...",				"\t\tDisplay newDepth: 16.",				"\t\tDisplay newDepth: 8.",				"\t\tDisplay newDepth: 1.",				"Valid display depths are 1, 2, 4, 8, 16 and 32.  It is suggested that you run with your monitors setting the same, for better speed and color fidelity.  Note that this can add up to 4Mb for the Display form.  Finally, note that newDepth: ends by executing a 'ControlManager restore' which currently terminates the active process, so nothing that follows in the doit will get executed.",				"",				"Depths 1, 2, 4 and 8 bits go through a color map to put color on the screen, but 16 and 32-bit color use the pixel values directly for RGB color (5 and 8 bits per, respectivlely).  The color choice an be observed by executing Color fromUser in whatever depth you are using."			],			"category" : "Graphics-Display Objects-Screen"		},		"FreeTypeCache" : {			"hash" : 1902336,			"definition" : "Object subclass: #FreeTypeCache\r\tinstanceVariableNames: 'maximumSize used fontTable fifo'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'FreeTypeCacheConstants'\r\tpackage: 'FreeType-Cache'",			"comment" : [				"Cache for freetype fonts"			],			"category" : "FreeType-Cache"		},		"RSXmasFrontier" : {			"hash" : 2295296,			"definition" : "Object subclass: #RSXmasFrontier\r\tinstanceVariableNames: 'position velocity finished thickness'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-Xmas2019'",			"comment" : [				"I am a demo"			],			"category" : "Roassal3-Experimental-Xmas2019"		},		"ReWhileTrueRule" : {			"hash" : 3956224,			"definition" : "ReNodeMatchRule subclass: #ReWhileTrueRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for users of whileTrue: when the shorter to:do: would work.",				"",				"For example",				" ",				"statements1. ",				"[index <= stop] ",				"\twhileTrue: ",				"\t[ ",				"\tblockStmts1. ",				"\tindex := index + 1].",				"statements2"			],			"category" : "GeneralRules-Migrated"		},		"HelpBrowser" : {			"hash" : 3007744,			"definition" : "Model subclass: #HelpBrowser\r\tinstanceVariableNames: 'rootTopic window treeMorph helpTopicCache sourceTextModel'\r\tclassVariableNames: 'DefaultHelpBrowser'\r\tpackage: 'HelpSystem-Core-UI'",			"comment" : [				"A HelpBrowser is used to display a hierarchy of help topics and their contents.",				"",				"Instance Variables",				"\trootTopic: \t\t<HelpTopic>",				"\twindow:\t\t\t<StandardWindow>\t ",				"\ttreeMorph:\t\t<PluggableTreeMorph>",				"\tcontentMorph:\t\t<Morph>\t\t\t",				"",				"rootTopic",				"\t- xxxxx",				"",				"window",				"\t- xxxxx",				"",				"treeMorph ",				"\t- xxxxx",				"",				"contentMorph ",				"\t- xxxxx",				""			],			"category" : "HelpSystem-Core-UI"		},		"ChangeSet class" : {			"hash" : 1319424,			"definition" : "ChangeSet class\r\tinstanceVariableNames: 'current'",			"comment" : [				"ChangeSets keep track of the changes made to a system, so they can be written on a file as source code (a \"fileOut\"). ",				"",				"---",				"preamble and postscript:  two strings that serve as prefix (useful for documentation) and suffix (useful for doits) to the fileout of the changeSet.",				"",				"",				"changeRecords -  Dictionary {class name -> a ClassChangeRecord}.",				"These classChangeRecords (qv) remember all of the system changes."			],			"category" : "System-Changes-Base"		},		"ReCollectionProtocolRule" : {			"hash" : 3945984,			"definition" : "ReNodeMatchRule subclass: #ReCollectionProtocolRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks code using the do: method instead of using the collect: or select: methods. This often occurs with new people writing code. The collect: and select: variants express the source code''s intentions better."			],			"category" : "GeneralRules-Migrated"		},		"TKTWatchDog" : {			"hash" : 419072,			"definition" : "TKTService subclass: #TKTWatchDog\r\tinstanceVariableNames: 'values id started'\r\tclassVariableNames: ''\r\tpackage: 'TaskIt-Worker'",			"comment" : [				"Watchdog watches the common queue worker pool to ensure the good working of this pool"			],			"category" : "TaskIt-Worker"		},		"ClapParameter" : {			"hash" : 397568,			"definition" : "Object subclass: #ClapParameter\r\tinstanceVariableNames: 'identifier canonicalName description multiple meaningBlock validationBlock implicitMeaningBlock'\r\tclassVariableNames: ''\r\tpackage: 'Clap-Core-Specification'",			"comment" : [				"My instances represent formal parameters in command-line invocations.",				"",				"My subclasses implement the various conventional kinds of command-line parameters, and their instances are composed to specify the syntax of a given command."			],			"category" : "Clap-Core-Specification"		},		"SpChangeSorterPresenter" : {			"hash" : 5395968,			"definition" : "StPresenter subclass: #SpChangeSorterPresenter\r\tinstanceVariableNames: 'model changesListPresenter methodsListPresenter classesListPresenter textPresenter'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-ChangeSorter'",			"comment" : [				"A change sorter is a little tool to manage changes. ",				"Developer can give name to change containers and all the change made during this container is active are collected in the container. ",				"The DualChangeSorter tool supports manipulation of changes between containers and fileout of the changes.",				"",				"ChangeSorterPresenter new openWithSpec"			],			"category" : "NewTools-ChangeSorter"		},		"ColorSelectorDialogWindow" : {			"hash" : 1938688,			"definition" : "DialogWindowMorph subclass: #ColorSelectorDialogWindow\r\tinstanceVariableNames: 'selectedColor hsvaMorph'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-ColorPicker'",			"comment" : [				"Standard dialog for selecting a colour by HSVA colour selector, picking from the screen or editing of values."			],			"category" : "Morphic-Widgets-ColorPicker"		},		"RSResizeParentWhenChildMoves" : {			"hash" : 5726720,			"definition" : "RSAbstractCanvasInteraction subclass: #RSResizeParentWhenChildMoves\r\tinstanceVariableNames: 'padding'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Core'",			"comment" : [				"Based on simple moves of inner children, this interactions allow nodes to keep in the parent and update it"			],			"category" : "Roassal3-Interaction-Core"		},		"SDL2WindowsMessages class" : {			"hash" : 4066560,			"definition" : "SDL2WindowsMessages class\r\tinstanceVariableNames: ''",			"comment" : [				"I hold the constasts for Windows messages."			],			"category" : "OSWindow-SDL2-Bindings"		},		"MalDijkstraNode" : {			"hash" : 1767168,			"definition" : "MalGraphNode subclass: #MalDijkstraNode\r\tuses: MalTEdgeNode\r\tinstanceVariableNames: 'pathWeight previousEdges nextEdges previousNodes'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tnextEdges:\t\t<Object>",				"\tpathWeight:\t\t<Object>",				"\tpreviousEdges:\t\t<Object>",				"\tpreviousNodes:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Moose-Algos-Graph"		},		"FFIExternalResourceExecutor" : {			"hash" : 490752,			"definition" : "Object subclass: #FFIExternalResourceExecutor\r\tinstanceVariableNames: 'session data resourceClass'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-External-Resources'",			"comment" : [				"I am responsible for finalizing an external resource, registered using external resource manager.",				"",				"When object, registered as external resource being garbage collected,",				"I tell an object's class to finalize it's associated data (by passing an object,",				"received from #resourceData message sent to an object at registration time).",				"",				"I automatically keep tracking for session change (image save/boot), and ignore finalization of resources of old sessions (since they are not longer valid,",				"and cannot be freed since session changed).",				"",				"Like that, a users of NBExternalResourceManager don't need to implement a session checking logic, and need only to:",				"",				"a) register object as external resource:",				"     FFIExternalResourceManager addResource: anObject.",				"",				"an object should understand the #resourceData message, which is remembered at registration point (it can be any external resource like, id, handle or memory pointer).",				"",				"Then, when object is garbage collected, its class will receive a message to finalize the resource data in #finalizeResourceData:",				"The passed data is exactly same as previously returned by #resourceData method.",				"",				"An example:",				"",				"Imagine that you want to represent an external resource by keeping its handle.",				"",				"Object subclass: #MyExternalObject",				" \tinstanceVariableNames: 'handle'",				"\tclassVariableNames: ''",				"\tpoolDictionaries: ''",				"\tcategory: 'XYZ'",				"\t",				"",				"To let your object(s) to be managed by external resource manager, you need to register it.",				"Usually you do it after successfully claiming an external resource:",				"",				"MyExternalObject>>initialize",				"",				"\thandle := self createNewExternalResource.  \"claim resource\"",				"\tself assert: self handleIsValid. \"etc...\"",				"\t",				"\t\"Now, register receiver as external resource\" ",				"\tFFIExternalResourceManager addResource: self ",				"\"Another form of use is: ",				"\tFFIExternalResourceManager addResource: self data: handle.",				"\"",				"",				"----  ",				"If you used #addResource: method for registration, you should provide an implementation of #resourceData method:",				"",				"MyExternalObject>>resourceData",				"\t^ handle \"since we need only handle to identify external resource\"",				"",				"----\t",				"Now, for properly finalizing the external resource we should implement:",				"",				"MyExternalObject class>> finalizeResourceData: aHandle",				"\t^ self destroyHandle: aHandle. \"do whatever is needed to destroy the handle\"",				"",				"Note that in #finalizeResourceData: you cannot access any other properties of your instance, since it is already garbage collected. You also don't need to do a session checking, since it is done automatically by resource manager. "			],			"category" : "UnifiedFFI-External-Resources"		},		"MetacelloCommonMCSpecLoader" : {			"hash" : 321280,			"definition" : "MetacelloSpecLoader subclass: #MetacelloCommonMCSpecLoader\r\tinstanceVariableNames: 'operator loaderPolicy disablePackageCache'\r\tclassVariableNames: 'RetryPackageResolution'\r\tpackage: 'Metacello-MC-Loaders'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tdisablePackageCache:\t\t<Object>",				"\tloaderPolicy:\t\t<Object>",				"\toperator:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Metacello-MC-Loaders"		},		"ReUnwindBlocksRule" : {			"hash" : 3942400,			"definition" : "ReNodeRewriteRule subclass: #ReUnwindBlocksRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Move assignment out of unwind blocks.",				"",				"For example",				"",				"[[[",				"[ statements. ",				"var := object ] ifCurtailed: block",				"]]]",				"",				"",				"[[[ ",				"var := [ statements. ",				"\t    object] ifCurtailed: block",				"]]]"			],			"category" : "GeneralRules-Migrated"		},		"RBMatchVisitor" : {			"hash" : 3217664,			"definition" : "RBProgramNodeVisitor subclass: #RBMatchVisitor\r\tinstanceVariableNames: 'arguments temporaries difference'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Core-Base'",			"comment" : [				"I am a visitor to change temporaries and arguments to generic names (`tempMatch , `argMatch)"			],			"category" : "Refactoring-Core-Base"		},		"RSLayoutBuilder" : {			"hash" : 5767936,			"definition" : "RSObject subclass: #RSLayoutBuilder\r\tinstanceVariableNames: 'layout'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Builder'",			"comment" : [				"RTLayoutBuilder is a higher abstract to manage layout. Most builder use it as it significantly shorten the use of layouts."			],			"category" : "Roassal3-Layouts-Builder"		},		"ClyFullEnvironmentUpdateStrategy" : {			"hash" : 4842496,			"definition" : "ClyEnvironmentUpdateStrategy subclass: #ClyFullEnvironmentUpdateStrategy\r\tinstanceVariableNames: 'changes'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-NavigationModel-Model'",			"comment" : [				"I am special strategy to perform full update of environment after multiple changes when all cached query results were correctly updated. ",				"I collect all changes and publish them all together when environment finish overall processing.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tchanges:\t\t<IdentityDictionary of<ClyQueryResult, Announcement>>"			],			"category" : "Calypso-NavigationModel-Model"		},		"FLHeader" : {			"hash" : 543488,			"definition" : "Object subclass: #FLHeader\r\tinstanceVariableNames: 'preMaterializationActions additionalObjects postMaterializationActions materialization'\r\tclassVariableNames: ''\r\tpackage: 'Fuel-Core-Base'",			"comment" : [				"An instance of FLHeader is serialized together with the orignal object graph to serialize. This header is useful to:",				"",				"1) Attach additional state or metadata associated to the graph being serialized.",				"2) Attach pre and post materialization actions"			],			"category" : "Fuel-Core-Base"		},		"ReAssignmentInIfTrueRule" : {			"hash" : 3931648,			"definition" : "ReNodeRewriteRule subclass: #ReAssignmentInIfTrueRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Moving assignments outside blocks leads to shorter and more efficient code.",				"For example:",				"test ",				"\tifTrue: [var := 1]",				"\tifFalse: [var:= 2]",				"is equivalent to:",				"var :=  test ",				"\tifTrue: [1]",				"\tifFalse: [2]"			],			"category" : "GeneralRules-Migrated"		},		"SlotExampleMovie" : {			"hash" : 3465472,			"definition" : "Object << #SlotExampleMovie\r\tslots: {\r\t\t\t #name .\r\t\t\t #director => ToOneRelationSlot inverse: #directedMovies inClass: #SlotExamplePerson .\r\t\t\t #actors => ToManyRelationSlot inverse: #actedInMovies inClass: #SlotExamplePerson };\r\ttag: 'Examples - Associations';\r\tpackage: 'Slot-Tests'",			"comment" : [				"A SlotExampleMovie is an example class to demonstrate the workings of relation slots."			],			"category" : "Slot-Tests-Examples - Associations"		},		"AthensFontDescription" : {			"hash" : 3085568,			"definition" : "Object subclass: #AthensFontDescription\r\tinstanceVariableNames: 'family options size'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Cairo-Text'",			"comment" : [				"Creates a new font description from a string representation in the form ",				"\"[FAMILY-LIST] [STYLE-OPTIONS] [SIZE]\", ",				"",				"1)FAMILY-LIST is a comma separated list of families optionally terminated by a comma,",				"",				"2)STYLE_OPTIONS is a whitespace separated list of words where each WORD describes one of style, variant, weight, stretch, or gravity. If STYLE-OPTIONS is missing, then all style options will be set to the default values",				"",				"3)SIZE is a decimal number (size in points) or optionally followed by the unit modifier \"px\" for absolute size. ",				""			],			"category" : "Athens-Cairo-Text"		},		"RBBlockReplaceRule" : {			"hash" : 1160704,			"definition" : "RBReplaceRule subclass: #RBBlockReplaceRule\r\tinstanceVariableNames: 'replaceBlock'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Matching'",			"comment" : [				"RBBlockReplaceRule replaces the matching node by the result of evaluating replaceBlock. This allows arbitrary computation to come up with a replacement.",				"",				"Instance Variables:",				"\treplaceBlock\t<BlockClosure>\tThe block that returns the node to replace the matching node."			],			"category" : "AST-Core-Matching"		},		"SpDatePresenter" : {			"hash" : 1561088,			"definition" : "SpPresenter << #SpDatePresenter\r\tslots: {\r\t\t\t #chooseDateButton .\r\t\t\t #dateModel .\r\t\t\t #date .\r\t\t\t #displayBlock => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Morphic'",			"comment" : [				"A DatePresenter is a widget for choosing dates. It consists of:",				"- A text box, into which you can type any string which can be converted into a Smalltalk date",				"- A button, which displays a calendar, from which you can select a date",				"",				"Usage:",				"- the simplest way is to add a DatePresenter in your UI, and send #date when you want its value.",				"- or, register to be notified when the date changes:",				"\tDatePresenter new",				"\t\tdate: self date;",				"\t\twhenDateChanged: [ :newDate | self date: newDate ].",				"",				"As it is Spec-based, it can be easily adapted and composed into a larger UI."			],			"category" : "Spec2-Morphic-Widgets"		},		"EmbeddedFreeTypeFontInstaller class" : {			"hash" : 727552,			"definition" : "EmbeddedFreeTypeFontInstaller class\r\tinstanceVariableNames: 'current'",			"comment" : [				"An EmbeddedFreeTypeFontInstaller installs embedded free type fonts in a provider.",				"It registers itself as a font installer to FreeTypeFontProvider. And when someone asks to update fonts from system, EmbeddedFreeTypeFontInstaller installs corresponding fonts.",				"",				"Instance Variables",				"\tembeddedFileInfoCache:\t\t<Dictionary>",				"\tprovider:\t\t<FreeTypeFontProvider>",				"",				"embeddedFileInfoCache",				"\t- internal cache",				"",				"provider",				"\t- a provider which asks for installing the embedded fonts."			],			"category" : "EmbeddedFreeType-Installation"		},		"OkCancelToolbar" : {			"hash" : 923648,			"definition" : "OkToolbar subclass: #OkCancelToolbar\r\tinstanceVariableNames: 'cancelButton cancelAction cancelled'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Support'",			"comment" : [				"An OkCancelToolbar is a model for a basic Ok-Cancel toolbar"			],			"category" : "Spec-Core-Support"		},		"OCAbstractMethodScope" : {			"hash" : 1251328,			"definition" : "OCAbstractScope subclass: #OCAbstractMethodScope\r\tinstanceVariableNames: 'tempVars copiedVars tempVector id tempVectorVar node'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Core-Semantics'",			"comment" : [				"I am an abstract superclass for Block and Method scopes"			],			"category" : "OpalCompiler-Core-Semantics"		},		"Breakpoint class" : {			"hash" : 3023360,			"definition" : "Breakpoint class\r\tinstanceVariableNames: ''",			"comment" : [				"A Breakpoint is an object used for stopping the execution of the program in a determined instruction, normally with debugging purposes. ",				"There are three types of breakpoints:",				"-halt once: These are triggered once, and then removed.",				"-halt always: Once installed, they have to be explicitly removed (by using #remove on the instance side, or #removeAll on class side)",				"-halt on condition: Before being installed prompts the user for a condition (a block with a boolean expression), and it is only triggered when that condition is met.",				"",				"Breakpoints are installed via SmartSuggestions menu (available for RBMethodNode, RBMessageNode and RBAssignmentNode), or programmatically:",				"",				"\"(Breakpoint inMethod: (Bar>>#foo2) inNode: ((Bar>>#foo2) ast allChildren at: 9) )",				"break: #when: withArguments: { [ RFCounter counter isZero ] }",				"\"",				""			],			"category" : "Reflectivity-Breakpoints"		},		"JobProgressBarMorph" : {			"hash" : 583424,			"definition" : "Morph subclass: #JobProgressBarMorph\r\tinstanceVariableNames: 'progressBar'\r\tclassVariableNames: 'IsInterruptible'\r\tpackage: 'Morphic-Base-ProgressBar'",			"comment" : [				"A JobProgressBarMorph is a progress bar with a title and a icon to stop update.",				"",				"\t\tJobProgressBarMorph new openInWorld.",				"",				"I am often used by the Job class in Pharo and not directly.",				"",				"It is possible to disable the icon to prevent the user from stopping the task via the #isInterruptible setting.",				"",				"\t\tJobProgressBarMorph isInterruptible: false"			],			"category" : "Morphic-Base-ProgressBar"		},		"MalHits" : {			"hash" : 1757952,			"definition" : "MalGraphAlgorithm subclass: #MalHits\r\tinstanceVariableNames: 'k'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tk:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Moose-Algos-Graph"		},		"STONWriter class" : {			"hash" : 340480,			"definition" : "STONWriter class\r\tinstanceVariableNames: ''",			"comment" : [				"STONWriter serializes objects using the Smalltalk Object Notation format. ",				"",				"Customization options are:",				"",				"- prettyPrint <Boolean> default is false",				"\tif true, produce pretty printed output",				"- newLine <String> default is String cr",				"\twhat sequence to use for EOL",				"- asciiOnly <Boolean> default is false",				"   if true, use \\u escapes for all non-ASCII characters",				"   most common control characters are still escaped",				"- jsonMode <Boolean> default is false",				"\tif true, the follow changes occur",				"\t- strings are delimited with double quotes",				"\t- nil is encoded as null",				"\t- symbols are treated as strings",				"\t- only STON listClass and STON mapClass instances are allowed as composite objects",				"\tit is wise to also use either #error or #ignore as referencePolicy to avoid references",				"- referencePolicy <#normal|#ignore|#error> default is #normal",				"\tif #normal, track and count object references and use references to implement sharing and break cycles",				"\tif #error, track object references and signal STONWriterError when a shared reference is encountered",				"\tif #ignore, don't track object references which might loop forever on cycles",				" - keepNewLines <Boolean> default is false",				"\tif true, any newline sequence CR, LF or CRLF inside strings or symbols will not be escaped ",				"\tbut will be written as the newline EOF convention",				"\t",				"Note that in default STON mode I only use the following named character escapes: \\b \\t \\n \\f \\' and \\\\ while in JSON mode \\' is replaced by \\\""			],			"category" : "STON-Core-Writer"		},		"RxmLookahaed" : {			"hash" : 1443584,			"definition" : "RxmLink subclass: #RxmLookahaed\r\tinstanceVariableNames: 'lookahead positive'\r\tclassVariableNames: ''\r\tpackage: 'Regex-Core-Links'",			"comment" : [				"Instance holds onto a lookead which matches but does not consume anything.",				"",				"Instance variables:",				"\tpredicate\t\t<RxmLink>"			],			"category" : "Regex-Core-Links"		},		"OSSDL2Driver" : {			"hash" : 4063744,			"definition" : "OSWindowDriver subclass: #OSSDL2Driver\r\tinstanceVariableNames: 'inputSemaphore globalListeners eventFilter'\r\tclassVariableNames: 'EventLoopProcess JoystickMap WindowMap WindowMapMutex'\r\tpoolDictionaries: 'SDL2Constants'\r\tpackage: 'OSWindow-SDL2-Base'",			"comment" : [				"A window driver used for running things using SDL2 library"			],			"category" : "OSWindow-SDL2-Base"		},		"RSLineBuilder" : {			"hash" : 5686528,			"definition" : "RSObject subclass: #RSLineBuilder\r\tuses: RSTEdge\r\tinstanceVariableNames: 'shape allowRepetition shouldMoveBehind createdEdges beDirectional fromShapes toShapes canvas canvasHasBeenManuallySet'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Graph'",			"comment" : [				"`RSLineBuilder` offers an API to easily build lines.",				"",				"Here is an example:",				"```Smalltalk",				"c := RSCanvas new.",				"",				"classes := Collection withAllSubclasses.",				"boxes := classes collect: [ :cls |",				"\t\t\t\tRSBox new",				"\t\t\t\t\twidth: (cls instVarNames size * 5 max: 5);",				"\t\t\t\t\theight: (cls numberOfMethods max: 5);",				"\t\t\t\t\tmodel: cls;",				"\t\t\t\t\tyourself ] as: RSGroup.",				"",				"",				"boxes @ RSDraggable.",				"c addAll: boxes.",				"",				"RSEdgeBuilder orthoVertical",				"\tcanvas: c;",				"\tattachPoint: RSVerticalAttachPoint new;",				"\tshapes: boxes;",				"\tconnectFrom: #superclass.",				"",				"RSTreeLayout on: c nodes.",				"c @ RSCanvasController.",				"c open",				"```",				"",				"Another example:",				"```Smalltalk",				"c := RSCanvas new.",				"",				"shapes := RSCircle models: (30 to: 50) size: [ :nb | nb ]. ",				"",				"c addAll: shapes.",				"",				"lines := RSEdgeBuilder line",				"\tcanvas: c;",				"\tconnectFrom: 30 toAll: (31 to: 50).",				"",				"lines do: [ :l | l attachPoint: (RSHorizontalAttachPoint new) ].",				"",				"RSGridLayout on: shapes. ",				"RSLocation new",				"\tabove;",				"\tmove: shapes first on: shapes allButFirst.",				"shapes @ RSDraggable.",				"",				"c @ RSCanvasController.",				"c open",				"```",				"",				"Another example:",				"```",				"classes := Collection withAllSubclasses.",				"",				"c := RSCanvas new.",				"",				"boxes := RSCircle models: classes.",				"c addAll: boxes. ",				"RSFlowLayout on: c shapes.",				"",				"lb := RSLineBuilder orthoVertical.",				"lb withVerticalAttachPoint.",				"lb capRound.",				"lb shapes: boxes.",				"lb connectFrom: #superclass.",				"",				"RSTreeLayout on: c nodes.",				"",				"boxes @ RSPopup.",				"RSNormalizer color",				"\tshapes: boxes;",				"\tfrom: #gray; to: #red;",				"\tnormalize: #numberOfMethods.",				"",				"c @ RSCanvasController.",				"c open",				"```"			],			"category" : "Roassal3-Shapes-Graph"		},		"IceGitHubAction" : {			"hash" : 6461184,			"definition" : "IceTipAction subclass: #IceGitHubAction\r\tinstanceVariableNames: 'credentials remote retries'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Plugin-GitHub-Commands'",			"comment" : [				"I represent a common behavior for the actions of the GithubPlugin"			],			"category" : "Iceberg-Plugin-GitHub-Commands"		},		"InflateStream class" : {			"hash" : 1336064,			"definition" : "InflateStream class\r\tinstanceVariableNames: ''",			"comment" : [				"This class implements the Inflate decompression algorithm as defined by RFC1951 and used in PKZip, GZip and ZLib (and many, many more). It is a variant of the LZ77 compression algorithm described in",				"",				"[LZ77] Ziv J., Lempel A., \"A Universal Algorithm for Sequential Data Compression\", IEEE Transactions on Information Theory\", Vol. 23, No. 3, pp. 337-343.",				"",				"[RFC1951] Deutsch. P, \"DEFLATE Compressed Data Format Specification version 1.3\"",				"",				"For more information see the above mentioned RFC 1951 which can for instance be found at",				"",				"\thttp://www.leo.org/pub/comp/doc/standards/rfc/index.html",				"",				"Huffman Tree Implementation Notes:",				"===========================================",				"The huffman tree used for decoding literal, distance and length codes in the inflate algorithm has been encoded in a single Array. The tree is made up of subsequent tables storing all entries at the current bit depth. Each entry in the table (e.g., a 32bit Integer value) is either a leaf or a non-leaf node. Leaf nodes store the immediate value in its low 16 bits whereas non-leaf nodes store the offset of the subtable in its low 16bits. The high 8 bits of non-leaf nodes contain the number of additional bits needed for the sub table (the high 8 bits of leaf-nodes are always zero). The first entry in each table is always a non-leaf node indicating how many bits we need to fetch initially. We can thus travel down the tree as follows (written in sort-of-pseudocode the actual implementation can be seen in InflateStream>>decodeValueFrom:):",				"",				"\ttable := initialTable.",				"\tbitsNeeded := high 8 bits of (table at: 1).\t\t\"Determine initial bits\"",				"\ttable := initialTable + (low 16 bits of (table at: 1)). \"Determine start of first real table\"",				"\t[bits := fetch next bitsNeeded bits.\t\t\t\"Grab the bits\"",				"\tvalue := table at: bits.\t\t\t\t\t\t\"Lookup the value\"",				"\tvalue has high 8 bit set] whileTrue:[\t\t\"Check if it's leaf\"",				"\t\ttable := initialTable + (low 16 bits of value).\t\"No - compute new sub table start\"",				"\t\tbitsNeeded := high 8 bit of value].\t\t\"Compute additional number of bits needed\"",				"\t^value"			],			"category" : "Compression-Streams"		},		"FLLargeIdentityHashedCollection class" : {			"hash" : 557056,			"definition" : "FLLargeIdentityHashedCollection class\r\tinstanceVariableNames: ''",			"comment" : [				"I share behavior for special HashedCollections that are optimized for including a large number of elements."			],			"category" : "Fuel-Core-Collections"		},		"MailMessage" : {			"hash" : 3119872,			"definition" : "Object subclass: #MailMessage\r\tinstanceVariableNames: 'text body fields parts'\r\tclassVariableNames: ''\r\tpackage: 'Network-Mail'",			"comment" : [				"I represent an Internet mail or news message.",				"",				"\ttext - the raw text of my message",				"\tbody - the body of my message, as a MIMEDocument",				"\tfields - a dictionary mapping lowercased field names into collections of MIMEHeaderValue's",				"\tparts - if I am a multipart message, then this is a cache of my parts"			],			"category" : "Network-Mail"		},		"AthensCurveFlattener class" : {			"hash" : 3065344,			"definition" : "AthensCurveFlattener class\r\tinstanceVariableNames: ''",			"comment" : [				"This converter flattens all curves by converting them to series of lines.",				"This means that path can be rendered using simple polygon rendering technique",				"and nothing else."			],			"category" : "Athens-Core-PathsGeometry"		},		"IceGitTransferProgress" : {			"hash" : 6219520,			"definition" : "LGitTransferProgressCallback subclass: #IceGitTransferProgress\r\tinstanceVariableNames: 'job'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Progress'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tjob:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Iceberg-Progress"		},		"MicTableBlock" : {			"hash" : 6540544,			"definition" : "MicContinuousMarkedBlock subclass: #MicTableBlock\r\tinstanceVariableNames: 'rows hasHeader'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Model'",			"comment" : [				"Support table with a simple and more relax setup than github.",				"A table is not forced to have a header definition.",				"",				"```",				"| aaab | jkhjh |",				"| --- |",				"| bar |",				"```",				"",				"or ",				"```",				"|aaab|jkhjh|",				"|---|",				"|bar|",				"```",				"or",				"```",				"| aaa | bbb |",				"|ccc |ddd |",				"```",				"or ",				"```",				"| aaa | bbb",				"| cc | ddd",				"```",				"Block-level elements cannot be inserted in a table.",				"",				"When a table contains a header it is the first row and all rows should have that size else they are cut. ",				"",				"",				"Known limits: how to put a pipe in a table? ",				"No support for \\|"			],			"category" : "Microdown-Model"		},		"ClyProjectManagerRegistry" : {			"hash" : 4904960,			"definition" : "Object subclass: #ClyProjectManagerRegistry\r\tinstanceVariableNames: 'projectManagers'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemQueries-Domain'",			"comment" : [				"I provide access to all projects from different kind of package managers.",				"It can be Cargo manager, Metacello manager, etc.",				"",				"ClySystemEnvironment instance keeps my instance. To register new package manager in image use following expression: ",				"\t",				"\tClySystemEnvironment currentImage registerPackageManager: aPackageManager",				"\t",				"I allow different kind of package managers to be used by Calypso browser to display all available projects.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tpackageManagers:\t\t<Collection of<ClyPackageManager>>"			],			"category" : "Calypso-SystemQueries-Domain"		},		"RSChartTitleDecoration" : {			"hash" : 5815040,			"definition" : "RSAbstractLabelDecoration subclass: #RSChartTitleDecoration\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Decoration'",			"comment" : [				"<keyClass>",				"`RSChartTitleDecoration` is a `RSChartDecoration` that adds a title to a chart.",				"",				"*Responsibility*: To display a title on top of a chart per default",				"",				"*Collaborators*: must be added to `RSChart`",				"",				"*Example*:",				"```Smalltalk",				"c := RSChart new.",				"c addPlot: (RSLinePlot new x: (1 to: 200) y: (1 to: 200) sqrt).",				"c addDecoration: (RSChartTitleDecoration new title: 'Square root').",				"",				"\"The line above can also be writen as:",				"c title: 'Square root'.",				"\"",				"c open",				"```"			],			"category" : "Roassal3-Chart-Decoration"		},		"ClyQueryViewMorph" : {			"hash" : 5091072,			"definition" : "Morph subclass: #ClyQueryViewMorph\r\tinstanceVariableNames: 'table browser treeStructure selection desiredSelection shouldRestoreSelection highlighting changesWasInitiatedByUser navigationSelector dataSourceClass hoverOverDropItemStartTime targetDropItem'\r\tclassVariableNames: 'DragAndDropDelay'\r\tpackage: 'Calypso-Browser-Table'",			"comment" : [				"I represent query result using fast table.",				"I should be created for browser:",				"",				"\tClyQueryView for: aBrowser",				"",				"or using helper browser method:",				"",				"\taBrowser newNavigationView.",				"",				"By default I initialize table with single column, the instance of ClyMainTableColumn. You can ask it to set up specific column properties",				"",				"\taQueryView mainColumn ",				"\t\twidth: 100;",				"\t\tdisplayItemPropertyBy: [:rowItem | rowItem name, 'special name suffix for test' ].",				"",				"Or you can set up display block using:",				"",				"\taQueryView displayMainColumnBy: [ :cell :item | ",				"\t\tcell nameMorph contents: item name.",				"\t\tcell nameMorph color: Color green].",				"",				"To create more columns use #addColumn: method:",				"",				"\t(aQueryView addColumn: #package) ",				"\t\twidth: 50;",				"\t\tdisplayItemPropertyBy: [:methodItem | self packageNameOf: methodItem]",				"",				"To show items user should pass query instance into me:",				"",				"\taQueryView showQuery: aQuery",				"",				"When user selects any item in table I trigger navigation request which ask browser for desired action. To set up navigation selector use:",				"",				"\taQueryView requestNavigationBy: #showMethodsForSelectedClasses",				"",				"I maintain several selection objects to always show correct table selection after any tree expansion, items addition of removal.",				"",				"Main selection is what user selects on table. I manage it in #selection variable, instance of ClyDataSourceSeleciton.",				"",				"Next is desiredSelection, instance of ClyDesiredSelection. Every time user passes me new query I am trying to restore desired selection on new items. Idea is to show previously selected items on new data source. I try to find same items and if they not exists I lookup similar items by name.",				"I set new desiredSelection instance only when user manually modifies table selection.",				"",				"And last type of selection is highlighting, instance of ClyHighlightingSelection. User can set it by:",				"",				"\taQueryView highlightItemsWhich: predicateBlock.",				"",				"All type of selections maintain correct state to be in sync with actual table seletion indexes after any data source changes. This logic implemented in method #updateSelectedItemsOf:.",				"",				"By default user can type characters on table to search required items. But also explicit filter with extra field can be added: ",				"",				"- enableFilter",				"It adds simple ClyItemNameFilter.",				"",				"- enableFilter: anItemStringFilterClass",				"",				"I use Commander library to implement:",				"",				"- context menu using CmdContextMenuCommandActivator:",				"",				"\t- menuColumn: column row: rowIndex",				"",				"- shortcuts using CmdShortcutCommandActivator ",				"",				"\t- kmDispatcher",				"",				"-  drag and drop using CmdDragAndDropCommandActivator ",				"",				"\t- createDragPassengerFor: aSelection",				"",				"To use Commander I ask browser for command context of given selection.",				"The context is also used to decorate table cells with appropriate decorators:",				"",				"\t- decorateMainTableCell: anItemCellMorph of: aDataSourceItem",				"\t- decorateTableCell: anItemCellMorph of: aDataSourceItem",				"",				"There is special decorator which also based on Commander: ClyTableIconCommandActivation. It adds iconic button to table cells for all interested commands.",				"It brings behaviour of Nautilus method widget where table icons are extended by AbstractMethodIconAction. Here commands should be marked with ClyTableIconCommandActivation.",				"",				"I provide extra suitable events which in future should be also based on commands:",				"- whenDoubleClickDo: ",				"- whenEnterKeyPressedDo: ",				"- whenEscapeKeyPressedDo: ",				"ClyBrowserSearchDialog uses them to provide user friendly behaviour.",				"",				"Other suitable methods:",				"- ignoreNavigationDuring: aBlock. It allows to modify my selection without triggering navigation  request to browser.",				"- findItemsSameAsFilter. It allows to use full filter string to search my data source for item with exacly same name. It is used by ClyBrowserSearchDialog.",				"- allowsDeselection: aBoolean.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\ttable:\t\t<FTTableMorph>",				"\tbrowser:\t\t<ClyBrowser>",				"\tnavigationSelector:\t\t<aSymbol>",				"\tselection:\t\t<ClyDataSourceSelection>",				"\tdesiredSelection:\t\t<ClyDesiredSelection>",				"\thighlighting:\t\t<ClyHighlightingSelection>\t",				"\tchangesWasInitiatedByUser:\t\t<Boolean>",				"\tshouldRestoreSelection: <Boolean>",				"\ttreeStructure: <Array of<Association>>"			],			"category" : "Calypso-Browser-Table"		},		"GoferOperation" : {			"hash" : 1461504,			"definition" : "Object subclass: #GoferOperation\r\tinstanceVariableNames: 'gofer model'\r\tclassVariableNames: ''\r\tpackage: 'Gofer-Core-Operations'",			"comment" : [				"Common superclass of Gofer operations"			],			"category" : "Gofer-Core-Operations"		},		"SpaceTallyResult" : {			"hash" : 3199744,			"definition" : "Object subclass: #SpaceTallyResult\r\tinstanceVariableNames: 'items'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Profilers-Space'",			"comment" : [				"I represent a result of the computation of the SpaceTally ",				"",				"I store SpaceTallyItems for each class. I interact with SpaceTally.",				"",				"Public API and Key Messages",				"",				"- item   ",				"- total* methods ",				"",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\titems:\t\t<aCollectionOfSpaceTallyItem>",				"",				"Implementation Points",				"",				"My total* methods could be cached for perf"			],			"category" : "Tool-Profilers-Space"		},		"TFPool" : {			"hash" : 2032128,			"definition" : "Object subclass: #TFPool\r\tinstanceVariableNames: 'mutex elements provider initialSize pointer releaseBlock'\r\tclassVariableNames: ''\r\tpackage: 'ThreadedFFI-Base'",			"comment" : [				"I am a generic pool to be used whith TFFI. ",				"My main usage will be to keep a pool of external semaphores, avoiding the creation/registration/unregistration of an external semaphore each external call."			],			"category" : "ThreadedFFI-Base"		},		"EpLogNode" : {			"hash" : 4230912,			"definition" : "Object subclass: #EpLogNode\r\tinstanceVariableNames: 'referencedNodes'\r\tclassVariableNames: ''\r\tpackage: 'EpiceaBrowsers-UI-Graph'",			"comment" : [				"I am a node in a tree of Epicea logs, in a particular refresh of the browser. The nodes of such tree are Epicea files and an edge between a node A and another B exist when A contains an entry whose prior node is in B."			],			"category" : "EpiceaBrowsers-UI-Graph"		},		"SpecFocusOrder" : {			"hash" : 945152,			"definition" : "Object subclass: #SpecFocusOrder\r\tinstanceVariableNames: 'presenters'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Support'",			"comment" : [				"A SpecFocusOrder manage the path of focus between widgets.",				"",				"I use a collection (presenters) to keep widgets I managed. When I reach the end of the collection, I try to give the focus at the parent in the hierarchy, if it is nil I loop.",				"",				"I provide the following methods",				"- add: and addLast: to add a widget in my collection",				"- giveFocusToNextFrom:for: and giveFocusToPreviousFrom:for: to make me change the focus, the first argument is presenter who leave the focus and the second is the current model in the hierarchy.",				"- ifEmpty:ifNotEmpty: and ifNotEmpty: are send in my collection.",				"- presenters is the getter of my collection.",				"- removeAll to remove all my widgets.",				"",				"My super class is not OrderedCollection because it could be a problem for the devellopement of another behaviour."			],			"category" : "Spec-Core-Support"		},		"WeakRegistry" : {			"hash" : 1185024,			"definition" : "Collection subclass: #WeakRegistry\r\tinstanceVariableNames: 'list valueDictionary sema'\r\tclassVariableNames: 'Default'\r\tpackage: 'Collections-Weak-Registration'",			"comment" : [				"This kind of WeakRegistry using a new VM feature,",				"which allows a more robust finalization support.",				"",				"In contrast to old implementation, it doesn't spending linear time , checking what elements became garbage."			],			"category" : "Collections-Weak-Registration"		},		"OSTouchOneFingerDoubleTapDetector class" : {			"hash" : 4047616,			"definition" : "OSTouchOneFingerDoubleTapDetector class\r\tinstanceVariableNames: ''",			"comment" : [				"I am the detector of a finger which double tapped.",				"I send these event back to my handler: ",				"\t- OSTouchOneFingerDoubleTapEvent"			],			"category" : "OSWindow-Core-Gestures"		},		"BorderedMorph" : {			"hash" : 1652480,			"definition" : "Morph subclass: #BorderedMorph\r\tinstanceVariableNames: 'borderWidth borderColor'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Core-Kernel'",			"comment" : [				"BorderedMorph introduce borders to morph. Borders have the instanceVariables borderWidth and borderColor.",				" ",				"BorderedMorph new borderColor: Color red; borderWidth: 10; openInWorld.",				"",				"BorderedMorph also have a variety of border styles: simple, inset, raised, complexAltFramed, complexAltInset, complexAltRaised, complexFramed, complexInset, complexRaised.",				"These styles are set using the classes BorderStyle, SimpleBorder, RaisedBorder, InsetBorder and ComplexBorder.",				"",				"BorderedMorph new borderStyle: (SimpleBorder width: 1 color: Color white); openInWorld.",				"BorderedMorph new borderStyle: (BorderStyle inset width: 2); openInWorld.",				"",				""			],			"category" : "Morphic-Core-Kernel"		},		"SpRubTextFieldMorph" : {			"hash" : 2582528,			"definition" : "RubTextFieldMorph subclass: #SpRubTextFieldMorph\r\tinstanceVariableNames: 'drawKeyboardFocus'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Support'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tdrawKeyboardFocus:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Adapters-Morphic-Support"		},		"ZnBase64Encoder" : {			"hash" : 1196032,			"definition" : "Object subclass: #ZnBase64Encoder\r\tinstanceVariableNames: 'alphabet inverse lineLength lineEnd whitespace'\r\tclassVariableNames: 'DefaultAlphabet DefaultInverse'\r\tpackage: 'Zinc-Character-Encoding-Core'",			"comment" : [				"I am ZnBase64Encoder.",				"",				"Base64 encoding is a technique to encode binary data as a string of characters that can be safely transported over various protocols. Basically, every 3 bytes are encoded using 4 characters from an alphabet of 64. Each encoded character represents 6 bits.",				"",				"The most commonly used alphabet is 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'. One or two equal signs (= or ==) are used for padding.",				"",				"  ZnBase64Encoder new encode: #[0 1 2 3 4 5].",				"  ZnBase64Encoder new encode: #[10 20]",				"  ZnBase64Encoder new decode: 'BQQDAgEA'.",				"  ZnBase64Encoder new decode: 'FAo='.",				"",				"The encoded data can optionally be broken into lines. Characters not part of the alphabet are considered as white space and are ignored when inbetween groups of 4 characters.",				"",				"My #encode: method works from ByteArray to String, while my #decode: method works from String to ByteArray.",				"",				"Note that to encode a String as Base64, you first have to encode the characters as bytes using a character encoder.",				"",				"See also http://en.wikipedia.org/wiki/Base64",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-Character-Encoding-Core"		},		"RePlatformDependentUserInteractionRule" : {			"hash" : 3949056,			"definition" : "ReNodeMatchRule subclass: #RePlatformDependentUserInteractionRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Check the methods that  use platform dependent user interactions.",				"",				"This rule should be updated."			],			"category" : "GeneralRules-Migrated"		},		"MWHandlerMemoing" : {			"hash" : 3380480,			"definition" : "MWHandlerDecorating subclass: #MWHandlerMemoing\r\tinstanceVariableNames: 'table'\r\tclassVariableNames: ''\r\tpackage: 'MethodWrappers'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\ttable:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "MethodWrappers"		},		"IRClosureStackCount" : {			"hash" : 1250304,			"definition" : "IRStackCount subclass: #IRClosureStackCount\r\tinstanceVariableNames: 'numMethodTempVars'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Core-Bytecode'",			"comment" : [				"IRClosureStackCount is used to distinguish between a stack ",				"in the method scope and a stack within a closure block. The",				"closure stack size is independent of the number of tempvars from the compiled method, therefore that number is subtracted",				"from this stack size length."			],			"category" : "OpalCompiler-Core-Bytecode"		},		"ReToDoRule" : {			"hash" : 3953152,			"definition" : "ReNodeMatchRule subclass: #ReToDoRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for use of to:do: when a do:, with:do: or timesRepeat: when should be used."			],			"category" : "GeneralRules-Migrated"		},		"MCPackageLoader" : {			"hash" : 281088,			"definition" : "Object subclass: #MCPackageLoader\r\tinstanceVariableNames: 'requirements unloadableDefinitions obsoletions additions removals errorDefinitions provisions methodAdditions'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Loading'",			"comment" : [				"A MCPackageLoader is responsible for loading packages.  It gets used by VersionLoader, so it is eventually responsible for loading everything.",				"",				"Instance Variables",				"\tadditions:\t\t<Definitions>  Definitions that need to be added",				"\terrorDefinitions:\t\t<Object>",				"\tobsoletions:\t\t<Object>",				"\tprovisions:\t\t<Object>",				"\tremovals:\t\t<Object>",				"\trequirements:\t\t<Object>",				"\tunloadableDefinitions:\t\t<Object>",				"\tmethodAdditions  <MethodAdditions> MethodDefinitions corresponding to the Definitions in \"additions\" that have been added so far."			],			"category" : "Monticello-Loading"		},		"SystemProgressMorph" : {			"hash" : 1963776,			"definition" : "BorderedMorph subclass: #SystemProgressMorph\r\tuses: TAbleToRotate\r\tinstanceVariableNames: 'lock lastRefresh'\r\tclassVariableNames: 'UniqueInstance'\r\tpackage: 'Morphic-Base-ProgressBar'",			"comment" : [				"I display a set of progress indicator in a list.",				"Special care is taken to update the view while the rest of the UI process is blocked.",				"",				"Reset.",				"SystemProgressMorph reset.",				"",				"Examples.",				"self show: 'Doing...' from: 500 to: 600 during: [ :bar |",				"\t500 to: 600 do: [ :x | ",				"\t\tbar current: x.",				"\t\t(Delay forMilliseconds: 20) wait ",				"\t\t\"Just to slow it down so we can see what's going on\" ] ].",				"",				"self show: 'Doing...' from: 0 to: 50 during: [ :bar |",				"\t0 to: 50 do: [ :x | ",				"\t\tbar increment.",				"\t\tbar label: x asString.",				"\t\t(Delay forMilliseconds: 20) wait \"Just to slow it down so we can see what's going on\" ] ]."			],			"category" : "Morphic-Base-ProgressBar"		},		"IRFix" : {			"hash" : 1252608,			"definition" : "IRVisitor subclass: #IRFix\r\tinstanceVariableNames: 'prevInstr storePopToFix retToFix'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Core-IR-Manipulation'",			"comment" : [				"Fix the IR nodes.",				"",				"Transforms:",				"",				"store, pop => popInto",				"some returns => quick returns"			],			"category" : "OpalCompiler-Core-IR-Manipulation"		},		"CriticsCache" : {			"hash" : 1707264,			"definition" : "Object subclass: #CriticsCache\r\tinstanceVariableNames: 'critics toDos falsePositives checker browser falsePositiveRules falsePositiveClasses packages change'\r\tclassVariableNames: ''\r\tpackage: 'Tool-CriticBrowser-Utilities'",			"comment" : [				"I am a cache for the critics and false positives critics",				"",				"Instance Variables",				"\tbrowser:\t\t<Object>",				"\tchecker:\t\t<Object>",				"\tcritics:\t\t<Object>",				"\tfalsePositiveClasses:\t\t<Object>",				"\tfalsePositiveRules:\t\t<Object>",				"\tfalsePositives:\t\t<Object>",				"\tpackages:\t\t<Object>",				"\ttoDos:\t\t<Object>",				"",				"browser",				"\t- xxxxx",				"",				"checker",				"\t- xxxxx",				"",				"critics",				"\t- xxxxx",				"",				"falsePositiveClasses",				"\t- xxxxx",				"",				"falsePositiveRules",				"\t- xxxxx",				"",				"falsePositives",				"\t- xxxxx",				"",				"packages",				"\t- xxxxx",				"",				"toDos",				"\t- xxxxx"			],			"category" : "Tool-CriticBrowser-Utilities"		},		"CTBlockSlotDescriptor" : {			"hash" : 2858496,			"definition" : "CTPropertySlotDescriptor subclass: #CTBlockSlotDescriptor\r\tinstanceVariableNames: 'blockClosure selector inline header isOneToMany'\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Outliner'",			"comment" : [				"I am a variant that uses a block to gather a reference to an object to be visited."			],			"category" : "Containers-Essentials-Outliner"		},		"RSAbstractCompactTreeLayout" : {			"hash" : 5758208,			"definition" : "RSAbstractGraphLayout subclass: #RSAbstractCompactTreeLayout\r\tinstanceVariableNames: 'sonsDictionary root initialLayout margin'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Layouts-Core"		},		"FTSelectableMorph" : {			"hash" : 570112,			"definition" : "Morph subclass: #FTSelectableMorph\r\tinstanceVariableNames: 'selectionColor'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Base'",			"comment" : [				"Description",				"--------------------",				"",				"I am a morph that can be selected by a user in a FastTable.",				"",				"I manage the color changes when the user is doing a mouse over or a selection."			],			"category" : "Morphic-Widgets-FastTable-Base"		},		"ReShouldTransformedIntoAssertRule" : {			"hash" : 4130048,			"definition" : "ReNodeRewriteRule subclass: #ReShouldTransformedIntoAssertRule\r\tuses: ReTSUnitGroupedRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'SUnit-Rules-Base'",			"comment" : [				"should: will be deprecated sooner or leater. Use assert: instead"			],			"category" : "SUnit-Rules-Base"		},		"RSXLabelDecoration" : {			"hash" : 5815552,			"definition" : "RSAbstractLabelDecoration subclass: #RSXLabelDecoration\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Decoration'",			"comment" : [				"<keyClass>",				"`RSXLabelDecoration` adds a title to the X-axis in a chart.",				"",				"*Responsibility*: Add a title and allows for its style to be defined (e.g., color, size, rotation, offset)",				"",				"*Collaborators*: must be added to an `RSChart`",				"",				"*Example*:",				"```Smalltalk",				"x := -3.14 to: 3.14 by: 0.1.",				"y := x sin.",				"",				"c := RSChart new.",				"c addPlot: (RSLinePlot new x: x y: y).",				"c addDecoration: (RSChartTitleDecoration new title: 'hello'; fontSize: 20).",				"c addDecoration: (RSXLabelDecoration new title: 'My X Axis'; fontSize: 12).",				"c addDecoration: (RSYLabelDecoration new title: 'My Y Axis'; fontSize: 15; horizontal).",				"c open",				"```"			],			"category" : "Roassal3-Chart-Decoration"		},		"ShSuperclassChangedDetector" : {			"hash" : 825600,			"definition" : "ShAbstractInstanceSideClassChangeDetector subclass: #ShSuperclassChangedDetector\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Shift-Changes'",			"comment" : [				"I detect if there is a change in the superclass"			],			"category" : "Shift-Changes"		},		"StPharoApplication" : {			"hash" : 5384192,			"definition" : "SpApplication subclass: #StPharoApplication\r\tinstanceVariableNames: ''\r\tclassVariableNames: 'Current'\r\tpackage: 'NewTools-Core-Application'",			"comment" : [				"The application for the Pharo IDE."			],			"category" : "NewTools-Core-Application"		},		"OSTouchPinchDetector" : {			"hash" : 4052992,			"definition" : "OSTouchDirectionnalGestureDetector subclass: #OSTouchPinchDetector\r\tinstanceVariableNames: 'maxDistanceBetweenFingersLine fingersDistanceFromCenter'\r\tclassVariableNames: 'MaxDistanceBetweenFingersLine'\r\tpackage: 'OSWindow-Core-Gestures'",			"comment" : [				"I am the abstract class for all the Pinch gesture detectors"			],			"category" : "OSWindow-Core-Gestures"		},		"ThumbnailMorph" : {			"hash" : 1965312,			"definition" : "BorderedMorph subclass: #ThumbnailMorph\r\tuses: TAbleToRotate\r\tinstanceVariableNames: 'objectToView viewSelector lastSketchForm lastFormShown drawTime'\r\tclassVariableNames: 'EccentricityThreshhold RecursionDepth RecursionMax'\r\tpackage: 'Morphic-Base-Basic'",			"comment" : [				"A Morph that views another morph, its objectToView."			],			"category" : "Morphic-Base-Basic"		},		"RubFindReplaceService" : {			"hash" : 669440,			"definition" : "FindReplaceService subclass: #RubFindReplaceService\r\tinstanceVariableNames: 'dialog textAreaHolder'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-FindReplaceService'",			"comment" : [				"RubFindReplaceService default newDialog openInWorld",				"RubFindReplaceService "			],			"category" : "Rubric-Editing-FindReplaceService"		},		"FTFilterFunction" : {			"hash" : 746752,			"definition" : "FTFieldFunction subclass: #FTFilterFunction\r\tinstanceVariableNames: 'initialDataSource pattern isEditingSemaphore filterClass'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Functions'",			"comment" : [				"I define a filter function for a table. ",				"I respond to any alphanumeric element and I add a filter box to the  owner table. ",				"",				"In general, my entry point is through #keyStroke:, because I intend to react to keyboard inputs in the owner table.",				"",				"I save an initial data source if the user want to see some result already filter.",				"",				"I use a semaphore in order to let a delay before I filter the table. With this the user is able to type more than 1 letter before I filter.",				"",				"/!\\ To use me the data source must implement the method #newDataSourceMatching: aRegex"			],			"category" : "Morphic-Widgets-FastTable-Functions"		},		"Gofer" : {			"hash" : 1460992,			"definition" : "Object subclass: #Gofer\r\tinstanceVariableNames: 'references repositories errorBlock packageCacheRepository resolvedReferencesCache'\r\tclassVariableNames: ''\r\tpackage: 'Gofer-Core-Base'",			"comment" : [				": Gofer, a person who runs errands. Origin 1960s: from go for, i.e. go and fetch.",				": ''The New Oxford American Dictionary''",				"",				"! Synopsis",				"",				"Gofer is a small tool on top of Monticello that loads, updates, merges, diffs, reverts, commits, recompiles and unloads groups of Monticello packages. Contrary to existing tools Gofer makes sure that these operations are performed as clean as possible:",				"",				"- Gofer treats packages from one or more repository in one operation.",				"- Gofer works with fixed versions or tries to find the \"latest\" version using a given package name.",				"- Gofer automatically assigns repositories to all packages, so that the other tools are ready to be used on individual packages.",				"- Gofer makes sure that there is only one repository instance registered for a single physical location.",				"- Gofer works with Monticello dependencies and uniformly treats them like the primary package.",				"- Gofer prefers to work with faster repositories if there is a choice.",				"- Gofer cleans up after Monticello, no empty class categories and no empty method protocols are to be expected.",				"- Gofer supports operations to sync remote and local repositories with each other.",				"",				"! Installation",				"",				"Gofer is included with the latest Pharo and GemStone distributions. To update to the latest version you can use Gofer itself:",				"",				"== Gofer upgrade",				"",				"In case you are missing Gofer in your image, grab it from *http://source.lukas-renggli.ch/gofer.html*.",				"",				"! Description",				"",				"Gofer is very simple by design, the basic useage scenario is always the same and consists of three steps:",				"",				"# You specify one or more Monticello repository URLs. You can do this using the methods ==url:==, ==url:username:password:== (HTTP, FTP), ==directory:==, or ==repository:== if you need full control. You might also use the convenience methods like ==squeaksource:==, ==wiresong:==, or ==gemsource:== for well known repositories. Additionally the following settings are available:",				"#- Gofer implicitly declares the local package cache as a repository. To disable the local package cache use the method ==disablePackageCache==, to re-enable use ==enablePackageCache==.",				"#- Gofer throws an error if a repository is not reachable. To silently ignore repository erros use the message ==disableRepositoryErrors==, to re-enable use ==enableRepositoryErrors==.",				"# You specify one or more Monticello packages you want to work with, by adding them to the Gofer instance. Use ==version:== to add a specific version, or use ==package:== to add the \"latest\" version in the given repository. Furthermore there is ==package:constraint:== that allows you to further constraint the version to be loaded in a block passed in as the second argument.",				"# You specify one or more actions to be performed on the specified packages:",				"",				"| ==load==\t| Load the specified packages.",				"| ==update==\t| Update the specified packages.",				"| ==merge==\t| Merge the specified packages into their working copies.",				"| ==localChanges==\t| Answer the changes between the base version and the working copy.",				"| ==browseLocalChanges==\t| Browse the changes between the base version and the working copy.",				"| ==remoteChanges==\t| Answer the changes between the working copy and the remote changes.",				"| ==browseRemoteChanges==\t| Browse the changes between the working copy and the remote changes.",				"| ==cleanup==\t| Cleans the specified packages.",				"| ==commit==\t| Commit the modified specified packages.",				"| ==commit:==\t| Commit the modified specified packages with the given commit message.",				"| ==revert==\t| Revert the specified packages to the currently loaded version.",				"| ==recompile==\t| Recompile the specified packages.",				"| ==reinitialize==\t| Call the class side initializers on the specified packages.",				"| ==unload==\t| Unload the specified packages.",				"| ==fetch==     | Download versions from remote repositories into the local cache.",				"| ==push==      | Upload local versions from local cache into remote repositories.",				"",				"! Example",				"",				"To use Gofer to update to exact versions of the Kom Server, the 'latest' code of Seaside 2.8 and the 'latest' code of the Scriptaculous package that is committed by the author with the initials 'lr' one could evaluate:",				"",				"== Gofer new",				"==     squeaksource: 'KomHttpServer';",				"==     version: 'DynamicBindings-gc.7';",				"==     version: 'KomServices-gc.19';",				"==     version: 'KomHttpServer-gc.32';",				"==     update.",				"== Gofer new",				"==     squeaksource: 'Seaside';",				"==     package: 'Seaside2.8a';",				"==     package: 'Scriptaculous' constraint: [ :version | version author = 'lr' ];",				"==     load"			],			"category" : "Gofer-Core-Base"		},		"SpToggleButtonPresenter" : {			"hash" : 2209024,			"definition" : "SpAbstractFormButtonPresenter << #SpToggleButtonPresenter\r\tslots: {\r\t\t\t #associatedToggleButtons .\r\t\t\t #action => ObservableSlot .\r\t\t\t #icon => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter to display a toggle button.",				"A toggle button is a button that can be activated (toggled) or deactivated (untoggled)."			],			"category" : "Spec2-Core-Widgets"		},		"FTStateBasedColumnSortingStrategy" : {			"hash" : 730880,			"definition" : "FTAbstractColumnSortingStrategy subclass: #FTStateBasedColumnSortingStrategy\r\tinstanceVariableNames: 'state'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Sorting'",			"comment" : [				"Description",				"--------------------",				"",				"I am an abstract class defining the state management of FTAbstractColumnSortingStrategy subclasses using a state to sort the table.",				"",				"My subclasses should only define a sort function to be used by the state to sort the FastTable.",				" ",				"Internal Representation and Key Implementation Points.",				"--------------------",				"",				"    Instance Variables",				"\tstate:\t\t\t<aSortingState> \tThe state of the sorting (ascending, descending, unsorted)."			],			"category" : "Morphic-Widgets-FastTable-Sorting"		},		"SDL2TouchExample" : {			"hash" : 4117248,			"definition" : "SDL2AthensExample subclass: #SDL2TouchExample\r\tinstanceVariableNames: 'circle moveToDraw'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-SDL2-Examples-Touch'",			"comment" : [				"Example for multi-touch devices."			],			"category" : "OSWindow-SDL2-Examples-Touch"		},		"RBMultiEnvironment" : {			"hash" : 1693952,			"definition" : "RBBrowserEnvironmentWrapper subclass: #RBMultiEnvironment\r\tinstanceVariableNames: 'environmentDictionaries'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Critics'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tenvironmentDictionaries:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Refactoring-Critics"		},		"FreeTypeSubPixelAntiAliasedGlyphRenderer class" : {			"hash" : 1899008,			"definition" : "FreeTypeSubPixelAntiAliasedGlyphRenderer class\r\tinstanceVariableNames: ''",			"comment" : [				"A SubPixel-AntiAliased GlyphRenderer for FreeType"			],			"category" : "FreeType-Graphics-GlyphRendering"		},		"ClyCollapsedDataSource" : {			"hash" : 5088000,			"definition" : "ClyDataSource subclass: #ClyCollapsedDataSource\r\tinstanceVariableNames: 'expandedItems'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-DataSource'",			"comment" : [				"I am table data source which items are all initially collapsed.",				"I maintain list of expanded items and compute items position according to it (row indexes in full table).",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\texpandedItems:\t\t<SortedCollection of: ClyDataSourceItem>\tsorted by item position"			],			"category" : "Calypso-Browser-DataSource"		},		"ZnPositionableReadStream" : {			"hash" : 1216000,			"definition" : "Object subclass: #ZnPositionableReadStream\r\tinstanceVariableNames: 'stream buffer count index delta'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-Character-Encoding-Core'",			"comment" : [				"I am ZnPositionableReadStream.",				"I am polymorphic with (the most used/important methods of) ReadStream and PositionableStream.",				"",				"I wrap another read stream and store the elements that I read in a sliding circular buffer so that I am able to go back to any position inside that buffer. ",				"",				"Essentially, I implement #position and #position: to be used to back out of reading ahead.",				"",				"Note that the size of my buffer limits how far I can go backwards. A SubscriptOutOfBounds exception will be signalled when an attempt is made to go too far backwards.",				"",				"The index returned by #position should be considered abstract, without concrete meaning, but it is currently implemented as the count of elements read by #next on the wrapped stream. On a simple stream over an in memory collection, that will be equivalent to an integer index into that collection. But on network streams or streams that were already further along, this will no longer be the case.",				"",				"The most elementary example of my capabilities can be seen in my implementation of #peek. See also the unit tests #testPlainExcursion and #testSearch",				"",				"Of course, backing out of an excursion is only possible within the window of the buffer size.",				"",				"Implementation",				"",				"- stream <ReadStream> the read stream that I wrap and add positioning to",				"- buffer <String|ByteArray> sliding, circular buffer",				"- index <PositiveInteger> zero based index into buffer, where next will be stored",				"- count <PositiveInteger> number of next operations done on wrapped stream",				"- delta <PositiveInteger> number of positions that I was moved backwards",				"",				"The real core methods are #next, #atEnd, #position and #position: and are used to implement the rest.",				"",				"Part of Zinc HTTP Components"			],			"category" : "Zinc-Character-Encoding-Core"		},		"HEInstaller" : {			"hash" : 989440,			"definition" : "Object subclass: #HEInstaller\r\tinstanceVariableNames: 'environment originalUndeclareds hasTraits'\r\tclassVariableNames: ''\r\tpackage: 'Hermes-ClassInstaller'",			"comment" : [				"I am the entry point to load a package of Hermes.",				"",				"I am the basic implementation, I can only handle basic cases:",				"- If there is a new undeclared I produce an error.",				"- If there is an existing element I produce an error.",				"",				"For more extended options check HEExtendedEnvironment",				"",				"Example: ",				"",				"\tfile := 'aFile.hermes'.",				"\tinstaller := HEInstaller new.",				"\t",				"\treader := HEBinaryReader new",				"\t\tstream: (File named: file) readStream;",				"\t\tyourself.",				"",				"\treadPackage := HEPackage readFrom: reader.",				"",				"\tinstaller installPackage: readPackage"			],			"category" : "Hermes-ClassInstaller"		},		"OSPlatform class" : {			"hash" : 1028352,			"definition" : "OSPlatform class\r\tinstanceVariableNames: ''",			"comment" : [				"An OSPlatform is an abstract representation of a 'OS platform'.",				"Platforms can be hierarchical, e.g., a \"general\" platform as superclass and more specific platforms as subclasses as long as the subclasses provide sufficient means to identify themselves.",				"The original implementation was for Tweak.",				"",				"Current\t\tholds the current OSPlatform subclass",				"",				"Architectural considerations:",				"most platform specific methods that need to be added to the platform class should be in the form of extensions rather then adding them directly to this package. Otherwise the platform class will degenerate very quickly into a dependence hub for all kinds of sub systems."			],			"category" : "System-Platforms-Base"		},		"RBRefactoryTyper" : {			"hash" : 3198208,			"definition" : "Object subclass: #RBRefactoryTyper\r\tinstanceVariableNames: 'model class variableTypes bestGuesses variableMessages backpointers methodName selectorLookup'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Core-Support'",			"comment" : [				"I am a type guesser used by refactoring operations.",				"",				"I try to determine the types used for variables in a class.",				"",				"Refactoring operations are using me to provide a possible list of classes that are affected by a refactoring. ",				"For example, for moving or delegating a method implementation to an instance variable, it might be necessary to add this implementation to multiple classes.",				"",				"I analyze message sends to the instance variables and try to guess the type by looking at implementors of that messages. ",				"(If a method sends ifTrue:ifFalse: to an instance variable I can guess that the instance variable may be a Boolean object).",				"",				"If I can guess the type to be a collection, I'll try to investigate the types of the possible contained elements as well.",				"You can ask for the guessed type of the variable: ",				"typer guessTypeFor: 'variablename'",				"and the contained elements: ",				"typer guessTypeFor: '-variablename-'",				"",				"Example usage: ",				"| typer |",				"\"create and initialize for a class to analyze\"",				"typer := (RBRefactoryTyper new runOn: RBMessageNode).",				"",				"\"guess types for RBMessageNodes instane var 'arguments' \"",				"typer  guessTypesFor:'arguments'.  \"a Set(SequenceableCollection)\"",				"",				"\"guess types for objects that may be put  into  'arguments' collection \"",				"typer  guessTypesFor:'-arguments-' \"a Set(RBBlockNode RBMethodNode)\"",				"",				"",				"You can print a full report on all results with #printString.",				"",				"(RBRefactoryTyper new runOn: Point ) printString.",				"\"'Point",				"\tx\t<Integer>",				"\ty\t<Integer>",				"'\"",				"",				"There are two class side methods, one for creating an instance and setting the environment used to resolve names - a RBNamespace.",				"",				"And another one for guessing types in a parseTree:",				"",				"RBRefactoryTyper typesFor: 'var' in: (RBParser parseExpression: 'var squared') model: RBNamespace new \"a Set(Number Collection)\"",				"(Here, I can guess the types Number and Collections as these are the classes implementing the message #squared)",				""			],			"category" : "Refactoring-Core-Support"		},		"SpPaginatorMorph" : {			"hash" : 2565120,			"definition" : "Morph << #SpPaginatorMorph\r\ttraits: {TObservable};\r\tslots: {\r\t\t\t #pagesMorph .\r\t\t\t #selectionMorph .\r\t\t\t #selectedPage => ObservableSlot .\r\t\t\t #numberOfPagesShown => ObservableSlot };\r\ttag: 'Paginator';\r\tpackage: 'Spec2-Adapters-Morphic'",			"comment" : [				"A morph to show a paginator.",				"A paginator is just another way to offer \"scrolling\" of contents: instead having a bar, we have selectable bullers (pages) that represent part of the contents.",				"",				"Users can add pages by calling `SpPaginatorMorph>>#addPage:` or `SpPaginatorMorph>>#addPages:`. Amount of pages to be part of the selected area (shown) are handled through `SpPaginatorMorph>>#numberOfPagesShown:`."			],			"category" : "Spec2-Adapters-Morphic-Paginator"		},		"DiffChangeMorph" : {			"hash" : 3341312,			"definition" : "ComposableMorph subclass: #DiffChangeMorph\r\tinstanceVariableNames: 'diffMorph descriptionMorph'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Diff-Morphs'",			"comment" : [				"A morph to display text differences"			],			"category" : "Tool-Diff-Morphs"		},		"Announcer" : {			"hash" : 830976,			"definition" : "Object subclass: #Announcer\r\tinstanceVariableNames: 'registry'\r\tclassVariableNames: ''\r\tpackage: 'Announcements-Core-Base'",			"comment" : [				"The implementation uses a threadsafe subscription registry, in the sense that registering, unregistering, and announcing from an announcer at the same time in different threads should never cause failures."			],			"category" : "Announcements-Core-Base"		},		"RSSimpleChartPopupBuilder" : {			"hash" : 5800704,			"definition" : "RSLineChartPopupBuilder subclass: #RSSimpleChartPopupBuilder\r\tinstanceVariableNames: 'labels icons'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Popup'",			"comment" : [				"I am a simple chart popup builder. I create a row for each line bar plot.",				"Then I apply a vertical line layout to each row.",				"",				"Users can create a subclass and override `rowShapefor:`",				"",				"This class is a simple demo of how to create a basic popup for a RSChart with lines plots.",				"",				"It could be different, in that case feel free extend classes like `RSPopupDecoration`",				"or `RSMarkerPopupChart`",				"",				"```Smalltalk",				"| x cumsum c  y error popup |",				"x := 1 to: 100.",				"cumsum := [:arr | | sum |",				"\tsum := 0.",				"\tarr collect: [ :v | sum := sum + v. sum ] ].",				"",				"c := RSChart new.",				"c extent: 800@400.",				"",				"popup := RSPopupDecoration new.",				"c addDecoration: popup.",				"",				"#(",				"series1 red",				"series2 blue) pairsDo: [ :label :color |",				"\t| col plot |",				"\ty := (x collect: [ :i | 50 atRandom - 25 ]).",				"\ty := cumsum value: y.",				"\terror := x.",				"\tcol := color value: Color.",				"\t",				"\tc addPlot: (RSAreaPlot new ",				"\t\tx: x y1: y + error y2: y - error;",				"\t\tcolor: col translucent).",				"\tc addPlot: (plot := RSLinePlot new x: x y: y; fmt: 'o';",				"\t\tcolor: col;",				"\t\tyourself).",				"\tpopup chartPopupBuilder",				"\t\tfor: plot text: label color: col.",				"\t ].",				"",				"c build.",				"",				"^ c canvas.",				"```"			],			"category" : "Roassal3-Chart-Popup"		},		"ProtocolOrganizer" : {			"hash" : 1094400,			"definition" : "Object subclass: #ProtocolOrganizer\r\tinstanceVariableNames: 'allProtocol protocols'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Protocols'",			"comment" : [				"A ProtocolOrganizer is part of a ClassOrganizer. ",				"",				"It manages the protocols of the class that owns it"			],			"category" : "Kernel-Protocols"		},		"FixedFaceFont" : {			"hash" : 623872,			"definition" : "AbstractFont subclass: #FixedFaceFont\r\tinstanceVariableNames: 'baseFont substitutionCharacter displaySelector'\r\tclassVariableNames: ''\r\tpackage: 'Graphics-Fonts'",			"comment" : [				"I am a font for special purpose like password or fallback.",				"I can show same form whenever someone requests any character.",				"",				"Variable displaySelector is future use to show a form dynamically.",				"(Although it would be unnecessary...)"			],			"category" : "Graphics-Fonts"		},		"SpAbstractFormButtonPresenter" : {			"hash" : 2207488,			"definition" : "SpAbstractWidgetPresenter << #SpAbstractFormButtonPresenter\r\tslots: {\r\t\t\t #state => ObservableSlot .\r\t\t\t #label => ObservableSlot .\r\t\t\t #labelClickable => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A base for _form control buttons_ (like radiobuttons or checkboxes)."			],			"category" : "Spec2-Core-Widgets"		},		"DefaultSortFunction class" : {			"hash" : 4457216,			"definition" : "DefaultSortFunction class\r\tinstanceVariableNames: ''",			"comment" : [				"A DefaultSortFunction is a collator using the default threeWayCompareTo: operator.",				"It is known to work on String and Magnitude.",				"",				"It is generally not useful to create a new instance, and the recommended pattern is to use the single instance available by sending the message  SortFunction default .",				"",				"For other objects  that don't understand threeWayCompareTo: it is necessary to use a custom SortFunction rather than the default one."			],			"category" : "SortFunctions-Core"		},		"NECMenuMorph" : {			"hash" : 3201280,			"definition" : "Morph subclass: #NECMenuMorph\r\tinstanceVariableNames: 'selected firstVisible titleStringMorph context pageHeight detailMorph detailPosition engine'\r\tclassVariableNames: ''\r\tpackage: 'NECompletion-Morphic'",			"comment" : [				"I show the possible completions in a menu like appearance. The user may choose an entry from my list and complete the word he was typing in the editor. I'm showed with the Tab key and will be deleted when with ESC key or when a successful completion occurs. The following keystrokes are supported:",				"",				"Ctrl-Space or Tab: Open a new morph. Tab requires at least one character in front of the cursor. When already open complete the selected entry. ",				"Esc: Close me",				"Ctrl+u: Change to untyped mode, so I show all selectors of all classes in the system and the variables that are accessible to the current context.",				"Arrow Up: Move one entry up.",				"Arrow Down: Move one entry down",				"Enter: (like Ctrl-Space and Tab): Complete with the selected item and close the morph",				"any letter or digit: Narrow the completion further",				"Ctrl+t: Toggle the expand flag. When expand is disabled, you don't see selectors belonging to Object and ProtoObject. ",				""			],			"category" : "NECompletion-Morphic"		},		"MorphTreeListManager" : {			"hash" : 1846528,			"definition" : "Object subclass: #MorphTreeListManager\r\tinstanceVariableNames: 'multipleSelection autoMultiSelection potentialDropMorph firstClickedMorph lastClickedMorph columnDropUnabled autoDeselection searchedElement lastKeystrokeTime lastKeystrokes lastSelection client isSelectionUpdateFromView isCheckList autoTargetMorph selectedMorphList removeOnlyLastSelected doubleClickSelector keyDownActionSelector'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Tree'",			"comment" : [				"A manager caring about a morphic based tree"			],			"category" : "Morphic-Widgets-Tree"		},		"FilteredMorphTreeModel" : {			"hash" : 680704,			"definition" : "MorphTreeModel subclass: #FilteredMorphTreeModel\r\tinstanceVariableNames: 'patternModel ghostString initialRootItems autoAccept'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Tree'",			"comment" : [				"I'm a MorphTreeModel enriched with a filter text field. When a pattern is entered in the textfield, then only appropriate root items are drawn in the tree. Very useful to filter a list of items. This model should be used everywhere a filter is added on top of a list as in Nautilus",				"",				"Examples:",				"\t\"An example with auto-accept for the filter ",				"\t(accepted as you type is the default)\"",				"\t| model morph |",				"\tmodel := FilteredMorphTreeModel new.",				"\tmodel rootItems: Morph allSubclasses.",				"\tmorph :=  model defaultMorphIn: World.",				"\tmorph extent: 300@500.",				"\tmorph openInWorld",				"\t",				"\t\"Another example with a ghost string, and the user ",				"\thas to accept the filter contents explicitly ",				"\twith a return  or CMD-S in the text field\"",				"\t| model morph |",				"\tmodel := FilteredMorphTreeModel new ",				"\t\tghostString: 'Enter a pattern'; ",				"\t\tautoAccept: false; ",				"\t\tyourself.",				"\tmodel rootItems: Morph allSubclasses.",				"\tmorph :=  model defaultMorphIn: World.",				"\tmorph extent: 300@500.",				"\tmorph openInWorld",				"\t",				"\t\"A dialog window with a filtered list\"",				"\t| window m |",				"\twindow := StandardWindow new model: self.",				"\twindow title: 'Test runner'.",				"\tm := FilteredMorphTreeModel new",				"\t\twrapBlockOrSelector: #selector;",				"\t\trootItems: Morph methods.",				"\twindow addMorph: (m defaultMorphIn: window) fullFrame: LayoutFrame identity.",				"\twindow openInWorld",				"",				"Internal Representation and Key Implementation Points.",				"The initial root item list is kept locally.",				"See #rootItems:",				"",				"Instance Variables",				"\tghostString:\t\t<String>",				"\tautoAccept:\t\t<Boolean>",				"\tinitialItems:\t\t<Collection>",				"\tpatternModel:\t\t<RubScrolledTextModel>"			],			"category" : "Morphic-Widgets-Tree"		},		"SpAbstractListPresenter" : {			"hash" : 2209536,			"definition" : "SpAbstractWidgetPresenter << #SpAbstractListPresenter\r\ttraits: {SpTHaveWrappingScrollBars + SpTContextMenu};\r\tslots: {\r\t\t\t #selectionMode .\r\t\t\t #activationBlock .\r\t\t\t #activateOnSingleClick .\r\t\t\t #model .\r\t\t\t #itemFilter => ObservableSlot .\r\t\t\t #verticalAlignment };\r\ttag: 'Widgets-Table';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A base for list presenters, it defines basic functionality common to all lists."			],			"category" : "Spec2-Core-Widgets-Table"		},		"DialogItemsChooser" : {			"hash" : 3337216,			"definition" : "Object subclass: #DialogItemsChooser\r\tinstanceVariableNames: 'selection unselectedItems selectedItems model title selectedItemsSetterSelector unselectedLabel selectedLabel'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Finder-UI'",			"comment" : [				"Dialog for choosing from a list of items"			],			"category" : "Tool-Finder-UI"		},		"Clipboard" : {			"hash" : 1649920,			"definition" : "Object subclass: #Clipboard\r\tinstanceVariableNames: 'contents recent'\r\tclassVariableNames: 'Default'\r\tpackage: 'Morphic-Core'",			"comment" : [				"I implement the entry point of the clipboard to the system.",				"",				"One of my instance is used as a default null implementation, storing the copied values in an instance variable.",				"",				"A real OSWindowClipboard will replace me, but I am still in case something is using the clipboard when there is no real OSWindow."			],			"category" : "Morphic-Core"		},		"SettingDeclaration" : {			"hash" : 689408,			"definition" : "PragmaSetting subclass: #SettingDeclaration\r\tinstanceVariableNames: 'getSelector setSelector type default ghostHelp'\r\tclassVariableNames: 'UniqueObject ValueListCache'\r\tpackage: 'System-Settings-Core-Base'",			"comment" : [				"A SettingDeclaration is an handler for a writtable setting value. ",				"Its main responsibility is allow real value changing and to hold descriptive data about the setting. When the real value is changed, all declared listeners are notified. The standard event mechanism is used for that purpose. See #value: method which is call in order to change a setting value. Whatever object can declare its interest in the real value changes by sending #whenChangedSend:to: to a setting. See notification protocol.",				"",				"For convenience, my olds values are registered in a list. This list is used by the SystemSettingBrowser in order to easily retrieve previous values.",				"",				"The type instance variable is a Symbol. It is used by the SystemSettingBrowser in order to build the input widget of a setting.",				"It can be the name of the class or the name of a superclass of the value. In that case, the input widget is built by #settingInputWidgetForNode: implemented by the class which name is the value of the type instance variable. As an example, the input widget for a Boolean is built by Boolean class>>settingInputWidgetForNode:.",				"",				"Type value is not limited to be a class name. It can also be whatever symbol. In that case, the selector corresponding to the message to send to the setting in order to build the inputWidget is built by SettingDeclaration>>localInputWidgetSelector. If the type instance variable is not set, then it is dynamically set to the class name of the value. ",				"",				"See SettingManager comment for more explanations.",				"",				"Instance Variables",				"\tdefault:\t\t<Object>",				"\tgetSelector:\t\t<Object>",				"\tghostHelp:\t\t<Object>",				"\tsetSelector:\t\t<Object>",				"\ttype:\t\t<Object>",				"",				"default",				"\t- xxxxx",				"",				"getSelector",				"\t- xxxxx",				"",				"ghostHelp",				"\t- xxxxx",				"",				"setSelector",				"\t- xxxxx",				"",				"type",				"\t- xxxxx"			],			"category" : "System-Settings-Core-Base"		},		"ByteString class" : {			"hash" : 790016,			"definition" : "ByteString class\r\tinstanceVariableNames: ''",			"comment" : [				"This class represents the array of 8 bit wide characters."			],			"category" : "Collections-Strings-Base"		},		"TabGroupMorph" : {			"hash" : 1951488,			"definition" : "ModelMorph subclass: #TabGroupMorph\r\tinstanceVariableNames: 'tabSelectorMorph contentMorph pageMorphs'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-PolyTabs'",			"comment" : [				"Organises a set of pages sharing the same space and selected through the use of tabs along the top."			],			"category" : "Morphic-Widgets-PolyTabs"		},		"TextAction" : {			"hash" : 1631488,			"definition" : "TextAttribute subclass: #TextAction\r\tinstanceVariableNames: 'actOnClickBlock'\r\tclassVariableNames: 'ActOnClickBlock'\r\tpackage: 'Text-Core-Attributes'",			"comment" : [				"I attach a bloc of code to a portion of text. The bloc is executed when the user clic on this portion of text.",				"",				"---- exemple 1 -----",				"| stream |",				"stream := TextStream on: (Text new: 100).",				"stream ",				"\tnextPutAll:  'Start a ';",				"\twithAttributes: {TextEmphasis underlined. TextAction new actOnClickBlock: [Smalltalk tools browser open ]}",				"\tdo: [ stream nextPutAll: 'browser' ].",				"TextMorph new ",				"\tnewContents: stream contents;",				"\topenInWindow .",				"---- exemple 2 -----",				"| stream |",				"stream := TextStream on: (Text new: 100).",				"stream ",				"\twithAttributes: {TextAction new actOnClickBlock: [:attr :event :textMorph :parag :editor | \t\t",				"\t\ttextMorph owner color: Color white.",				"\t\tparag rightFlush.",				"\t\teditor flash]}",				"\tdo: [ stream nextPutAll: 'Change me' ].",				"TextMorph new ",				"\tnewContents: stream contents;",				"\topenInWindow ."			],			"category" : "Text-Core-Attributes"		},		"RSParticleD" : {			"hash" : 2286080,			"definition" : "RSObject subclass: #RSParticleD\r\tinstanceVariableNames: 'pos level vel life decay maxLevel'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-Delaunay'",			"comment" : [				"I am used in the delaunay example"			],			"category" : "Roassal3-Experimental-Delaunay"		},		"AthensDemoMorph" : {			"hash" : 3423488,			"definition" : "Morph subclass: #AthensDemoMorph\r\tinstanceVariableNames: 'surface current frame pharoLogo esugBallon'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Examples-Morphic'",			"comment" : [				"Demos for Athens, just run:",				"",				"\tAthensDemoPresenter open",				"",				"You can find an implementation of each figure in",				"corresponding #figure<#>: method"			],			"category" : "Athens-Examples-Morphic"		},		"MenuPresenter" : {			"hash" : 900608,			"definition" : "AbstractWidgetPresenter subclass: #MenuPresenter\r\tinstanceVariableNames: 'groups title icon autoRefresh'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"I am a simple presenter describing a menu.",				"See AbstractWidgetPresenter",				"",				"I only contains a list of menu groups (MenuGroupPresenter). Each group is separated by a splitter.",				"",				"I provide the following variables and their accessors",				"- addGroup: use the block in parameter to initialize a new group, then add it in my collection.",				"- addMenuGroup: add the group in parameter in my collection.",				"- menuGroups getter of my collection.",				"",				"",				"todo",				"- addAllFromPragma:target:",				"- applyTo: activate the shortcut of the items of my groups.",				"- autoRefresh",				"- buildWithSpecAsPopup",				"- fromSpec:",				"- icon",				"- neglect:",				"- openWithSpecAt:",				"- printOn:",				"- title , addTitle:"			],			"category" : "Spec-Core-Widgets"		},		"FT2FFILibrary class" : {			"hash" : 1895936,			"definition" : "FT2FFILibrary class\r\tinstanceVariableNames: ''",			"comment" : [				"I am the entry point to the FFILibrary.",				"I have definitions about the errors and the name of the modules in the different architectures."			],			"category" : "FreeType-Bindings"		},		"CoFetcherSequence" : {			"hash" : 5312256,			"definition" : "CoFetcher subclass: #CoFetcherSequence\r\tinstanceVariableNames: 'subcompletions'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Model-Core'",			"comment" : [				"I'm a fetcher composed of a sequence of subfetchers. ",				"When executed, I execute my subfetchers one by one.",				"",				"Sequences are created by sending the message #, between two fetchers."			],			"category" : "HeuristicCompletion-Model-Core"		},		"Monitor" : {			"hash" : 1065728,			"definition" : "Object subclass: #Monitor\r\tinstanceVariableNames: 'mutex ownerProcess nestingLevel defaultQueue queueDict queuesMutex'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Processes'",			"comment" : [				"A monitor provides process synchronization that is more high level than the one provided by a Semaphore. Similar to the classical definition of a Monitor it has the following properties:",				"",				"1) At any time, only one process can execute code inside a critical section of a monitor.",				"2) A monitor is reentrant, which means that the active process in a monitor never gets blocked when it enters a (nested) critical section of the same monitor.",				"3) Inside a critical section, a process can wait for an event that may be coupled to a certain condition. If the condition is not fulfilled, the process leaves the monitor temporarily (in order to let other processes enter) and waits until another process signals the event. Then, the original process checks the condition again (this is often necessary because the state of the monitor could have changed in the meantime) and continues if it is fulfilled.",				"4) The monitor is fair, which means that the process that is waiting on a signaled condition the longest gets activated first.",				"5) The monitor allows you to define timeouts after which a process gets activated automatically.",				"",				"",				"Basic usage:",				"",				"Monitor>>critical: aBlock",				"Critical section.",				"Executes aBlock as a critical section. At any time, only one process can execute code in a critical section.",				"NOTE: All the following synchronization operations are only valid inside the critical section of the monitor!",				"",				"Monitor>>wait",				"Unconditional waiting for the default event.",				"The current process gets blocked and leaves the monitor, which means that the monitor allows another process to execute critical code. When the default event is signaled, the original process is resumed.",				"",				"Monitor>>waitWhile: aBlock",				"Conditional waiting for the default event.",				"The current process gets blocked and leaves the monitor only if the argument block evaluates to true. This means that another process can enter the monitor. When the default event is signaled, the original process is resumed, which means that the condition (argument block) is checked again. Only if it evaluates to false, does execution proceed. Otherwise, the process gets blocked and leaves the monitor again...",				"",				"Monitor>>waitUntil: aBlock",				"Conditional waiting for the default event.",				"See Monitor>>waitWhile: aBlock.",				"",				"Monitor>>signal",				"One process waiting for the default event is woken up.",				"",				"Monitor>>signalAll",				"All processes waiting for the default event are woken up.",				"",				"",				"Using non-default (specific) events:",				"",				"Monitor>>waitFor: aSymbol",				"Unconditional waiting for the non-default event represented by the argument symbol.",				"Same as Monitor>>wait, but the process gets only reactivated by the specific event and not the default event.",				"",				"Monitor>>waitWhile: aBlock for: aSymbol",				"Confitional waiting for the non-default event represented by the argument symbol.",				"Same as Monitor>>waitWhile:for:, but the process gets only reactivated by the specific event and not the default event.",				"",				"Monitor>>waitUntil: aBlock for: aSymbol",				"Confitional waiting for the non-default event represented by the argument symbol.",				"See Monitor>>waitWhile:for: aBlock.",				"",				"Monitor>>signal: aSymbol",				"One process waiting for the given event is woken up. If there is no process waiting for this specific event, a process waiting for the default event gets resumed.",				"",				"Monitor>>signalAll: aSymbol",				"All process waiting for the given event or the default event are woken up.",				"",				"Monitor>>signalReallyAll",				"All processes waiting for any events (default or specific) are woken up.",				"",				"",				"Using timeouts",				"",				"Monitor>>waitMaxMilliseconds: anInteger",				"Monitor>>waitFor: aSymbol maxMilliseconds: anInteger",				"Same as Monitor>>wait (resp. Monitor>>waitFor:), but the process gets automatically woken up when the specified time has passed.",				"",				"Monitor>>waitWhile: aBlock maxMilliseconds: anInteger",				"Monitor>>waitWhile: aBlock for: aSymbol maxMilliseconds: anInteger",				"Same as Monitor>>waitWhile: (resp. Monitor>>waitWhile:for:), but the process gets automatically woken up when the specified time has passed.",				"",				"Monitor>>waitUntil: aBlock maxMilliseconds: anInteger",				"Monitor>>waitUntil: aBlock for: aSymbol maxMilliseconds: anInteger",				"Same as Monitor>>waitUntil: (resp. Monitor>>waitUntil:for:), but the process gets automatically woken up when the specified time has passed."			],			"category" : "Kernel-Processes"		},		"SystemOrganizer" : {			"hash" : 803584,			"definition" : "Categorizer subclass: #SystemOrganizer\r\tinstanceVariableNames: 'environment'\r\tclassVariableNames: ''\r\tpackage: 'System-Support-Image'",			"comment" : [				"My instances provide an organization for the classes in the system, just as a ClassOrganizer organizes the messages within a class. The only difference is the methods for fileIn/Out."			],			"category" : "System-Support-Image"		},		"FLCompiledMethodCluster class" : {			"hash" : 1672960,			"definition" : "FLCompiledMethodCluster class\r\tinstanceVariableNames: 'transformationForSerializing'",			"comment" : [				"I am a cluster for CompiledMethod instances.",				"",				"How CompiledMethod trailers are serialized can be established using methods in 'configurating' class-side protocol."			],			"category" : "Fuel-Core-Clusters"		},		"RSAbstractFlowLayout" : {			"hash" : 5751040,			"definition" : "RSLayout subclass: #RSAbstractFlowLayout\r\tinstanceVariableNames: 'maxWidth gapSize alignment'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Layouts-Core"		},		"DockingBarMorph" : {			"hash" : 1905920,			"definition" : "AlignmentMorph subclass: #DockingBarMorph\r\tinstanceVariableNames: 'originalColor gradientRamp fillsOwner avoidVisibleBordersAtEdge autoGradient selectedItem activeSubMenu'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Extra'",			"comment" : [				"I'm a kind of container which adhere to one edge of the screen. See me in action with: ",				"",				"DockingBarMorph new ",				"\taddMorph: (SimpleButtonMorph new",				"                                           label: 'Say hello';",				"                                           target: [UIManager inform: 'Hello'];",				"                                           actionSelector: #value);",				"\taddMorph: (SimpleButtonMorph new",				"                                           label: 'Say bonjour';",				"                                           target: [UIManager inform: 'Bonjour'];",				"                                           actionSelector: #value);",				"\taddMorph: (SimpleButtonMorph new",				"                                           label: 'Close';",				"                                           target: [DockingBarMorph allInstances last delete];",				"                                           actionSelector: #value);",				"\tadhereToBottom;",				"\topenInWorld."			],			"category" : "Morphic-Widgets-Extra"		},		"FFIExternalReference" : {			"hash" : 478464,			"definition" : "ExternalObject subclass: #FFIExternalReference\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-Objects'",			"comment" : [				"I represent a reference to some variable (a pointer, a memory space, an obscure structure) living in the C heap. ",				"I'm abstract, my children keep the real references.",				"",				"A referenced type is  some variable that lives in the C heap and is seen in Pharo as an external  reference (an ==ExternalAddress==) ."			],			"category" : "UnifiedFFI-Objects"		},		"DiffMapMorph" : {			"hash" : 3355136,			"definition" : "BorderedMorph subclass: #DiffMapMorph\r\tinstanceVariableNames: 'mappings'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Diff-Morphs'",			"comment" : [				"A morph to display a map of join mappings"			],			"category" : "Tool-Diff-Morphs"		},		"TypingVisitor" : {			"hash" : 3218176,			"definition" : "RBProgramNodeVisitor subclass: #TypingVisitor\r\tinstanceVariableNames: 'typeStack'\r\tclassVariableNames: ''\r\tpackage: 'NECompletion-Model'",			"comment" : [				"A visitor that does the typing for better completion. No type guessing, just using the information that's already known to the system"			],			"category" : "NECompletion-Model"		},		"StSpotterPragmaBasedProcessor" : {			"hash" : 5485312,			"definition" : "Object subclass: #StSpotterPragmaBasedProcessor\r\tinstanceVariableNames: 'allFilteredCandidates order running'\r\tclassVariableNames: 'DefaultItemsLimit'\r\tpackage: 'NewTools-Spotter-Processors'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tallFilteredCandidates:\t\t<Object>",				"\torder:\t\t<Object>",				"\trunning:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "NewTools-Spotter-Processors"		},		"ProcessBrowser" : {			"hash" : 3215104,			"definition" : "Model subclass: #ProcessBrowser\r\tinstanceVariableNames: 'selectedProcess selectedContext methodText processList processListIndex stackList stackListIndex selectedClass selectedSelector searchString autoUpdateProcess deferredMessageRecipient lastUpdate keyEventsDict textModel cpuWatcherMonitoring'\r\tclassVariableNames: 'SuspendedProcesses WellKnownProcesses'\r\tpackage: 'Tool-ProcessBrowser'",			"comment" : [				"Change Set:\t\tProcessBrowser",				"Date:\t\t\t14 March 2000",				"Author:\t\t\tNed Konz",				"",				"email: ned@bike-nomad.com",				"",				"This is distributed under the Squeak License.",				"",				"Added 14 March:",				"\tCPUWatcher integration",				"\tautomatically start and stop CPUWatcher",				"\tadded CPUWatcher to process list menu",				"",				"Added 29 October:",				"\tMVC version",				"\t2.8, 2.7 compatibility",				"\trearranged menus",				"\tadded pointer inspection and chasing",				"\tadded suspend/resume",				"\trecognized more well-known processes",				"\tmisc. bug fixes",				"",				"Added 26 October: highlight pc in source code",				"Added 27 October: added 'signal semaphore'",				"added 'inspect receiver', 'explore receiver', 'message tally' to stack list menu",				"added 'find context', 'next context' to process list menu",				"added 'change priority' and 'debug' choices to process list menu",				"",				"27 October mods by Bob Arning:",				"",				"alters process display in Ned's ProcessBrowser to ",				"- show process priority",				"- drop 'a Process in' that appears on each line",				"- show in priority order",				"- prettier names for known processes",				"- fix to Utilities to forget update downloading process when it ends (1 less dead",				"process)",				"- correct stack dump for the active process"			],			"category" : "Tool-ProcessBrowser"		},		"SessionManager" : {			"hash" : 811264,			"definition" : "Object subclass: #SessionManager\r\tinstanceVariableNames: 'currentSession categories guiCategory toolsCategory networkCategory systemCategory userCategory'\r\tclassVariableNames: 'Default'\r\tpackage: 'System-SessionManager-Base'",			"comment" : [				"I am the object responsible of managing how sessions work in Pharo.",				"A session defines the boundaries of work in the image.",				"",				"A new session starts when the image starts.",				"A session stops when the image quits.",				"There is only one active session at a single point of time.",				"",				"The current active session is held by myself, the singleton session manager. It can be accessed by doing:",				"",				"  SessionManager default currentSession.",				"",				"The most important responsibility of the session manager is to manage how resources and services in the image are started up and shut down at the beginning and end of a session respectively. For example, when the image starts, several initialization routines should be executed to make sure that the image has access to the graphic drivers, the standard input/output file descriptors and so on.",				"",				"Such initialization happens in the #snapshot:andQuit: method. #snapshot:andQuit: will:",				" - stop current session",				" - save current image if requested",				" - quit if requested",				" - start a new session",				" ",				"When a session is started, all elements registered in the startup list are started up.",				"When a session is stopped, all elements registered in the shutdown list are shut down.",				"",				"# Managing Startup and Shutdown lists",				"",				"The startup and shutdown lists can be accessed through the messages:",				"",				"    SessionManager default startupList.",				"    SessionManager default shutdownList.",				"",				"In general terms, the shutdown list is the startup list reversed.",				"",				"Upon a startup [shutdown], all elements in the startup list are sent the message #startup: [#shutdown:] with a boolean as argument that indicates whether the image is being saved [closed].",				"",				"Internally, startup and shutdown lists are prioritised. Priorities are managed by startup categories. By default the session manager includes the following categories in decreasing priority order:",				"",				"- System",				"- Network",				"- Graphical User Interface",				"- Tools",				"- User",				"",				"Categories can be accessed as follows:",				"",				"    SessionManager default categoryNamed: aName.",				"",				"New categories can be registered in the system using the messages:",				"",				"    SessionManager default createCategory: aCategoryName.",				"    SessionManager default createCategory: aCategoryName after: anotherCategoryName.",				"",				"Finally, to subscribe some resource handler to the startup shutdown lists, we need to subscribe a handler, subclass of AbstractSessionHandler.",				"The most common handler implementation so far is the ClassSessionHandler, that allows to subscribe a class for startup and shutdown, keeping backwards compatibility to the old startup mechanism.",				"",				"    ClassSessionHandler forClassNamed: aClassName",				"",				"We can register a session handler as follows",				"",				"    SessionManager default",				"        register: (ClassSessionHandler forClassNamed: self name)",				"        inCategory: SessionManager default systemCategory.",				"        ",				"Or alternatively, by talking to the corresponding category:",				"",				"    SessionManager default systemCategory register: (ClassSessionHandler forClassNamed: self name)",				"",				"# System Category Priorities",				"",				"A system category internally prioritizes its elements to provide a fine grained control on the startup and shutdown order.",				"All methods above have variants that allow developers to specify the priority inside the category:  ",				"",				"    SessionManager default",				"        register: (ClassSessionHandler forClassNamed: self name)",				"        inCategory: SessionManager default systemCategory",				"        atPriority: 100.",				"",				"    SessionManager default systemCategory",				"        register: (ClassSessionHandler forClassNamed: self name)",				"        atPriority: 100",				"        ",				"By default, if no priority is specified, a default priority is used. Every category answers to the message #defaultPriority.",				"",				"# How does an image restart from the point it was before",				"",				"An important point in the image startup is how does it manage to restart from the point where it was executing when it was saved.",				"",				"When the image is saved, using the snapshot primitive, the entire image is freezed at the point of the snapshot.",				"More particularly, the process that invoked the snapshot primitive is freezed at the point of the primitive call.",				"This works as a process fork: the running image will return from the snapshot primitive and the saved file will also start from the freezed point.",				"To differentiate whether we are executing in the running image or in the freshly-saved image, the snapshot primitive returns a boolean indicating it.",				"",				"Read the comment of #snapshotPrimitive for more details."			],			"category" : "System-SessionManager-Base"		},		"KMLog class" : {			"hash" : 784896,			"definition" : "KMLog class\r\tinstanceVariableNames: 'debug'",			"comment" : [				"I am a simple log utility that can be enabled by sending the #setDebug and disabled by using #removeDebug. I trace the keymapping events."			],			"category" : "Keymapping-Core-Debugging"		},		"DelayBasicScheduler" : {			"hash" : 927232,			"definition" : "DelayNullScheduler subclass: #DelayBasicScheduler\r\tinstanceVariableNames: 'ticker runTimerEventLoop timerEventLoop suspendedDelays activeDelay suspendSemaphore timingSemaphore delayToStart delayToStop'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Delays'",			"comment" : [				"I schedule delays in a basic way independent of any particular time-base",				"and without any special multi-threaded synchronisation protection. ",				"",				"I provide the delay scheduling loop running as the system's highest priority process ",				"waiting for user delay scheduling events or VM events indicating a delay needs to be expired.",				"I manage suspendedDelays as a Heap sorted by the resumption time of the delay.",				"",				"My main collaborators are:",				"Delay - holds the resumptionTick calculated by the ticker",				"Delay{time-base}Ticker - time-base specific interaction with VM and calculation of resumptionTicks ",				"",				"USER-API ",				"#schedule: aDelay",				"\tForwards delay from user-thread to #timingPrioritySchedule: thread (via signalling #timingPriorityRunEventLoop) ",				"",				"#unschedule: aDelay",				"\tForwards delay from user-thread to #timingPriorityUnschedule: thread (via signalling #timingPriorityRunEventLoop) ",				"\t",				"",				"SYSTEM-API",				"#startTimerEventLoop{Priority:}",				"\tcreates a process runnning the delay scheduling loop, customisable priority to help unit testing",				"",				"#stopTimeEventLoop",				"\tflags the delay scheduling loop to execute and expire all suspended delays",				"",				"#shutDown",				"\tsuspend the delay scheduling loop to facilite clean snapshot ",				"",				"#startUp",				"\tunsuspend delay scheduling loop when snapshot resumes",				"",				"",				"INTERNAL - TIMING PRIORITY FACILITIES",				"timingPriority is the highest priority process in the system",				"",				"#timingPriorityRunEventLoop ",				"\touter loop uses the ticker to wait for VM or user signals",				"\thandles suspend-loop requests from #shutDown ",				"\tinvokes the main event handler",				"\twhen loop exits, signals all remaining suspendedDelays",				"",				"#timingPriorityHandleEvent",				"\tthe main event handler",				"\thands delays to the next two methods...",				"",				"#timingPrioritySchedule: aDelay",				"   inserts into suspendedDelays and determines activeDelay",				"",				"#timingPriorityUnSchedule: aDelay",				"   deletes from suspendedDelays and determines activeDelay",				"",				"",				"INTERNAL - SYNCHRONISATION",				"Lacking synchronisation protection I rely solely on the implict semantics of process scheduling.",				"Specifically, in #schedule:/#unschedule there can be no suspension point between ",				"the variable assignment and the following #signal which transfers execution to the highest priority process that consumes and clears the variable. In practice this currently works quite well,",				"but is fragile wrt changing process scheduling semantics.  Subclasses add specific synchronisation",				"protection."			],			"category" : "Kernel-Delays"		},		"JobProgressMorph" : {			"hash" : 583936,			"definition" : "Morph subclass: #JobProgressMorph\r\tinstanceVariableNames: 'bar endValue hasResult job labelMorph lastRefresh lock result startValue'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-ProgressBar'",			"comment" : [				"I combine a progress title and a JobPorgressBarMorph to a visual representation of a Job.",				"",				"Usually I am contained in the global instance of the SystemProgressMorph"			],			"category" : "Morphic-Base-ProgressBar"		},		"FFIConstants class" : {			"hash" : 960256,			"definition" : "FFIConstants class\r\tinstanceVariableNames: ''",			"comment" : [				"Constants definitions for FFI"			],			"category" : "FFI-Kernel"		},		"SlotExamplePerson" : {			"hash" : 3465984,			"definition" : "Object << #SlotExamplePerson\r\tslots: {\r\t\t\t #name .\r\t\t\t #directedMovies => ToManyRelationSlot inverse: #director inClass: #SlotExampleMovie .\r\t\t\t #actedInMovies => ToManyRelationSlot inverse: #actors inClass: #SlotExampleMovie };\r\ttag: 'Examples - Associations';\r\tpackage: 'Slot-Tests'",			"comment" : [				"A SlotExamplePerson is an example class to demonstrate the workings of relation slots."			],			"category" : "Slot-Tests-Examples - Associations"		},		"IceBasicProject" : {			"hash" : 6164736,			"definition" : "IceAbstractProject subclass: #IceBasicProject\r\tinstanceVariableNames: 'properties'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Project'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tproperties:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Iceberg-Project"		},		"IceTipCredentialsStoreBrowser" : {			"hash" : 6292224,			"definition" : "IceTipBrowser subclass: #IceTipCredentialsStoreBrowser\r\tinstanceVariableNames: 'credentialsList'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-Credentials'",			"comment" : [				"I am the browser used to show a credentials store."			],			"category" : "Iceberg-TipUI-Credentials"		},		"RSChart" : {			"hash" : 5804288,			"definition" : "RSAbstractContainerBuilder subclass: #RSChart\r\tinstanceVariableNames: 'plots decorations extents generator colors'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Core'",			"comment" : [				"<keyClass>",				"`RSChart` is the main class to build charts.",				"",				"*Responsibility*: maintain and render plots",				"",				"*Collaborators*: a chart closely interacts with plots and decorations. ",				"",				"*Variables*:",				"- `plots`: the list of plots ",				"- `extent`: size of the produced chart. Note that this extent is for the area on which plots are draw. It does not comprise ticks and axis titles",				"- `decorations`: collection of decorations to annotate the chart",				"- `generator`: nice label generator, useful to have labels that are visually appealing",				"- `colors`: default color palette",				"",				"*Example*:",				"Here is an example that adjust the font size used for the title, and axis labels:",				"",				"```Smalltalk",				"x := -3.14 to: 3.14 by: 0.1.",				"y := x sin.",				"",				"c := RSChart new.",				"c addPlot: (RSLinePlot new x: x y: y).",				"c addDecoration: (RSChartTitleDecoration new title: 'hello'; fontSize: 20).",				"c addDecoration: (RSXLabelDecoration new title: 'My X Axis'; fontSize: 12).",				"c addDecoration: (RSYLabelDecoration new title: 'My Y Axis'; fontSize: 15; vertical).",				"c",				"```"			],			"category" : "Roassal3-Chart-Core"		},		"MalDisjointSetsNextNode" : {			"hash" : 1768192,			"definition" : "MalDisjointSetNode subclass: #MalDisjointSetsNextNode\r\tinstanceVariableNames: 'nextNodes'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tnextNodes:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Moose-Algos-Graph"		},		"IceNodeQuery" : {			"hash" : 6210304,			"definition" : "IceTreeVisitor subclass: #IceNodeQuery\r\tinstanceVariableNames: 'root results selector entityName'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Cherrypicking'",			"comment" : [				"I am a IceNode (and IceDefinition) visitor that can detect a code entity in the tree."			],			"category" : "Iceberg-Cherrypicking"		},		"RSAbstractDualLine" : {			"hash" : 5671168,			"definition" : "RSAbstractLine subclass: #RSAbstractDualLine\r\tinstanceVariableNames: 'startPoint endPoint'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Lines'",			"comment" : [				"I am an abtract shape that has an start and one end"			],			"category" : "Roassal3-Shapes-Lines"		},		"CompilationContext class" : {			"hash" : 1220864,			"definition" : "CompilationContext class\r\tinstanceVariableNames: ''",			"comment" : [				"The compilationContext holds all information that is needed in the whole compiler chain.",				"",				"requestor <Object> usually a textEditor. This can be used to bind editor variables (typically variables local to a workspace/playground) and to properly write error messages inlined.",				"failBlock <BlockClosure> block with non local return used to abort the compilation (like an exception).",				"noPattern <Boolean> false if compiling a method which has selector and arguments at the beginning (the so-called pattern) and true if compiling something without selector and arguments (such as a DoIt).",				"class <Behavior> the behavior in which the code is compiled into (used to know inst var names & methodClass for example)",				"logged <Boolean> true if the sources will be logged in external logging system (change file, epicea, ...)",				"interactive <Boolean> Interactive mode is typically used in the IDE (showing errors when compiling code inlined,  pop-ups for some errors/warnings, ...), non-interactive mode is used for headless & code loading to compile code by logging into stdout or Transcript but no interaction required by the user.",				"options <Set of Symbols> See optionsDescription method comment class side",				"environment <SystemDictionary> place to look for literal variables (Globals for instance)"			],			"category" : "OpalCompiler-Core-FrontEnd"		},		"SpecTableLayout" : {			"hash" : 980480,			"definition" : "Object subclass: #SpecTableLayout\r\tinstanceVariableNames: 'commands selector layoutProperties'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Layout-Layouts'",			"comment" : [				"A SpecTableLayout is a variant of spec layout that uses TableLayout layout policy."			],			"category" : "Spec-Layout-Layouts"		},		"ZnServerSessionManager" : {			"hash" : 1422592,			"definition" : "Object subclass: #ZnServerSessionManager\r\tinstanceVariableNames: 'sessions'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Support'",			"comment" : [				"I am ZnServerSessionManager.",				"I manage a collection of ZnServerSession on behalf of a ZnServer.",				"",				"Session ids are stored in cookies.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Support"		},		"FLAnalyzer" : {			"hash" : 1670656,			"definition" : "Object subclass: #FLAnalyzer\r\tinstanceVariableNames: 'internalClasses pluggableSubstitutions globalMappersFactory analysisFactory generalMapperFactory globalSymbols internalMethods globalEnvironment'\r\tclassVariableNames: ''\r\tpackage: 'Fuel-Core-Base'",			"comment" : [				"I am responsible of traversing the graph of references starting from a root object. I will produce a clusterization which the serializer will store on a stream.",				"",				"An example of use is:",				"",				"\t(FLAnalyzer newDefault ",				"\t\tclusterizationOf: (Array with: 1@2 with: 3@4))",				"\t\tclusters."			],			"category" : "Fuel-Core-Base"		},		"RBCategoryEnvironment" : {			"hash" : 3131648,			"definition" : "RBBrowserEnvironmentWrapper subclass: #RBCategoryEnvironment\r\tinstanceVariableNames: 'categories'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Environment'",			"comment" : [				"I am a RBBrowserEnvironment on a set of category names.",				"I containt all entities using this category name.",				"I am more restricted to the exact category name compared",				"to a package environment.",				"",				"Example, all Morph subclasses in category Morphic-Base-Menus",				"",				"(RBBrowserEnvironment new forClasses: Morph withAllSubclasses) forCategories: {#'Morphic-Base-Menus'}"			],			"category" : "Refactoring-Environment"		},		"ShAbstractClassChangeDetector" : {			"hash" : 1119744,			"definition" : "ShAbstractChangeDetector subclass: #ShAbstractClassChangeDetector\r\tinstanceVariableNames: 'oldValue newValue builderAccessor classAccessor comparer'\r\tclassVariableNames: ''\r\tpackage: 'Shift-Changes'",			"comment" : [				"I can detect changes in the class structure.",				"My subclasses provides three blocks:",				"",				"builderAccessor: a block to access the fill in the builder. ",				"classAccessor : a block to access in the old class.",				"comparer: (optional) to compare both values.",				"",				"By default I have a  comparer. This is a block to compare the values from the old class and the builder.",				"The subclasses can provide another comparer if they need to. "			],			"category" : "Shift-Changes"		},		"RGChunkImporter" : {			"hash" : 5270016,			"definition" : "Object subclass: #RGChunkImporter\r\tinstanceVariableNames: 'environment package doIts'\r\tclassVariableNames: ''\r\tpackage: 'Ring-ChunkImporter'",			"comment" : [				"I'm an object holding the result of loading a file containing Pharo code definitions in chunk format.",				"I create Ring definitions for the elements inside the chunk stream."			],			"category" : "Ring-ChunkImporter"		},		"SystemNavigation" : {			"hash" : 1150976,			"definition" : "Object subclass: #SystemNavigation\r\tinstanceVariableNames: 'environment'\r\tclassVariableNames: ''\r\tpackage: 'System-Support-Image'",			"comment" : [				"I support the navigation of the system. ",				"I act as a facade but as I could require some state or different way of navigating the system all my behavior are on the instance side.",				"I should (it is not complety done yet) be parametrized by an environment (aSystemDictionary) that scopes my queries."			],			"category" : "System-Support-Image"		},		"IceTipDiffSelectingPanel" : {			"hash" : 6312704,			"definition" : "IceTipDiffPanel subclass: #IceTipDiffSelectingPanel\r\tinstanceVariableNames: 'checkedIceNodes'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-View-Branch'",			"comment" : [				"I'm a diff panel that shows packages/classes/methods changed in a column and a diff in the other.",				"I give users the possibility of select changes.  ",				"",				"By default, all my elements are selected on opening.",				"",				"As my father, I receive a model that needs to understand #elements.",				"also #elements answer should be a collection of elements that also understand elements.",				""			],			"category" : "Iceberg-TipUI-View-Branch"		},		"ClyClassWithScripts class" : {			"hash" : 5074432,			"definition" : "ClyClassWithScripts class\r\tinstanceVariableNames: ''",			"comment" : [				"I am example class which includes all kind of scripts.",				"Look at the class side"			],			"category" : "Calypso-SystemPlugins-ClassScripts-Queries-Tests"		},		"ControlButtonMorph" : {			"hash" : 1911040,			"definition" : "PluggableButtonMorph subclass: #ControlButtonMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Basic-Buttons'",			"comment" : [				"Specially themed \"control\" button. Used for drop-lists, expanders etc."			],			"category" : "Morphic-Widgets-Basic-Buttons"		},		"LGitExternalEnumerationUInt32 class" : {			"hash" : 2062336,			"definition" : "LGitExternalEnumerationUInt32 class\r\tinstanceVariableNames: 'representationType declaration'",			"comment" : [				"See the comment in NBExternalEnumeration. I am a copy of NBExternalEnumeration with the exception that I inherit from Object, not from SharedPool."			],			"category" : "LibGit-Core-Abstracts"		},		"TokenTreeFilter" : {			"hash" : 926720,			"definition" : "AbstractTreeFilter subclass: #TokenTreeFilter\r\tinstanceVariableNames: 'token'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets-Support'",			"comment" : [				"I am a filter for a token.",				"",				"If a node item contains my token I accept it"			],			"category" : "Spec-Core-Widgets-Support"		},		"DTLeavesCollector" : {			"hash" : 2954752,			"definition" : "DTResultsTreeVisitor subclass: #DTLeavesCollector\r\tinstanceVariableNames: 'leaves'\r\tclassVariableNames: ''\r\tpackage: 'DrTests-Visitors'",			"comment" : [				"I am a visitor that collect the leaves of the DTTreeNode I visit.",				"",				"If there are multiple levels of DTTreeNode, no problem, I traverse them until I find the leaves."			],			"category" : "DrTests-Visitors"		},		"AsyncFile class" : {			"hash" : 860928,			"definition" : "AsyncFile class\r\tinstanceVariableNames: ''",			"comment" : [				"An asynchronous file allows simple file read and write operations to be performed in parallel with other processing. This is useful in multimedia applications that need to stream large amounts of sound or image data from or to a file while doing other work.",				"",				"Closing the file after its use is currently required to not leak external semaphores. "			],			"category" : "Files-Core"		},		"RGTraitAlias" : {			"hash" : 5267456,			"definition" : "RGTraitTransformation subclass: #RGTraitAlias\r\tinstanceVariableNames: 'aliases'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\taliases:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"StringMorphAttributeScanner" : {			"hash" : 1884928,			"definition" : "Object subclass: #StringMorphAttributeScanner\r\tinstanceVariableNames: 'fontNumber textColor emphasis alignment actualFont indent kern'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Text Support'",			"comment" : [				"A StringMorphAttributeScanner provides the interface of a CharacterScanner so that text attributes may be collected from a Text and used elsewhere, like in setting the attributes of a StringMorph."			],			"category" : "Morphic-Base-Text Support"		},		"TabManagerPresenter" : {			"hash" : 903168,			"definition" : "AbstractWidgetPresenter subclass: #TabManagerPresenter\r\tinstanceVariableNames: 'tabs tabSelectedAction selectedTab'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"I am a spec presenter representing a tab manager. My role is to gather multiple tabs, and make them work together",				"",				"You can also have a look at TabsExample for another example."			],			"category" : "Spec-Core-Widgets"		},		"MicMicrodownSnippetFactory" : {			"hash" : 6581504,			"definition" : "Object subclass: #MicMicrodownSnippetFactory\r\tinstanceVariableNames: 'parserClass'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Tests-Snippets'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tparserClass:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Microdown-Tests-Snippets"		},		"RGTraitDescriptionStrategy" : {			"hash" : 5245440,			"definition" : "RGBehaviorStrategy subclass: #RGTraitDescriptionStrategy\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"OSWindowJoystickExample" : {			"hash" : 4115712,			"definition" : "OSWindowGenericRendererExample subclass: #OSWindowJoystickExample\r\tinstanceVariableNames: 'characterPosition characterVelocity lastSimulationTime currentTime bullets'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-SDL2-Examples-Joystick'",			"comment" : [				"I am a basic example to show how we can draw something and use the joystick.",				"",				"To launch the example:",				"self new open"			],			"category" : "OSWindow-SDL2-Examples-Joystick"		},		"RewriteRuleChangesBrowser" : {			"hash" : 1690880,			"definition" : "SpPresenter << #RewriteRuleChangesBrowser\r\tslots: {\r\t\t\t #changes .\r\t\t\t #selectedChanges .\r\t\t\t #changeTree => ObservableSlot .\r\t\t\t #diffView => ObservableSlot .\r\t\t\t #buttonCancel => ObservableSlot .\r\t\t\t #buttonOk => ObservableSlot };\r\ttag: 'Utilities';\r\tpackage: 'NautilusRefactoring'",			"comment" : [				"A changes browser for the changes generated by the rewrite rule editor"			],			"category" : "NautilusRefactoring-Utilities"		},		"ZnNetworkingUtils" : {			"hash" : 1419008,			"definition" : "Object subclass: #ZnNetworkingUtils\r\tinstanceVariableNames: 'socketStreamClass secureSocketStreamClass'\r\tclassVariableNames: 'Default DefaultSocketStreamTimeout'\r\tpackage: 'Zinc-HTTP-Support'",			"comment" : [				"I am ZnNetworkingUtils holding various utilities related to HTTP networking.",				"",				"My class side is a general API.",				"",				"My instance side is a factory.",				"",				"ZnNetworkingUtils default socketStreamClass: SocketStream.",				"ZnNetworkingUtils default socketStreamClass: ZdcSocketStream.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Support"		},		"ZnHeaders class" : {			"hash" : 1415168,			"definition" : "ZnHeaders class\r\tinstanceVariableNames: ''",			"comment" : [				"I am ZnHeaders.",				"I am a collection of HTTP headers.",				"I can be used for generating and parsing.",				"",				"Header names are normalized and used case insensitive.",				"Header values can be multi-valued.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Core"		},		"HSVAColorSelectorMorph" : {			"hash" : 578304,			"definition" : "Morph subclass: #HSVAColorSelectorMorph\r\tinstanceVariableNames: 'hsvMorph aMorph'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-ColorPicker'",			"comment" : [				"Colour selector featuring a saturation/volume area, hue selection strip and alpha selection strip."			],			"category" : "Morphic-Widgets-ColorPicker"		},		"SpMorphicToolbarMenuButtonMorph" : {			"hash" : 2564096,			"definition" : "Morph subclass: #SpMorphicToolbarMenuButtonMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Base'",			"comment" : [				"Morphic implementation of a ToolBarMenuButton"			],			"category" : "Spec2-Adapters-Morphic-Base"		},		"HiRulerBuilder" : {			"hash" : 4213760,			"definition" : "Object subclass: #HiRulerBuilder\r\tinstanceVariableNames: 'values linksBlock ruler'\r\tclassVariableNames: ''\r\tpackage: 'Hiedra-Model'",			"comment" : [				"I provide a convenient API to create instances of HiRuler. The user sets a list of values (will be wrapped as nodes) and a linksBlock (that answers what values are connected from a value). ",				"",				"A class side method eases the creation in ony one message send."			],			"category" : "Hiedra-Model"		},		"AthensWrappedWorldDisplay" : {			"hash" : 3413760,			"definition" : "Object subclass: #AthensWrappedWorldDisplay\r\tinstanceVariableNames: 'realDisplay wrapMorph'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Morphic'",			"comment" : [				"An AthensWrappedWorldDisplay acts as a DisplayScreen",				"for a wrapped WorldMorph.",				"",				"Instance Variables",				"\trealDisplay:\t\tthe realdisplay",				"\twrapMorph:\tthe wrapped world"			],			"category" : "Athens-Morphic"		},		"MillerScrollPane" : {			"hash" : 2620416,			"definition" : "GeneralScrollPane subclass: #MillerScrollPane\r\tinstanceVariableNames: 'layoutChangeAction updating firstShowingMorph keepShowingPage'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Layout'",			"comment" : [				"A scroll pane to show a miller column list."			],			"category" : "Spec2-Adapters-Morphic-Layout"		},		"ClassHierarchyPrinter" : {			"hash" : 2052864,			"definition" : "Object subclass: #ClassHierarchyPrinter\r\tinstanceVariableNames: 'theClass excludedClasses limitedToClasses stream index showSuperclasses showState'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-ExtraUtils-ForPharo'",			"comment" : [				"I'm a nice class hierarchy printer.",				"I can be configured as follows: ",				"\t- show or not class instance variables (`ClassHierarchy>>#doNotShowState`)",				"\t- show or not superclasses (`ClassHierarchy>>#doNotShowState`)",				"\t- limit the classes to a given set",				"\t- exclude some classes",				"\t",				"For examples browse `ClassHierarchyPrinterTest`",				"",				"```",				"ClassHierarchyPrinter new ",				"\t\tforClass: RBNode; ",				"\t\tdoNotShowState;",				"\t\tdoNotShowSuperclasses;",				"\t\texcludedClasses: (RBNode withAllSubclasses select: [ :each | each name beginsWith: 'RBPattern' ]);",				"\t\tlimitedToClasses: (RBNode withAllSubclasses select: [:each | each name beginsWith: 'RB']).",				"```",				"",				"produces ",				"",				"```",				"'RBNode",				"\tRBProgramNode",				"\t\tRBComment",				"\t\tRBMethodNode",				"\t\tRBPragmaNode",				"\t\tRBReturnNode",				"\t\tRBSequenceNode",				"\t\tRBValueNode",				"\t\t\tRBArrayNode",				"\t\t\tRBAssignmentNode",				"\t\t\tRBBlockNode",				"\t\t\tRBCascadeNode",				"\t\t\tRBLiteralNode",				"\t\t\t\tRBLiteralArrayNode",				"\t\t\t\tRBLiteralValueNode",				"\t\t\tRBMessageNode",				"\t\t\tRBParseErrorNode",				"\t\t\t\tRBEnglobingErrorNode",				"\t\t\t\t\tRBArrayErrorNode",				"\t\t\t\t\tRBBlockErrorNode",				"\t\t\t\t\tRBInvalidCascadeErrorNode",				"\t\t\t\t\tRBLiteralArrayErrorNode",				"\t\t\t\t\tRBLiteralByteArrayErrorNode",				"\t\t\t\t\tRBMissingOpenerErrorNode",				"\t\t\t\t\tRBParenthesesErrorNode",				"\t\t\t\t\tRBPragmaErrorNode",				"\t\t\t\t\tRBTemporariesErrorNode",				"\t\t\t\t\tRBUnfinishedStatementErrorNode",				"\t\t\t\t\tRBUnreachableStatementErrorNode",				"\t\t\tRBSelectorNode",				"\t\t\tRBVariableNode",				"\t\t\t\tRBArgumentNode",				"\t\t\t\tRBGlobalNode",				"\t\t\t\tRBInstanceVariableNode",				"\t\t\t\tRBSelfNode",				"\t\t\t\tRBSuperNode",				"\t\t\t\tRBTemporaryNode",				"\t\t\t\tRBThisContextNode",				"\tRBSlotInitializationNode",				"'",				"```\t",				"### Some nice examples",				"\t",				"Another nice example is the following one which prints a package roots by roots.",				"",				"```",				"String streamContents: [ :st |  ",				"\t| printer |",				"\tprinter := ClassHierarchyPrinter new.",				"\tprinter doNotShowSuperclasses.",				"\tprinter on: st.\t",				"\t((SortedCollection sortBlock: [ :a :b | a name < b name ])",				"\t\taddAll: (RPackageOrganizer default packageNamed: 'Refactoring-Core') roots)",				"\t\t\tdo: [ :each | ",				"\t\t\t\tprinter forClass: each. ",				"\t\t\t\tprinter print.",				"\t\t\t\tprinter resetLevel]]",				"```",				"",				"Now to print according to tags:",				"",				"```",				"| p roots |",				"p := (RPackageOrganizer default packageNamed: 'MenuRegistration').",				"roots := p roots. ",				"String streamContents: [ :st |  ",				"\t| printer |",				"\tprinter := ClassHierarchyPrinter new.",				"\tprinter doNotShowSuperclasses.",				"\tprinter on: st.    ",				"\tp classTags do: [ :aTag | ",				"\t\t| rootsPerTag |",				"\t\tprinter ",				"\t\t\tnextPutAll: 'Tag: ', aTag name ; ",				"\t\t\tcr;",				"\t\t\tnextPutAll: '==================================='; cr.",				"\t\t  rootsPerTag := (p classesForClassTag: aTag name) select: [ :each | roots includes: each ].",				"        rootsPerTag",				"             do: [ :each | ",				"                    printer forClass: each. ",				"                    printer print.",				"                    printer resetLevel]]]",				"```",				""			],			"category" : "Kernel-ExtraUtils-ForPharo"		},		"RSHorizontalGaussianJitterVanDerPloegTreeLayout" : {			"hash" : 2325504,			"definition" : "RSHorizontalVanDerPloegTreeLayout subclass: #RSHorizontalGaussianJitterVanDerPloegTreeLayout\r\tuses: RSTWalkBasedRegularTreeLayoutRandomizedGaps\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Roassal'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "Containers-Essentials-Roassal"		},		"SpNumberInputFieldPresenter" : {			"hash" : 2212608,			"definition" : "SpTextInputFieldPresenter << #SpNumberInputFieldPresenter\r\tslots: {\r\t\t\t #numberType => ObservableSlot .\r\t\t\t #minimum => ObservableSlot .\r\t\t\t #maximum => ObservableSlot .\r\t\t\t #climbRate => ObservableSlot .\r\t\t\t #digits => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter  for a  text field specialised on numbers. ",				"`SpNumberInputFieldPresenter` accepts a number type (integer or float) and a range (min, max). "			],			"category" : "Spec2-Core-Widgets"		},		"SimpleHierarchicalListMorph" : {			"hash" : 1929472,			"definition" : "ScrollPane subclass: #SimpleHierarchicalListMorph\r\tinstanceVariableNames: 'selectedMorph getListSelector autoDeselect columns sortingSelector getSelectionSelector setSelectionSelector potentialDropMorph lineColor lastSelection lastKeystrokeTime lastKeystrokes searchedElement'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-List'",			"comment" : [				"Display a hierarchical list of items.  Each item should be wrapped with a ListItemWrapper.",				"",				"For a simple example, look at submorphsExample.  For beefier examples, look at ObjectExplorer or FileList."			],			"category" : "Morphic-Widgets-List"		},		"ClassOrganization" : {			"hash" : 894720,			"definition" : "Object subclass: #ClassOrganization\r\tinstanceVariableNames: 'protocolOrganizer organizedClass commentSourcePointer'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Protocols'",			"comment" : [				"This class manages the class comment and a protocol organizer"			],			"category" : "Kernel-Protocols"		},		"KMNoModifier" : {			"hash" : 781568,			"definition" : "KMModifier subclass: #KMNoModifier\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Keymapping-KeyCombinations'",			"comment" : [				"I represent the absense of a key modifier. I fulfill the role of a null pattern, having as default no printing and not matching."			],			"category" : "Keymapping-KeyCombinations"		},		"FTExampleDropDataSource" : {			"hash" : 739584,			"definition" : "FTSimpleDataSource subclass: #FTExampleDropDataSource\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Examples'",			"comment" : [				"I'm a simple example of fast table who will accept drops of classes.",				"",				"FTExamples exampleDragAndDrop1."			],			"category" : "Morphic-Widgets-FastTable-Examples"		},		"ClyTextMorphToolMorph" : {			"hash" : 5092608,			"definition" : "Morph subclass: #ClyTextMorphToolMorph\r\tinstanceVariableNames: 'textMorph'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-TextEditors'",			"comment" : [				"I am a root of possible tools which affect text editors.",				"Instances are supposed to be placed in the status bar of the editor.",				"They should be created using following method: ",				"",				"\tClyTextMorphTool of: aTextMorph",				"\t",				"If subclass need to be notified about text changes it should implement changes subscription in #attachToTextMorph method.",				"By default it do nothing.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\ttextMorph:\t\t<Object>"			],			"category" : "Calypso-Browser-TextEditors"		},		"LayoutFrame" : {			"hash" : 1837312,			"definition" : "Object subclass: #LayoutFrame\r\tinstanceVariableNames: 'leftFraction leftOffset topFraction topOffset rightFraction rightOffset bottomFraction bottomOffset'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Layouts'",			"comment" : [				"I define a transformation frame relative to some rectangle. I'm basic data structure used for graphics.",				"",				"Do not use fractions: fractionsOrNil offsets: offsetsOrNil or fractions: fractionsOrNil if you do not have already the rectangles that should be passed as arguments.",				"",				"If you are creating the rectangles representing the numbers you need, better use the accessors. For example like this.  ",				"",				"\t(LayoutFrame identity",				"\t\t\ttopOffset: topHeight;",				"\t\t\tbottomFraction: 0;",				"\t\t\tbottomOffset: self buttonsBarHeight;",				"\t\t\tleftOffset: -1;",				"\t\t\trightOffset: 1)\t",				"",				"Use printOnForHelpingMigration: if you want to inspect the object.",				"",				"Instance variables:",				"\tleftFraction ",				"\ttopFraction ",				"\trightFraction ",				"\tbottomFraction \t<Float>\t\tThe fractional distance (between 0 and 1) to place the morph in its owner's bounds",				"\tleftOffset ",				"\ttopOffset ",				"\trightOffset ",				"\tbottomOffset \t<Integer>\tFixed pixel offset to apply after fractional positioning (e.g., \"10 pixel right of the center of the owner\")"			],			"category" : "Morphic-Base-Layouts"		},		"SpNotebookPage" : {			"hash" : 2184960,			"definition" : "Object << #SpNotebookPage\r\ttraits: {TObservable};\r\tslots: {\r\t\t\t #owner .\r\t\t\t #title => ObservableSlot .\r\t\t\t #icon => ObservableSlot .\r\t\t\t #layoutSpec => ObservableSlot .\r\t\t\t #closeable .\r\t\t\t #presenterProvider .\r\t\t\t #retrievedBlock .\r\t\t\t #activePresenter => WeakSlot .\r\t\t\t #labelPresenter };\r\ttag: 'Widgets-Tab';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A page for a SpNotebookPresenter.",				"A page can have a title, an icon and some other interesting properties.",				"",				"An important member is `SpNotebookPage>>#presenterProvider`, which contains a block to retrieve the content of the page, which can be resolved lazily."			],			"category" : "Spec2-Core-Widgets-Tab"		},		"ClyBrowserContext" : {			"hash" : 5112576,			"definition" : "CmdToolContext subclass: #ClyBrowserContext\r\tinstanceVariableNames: 'selectedItems'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-Contexts'",			"comment" : [				"My subclasses represent the navigation context of the browser, the browser state. They describe the concrete type of selected items together with items itself.",				"",				"My tool is always the browser. And I provide the #browser method to use this fact explicitly.",				"",				"I provide default implementations of how to work with selected items in the Calypso browser model:",				"- selectedItems, returns the actually selected items.",				"- selectedObjects , returns the actual object of selected items.",				"- lastSelectedItem",				"- lastSelectedObject",				"- lastSelectedObjectIn: items, encapsulates the knowledge of what is the last item in the selection.",				"- firstSelectedObjectIn: items",				"- hasSelecteditems",				"",				"Users can retrieve actual system which browser navigate:",				"\tcontext system",				"",				"There are several operation with browser which can be performed using me:",				"- updateBrowser, it will force the browser to perform full update of navigation data sources",				"- restoreBrowserState, it should be implemented by subclasses whey they should recover browser state which is described by context instance"			],			"category" : "Calypso-Browser-Contexts"		},		"ClySortSystemItemFunction" : {			"hash" : 4947968,			"definition" : "ClySortFunction subclass: #ClySortSystemItemFunction\r\tinstanceVariableNames: 'functionsForTypes'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemQueries-Queries'",			"comment" : [				"I implement sorting of different kind of system items like methods and classes.",				"",				"First I check the type of given items using #calypsoEnvironmentType. If items are belongs to same type I use their #defaultSortFunctionForCalypso to sort them.",				"In addition I cache all created sort functions.",				"",				"And when items are belongs to the different type I compare this types using #itemsSortOrderForCalypso number.",				"Look at #collate:with: method for details",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tfunctionsForTypes:\t\t<Dictionary<Class, SortFunction>>"			],			"category" : "Calypso-SystemQueries-Queries"		},		"ClyActiveBreakpointsQuery" : {			"hash" : 5041920,			"definition" : "ClyMethodQuery subclass: #ClyActiveBreakpointsQuery\r\tinstanceVariableNames: 'excludesHaltsForTesting'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemPlugins-Reflectivity-Queries-Breakpoints'",			"comment" : [				"I return all methods which have installed breakpoints or send the halt message (and friends like haltIf:)"			],			"category" : "Calypso-SystemPlugins-Reflectivity-Queries-Breakpoints"		},		"MenubarMorph class" : {			"hash" : 1906176,			"definition" : "MenubarMorph class\r\tinstanceVariableNames: ''",			"comment" : [				"Description",				"--------------------",				"",				"I am a Morph of the form of a Menubar that can be displayed at the top of the World. ",				"",				"You can disable me with: `self showMenubar: false`.",				"",				"For now, when you open me, by default I will use the world menu pragma to collect the items to display. If you want a custom menu, just update the WorldMenu pragma to use.",				" ",				"Internal Representation and Key Implementation Points.",				"--------------------",				"",				"    Instance Variables",				"\tmenuBarItems:\t\t<aCollection>\tA collection of items to show at the root of the Menubar. Those items can also contains submenus."			],			"category" : "Morphic-Widgets-Menubar-View"		},		"PragmaMenuAndShortcutRegistration" : {			"hash" : 1666560,			"definition" : "Object subclass: #PragmaMenuAndShortcutRegistration\r\tinstanceVariableNames: 'items currentRoot platform model'\r\tclassVariableNames: ''\r\tpackage: 'MenuRegistration-Core'",			"comment" : [				"A PragmaMenuAndShortcutRegistration is the list items holder"			],			"category" : "MenuRegistration-Core"		},		"TextConverter" : {			"hash" : 2236416,			"definition" : "Object subclass: #TextConverter\r\tinstanceVariableNames: 'latin1Map latin1Encodings'\r\tclassVariableNames: ''\r\tpackage: 'Deprecated90'",			"comment" : [				"The abstract class for all different type of text converters.  nextFromStream: and nextPut:toStream: are the public accessible methods.  If you are going to make a subclass for a stateful text conversion, you should override restoreStateOf:with: and saveStateOf: along the line of CompoundTextConverter."			],			"category" : "Deprecated90"		},		"FileList" : {			"hash" : 3352064,			"definition" : "Model subclass: #FileList\r\tinstanceVariableNames: 'reference volumeList volumeListIndex list listIndex pattern brevityState dirSelectionBlock modalView ok contents optionalButtonSpecs grid fileEncoding sortBlock baseLabel configuredServices sourceTextModel'\r\tclassVariableNames: ''\r\tpackage: 'Tool-FileList'",			"comment" : [				"A FileList is a tool to deal with files.",				"",				"FileList open\t\t\t\t\"open FileList\""			],			"category" : "Tool-FileList"		},		"OmBlockFileStore" : {			"hash" : 4178688,			"definition" : "OmFileStore subclass: #OmBlockFileStore\r\tinstanceVariableNames: 'blocks'\r\tclassVariableNames: ''\r\tpackage: 'Ombu-Stores'",			"comment" : [				"I am a single-file store of entries. Each new entry is appended at the end. Entries are lazily read in blocks (represented by OmBlock) from file on demand."			],			"category" : "Ombu-Stores"		},		"CairoFontOptions" : {			"hash" : 3083520,			"definition" : "FFIExternalObject subclass: #CairoFontOptions\r\tuses: TCairoLibrary\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpoolDictionaries: 'AthensCairoDefinitions'\r\tpackage: 'Athens-Cairo-Text'",			"comment" : [				"i represent various font options exposed by cairo library"			],			"category" : "Athens-Cairo-Text"		},		"ZnEndianSensitiveUTFEncoder" : {			"hash" : 1209088,			"definition" : "ZnUTFEncoder subclass: #ZnEndianSensitiveUTFEncoder\r\tinstanceVariableNames: 'endianness'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-Character-Encoding-Core'",			"comment" : [				"I am ZnEndianSensitiveUTFEncoder.",				"I am a ZnCharacterEncoder.",				"I add support for UTF encodings that are sensitive to endianness.",				"The default is big endian."			],			"category" : "Zinc-Character-Encoding-Core"		},		"SpPaginatorSelectionMorph" : {			"hash" : 2566144,			"definition" : "Morph subclass: #SpPaginatorSelectionMorph\r\tinstanceVariableNames: 'lastMouseX lastX dragFinishedAction draggingAction minimumWidth'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Paginator'",			"comment" : [				"A morph to being used as a selection area in a `SpPaginatorMorph`.",				"It can be dragged and resized."			],			"category" : "Spec2-Adapters-Morphic-Paginator"		},		"IceRepositoryCommand" : {			"hash" : 6249728,			"definition" : "Object subclass: #IceRepositoryCommand\r\tinstanceVariableNames: 'repository success'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-Commands'",			"comment" : [				"I'm a generic command  for iceberg repositories."			],			"category" : "Iceberg-TipUI-Commands"		},		"RBCompositeRefactoryChange" : {			"hash" : 3183872,			"definition" : "RBRefactoryChange subclass: #RBCompositeRefactoryChange\r\tinstanceVariableNames: 'changes newName oldName'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Changes-Base'",			"comment" : [				"I am a composition of RBRefactoryChanges. I hold a list of changes. ",				"I implement many \"environment change\" operation like renameClass/removeClass/ rename instance variable that are",				"actually called on the name space by a refactoring operation and my responsibilty is to create a appropriate refactoring change",				"and save it in my list of changes."			],			"category" : "Refactoring-Changes-Base"		},		"SettingDeclaration class" : {			"hash" : 689152,			"definition" : "SettingDeclaration class\r\tinstanceVariableNames: ''",			"comment" : [				"A SettingDeclaration is an handler for a writtable setting value. ",				"Its main responsibility is allow real value changing and to hold descriptive data about the setting. When the real value is changed, all declared listeners are notified. The standard event mechanism is used for that purpose. See #value: method which is call in order to change a setting value. Whatever object can declare its interest in the real value changes by sending #whenChangedSend:to: to a setting. See notification protocol.",				"",				"For convenience, my olds values are registered in a list. This list is used by the SystemSettingBrowser in order to easily retrieve previous values.",				"",				"The type instance variable is a Symbol. It is used by the SystemSettingBrowser in order to build the input widget of a setting.",				"It can be the name of the class or the name of a superclass of the value. In that case, the input widget is built by #settingInputWidgetForNode: implemented by the class which name is the value of the type instance variable. As an example, the input widget for a Boolean is built by Boolean class>>settingInputWidgetForNode:.",				"",				"Type value is not limited to be a class name. It can also be whatever symbol. In that case, the selector corresponding to the message to send to the setting in order to build the inputWidget is built by SettingDeclaration>>localInputWidgetSelector. If the type instance variable is not set, then it is dynamically set to the class name of the value. ",				"",				"See SettingManager comment for more explanations.",				"",				"Instance Variables",				"\tdefault:\t\t<Object>",				"\tgetSelector:\t\t<Object>",				"\tghostHelp:\t\t<Object>",				"\tsetSelector:\t\t<Object>",				"\ttype:\t\t<Object>",				"",				"default",				"\t- xxxxx",				"",				"getSelector",				"\t- xxxxx",				"",				"ghostHelp",				"\t- xxxxx",				"",				"setSelector",				"\t- xxxxx",				"",				"type",				"\t- xxxxx"			],			"category" : "System-Settings-Core-Base"		},		"RSMarker" : {			"hash" : 5687552,			"definition" : "RSObject subclass: #RSMarker\r\tinstanceVariableNames: 'shape offset offsetRatio'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Border'",			"comment" : [				"I represent a marker for RSLine, RSPolygon and RSBezier"			],			"category" : "Roassal3-Shapes-Border"		},		"CharacterSet" : {			"hash" : 884224,			"definition" : "Collection subclass: #CharacterSet\r\tinstanceVariableNames: 'map'\r\tclassVariableNames: 'CrLf'\r\tpackage: 'Collections-Support-CharacterSets'",			"comment" : [				"A set of characters: ",				"",				"- Lookups for inclusion are very fast.",				"- CharacterSet will automatically convert itself to a WideCharacterSet if a character with value > 255 is added.",				"- Tests for inclusion can be done on any Character value (up to Character maxVal).",				"",				"See the package comments for a description of how each of the classes in Collections-Support-CharacterSets is used."			],			"category" : "Collections-Support-CharacterSets"		},		"AthensSimplePathBuilder" : {			"hash" : 3058432,			"definition" : "AthensPathBuilder subclass: #AthensSimplePathBuilder\r\tinstanceVariableNames: 'absolute open contourStartPt xMin yMin xMax yMax pathStart lastSegment'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Core-Paths'",			"comment" : [				"i building path containing from AthensPathSegment. ",				"the resulting path is backend neutral (while different backend may implement own builder which is more efficient)"			],			"category" : "Athens-Core-Paths"		},		"StDebugger class" : {			"hash" : 5526784,			"definition" : "StDebugger class\r\tuses: TDebugger classTrait\r\tinstanceVariableNames: ''",			"comment" : [				"The StDebugger is a presenter that provides Pharo debugging functionality by using a DebugSession.",				"",				"The debugging logic is in DebugSession and the corresponding debugging actions. ",				"",				"SpecDebugger only provides a graphical interface to access that functionality. ",				"To interact with the DebugSession, the debugger uses a StDebuggerActionModel, which has responsibility to perform actions to the execution context.",				"",				"",				"!!Structure of the Pharo debugger",				"",				"!!!Sub-presenters and layouts",				"The debugger is composed of default views and extension views.",				"Default views are the stack, the commands, the status line, the code pane and the inspector.",				"An extension view automatically appears if any debugging extension is present and if extensions are activated in the settings.",				"If not, extensions do not appear.",				"",				"Default and extension views are available in a vertical and an horizontal layout.",				"It is configureable in the settings under ==Tools >> Debugging >> Debugger layout==.",				"It is possible to fully customize the debugger layout, and therefore to add or remove any view.",				"The customized layout must then me selected in the aforementioned setting to be set as default.",				"To appear in that setting's list of possible values, the layout must be implemented in a method under the ==specs== protocol of the ==StDebugger== class side.",				"",				"\"\"The stack.\"\"",				"It shows the call stack of the current interrupted context.",				"Each element in the stack is a context representing a message send.",				"",				"The context menu (through right click) provides different interactions with the selected stack element: inspection, exploration, exportation, etc.",				"",				"By default, only a small part of the stack is shown.",				"More of the stack is observable by either clicking on the bottom context (the last in the stack) or through the context menu.",				"",				"\"\"Commands.\"\"",				"Commands are actions applicable to the current context",				"After each debugging action (''e.g.'', a step), the list of commands is being updated.",				"New commands may appear or disappear.",				"It depends if they are applicable or not to the current context and debugging session.",				"For instance, when a ==doesNotUnderstand== exception is raised (''i.e.'', a method does not exist), the command ''createMethod'' will appear.",				"In that case, it gives users the possibility to create the missing method and continue the execution.",				"",				"\"\"The status line.\"\"",				"This view provides information about the current context.",				"Non-critical information, such as the current instruction being stepped, are displayed in gray.",				"Critical information ,such as halts or breakpoints or DNU exceptions, are displayed in red.",				"",				"\"\"The code.\"\"",				"The code pane shows the source code of the interrupted context's method.",				"The source code is annotated with informations about the position of the interrupted execution.",				"This position corresponds to the next execution that will be executed if a step action is performed.",				"It is coloured in blue if that instruction is selected in the source code, or in orange and underlined if the selection is empty.",				"",				"A context menu (through right click) provides inspection, exploration, and stepping actions applicable to the context.",				"Such actions include, ''e.g.'', browse implementors of a selected message or skip execution of selected parts of the code.",				"",				"\"\"The inspector.\"\"",				"It provides views on the current context.",				"It contains tabs with different inspections or views on the current context or on the system.",				"",				"The raw inspection shows three items: ''Receiver'', ''Temps'' and ''Context''.",				"The receiver item shows information about the receiver of the message, or the object executing the method from the context.",				"The temps item shows the temporary variables of the current context.",				"Finally, the context item shows lower-level details, such as the interrupted context, the debug session or the debugger itself.",				"Double-clicking on an item will spawn a new view in the same inspector, with an inspection on the selected item.",				"",				"The breakpoints inspection shows all breakpoints installed for the current receiver.",				"Those breakpoints are either installed on the receiver's class (''e.g.'', halts) or on that specific receiver (''i.e.'', object-centric breakpoints or halts.)",				"Ticking or unticking a breakpoint in that list will activate or deactivate that breakpoint.",				"",				"The meta inspection shows methods of the receiver's class hierarchy.",				"Methods can be modified and saved in directly in that pane."			],			"category" : "NewTools-Debugger-View"		},		"FTTreeDataSource class" : {			"hash" : 741888,			"definition" : "FTTreeDataSource class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a data source to diplay tree in a FastTable.",				"",				"Description",				"-------------------------------------------------",				"",				"I receive  a collection of objects and a block. ",				"The collection of objects will be the base of the tree.",				"",				"An  alternative is to pass a FTRootItem to myself.",				"",				"The block is use to calculate the children of the nodes. (More detail at the bottom)",				"Since the search in Tree is can be complex you can customize it via the #searchStrateagy:. (See Public APIʦor more info.) ",				"",				"I use FTTreeItem to manage my elements and I am use by a FTFastTable.",				"",				"Public API and Key Messages",				"-------------------------------------------------",				"",				"- #roots: aCollection children: aBlock ",				"        A constructor to build the FTTreeDataSource  ",				"\t",				"- #maxDepth ",				"        Set the maxDepth to diplay on the Tree.  Roots items are at depth 0.",				"",				"- #searchStrategy: ",				"         Can take in parameter #default, #rootsOnly, #allItems.",				"                #default is selected by default, it will search/filter the tree for all visible rows.       ",				"               #rootsOnly will search/filter only the first level of the tree",				"               #allItems will search/filter all the Tree and open the needed items. BEʃAREFUL ! YOUʓHOULDʎOTʕSEʔHISʉFʊYOURʔREEʃANʈAVEʁNʉNFINITYʏFʃHILDREN! ",				"",				"Example",				"-------------------------------------------------",				"",				"\t| ds |",				"\t",				"\tds := FTTreeDataSource roots: (ProtoObject allSubclasses sort: [ :a :b | a asString < b asString ]) children: [ :item | item subclasses sort: [ :a :b | a asString < b asString ] ].",				"\t",				"\tds maxDepth: 4;",				"\tsearchStrategy: #allItems.",				"\t",				"\tFTTableMorph new",				"\t\textent: 200 @ 400;",				"\t\tdataSource: ds;",				"\t\texplicitFunction;",				"\t\topenInWindow",				"\t",				"\t",				"Internal Representation and Key Implementation Points.",				"-------------------------------------------------",				"",				"    Instance Variables",				"\tchildrenBlock:\t\tI am a block use to generate the children of the Items. I can have 3 arguments: the current Item,   the collection of roots items and the depth of the item.",				"\titems:\t\tI am a collection of FTTreeItem that old the items of the first level of the tree.",				"\tmaxDepth:\t\tI am an Integer that represent the max depth to dispaly.  If I am nil I display everything",				"\tsearchStrategy: \t \tI am a symbole to know what kind of search/filter strategy I need to apply.",				"\t\t\t",				"    Class Variables",				"\tSearchStrategies \t\tI am a Dictionary that map a Symbole (see searchStrategy) with a class that can search through a dataSource.  "			],			"category" : "Morphic-Widgets-FastTable-Tree"		},		"DiffPatch" : {			"hash" : 5358336,			"definition" : "Object subclass: #DiffPatch\r\tinstanceVariableNames: 'elements'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Code-Diff'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\telements:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Code-Diff"		},		"RSUMLPackageBuilder" : {			"hash" : 5785344,			"definition" : "RSUMLAbstractBuilder subclass: #RSUMLPackageBuilder\r\tinstanceVariableNames: 'packages'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-UML-Builder'",			"comment" : [				"I am a builder to create UML package diagrams in Roassal3, see examples"			],			"category" : "Roassal3-UML-Builder"		},		"SocketStream" : {			"hash" : 1366272,			"definition" : "Object subclass: #SocketStream\r\tinstanceVariableNames: 'recentlyRead socket inBuffer outBuffer inNextToWrite outNextToWrite lastRead timeout autoFlush bufferSize binary shouldSignal'\r\tclassVariableNames: ''\r\tpackage: 'Network-Kernel-Base'",			"comment" : [				"SocketStream is a wrapper for class Socket making it easy to write networking code by giving the programmer a stream-like protocol. A Socket is a two way communication link with two logically separate channels - input and output. The Socket class is the lowest level in Pharo for network communication and using it directly can be difficult and bug prone.",				"",				"A SocketStream can be in binary or ascii mode, ascii is the default which means you are transmitting and receiving Strings. Most Internet protocols are in clear text ascii, like for example HTTP. Another setting is what timeout you want to use - default is the standardTimeout from Socket. More settings can be found in the method category 'configuration'.",				"",				"Simplest example of connecting, sending/receiving and closing:",				"",				"| stream result |",				"stream := SocketStream openConnectionToHostNamed: 'www.pharo-project.org' port: 80.",				"[[stream nextPutAll: 'GET / HTTP/1.0'; crlf; crlf; flush.",				"result := stream upToEnd. \"Give us all data until the socket is closed.\"",				"Transcript show: result; cr.]",				"\tensure: [stream close]]",				"\t\ton: ConnectionTimedOut",				"\t\tdo: [:ex | Transcript show: ex asString;cr. ex resume]",				"",				"There are two important things to note above:",				"\t- The methods in category \"stream in\" can signal two exceptions (unless turned off with #shouldSignal:):",				"\t\tConnectionClosed and ConnectionTimedOut",				"\t- We close the stream using #ensure:, that is to make sure it isn't left opened.",				"\t- We use #on:do: to catch any signal. In this case we do not need to catch ConnectionClosed since #upToEnd does that for us intrinsically.",				"",				"----------------",				"SocketStream (below called SS) is a reimplementation of 'Old'-SocketStream (below called OSS) - the class that originates from the original Comanche implementation but now is included in standard Squeak. SS has the same protocol as OSS and is meant to replace it. SS is faster, more flexible, is better documented and adds a few features:",				"",				"1. #shouldSignal:, which decides if SS should signal low level Socket exceptions (true) or if it should swallow them like original OSS did. Default is true. The only reason I added this is for backwards compatibility - not signalling causes problems - see bug 4 below.",				"",				"2. #nextAllInBuffer, #nextInBuffer:, #skip:, #receiveData:, #nextPutAllFlush: and #recentlyRead are new additions to the public protocol.",				"",				"",				"It also fixes various bugs:",				"",				"1. #isDataAvailable could theoretically answer false, when there actually is some in the buffer in OSS. If #receiveDataIfAvailable reads the last byte then the following \"socket dataAvailable\" would answer false. So the last byte would be sitting in the inStream missed.",				"",				"2. #upToAll: in OSS has several problems, for example - #positionOfSubCollection:ifAbsent: which was introduced answers one position too low. This was compensated in upToAll:, but only in the pushBack: call, not the actual result being returned which was cut short 1 byte. Amusingly this makes KomHttpServer not use \"Keep-Alive\" since the last $e in 'Alive' was cut short. :)",				"",				"3. SS doesn't inherit from PositionableStream since that just breaks various inherited messages, like for example #skip:. OSS should IMHO be changed to inherit from Object - or of course, replaced in full with SS. :)",				"",				"4. Since SocketStream by default signals closes and timeouts the SocketStreamTest now passes. The reason for SocketStream to fail is that while it does timeout on a low level (#SocketStream>>receiveData doesn't hang forever) - the callers of #receiveData sometimes loop - like in #next:, and thus eliminates the timeout. SS warns about some methods (in their method comments) not honouring timeouts if shouldSignal is false, I really don't know what they should do in that case:",				"\t#next:, #upTo:, #upToAll: and #upToEnd (and #receiveData:)",				"",				"",				"The primary reason for the SS implementation is optimal performance. The main differences in implementation with the old OSS are:",				"",				"1. SS uses two buffers directly (inBuffer and outBuffer) with pointers marking start and stop within the buffer. OSS instead uses two regular streams, a ReadStream and a WriteStream. Using internal buffers makes it possible to avoid copying and reallocation in various ways, it also makes SS be able to have specialized growing/buffer moving behaviour.",				"",				"2. #upTo:, #upToAll: and #peekForAll: uses selectged String messages that in turn uses fast primitives for searching. OSS used other messages that fell back on byte per byte reading.",				"",				"3. #receiveData in OSS creates a temporary buffer stream for each call! During a long read operation, like say #upToAll: (which for example is used when uploading files using HTTP POST forms), this is devastating - especially since the default size is only 2000 bytes - and leads to a very high number of low level read operations on the Socket, typically 100 times more calls than with OSS. The buffer in OSS is held in an instvar (not recreated for each call), is larger from the start and above all - grows dynamically by doubling. OSS can also avoid a grow/reallocation by doing a \"move down\" if data has been read from the SS as it comes in and through that making room in the lower part of the inBuffer. The net result is that upToAll: for large files is about 10 times faster.",				"",				"4. The implementation of upTo: and upToAll: tries to avoid doing unnecessary find operations in the buffer and is greedy by default, which means it favors reading more data - if available - before searching for the stop sequence. If we had #findString:startingAt:stoppingAt: this wouldn't have to be greedy and we wouldn't be needlessly scanning dead buffer area. VM hackers? Also, while you are at it - make it work for ByteArrays too. :)",				"",				"",				"SS can not be run unbuffered, since that seems unneeded. The option to autoFlush is still available, with it set to true SocketStream (just like OSS) will flush on its own on each nextPut:/nextPutAll:, otherwise flushing it will have to be done manually but is done on close.",				"",				"The first performance tests shows that, as noted above, receiving large amounts of data using #upToAll: is greatly improved - factor of 10. Serving HTTP with small payloads seemed at first not be faster at all - but this is due to the high overhead of Socket connect/close and other things. Increasing payloads show a difference and especially with keep alive on - where the new SS roughly doubles the throughput!"			],			"category" : "Network-Kernel-Base"		},		"FT2Handle" : {			"hash" : 1897728,			"definition" : "FFIExternalObject subclass: #FT2Handle\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpoolDictionaries: 'FT2Constants'\r\tpackage: 'FreeType-Base'",			"comment" : [				"handle holds a (typically 32-bit) pointer to an externally managed object."			],			"category" : "FreeType-Base"		},		"EFFormatter" : {			"hash" : 3104512,			"definition" : "RBProgramNodeVisitor subclass: #EFFormatter\r\tinstanceVariableNames: 'codeStream indent originalSource lineStart context isInCascadeNode lookAheadCode'\r\tclassVariableNames: 'DefaultPrettyPrintContext FormatAsYouReadPolicy'\r\tpackage: 'EnlumineurFormatter-Core'",			"comment" : [				"Enlumineur is a replacement of BlueInk pretty printer (now packaged in pharo-contributions/configurableFormatter).",				"",				"It was developed by Hugo Lasnier during 6 months internship within RMOD and supervised by S. Ducasse and G. Polito during 2019.",				"The code was revisited and cleaned but there are probably more glitches left. ",				"",				"Enlumineur enhancements compared to BlueInk are:",				"",				"- systematic test coverage with more than 270 tests",				"- full revisiting of settings with description and examples",				"- no way to break the code by entering a non space character to indent code",				"- support for {.....} long list",				"- cleaning coupled settings",				"- support for to:do: block like statement (multiline arguments)",				"- removal of \"traditional parentheses\" whatever it meant.",				"- new line and more indentations after the opening bracket",				"- A dedicated UI was in preparation but should be redone before introduced in Pharo.",				" See package Enlumineur-UI (https://github.com/Ducasse/enlumineur)",				"",				"Enlumineur should be improved to be able to reformat the full code of Pharo.",				"The tests are a first step to make sure that we understand what is impacted by a change.",				"",				"Implementation remarks",				"\t  - willBeMultiline: too costly because it formats the code to see if it fits.",				"\tWe should have other heuristics.",				"\t- formatBlock: should be improved and speed up. ",				"\tformatBlock2: is a first alternative but it broke some tests that should be evaluated. ",				"\t- Some Node extensions should be pushed to the packages their belong to. "			],			"category" : "EnlumineurFormatter-Core"		},		"RSChartPopupDecoration" : {			"hash" : 5804800,			"definition" : "RSPopup subclass: #RSChartPopupDecoration\r\tinstanceVariableNames: 'chart chartPopupBuilder markersPopupBuilder'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Popup'",			"comment" : [				"Specific popup, used by RSPopupDecoration"			],			"category" : "Roassal3-Chart-Popup"		},		"TFCallback" : {			"hash" : 2019840,			"definition" : "FFIExternalReference subclass: #TFCallback\r\tinstanceVariableNames: 'callbackData parameterHandlers returnTypeHandler runner parameterTypes returnType frontendCallback runStrategy success'\r\tclassVariableNames: ''\r\tpackage: 'ThreadedFFI-Callbacks'",			"comment" : [				"I am the Backend implementation of callbacks for UFFI. I use TFFI as a backend"			],			"category" : "ThreadedFFI-Callbacks"		},		"BracketSliderMorph" : {			"hash" : 1932032,			"definition" : "PluggableSliderMorph subclass: #BracketSliderMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Scrolling'",			"comment" : [				"Abstract superclass for morphs that are used to select a component (R, G, B or A) of a colour."			],			"category" : "Morphic-Widgets-Scrolling"		},		"MenuMorph class" : {			"hash" : 1907200,			"definition" : "MenuMorph class\r\tinstanceVariableNames: ''",			"comment" : [				"Instance variables:",				"\tdefaultTarget \t<Object>\t\t\t\tThe default target for creating menu items",				"\tselectedItem\t\t<MenuItemMorph> \tThe currently selected item in the receiver",				"\tstayUp \t\t\t<Boolean>\t\t\tTrue if the receiver should stay up after clicks",				"\tpopUpOwner \t<MenuItemMorph>\tThe menu item that automatically invoked the receiver, if any.",				"\tactiveSubMenu \t<MenuMorph>\t\tThe currently active submenu."			],			"category" : "Morphic-Base-Menus"		},		"MicInlineElement" : {			"hash" : 6550784,			"definition" : "MicElement subclass: #MicInlineElement\r\tinstanceVariableNames: 'start end children substring'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-ModelInline'",			"comment" : [				"I am an inline block generated by inline splitter, to parse inline text.",				"",				"I am characterized by:",				"- start & end: locations of my opener & closer delimiters in initial string",				"- substring: concerned text (without delimiters so)",				"- kind: my type, symbol which must be the same than my relative delimiter type (#basic for normal text)",				"- children: array in case of nested inline blocks",				""			],			"category" : "Microdown-ModelInline"		},		"SpImagePresenter" : {			"hash" : 1564672,			"definition" : "SpAbstractWidgetPresenter << #SpImagePresenter\r\tslots: {\r\t\t\t #image => ObservableSlot .\r\t\t\t #action => ObservableSlot .\r\t\t\t #autoScale => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Morphic'",			"comment" : [				"A presenter to display  images.",				"Images need to be instances of `Form`.  "			],			"category" : "Spec2-Morphic-Widgets"		},		"MCCacheRepository class" : {			"hash" : 288768,			"definition" : "MCCacheRepository class\r\tinstanceVariableNames: 'default'",			"comment" : [				"I am a special monticello directory-based repository that is used for the global monticello cache.",				"",				"Most other repositories will first query the default cache repository for existing files before handling the request by themselves. For instance an http repository will first check if the file is in the caceh before doing a \"slow\" download."			],			"category" : "Monticello-Repositories"		},		"RGTraitStrategy" : {			"hash" : 5246464,			"definition" : "RGTraitDescriptionStrategy subclass: #RGTraitStrategy\r\tinstanceVariableNames: 'classTrait comment package'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tclassTrait:\t\t<Object>",				"\tcomment:\t\t<Object>",				"\tpackage:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"RubSegmentMorph" : {			"hash" : 599808,			"definition" : "Morph subclass: #RubSegmentMorph\r\tinstanceVariableNames: 'vertices filledForm smoothCurve curveState borderForm borderColor borderWidth'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Core'",			"comment" : [				"3. The CLOSED and SEGMENTED variant looks like polygon. This is actually what you get when you do",				"\tPolygonMorph new openInWorld",				"You get a triangle. See below how to manipulate these objects...",				"",				"4. The CLOSED and SMOOTHED variant looks like blob (???)",				""			],			"category" : "Rubric-Editing-Core"		},		"ReToDoWithIncrementRule" : {			"hash" : 3953664,			"definition" : "ReNodeMatchRule subclass: #ReToDoWithIncrementRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for users of to:do: that also increment or decrement a counter.",				"In Pharo you do not increment or decrement counter but should use the message to:do:by:.",				"",				"1 to: 100 by: 3 do: [ :each | ... ]"			],			"category" : "GeneralRules-Migrated"		},		"SpListPresenter" : {			"hash" : 2210560,			"definition" : "SpAbstractListPresenter << #SpListPresenter\r\ttraits: {SpTSearchable + SpTDecoratedColumn};\r\tslots: {\r\t\t\t #allowToSelect => ObservableSlot .\r\t\t\t #autoDeselect => ObservableSlot .\r\t\t\t #headerTitle => ObservableSlot .\r\t\t\t #display => ObservableSlot .\r\t\t\t #icon => ObservableSlot };\r\ttag: 'Widgets-Table';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A `SpListPresenter` is presenter which handles a basic list displaying information about a domain list. ",				"For example a list presenter will display the name of a list of contacts. It refines the API of `SpAbstractListPresenter` that is shared with `SpComponentListPresenter` (which is a list of presenters) and `SpTablePresenter` (which is a list with multiple columns in a sense). ",				"",				"### Design point",				"There are two design points worth notice:",				"",				"A list presenter has a strategy that encapsulates specific API and action related to selection (how to select, how many items can be selected, currently selected items...). Such strategy is accessed via the `selection` message. It returns an instance of subclasses of `SpAbstractSelectionMode`: `SpMultipleSelectionMode` and `SpSingleSelectionMode`. ",				"It means many fonctionality related to the selection (selected items, multiple items, ....) are defined in the API of the mode and not of the main class.",				" ",				"A list presenter does not offer the possibility to add one item in isolation instead you should use the `items:` setter to set the full list domain object. The responsibility to manage the items displayed by a list presenter is not the one of that list presenter but its users e.g, the presenter you will write and that instantiates and uses the list presenter. This is normal since there is no way that the list presenter could track changes into the domain object representing the list items."			],			"category" : "Spec2-Core-Widgets-Table"		},		"OSWindowRenderer" : {			"hash" : 4058624,			"definition" : "Object subclass: #OSWindowRenderer\r\tinstanceVariableNames: 'lastExposeTime backendWindow'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Renderer'",			"comment" : [				"My instances are used for updating the OSWindow contents by rendering on it.",				"There is no way to obtain a valid instance of window renderer other than asking a valid instance of OSWindow for window renderer instance.",				"See newFormRenderer: / newOpenGLRenderer factory methods."			],			"category" : "OSWindow-Core-Renderer"		},		"IRMethod" : {			"hash" : 1242368,			"definition" : "Object subclass: #IRMethod\r\tinstanceVariableNames: 'sourceNode startSequence numArgs properties tempMap pragmas additionalLiterals compiledMethod compilationContext irPrimitive'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Core-IR-Nodes'",			"comment" : [				"I am a method in the IR (intermediate representation) language consisting of IRInstructions grouped by IRSequence (basic block).  The IRSequences form a control graph (therefore I only have to hold onto the starting sequence).  #compiledMethod will convert me to a CompiledMethod.  #methodNode will convert me back to a parse tree."			],			"category" : "OpalCompiler-Core-IR-Nodes"		},		"DTTestsProfilerVisitor" : {			"hash" : 2971904,			"definition" : "SUnitVisitor subclass: #DTTestsProfilerVisitor\r\tinstanceVariableNames: 'profilingData'\r\tclassVariableNames: ''\r\tpackage: 'DrTests-TestsProfiling'",			"comment" : [				"I collect the time for every executed test.",				"I create a DTTestCaseProfilingData for each test and store all of them in a collection."			],			"category" : "DrTests-TestsProfiling"		},		"RBSlotInitializationNode" : {			"hash" : 4674304,			"definition" : "RBNode subclass: #RBSlotInitializationNode\r\tinstanceVariableNames: 'selectorParts argumentParts'\r\tclassVariableNames: ''\r\tpackage: 'ClassParser-Model'",			"comment" : [				"I represent the Slot initialization part of a slot definition. ",				"I'm a transformation from the AST.",				"",				"For example for this expression 'first' => (LazyClassVariable default: 5), I represent ",				"the default: 5 part. ",				"",				"Slot initialization node works for the three slot forms below. ",				"To make sure that all slot definition are polymorphic, all slots have a initializationNode (some acting as null node).",				"",				"Object subclass: #MyClass",				"\t\tslots: {",				"\t\t'first' => LazyClassVariable default: 5. ",				"\t\t'second' => InstanceVariableSlot.",				"\t\t'instVar3'",				"\t\t}",				"\t\tclassVariableNames: ''",				"\t\tpackage: #MyPackage'",				"",				"'first' => LazyClassVariable default: x + 3",				"",				"In this case the argument parts is a RBMessageNode.",				"",				"",				"\t\t",				"\t"			],			"category" : "ClassParser-Model"		},		"Behavior" : {			"hash" : 867328,			"definition" : "Object subclass: #Behavior\r\tinstanceVariableNames: 'superclass methodDict format layout'\r\tclassVariableNames: 'ClassProperties ObsoleteSubclasses'\r\tpackage: 'Kernel-Classes'",			"comment" : [				"My instances describe the behavior of other objects. I provide the minimum state necessary for compiling methods, and creating and running instances. Most objects are created as instances of the more fully supported subclass, Class, but I am a good starting point for providing instance-specific behavior (as in Metaclass)."			],			"category" : "Kernel-Classes"		},		"FLMaterializer" : {			"hash" : 547072,			"definition" : "Object subclass: #FLMaterializer\r\tinstanceVariableNames: 'materializationFactory signature version migrations globalEnvironment'\r\tclassVariableNames: ''\r\tpackage: 'Fuel-Core-Base'",			"comment" : [				"I am a binary object materializer. ",				"",				"See an example of use in FLSerializer's documentation.",				""			],			"category" : "Fuel-Core-Base"		},		"KMShiftModifier" : {			"hash" : 782080,			"definition" : "KMModifier subclass: #KMShiftModifier\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Keymapping-KeyCombinations'",			"comment" : [				"I represent the Shift key modifier. Look at my superclass for a more detailed explanaition."			],			"category" : "Keymapping-KeyCombinations"		},		"RSYLabelDecoration" : {			"hash" : 5816064,			"definition" : "RSAbstractLabelDecoration subclass: #RSYLabelDecoration\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Decoration'",			"comment" : [				"<keyClass>",				"`RSYLabelDecoration` adds a title to the Y-axis in a chart.",				"",				"*Responsibility*: Add a title and allows for its style to be defined (e.g., color, size, rotation, offset)",				"",				"*Collaborators*: must be added to an `RSChart`",				"",				"*Example*:",				"```Smalltalk",				"x := -3.14 to: 3.14 by: 0.1.",				"y := x sin.",				"",				"c := RSChart new.",				"c addPlot: (RSLinePlot new x: x y: y).",				"c addDecoration: (RSChartTitleDecoration new title: 'hello'; fontSize: 20).",				"c addDecoration: (RSXLabelDecoration new title: 'My X Axis'; fontSize: 12).",				"c addDecoration: (RSYLabelDecoration new title: 'My Y Axis'; fontSize: 15; horizontal).",				"c open",				"```"			],			"category" : "Roassal3-Chart-Decoration"		},		"RSContextInteraction" : {			"hash" : 5793280,			"definition" : "RSAbstractContextInteraction subclass: #RSContextInteraction\r\tinstanceVariableNames: 'interactions'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Inspector-Contexts'",			"comment" : [				"I put a default interaction for each shape in the canvas"			],			"category" : "Roassal3-Inspector-Contexts"		},		"MCWorkingCopy class" : {			"hash" : 263424,			"definition" : "MCWorkingCopy class\r\tinstanceVariableNames: ''",			"comment" : [				"MCWorkingCopy represents one version of a package in memory. It provides support for ancestry access, required packages and the repositories in which the package is managed.",				"",				"Instance Variables:",				"\tversionInfo\t<MCAncestry>",				"\tancestry\t<MCWorkingAncestry>",				"\tcounter\t<Number>",				"\trepositoryGroup\t<MCRepositoryGroup>",				"\trequiredPackages\t<Collection>"			],			"category" : "Monticello-Versioning"		},		"MouseOverHandler" : {			"hash" : 1662208,			"definition" : "Object subclass: #MouseOverHandler\r\tinstanceVariableNames: 'mouseOverMorphs enteredMorphs overMorphs leftMorphs'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Core-Events'",			"comment" : [				"Mouse over handler in a hand morph"			],			"category" : "Morphic-Core-Events"		},		"TFUFFIFailingCallbackWithDefault" : {			"hash" : 2042624,			"definition" : "TFUFFIAbstractCallback subclass: #TFUFFIFailingCallbackWithDefault\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'ThreadedFFI-UFFI-Tests'",			"comment" : [				"I am a failing callback with default value for test usage only"			],			"category" : "ThreadedFFI-UFFI-Tests"		},		"UUIDGenerator class" : {			"hash" : 1159424,			"definition" : "UUIDGenerator class\r\tinstanceVariableNames: ''",			"comment" : [				"I am UUIDGenerator, I generate UUIDs.",				"",				"An RFC4122 Universally Unique Identifier (UUID) is an opaque 128-bit number that can be used for identification purposes. Concretely, a UUID is a 16 element byte array.",				"",				"The intent of UUIDs is to enable distributed systems to uniquely identify information without significant central coordination. In this context the word unique should be taken to mean \"practically unique\" rather than \"guaranteed unique\".",				" ",				"I generate UUIDs similar, in spirit, to those defined in RFC4122, though I use version 0 to indicate that I follow none of the defined versions. This does not matter much, if at all, in practice.",				"",				"I try to conform to the following aspects:",				" - each 'node' (machine, image, instance) should generate unique UUIDs",				" - even when generating UUIDs at a very fast rate, they should remain unique",				" - be fast and efficient",				"",				"To achieve this goal, I",				"- take several aspects into account to generate a unique node ID",				"- combine a clock, a counter and some random bits",				"- hold a state, protected for multi user access",				"",				"I can generate about 500K UUIDs per second.",				"",				"Implementation:",				"",				"Although a UUID should be seen as totally opaque, here is the concrete way I generate one:",				"- the first 8 bytes are the microsecond clock value with the smallest quantity first; this means that the later of these 8 bytes will be identical when generated with small(er) timespans; within the same clock resolution interval, the full first 8 bytes will be identical",				"- the next 2 bytes represent a counter with safe overflow, held as protected state inside me; after 2*16 this value will repeat; the counter initalizes with a random value",				"- the next 2 bytes are simply random, based on the system PRNG, Random",				"- the final 4 bytes represent the node ID; the node ID is unique per instance of me, across OS environments where the image might run; the node ID is the MD5 hash of a string that is the concatenation of several elements (see #computeNodeIdentifier)",				" ",				"Some bits are set to some predefined value, to indicate the variant and version (see #setVariantAndVersion:)",				"",				"Usage:",				"",				"  UUIDGenerator next.",				"  UUIDGenerator current next.",				"  UUIDGenerator new next.",				"",				"Sharing an instance is more efficient and correct.",				"Instances should be reset whenever the image comes up.",				"",				"See also:",				"",				"  http://en.wikipedia.org/wiki/UUID",				"  https://tools.ietf.org/html/rfc4122"			],			"category" : "Network-UUID-Base"		},		"FTTableContainerMorph" : {			"hash" : 573184,			"definition" : "Morph subclass: #FTTableContainerMorph\r\tinstanceVariableNames: 'needsRefreshExposedRows headerRow exposedRows startColumnIndex'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Base'",			"comment" : [				"I am a Morph that contain visible rows in a FTTableMorph. ",				"",				"Description ",				"------------------",				"",				"I am the main Morph of the FastTable that is responsible of displaying all the rows of a Table. ",				"My owner need to be a FTTableMorph and I will use his dataSource to display the needed informations.",				"",				"Public API and Key Messages",				"-----------------",				"\t\t",				"- #updateAllRows ",				"",				"- #updateExposedRows",				"",				"- #ipdateHeaderRow",				" ",				"Internal Representation and Key Implementation Points.",				"----------------",				"",				"    Instance Variables",				"\texposedRows:\t\tA dictionary of index/row with all the exposed rows.",				"\theaderRow:\t\t\tWhen not nil contains the header row of the container.",				"\tneedsRefreshExposedRows:\t\tA boolean that is true if the container need a refresh.",				"\tstartColumnIndex: An integer - first column to start drawing when scrolling horizontally, nil/0 - old behaviour (no scrolling)",				"",				"The method #drawOn: is responsible of my rendering."			],			"category" : "Morphic-Widgets-FastTable-Base"		},		"PragmaMenuBuilder" : {			"hash" : 1664512,			"definition" : "MenuRegistration subclass: #PragmaMenuBuilder\r\tinstanceVariableNames: 'pragmaKeywords model currentRoot'\r\tclassVariableNames: ''\r\tpackage: 'MenuRegistration-Core'",			"comment" : [				"For the impatients, see MenuRegistrationExample class methods and try it with:",				"---------------",				"((PragmaMenuBuilder pragmaKeyword: MenuRegistrationExample pragmaKeyword model: nil) menuEntitled: 'World') popUpInWorld",				"---------------",				"",				"PragmaMenuBuilder is for the dynamic building of menus based on pragmas. A PragmaMenuBuilder instance is the root of a tree of MenuRegistration instances.",				"The basic principle is that each menu sub-tree is specified by a method which is tagged by a specific pragma. Such methods are dynamically retrieved and then evaluated with a MenuRegistration passed as argument (see #retrieveRegistrations). The result is a tree of MenuRegistration which roots are stored in my itemList inst. var.",				"After the tree of MenuRegistration has been built, it is re-organized (re-organization is based on the parent declaration) and is re-ordered (based on the MenuRegistration order indications). Then the tree of MenuRegistration can serve as input for the building of a PluggableMenuSpec. The PluggableMenuSpec is itself used in order to build a MenuMorph with the help of the current ToolBuilder. (see MenuRegistration comment for more informations about how to specify menu entries).",				"",				"The tree of MenuRegistration is built by #buildTree in three steps (1) the  collecting of the MenuRegistration instances (2) the re-organization and (3) the sorting:",				"",				"1) The first step consists in evaluating all pragma methods by passing a builder (a PragmaMenuBuilder instance) as argument. Each pragma method invocation build a sub-tree which root is added to the builder itemList collection. (see #collectRegistrations).",				"As an example, this first step could produce a tree as follow (stored in a PragmaMenuBuilder itemList inst var) :",				"\t\t\t\t#Tools\t\t\t\t\t\t#'Other tool', parentName: #Tools",				"\t\t\t\t/\t\\\t\t\t\t\t\t\t\t\t\t|",				"\t(#Worspace)\t(#browser)\t\t\t\t\t\t(#'Test runner' )",				"",				"2) The second step consists is re-organizing the tree. A MenuRegistration can be declared with a particular parent name (by sending #parent: to it with a symbol as argument). If the parentName of a MenuRegistration X is the name of another MenuRegistration Z, then it means that X must be placed as a child of Z. This is the goal of this re-arrangement step which moves badly placed nodes at their good place. (see #arrangeRegistrations).",				"With previous example, the second step produces:",				"\t\t\t\t\t\t#Tools\t\t\t\t\t\t\t\t",				"\t\t\t\t/\t\t|\t\t\t\\",				"\t(#Worspace)\t(#browser)\t\t#'Other tool' , parentName: #Tools",				"\t\t\t\t\t\t\t\t\t\t\t|",				"\t\t\t\t\t\t\t\t\t(#'Test runner')",				"",				"2) The third step consists in sorting the tree according to the order inst. var. value of each MenuRegistration. This is done in two passes: the first pass tries to assign as much order inst. var. as possible (If an item is given with a specific order, then, previous and following items order can be automatically computed - see #assignOrderWithBlock: and #orderAssignBlock). The second pass consists in a smple sort according to a sort block given by #itemSortBlock.",				"",				"",				"Instance Variables",				"\tmodel:\t\t<Object>",				"\tpragmaCollector:\t\t<PragmaCollection>",				"\tpragmaKeywords:\t\t<Collection of Symbol>",				"\tcurrentRoot: \t\t\t<MenuRegistration>",				"",				"model",				"\t- Serves as the default target for the menu. Note that a default target can also be declared at menu item level",				"",				"pragmaKeywords",				"\t- The list of pragma keywords used for the declaring of my menu items",				"",				"pragmaCollector",				"\t- The PragmaCollector associated with this builder. When a method declared with the same pragma as my pragmaKeyword is updated/added/removed my menu items are recomputed so that the resulting menu is always in sync with currently declared items.",				"\t",				"currentRoot",				"\t- the current MenuRegistration in which new items are to be added",				""			],			"category" : "MenuRegistration-Core"		},		"FuzzyLabelMorph" : {			"hash" : 606976,			"definition" : "LabelMorph subclass: #FuzzyLabelMorph\r\tinstanceVariableNames: 'offset alpha'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Basic'",			"comment" : [				"A label that underdraws to the top-left, top-right, bottom-right and bottom left by a specifed offset in a contrasting colour to the receiver's with a specified alpha value."			],			"category" : "Morphic-Widgets-Basic"		},		"ShiftClassBuilder" : {			"hash" : 817920,			"definition" : "Object subclass: #ShiftClassBuilder\r\tinstanceVariableNames: 'buildEnvironment superclassName name layoutDefinition comment commentStamp superclass category newMetaclass newClass oldClass oldMetaclass builderEnhancer metaclassClass extensibleProperties changeComparers changes metaSuperclass superclassResolver inRemake'\r\tclassVariableNames: 'BuilderEnhancer'\r\tpackage: 'Shift-ClassBuilder'",			"comment" : [				"I know how to create classes in the system.",				"The classes are nor installed or modifies other objects. That is part of the job of the ShiftClassInstaller.",				"",				"I can be extended by using a different builder enhancer. ",				"See ShDefaultBuilderEnhancer for a default implementation. ",				"",				"I can be used directly to create anonymous classes, but it is better if you use the anonymous class installer.",				"",				"I also can compare the old class with the configured new class to calculate the required changes."			],			"category" : "Shift-ClassBuilder"		},		"SpDemoFormPresenter" : {			"hash" : 2096384,			"definition" : "SpPresenterWithModel subclass: #SpDemoFormPresenter\r\tinstanceVariableNames: 'form resultPane table'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Morphic-Examples-Demo-Forms'",			"comment" : [				"This demo shows, how to create a simple form with basic elements and how to connect this form to a model. ",				"",				"In this case, the model is represented by instances of the class `SpecDemoFormModel`, instance created in the `#initialize` method. It is a simple structure-like class with some default values. The model is not held directly but using a value holder named announcingObject (see `SpPresenterWithModel>>#model:`). The encapsulating value holder would not be needed if our model would be a subclass of \"Model\" (instances of Model provide an announcer by default).",				"",				"This component has two main subcomponents. The form and a table that shows the current state of the model.",				"",				"The form is a standalone Spec presenter, an instance of `SpDemoStandaloneFormPresenter`. It works with two instances of the model, \"workingModel\" which holds a working copy of the model and a model shared with its parent. When the form is restored, the working copy of the model is thrown away and replaced with a new copy of the model. When the form is submitted, the new model is stored (into the value holder and its change is propagated so the table showing the state of the model is refreshed).",				"",				"The data exchanged between the model and form elements is done in these methods:",				"`SpDemoStandaloneFormPresenter>>#fillFormWithWorkingModel`",				"`SpDemoStandaloneFormPresenter>>#fillModelWithFormContent`",				"",				"The two parts of this window (form and table) should be rendered in boxes with an outline. Spec in Morphic does not have such functionality now. ",				"`SpDemoLabeledPresenter` is used now.",				"",				"Text input for number 1 is limited directly on the level of user input. See `SpDemoStandaloneFormPresenter>>#initializePresenters` and `SpDemoStandaloneFormPresenter>>#connectPresenters`. "			],			"category" : "Spec2-Morphic-Examples-Demo-Forms"		},		"CoStatistics" : {			"hash" : 5323520,			"definition" : "Object subclass: #CoStatistics\r\tinstanceVariableNames: 'acceptedEntries cancelledCompletions'\r\tclassVariableNames: 'UniqueInstance'\r\tpackage: 'HeuristicCompletion-Model-Statistics'",			"comment" : [				"I am an object keeping code completion statistics.",				"I store two collection of events: accepted events and cancelled events.",				"Both events contain information about the completion context (class, is workspace...).",				"Accepted events contain also the text accepted, the index, and the heuristic.",				"",				"I provide methods to access and query the statistics.",				"",				"I have a singleton instance for convenience."			],			"category" : "HeuristicCompletion-Model-Statistics"		},		"SpLayoutConstraints" : {			"hash" : 2151168,			"definition" : "Object subclass: #SpLayoutConstraints\r\tinstanceVariableNames: 'spec'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Layout-Base'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tspec:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Layout-Base"		},		"MalHalNode" : {			"hash" : 1772800,			"definition" : "MalTarjanNode subclass: #MalHalNode\r\tinstanceVariableNames: 'hNumber previousNodes'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\thNumber:\t\t<Object>",				"\tpreviousNodes:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Moose-Algos-Graph"		},		"SpButtonBarPresenter" : {			"hash" : 2216704,			"definition" : "SpAbstractWidgetPresenter subclass: #SpButtonBarPresenter\r\tinstanceVariableNames: 'items placeAtStart'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Widgets'",			"comment" : [				"A full width bar for arranging buttons.",				"A button bar can be used to provide a consistent layout of buttons throughout your application. "			],			"category" : "Spec2-Core-Widgets"		},		"SliderPresenter" : {			"hash" : 902144,			"definition" : "AbstractWidgetPresenter subclass: #SliderPresenter\r\tinstanceVariableNames: 'max min quantum value isChanging absoluteValue labelHolder'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"A SliderPresenter is a spec presenter for a slider.",				"See AbstractWidgetPresenter",				"",				"self example",				"",				"I provide the following variables and their accessors",				"- max is the maximum of the slide.",				"- min is the minimum of the slide.",				"- value is the value of the slide, it is between the maximum and the minimum",				"- absoluteValue is the value of the slide in a percent of the maximum.",				"- label is the label in the background.",				"",				"I provide the following methods",				"- color: to set the background color, it must be called after have displayed the widget.",				"",				"todo",				"- quantum"			],			"category" : "Spec-Core-Widgets"		},		"RSArrowedLine" : {			"hash" : 5672192,			"definition" : "RSLine subclass: #RSArrowedLine\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Lines'",			"comment" : [				"`RSArrowedLine` describes a line with a head or marker. ",				"",				"Here is an example:",				"",				"```",				"| c from to l |",				"c := RSCanvas new.",				"",				"from := RSBox new size: 30.",				"to := RSEllipse new size: 30.",				"",				"from @ RSDraggable.",				"to @ RSDraggable.",				"",				"c add: from.",				"c add: to.",				"",				"l := RSArrowedLine new.",				"l attachPoint: RSCenteredAttachPoint new.",				"l from: from.",				"l to: to.",				"c add: l.",				"",				"to translateBy: 50 @ 40.",				"",				"c @ RSCanvasController.",				"c open",				"```",				"",				"Adding single line can be complex in some situation. You may want to look at RSLineBuilder arrowedLine"			],			"category" : "Roassal3-Shapes-Lines"		},		"OSWindowGLAttributes" : {			"hash" : 4056064,			"definition" : "Object subclass: #OSWindowGLAttributes\r\tinstanceVariableNames: 'redSize blueSize greenSize alphaSize depthSize doubleBuffer swapControl stencilSize minorVersion majorVersion profileType srgbFramebuffer'\r\tclassVariableNames: 'DefaultAlphaSize DefaultBlueSize DefaultDepthSize DefaultDoubleBuffer DefaultGreenSize DefaultMajorVersion DefaultMinorVersion DefaultProfileType DefaultRedSize DefaultSRGBFramebuffer DefaultStencilSize DefaultSwapControl'\r\tpackage: 'OSWindow-Core-OpenGL'",			"comment" : [				"I holding a set of OpenGL attributes, used to initialize an opengl rendering context for a window."			],			"category" : "OSWindow-Core-OpenGL"		},		"Iceberg class" : {			"hash" : 6216192,			"definition" : "Iceberg class\r\tinstanceVariableNames: 'icebergAnnouncer'",			"comment" : [				"I am a cache providing access to several Ice objects, such as packages, repositories, working copies, etc.",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "Iceberg-Core"		},		"RBReadBeforeWrittenTester" : {			"hash" : 1155584,			"definition" : "RBProgramNodeVisitor subclass: #RBReadBeforeWrittenTester\r\tinstanceVariableNames: 'read checkNewTemps scopeStack'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Visitors'",			"comment" : [				"RBReadBeforeWrittenTester is a visitor that identifies variables that may have been read before they are initialized.",				"",				"Instance Variables:",				"\tcheckNewTemps\t<Boolean>\tdescription of checkNewTemps",				"\tread\t<Collection>\tdescription of read",				"\tscopeStack\t<OrderedCollection>\tdescription of scopeStack",				""			],			"category" : "AST-Core-Visitors"		},		"RBMethodNameEditor" : {			"hash" : 4465152,			"definition" : "DialogWindowMorph subclass: #RBMethodNameEditor\r\tinstanceVariableNames: 'argumentIndex labelMorph methodName selectorField labelGroup'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring2-Transformations-Utilities'",			"comment" : [				"A MethodNameEditor is an editor to set the name of a method.",				"",				"",				"\tMethodNameEditor openOn: (RBMethodName selector: #foo: arguments: #('x')) "			],			"category" : "Refactoring2-Transformations-Utilities"		},		"SpPopoverMorph" : {			"hash" : 2567168,			"definition" : "Morph subclass: #SpPopoverMorph\r\tinstanceVariableNames: 'position relativeTo showArrow arrowSize deleteMorph'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Support'",			"comment" : [				"I am a popover morph, which is a morph who will pop in relation to another morph (or/and in a relative position). ",				"It has a position: top, left, bottom and right (default is right).",				"It will be dismissed if click outside or keyboard focus translate to another place other than its children."			],			"category" : "Spec2-Adapters-Morphic-Support"		},		"RSShapeBuilder" : {			"hash" : 2280960,			"definition" : "Object subclass: #RSShapeBuilder\r\tinstanceVariableNames: 'shapeClass color width height borderColor borderWidth labelBlock'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Mondrian-Core'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tborderColor:\t\t<Object>",				"\tborderWidth:\t\t<Object>",				"\tcolor:\t\t<Object>",				"\theight:\t\t<Object>",				"\tlabelBlock:\t\t<Object>",				"\tshapeClass:\t\t<Object>",				"\twidth:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Roassal3-Mondrian-Core"		},		"STONTestKnownObject" : {			"hash" : 4382464,			"definition" : "Object subclass: #STONTestKnownObject\r\tinstanceVariableNames: 'id description'\r\tclassVariableNames: 'KnownObjects'\r\tpackage: 'STON-Tests-Support'",			"comment" : [				"I am STONTestKnownObject. I support unit tests.",				"",				"I have an id and a description.",				"",				"When I am serialized, only my id is written out.",				"",				"  STONTestKnownObject['bb71b026-180c-0d00-b40c-38700aee7555']",				"",				"When I am materialized, the id is used to reconstruct the object, either by retrieving it from a collection of known objects, or it is created (it could also be a retrieval from somewhere else).",				"",				"I keep a collection of all my known instances, new instances are added to it automatically.",				"",				"Use my class side's #fromId: to access existing instances"			],			"category" : "STON-Tests-Support"		},		"EncodedCharSet class" : {			"hash" : 1079808,			"definition" : "EncodedCharSet class\r\tinstanceVariableNames: 'compoundTextSequence ucsTable'",			"comment" : [				"An abstract superclasss of the classes that represent encoded character sets.  In the old implementation, the charsets had more important role.  However, in the current implementation, the subclasses are used only for keeping the backward compatibility.",				"",				"\tThe other confusion comes from the name of \"Latin1\" class.  It used to mean the Latin-1 (ISO-8859-1) character set, but now it primarily means that the \"Western European languages that are covered by the characters in Latin-1 character set."			],			"category" : "Multilingual-Encodings-CharSets"		},		"WorldMorph" : {			"hash" : 1653504,			"definition" : "PasteUpMorph subclass: #WorldMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: 'AllowDropFiles CursorOwnerWorld ExtraWorldList ExtraWorldListMutex'\r\tpackage: 'Morphic-Core-Worlds'",			"comment" : [				"A WorldMorph is a special morph that represents the world.",				"It is a paste up and it holds active hand.",				"",				"A World, the entire Smalltalk screen, is a PasteUpMorph.  A World responds true to #isWorld."			],			"category" : "Morphic-Core-Worlds"		},		"SliderMorph" : {			"hash" : 1931008,			"definition" : "ModelMorph subclass: #SliderMorph\r\tinstanceVariableNames: 'slider value setValueSelector sliderShadow sliderColor descending dragging'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Scrolling'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tdescending:\t\t<Object>",				"\tdragging:\t\t<Object>",				"\tsetValueSelector:\t\t<Object>",				"\tslider:\t\t<Object>",				"\tsliderColor:\t\t<Object>",				"\tsliderShadow:\t\t<Object>",				"\tvalue:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Morphic-Widgets-Scrolling"		},		"FLLargeIdentitySet" : {			"hash" : 558336,			"definition" : "FLLargeIdentityHashedCollection subclass: #FLLargeIdentitySet\r\tinstanceVariableNames: 'array includesNil'\r\tclassVariableNames: ''\r\tpackage: 'Fuel-Core-Collections'",			"comment" : [				"A LargeIdentitySet is an IdentitySet for large collections.",				"Rather than using linear probing, it takes advantage of the fact that identityHash (on a classic, 32bit VM) ",				"in Pharo only has 4096 unique values, using a bucket for each of those.",				"It will still work if hash range changes (ie buckets are chosen mod 4096), ",				"but the potential gain will be lower the more diverse the hash space is.",				"",				"With linear probing you risk an array looking like this:",				"Index:\tHash:",				"\t1\tX",				"\t2\tX",				"\t3\tX",				"\t4\t4",				"\t5\t5",				"\t6\t4",				"\t7\t4",				"\t8\t7",				"\t9\t6",				"\t10\tX",				"",				"While with buckets the same dataset looks:",				"Index:\tHash:",				"\t1\tX",				"\t2\tX",				"\t3\tX",				"\t4\t[4, 4, 4]",				"\t5\t5",				"\t6\t6",				"\t7\t7",				"\t8\tX",				"\t9\tX",				"\t10\tX",				"",				"So includes: can generally be done faster (also sped up byusing a special primitive), ",				"and removal of objects does not have to do extensive cleanup if object was part of a chain."			],			"category" : "Fuel-Core-Collections"		},		"IceSystemEventListener class" : {			"hash" : 6205952,			"definition" : "IceSystemEventListener class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a class that listens to system events and dispatch them to the right iceberg object.",				"I'm mainly used to mark as dirty packages whose methods and classes are modified.",				"",				"I'm implemented as class side methods to avoid memory leaks and problems when unsubscribing to events."			],			"category" : "Iceberg-Changes"		},		"NonInteractiveTranscript class" : {			"hash" : 920064,			"definition" : "NonInteractiveTranscript class\r\tinstanceVariableNames: ''",			"comment" : [				"I am NonInteractiveTranscript, a replacement for Transcript, writing everything to a file or stdout. I implement TTranscript.",				"",				"This is useful when running headless.",				"",				"\tNonInteractiveTranscript file install.",				"\t",				"To connect to the output stream of the virtual machine process choose stdout.",				"",				"\tNonInteractiveTranscript stdout install.",				"",				"or ",				"",				"\tNonInteractiveTranscript stderr install"			],			"category" : "Transcript-NonInteractive-Base"		},		"Cursor class" : {			"hash" : 464896,			"definition" : "Cursor class\r\tinstanceVariableNames: ''",			"comment" : [				"Description",				"--------------------",				"",				"I am a Form that is a possible appearance for a mouse cursor. My size is always 16x16, ever since the original implementation on the Alto.",				"",				"There are many examples available in the \"constants\" category of class methods. For example, \"Cursor normal\" and \"Cursor wait\". ",				"",				"Public API and Key Messages",				"--------------------",				"",				"- #showWhile: \tWhen send to a cursor, it will use the cursor as the current cursor during the block execution",				"",				"Examples",				"--------------------",				"",				"\t\"Use the wait cursor for 3 seconds\"",				"\tCursor wait showWhile: [ 3 second wait ].",				"\t",				"\t\"Morph implements methods to help with the management of cursors via the hand morph. This is useful when you want to change the cursor and revert the change in different places instead of changinig it during the execution of a block.\"",				"\tself currentHand showTemporaryCursor: Cursor wait. ",				"\tself flag: #doSomethingHere.",				"\tself currentHand showTemporaryCursor: nil. \"Reset the cursor to the previous one\""			],			"category" : "Graphics-Display Objects-Cursors"		},		"ReSuperSendsRule" : {			"hash" : 3940864,			"definition" : "ReNodeRewriteRule subclass: #ReSuperSendsRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Rewrite super messages to self messages when both refer to same method"			],			"category" : "GeneralRules-Migrated"		},		"HandleMorph" : {			"hash" : 1914112,			"definition" : "EllipseMorph subclass: #HandleMorph\r\tinstanceVariableNames: 'pointBlock lastPointBlock'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Widgets'",			"comment" : [				"A HandleMorph provides mouse-up control behavior."			],			"category" : "Morphic-Base-Widgets"		},		"SpCompositeIconProvider" : {			"hash" : 2182912,			"definition" : "SpIconProvider subclass: #SpCompositeIconProvider\r\tinstanceVariableNames: 'providers'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-IconProvider'",			"comment" : [				"I'm a composite icon provider.",				"Users can compose (using `,` message) icon providers to define different ways to find icons.",				"A typical usage is: ",				"",				"```",				"(SpLocationIconProvider newLocation: './icons' asFileReference), SpPharoThemeIconProvider new",				"```"			],			"category" : "Spec2-Core-IconProvider"		},		"SpFixedProgressBarState" : {			"hash" : 2189056,			"definition" : "SpProgressBarState subclass: #SpFixedProgressBarState\r\tinstanceVariableNames: 'value'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Utils'",			"comment" : [				"Description",				"--------------------",				"",				"I am a state of a ProgressBarPresenter managing the behavior of a fixed progress bar. I will have one value (between 0 and 1) and the progress will not change.",				"",				"Examples",				"--------------------",				"",				"\t ProgressBarFixed value: 0.1",				" ",				"Internal Representation and Key Implementation Points.",				"--------------------",				"",				"    Instance Variables",				"\tvalueHolder:\t\t<aValueHolder> \t\tValue holder keeping the value I should be fixed on."			],			"category" : "Spec2-Core-Utils"		},		"MockWithComplexSlot" : {			"hash" : 3655680,			"definition" : "Object << #MockWithComplexSlot\r\tslots: { #aComplexSlot => ObservableSlot };\r\ttag: 'Fluid';\r\tpackage: 'Kernel-Tests'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\taComplexSlot:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Kernel-Tests-Fluid"		},		"RSAbstractVerticalTreeLayout" : {			"hash" : 5761792,			"definition" : "RSAbstractRegularTreeLayout subclass: #RSAbstractVerticalTreeLayout\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Layouts-Core"		},		"RSPie" : {			"hash" : 5792256,			"definition" : "RSAbstractShapesBuilder subclass: #RSPie\r\tinstanceVariableNames: 'objects values sumValues totalSum sliceShape sliceColor'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Pie-Core'",			"comment" : [				"I am the basic pie builder, check my examples.",				"",				"About me ",				"* My shape is an \"arc\"... not really my shape is an instance of \"RSShapeBuilder arc\"",				"* the default background color of each arc even",				"* I use a layout to set the arcs position ",				"* I also have a #label to create labels around my arcs",				"",				".=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=",				"| b classes |",				"classes := { Array. String. Dictionary. Set }.",				"b := RSPieBuilder new.",				"b objects: classes.",				"b slice: #numberOfMethods.s",				"b build.",				"b open",				".=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.="			],			"category" : "Roassal3-Pie-Core"		},		"ZnSingleThreadedServer" : {			"hash" : 1420544,			"definition" : "ZnServer subclass: #ZnSingleThreadedServer\r\tinstanceVariableNames: 'process serverSocket logLevel'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Client-Server'",			"comment" : [				"I am ZnSingleThreadedServer.",				"I can be customized with a delegate (#handleRequest:) and an authenticator (#authenticateRequest:do:).",				"",				"  ZnSingleThreadedServer startDefaultOn: 1701.",				"  ZnSingleThreadedServer default authenticator: (ZnBasicAuthenticator username: 'foo' password: 'secret').",				"  ZnClient new username: 'foo' password: 'secret'; get: 'http://localhost:1701'.",				"",				"I use ZnDefaultServerDelegate when no other delegate is set.",				"I am single threaded, I run in a single process.",				"I close connections after each request/response cycle.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Client-Server"		},		"FFIFunctionParser" : {			"hash" : 517888,			"definition" : "Object subclass: #FFIFunctionParser\r\tinstanceVariableNames: 'requestor stream fnSpec'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-Base'",			"comment" : [				"I parse function specs."			],			"category" : "UnifiedFFI-Base"		},		"TKTCommonQueueWorkerPool" : {			"hash" : 410880,			"definition" : "Object subclass: #TKTCommonQueueWorkerPool\r\tuses: TTaskScheduler - {#scheduleTaskExecution:}\r\tinstanceVariableNames: 'poolMaxSize workers taskQueue failedTasks name mutex'\r\tclassVariableNames: ''\r\tpackage: 'TaskIt-Worker'",			"comment" : [				"Common queue worker pool has in common queue. This makes that all the workers wait over the same queue "			],			"category" : "TaskIt-Worker"		},		"TestExecutionService" : {			"hash" : 357120,			"definition" : "Object subclass: #TestExecutionService\r\tinstanceVariableNames: 'executionEnvironment isEnabled'\r\tclassVariableNames: ''\r\tpackage: 'SUnit-Core-Kernel'",			"comment" : [				"I am a root of hierarchy of services for test execution environment.",				"",				"Every service registered in the environment is notified about following events:",				"",				"- #handleException:, it is executed for every Exception signaled from the test ",				"- #handleCompletedTest, it is executed when test is completes (successfully or due to the error)",				"- #handleNewProcess:, it is executed for every process created during the test",				"",				"I implement them as dummy methods. Subclasses can choose what exactly they need to implement.",				"",				"I define another method #cleanUpAfterTest to perform full cleanup of service to be prepared for the next test.",				"Subclasses should extend this method to perform own specific cleanup. ",				"All services must recover own default state in this method.",				"",				"For example every service can be enabled or disabled for concrete test: ",				"",				"\t- enable ",				"\t- disable",				"",				"During #cleanUpAfterTest I restore the activeness according to my default configuration (class side #isEnabled). Subclasses should do the same with their own configurations.",				"",				"TestExecutionEnvironment queries all my subclasses to register them for tests execution: ",				"",				"\tTestExecutionService enabledServiceClasses.",				"\t",				"Settings browser queries all default services to collect their parameters and allow users to enable/disable services globaly:",				"\t",				"\tTestExecutionService defaultServiceClasses.",				"",				"Default services are not abstract classes enabled by default (#isEnabledByDefault = true).",				"",				"To provide configuration for setting browser subclasses should extend class side method #settingsOn:. It does not require a pragma because the actual collection of settings from all services is performed by test environment.",				"\t\t",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\texecutionEnvironment:\t\t<TestExecutionEnvironment>",				"\tisEnabled:\t\t<Boolean>"			],			"category" : "SUnit-Core-Kernel"		},		"SpToolbarMorph" : {			"hash" : 2568192,			"definition" : "Morph subclass: #SpToolbarMorph\r\tinstanceVariableNames: 'leftPanel rightPanel displayMode toolbarItemFont'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Toolbar'",			"comment" : [				"I'm a toolbar morph.",				"I can display toolbar items in left side or right side panels. "			],			"category" : "Spec2-Adapters-Morphic-Toolbar"		},		"CoStaticBenchmarks" : {			"hash" : 5323008,			"definition" : "Object subclass: #CoStaticBenchmarks\r\tinstanceVariableNames: 'scope completionBenchs builder'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Model-Benchmarks'",			"comment" : [				"I run a series of completion benchmarks over a static scope.",				"I take all existing callsites in a scope (a class, a package) and run the completion with different prefixes (2 to 8), asking for 10 results.",				"Then I check if the selector at that callsite is in those elements, and in what position.",				"I accumulate the results in a table per index in the results and prefix size.",				"",				"I have an inspector extension to show the results in a table.",				"",				"Examples:",				"",				"global := CoStaticBenchmarks new",				"\tscope: (CoBenchmarkPackage on: SpAbstractAdapter package);",				"\tbuilder: (CoGlobalSorterResultSetBuilder new",				"\t\tsorterClass: AlphabeticSorter;",				"\t\tyourself);",				"\trun.",				"",				"staticHeuristics := CoStaticBenchmarks new",				"\tscope: (CoBenchmarkPackage on: SpAbstractAdapter package);",				"\tbuilder: CoASTHeuristicsResultSetBuilder new;",				"\trun."			],			"category" : "HeuristicCompletion-Model-Benchmarks"		},		"STONStreamWriter" : {			"hash" : 338688,			"definition" : "Object subclass: #STONStreamWriter\r\tinstanceVariableNames: 'writer first'\r\tclassVariableNames: ''\r\tpackage: 'STON-Core-Writer'",			"comment" : [				"STONStreamWriter helps in streaming writing STON representations.",				"This is an abstract class."			],			"category" : "STON-Core-Writer"		},		"RBBasicLintRuleTestData" : {			"hash" : 4144640,			"definition" : "RBLintRuleTestData subclass: #RBBasicLintRuleTestData\r\tinstanceVariableNames: 'methodBlock result classBlock anInstVar'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Tests-Core-Data'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tanInstVar:\t\t<Object>",				"\tclassBlock:\t\t<Object>",				"\tmethodBlock:\t\t<Object>",				"\tresult:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Refactoring-Tests-Core-Data"		},		"IRPushArray" : {			"hash" : 1250048,			"definition" : "IRInstruction subclass: #IRPushArray\r\tinstanceVariableNames: 'size cons'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Core-IR-Nodes'",			"comment" : [				"I model the pushArray bytecode.",				"",				"Used for setting up the temp vectors and for the brace array construct: { }."			],			"category" : "OpalCompiler-Core-IR-Nodes"		},		"IdentityTransform class" : {			"hash" : 472064,			"definition" : "IdentityTransform class\r\tinstanceVariableNames: ''",			"comment" : [				"Identity transformation"			],			"category" : "Graphics-Transformations"		},		"MCConfiguration" : {			"hash" : 1458944,			"definition" : "Object subclass: #MCConfiguration\r\tinstanceVariableNames: 'name dependencies repositories log'\r\tclassVariableNames: 'DefaultLog UpgradeIsMerge'\r\tpackage: 'MonticelloConfigurations'",			"comment" : [				"An MCConfiguration specifies the configuration of a set of related Monticello packages. It maintains an ordered list of package versions and a list of repositories in which the packages may be found.",				"",				"An MCConfiguration may be filed out for storage as an array specification, and new instances can be created from a stored array specification."			],			"category" : "MonticelloConfigurations"		},		"EpLogBrowserPresenter" : {			"hash" : 4218112,			"definition" : "SpPresenter subclass: #EpLogBrowserPresenter\r\tinstanceVariableNames: 'log andFilter selectionDeferrer cachedLogEntries commentsLog cachedItems showEntryItemMenu entryContentPresenter itemsPresenter toolbarPresenter'\r\tclassVariableNames: ''\r\tpackage: 'EpiceaBrowsers-UI-Log'",			"comment" : [				"I am a Spec browser for an EpLog.",				"",				"For example, open with:",				"",				"self open"			],			"category" : "EpiceaBrowsers-UI-Log"		},		"MCGitRemoteRepository" : {			"hash" : 6246144,			"definition" : "MCGitBasedNetworkRepository subclass: #MCGitRemoteRepository\r\tinstanceVariableNames: 'host port path user'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Metacello-Integration-RepoTypes'",			"comment" : [				"I am a repository managing projects hosted on generic git repositories.",				"",				"I accept urls of the kind: ",				"",				"https://github.com/user/project.git",				"git@github.com:user/project.git",				"",				"WARNING: This repository is meant to be used with iceberg and it will not work with plain Monticello/Metacello (because there is no way to know how to download a zip)"			],			"category" : "Iceberg-Metacello-Integration-RepoTypes"		},		"RSLayout" : {			"hash" : 5747968,			"definition" : "RSObject subclass: #RSLayout\r\tinstanceVariableNames: 'translator'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Layouts-Core"		},		"DTRerunCommand" : {			"hash" : 2967296,			"definition" : "DTResultCommand subclass: #DTRerunCommand\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'DrTests-TestsRunner-Commands'",			"comment" : [				"I am the command allowing one to rerun a subparts of the results of a test-run."			],			"category" : "DrTests-TestsRunner-Commands"		},		"SDL2Constants class" : {			"hash" : 4062976,			"definition" : "SDL2Constants class\r\tinstanceVariableNames: ''",			"comment" : [				"Pool of various SDL2 library constants"			],			"category" : "OSWindow-SDL2-Bindings"		},		"RSCamera" : {			"hash" : 5638912,			"definition" : "RSObject subclass: #RSCamera\r\tuses: RSTPositionable\r\tinstanceVariableNames: 'scale position canvas extent originMode'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Core'",			"comment" : [				"<keyClass>",				"All shapes in Roassal are contained in a `RSCanvas`. The canvas has an infinite 2D dimension. The portion of the canvas that is visible within the window is given by a camera. `RSCamera` describes a camera in Roassal. A camera has a scale and a position.",				"",				"*Responsibility*: identify the portion and the zoom level of a canvas that must be visible. Whenever the canvas is scrolled with the mouse or the key, then the camera is responsible for this.",				"",				"*Collaborators*: A `RSCanvas` has a `RSCamera`. ",				"",				"*Variables*:",				"`position` is a point representing coordinates of the canvas on which the viewing window frame will be centered. Position can be changes with the method `#translateBy:` and `#translateTo:`. Both methods accept canvas based coordinates",				"",				"`scale` defines a magnitude of zooming applied to the canvas and its elements.",				"",				"*Example*:",				"```Smalltalk",				"c := RSCanvas new.",				"1 to: 100 do: [ :i |",				"\t| g |",				"\tg := RSGroup new.",				"\tg add: (RSEllipse new size: 30; color: Color gray lighter).",				"\tg add: (RSLabel new text: i).",				"\tc add: g asShape ].",				"RSGridLayout on: c shapes.",				"camera := c canvas camera.",				"camera translateBy: 500 @ 50.",				"camera scale: 0.5.",				"c",				"```"			],			"category" : "Roassal3-Core"		},		"ClyBrowserButtonMorph" : {			"hash" : 5090048,			"definition" : "ClyBrowserToolbarItemMorph subclass: #ClyBrowserButtonMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-Toolbar'",			"comment" : [				"I am a toolbar button which executes particular command"			],			"category" : "Calypso-Browser-Toolbar"		},		"ReGuardClauseRule" : {			"hash" : 3936256,			"definition" : "ReNodeRewriteRule subclass: #ReGuardClauseRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Transforms single branch conditionals with multi-statement bodies into a sequence of statements guarded by a conditional return.",				"For example",				"",				"[[[ ",				"foo ",				"\tstatements. ",				"\tcondition ifTrue: [ statement1. statement2 ]",				"]]]",				"",				"is transformed into ",				"",				"[[[  ",				"foo",				"\tstatements.",				"\tcondition ifFalse: [^self].",				"\tstatement1.",				"\tstatement2.",				"]]]"			],			"category" : "GeneralRules-Migrated"		},		"MCCacheRepository" : {			"hash" : 289792,			"definition" : "MCDirectoryRepository subclass: #MCCacheRepository\r\tinstanceVariableNames: 'packageCaches seenFiles cacheEnabled'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Repositories'",			"comment" : [				"I am a special monticello directory-based repository that is used for the global monticello cache.",				"",				"Most other repositories will first query the default cache repository for existing files before handling the request by themselves. For instance an http repository will first check if the file is in the caceh before doing a \"slow\" download."			],			"category" : "Monticello-Repositories"		},		"MalTarjan" : {			"hash" : 1762048,			"definition" : "MalGraphAlgorithm subclass: #MalTarjan\r\tinstanceVariableNames: 'stack runningIndex sccs'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"I implement the well known Tarjan's algorithm. My purpose is to find the strongly connected components (aka circuits /cycles) of a graph in O(m+n).",				"See https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm for more details."			],			"category" : "Moose-Algos-Graph"		},		"FFIMethodRegistry" : {			"hash" : 1575424,			"definition" : "Object subclass: #FFIMethodRegistry\r\tinstanceVariableNames: 'compiledMethods'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-Base'",			"comment" : [				"I keep a  registry of FFI prepared methods. ",				"Registry is used to know exactly which methods are executing FFI-NB calls and then which ones need to be recompiled when a platform has change."			],			"category" : "UnifiedFFI-Base"		},		"SourceSansProRegular class" : {			"hash" : 727040,			"definition" : "SourceSansProRegular class\r\tinstanceVariableNames: ''",			"comment" : [				"http://sourceforge.net/projects/sourcesans.adobe/",				"",				"Copyright 2010, 2012 Adobe Systems Incorporated (http://www.adobe.com/), with Reserved Font Name 'Source'. All Rights Reserved. Source is a trademark of Adobe Systems Incorporated in the United States and/or other countries.",				"",				"This Font Software is licensed under the SIL Open Font License, Version 1.1.",				"",				"This license is copied below, and is also available with a FAQ at: http://scripts.sil.org/OFL",				"",				"",				"-----------------------------------------------------------",				"SIL OPEN FONT LICENSE Version 1.1 - 26 February 2007",				"-----------------------------------------------------------",				"",				"PREAMBLE",				"The goals of the Open Font License (OFL) are to stimulate worldwide",				"development of collaborative font projects, to support the font creation",				"efforts of academic and linguistic communities, and to provide a free and",				"open framework in which fonts may be shared and improved in partnership",				"with others.",				"",				"The OFL allows the licensed fonts to be used, studied, modified and",				"redistributed freely as long as they are not sold by themselves. The",				"fonts, including any derivative works, can be bundled, embedded, ",				"redistributed and/or sold with any software provided that any reserved",				"names are not used by derivative works. The fonts and derivatives,",				"however, cannot be released under any other type of license. The",				"requirement for fonts to remain under this license does not apply",				"to any document created using the fonts or their derivatives.",				"",				"DEFINITIONS",				"\"Font Software\" refers to the set of files released by the Copyright",				"Holder(s) under this license and clearly marked as such. This may",				"include source files, build scripts and documentation.",				"",				"\"Reserved Font Name\" refers to any names specified as such after the",				"copyright statement(s).",				"",				"\"Original Version\" refers to the collection of Font Software components as",				"distributed by the Copyright Holder(s).",				"",				"\"Modified Version\" refers to any derivative made by adding to, deleting,",				"or substituting -- in part or in whole -- any of the components of the",				"Original Version, by changing formats or by porting the Font Software to a",				"new environment.",				"",				"\"Author\" refers to any designer, engineer, programmer, technical",				"writer or other person who contributed to the Font Software.",				"",				"PERMISSION & CONDITIONS",				"Permission is hereby granted, free of charge, to any person obtaining",				"a copy of the Font Software, to use, study, copy, merge, embed, modify,",				"redistribute, and sell modified and unmodified copies of the Font",				"Software, subject to the following conditions:",				"",				"1) Neither the Font Software nor any of its individual components,",				"in Original or Modified Versions, may be sold by itself.",				"",				"2) Original or Modified Versions of the Font Software may be bundled,",				"redistributed and/or sold with any software, provided that each copy",				"contains the above copyright notice and this license. These can be",				"included either as stand-alone text files, human-readable headers or",				"in the appropriate machine-readable metadata fields within text or",				"binary files as long as those fields can be easily viewed by the user.",				"",				"3) No Modified Version of the Font Software may use the Reserved Font",				"Name(s) unless explicit written permission is granted by the corresponding",				"Copyright Holder. This restriction only applies to the primary font name as",				"presented to the users.",				"",				"4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font",				"Software shall not be used to promote, endorse or advertise any",				"Modified Version, except to acknowledge the contribution(s) of the",				"Copyright Holder(s) and the Author(s) or with their explicit written",				"permission.",				"",				"5) The Font Software, modified or unmodified, in part or in whole,",				"must be distributed entirely under this license, and must not be",				"distributed under any other license. The requirement for fonts to",				"remain under this license does not apply to any document created",				"using the Font Software.",				"",				"TERMINATION",				"This license becomes null and void if any of the above conditions are",				"not met.",				"",				"DISCLAIMER",				"THE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,",				"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF",				"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT",				"OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE",				"COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,",				"INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL",				"DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING",				"FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM",				"OTHER DEALINGS IN THE FONT SOFTWARE."			],			"category" : "EmbeddedFreeType-Fonts"		},		"SpSingleSelectionMode" : {			"hash" : 2166528,			"definition" : "SpAbstractSelectionMode << #SpSingleSelectionMode\r\tslots: { #selectedIndex => ObservableSlot };\r\ttag: 'Widgets-Table';\r\tpackage: 'Spec2-Core'",			"comment" : [				"I implement single selection mode (my users can select just one element of list or table)"			],			"category" : "Spec2-Core-Widgets-Table"		},		"SpTestLocalizedString" : {			"hash" : 2500864,			"definition" : "Object subclass: #SpTestLocalizedString\r\tinstanceVariableNames: 'string requestsCount'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Tests-Localization'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\trequestsCount:\t\t<Object>",				"\tstring:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Tests-Localization"		},		"RubAbstractTextArea" : {			"hash" : 590080,			"definition" : "Morph subclass: #RubAbstractTextArea\r\tinstanceVariableNames: 'model paragraph editor scrollPane editingState textStyle textColor margins readOnly menuAllowed editingMode cursor segments embeddedMorphs getMenuPolicy mouseDownPoint completionEngine maxLength findReplaceService'\r\tclassVariableNames: 'BackgroundColor CaseSensitiveFinds DefaultTextColor HighlightMessageSend LineNumbersBackgroundColor LineNumbersFont LineNumbersTextColor WalkAlongDisplayedLine'\r\tpackage: 'Rubric-Editing-Core'",			"comment" : [				"I am a re-implementation of TextMorph. I'm intended as a temporary solution. Soon, I will be replaced by, or integrated with, TxText, a beautiful new text toolkit.",				"",				"About the contextual menu",				"By default, the menu is given by the editingMode.",				"The model can implement a #menu method to impose a specific menu.",				"To change the way the menu is looked-up, one can also change the getMenuPolicy.",				"This menu retrieving algorithm is implemented by a dedicated objet, hold by the RubAbstractTextArea>>#getMenuPolicy instance variable. This dedicated object implements a #lookupMenu method for this.",				"By default, it is the textArea itself (see RubAbstractTextArea>>defaultGetMenuPolicy). ",				"The policy can be changed with RubAbstractTextArea>>#getMenuPolicy:, by passing whatever object that answer to #lookupMenu.",				"",				"Instance Variables",				"\teditingMode:\t\t<Object>",				"\teditingState:\t\t<Object>",				"\teditor:\t\t<Object>",				"\thasFocus:\t\t<Object>",				"\tholder:\t\t<Object>",				"\tmargins:\t\t<Object>",				"\tmenuAllowed:\t\t<Object>",				"\tmodel:\t\t<Object>",				"\tparagraph:\t\t<Object>",				"\treadOnly:\t\t<Object>",				"\tscrollPivot:\t\t<Object>",				"\ttext:\t\t<Object>",				"\ttextColor:\t\t<Object>",				"\ttextStyle:\t\t<Object>",				"\twrapped:\t\t<Object>",				"",				"editingMode",				"\t- xxxxx",				"",				"editingState",				"\t- xxxxx",				"",				"editor",				"\t- xxxxx",				"",				"hasFocus",				"\t- xxxxx",				"",				"holder",				"\t- xxxxx",				"",				"margins",				"\t- xxxxx",				"",				"menuAllowed",				"\t- xxxxx",				"",				"model",				"\t- xxxxx",				"",				"paragraph",				"\t- xxxxx",				"",				"readOnly",				"\t- xxxxx",				"",				"scrollPivot",				"\t- xxxxx",				"",				"text",				"\t- xxxxx",				"",				"textColor",				"\t- xxxxx",				"",				"textStyle",				"\t- xxxxx",				"",				"wrapped",				"\t- xxxxx",				"",				""			],			"category" : "Rubric-Editing-Core"		},		"CoNarrowHistoryFetcher" : {			"hash" : 5311744,			"definition" : "CoFetcherDecorator subclass: #CoNarrowHistoryFetcher\r\tinstanceVariableNames: 'currentResults history currentKey currentFinished'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Model-Core'",			"comment" : [				"I am a decorator that allows the narrowing and unnarrowing without needing to reset the decoree.",				"I store the intermediate state of the query and perform the subsequent query taking care of the results already handled."			],			"category" : "HeuristicCompletion-Model-Core"		},		"LazyMorphTreeNodeMorph" : {			"hash" : 587520,			"definition" : "MorphTreeNodeMorph subclass: #LazyMorphTreeNodeMorph\r\tinstanceVariableNames: 'drawable'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Tree'",			"comment" : [				"A node for \"lazy drawing\" in a morphic based tree"			],			"category" : "Morphic-Widgets-Tree"		},		"ClyMethodVisibilityMorph" : {			"hash" : 5137408,			"definition" : "Morph subclass: #ClyMethodVisibilityMorph\r\tinstanceVariableNames: 'browser visibilityLevel'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemTools-FullBrowser-UI'",			"comment" : [				"I represent simple checkbox which toggle method visibility of the full browser.",				"",				"I am created on visibility level which gives me new class scope which I pass to the browser.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbrowser:\t\t<ClyBrowser>",				"\tvisibilityLevel:\t\t<ClyMethodVisibilityLevel>"			],			"category" : "Calypso-SystemTools-FullBrowser-UI"		},		"LazyListMorph" : {			"hash" : 584448,			"definition" : "Morph subclass: #LazyListMorph\r\tinstanceVariableNames: 'listItems font selectedRow selectedRows listSource maxWidth'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Pluggable-Lists'",			"comment" : [				"The morph that displays the list in a PluggableListMorph.  It is \"lazy\" because it will only request the list items that it actually needs to display.",				"",				"I will cache the maximum width of my items in maxWidth to avoid this potentially expensive and frequent computation."			],			"category" : "Morphic-Widgets-Pluggable-Lists"		},		"DiskStore" : {			"hash" : 1291008,			"definition" : "FileSystemStore subclass: #DiskStore\r\tinstanceVariableNames: 'maxFileNameLength'\r\tclassVariableNames: 'CurrentFS DefaultWorkingDirectory'\r\tpackage: 'FileSystem-Disk-Store'",			"comment" : [				"I am an abstract superclass for disk store implementations. My subclasses provide access to the actual data storage of a particular kind of filesystem. "			],			"category" : "FileSystem-Disk-Store"		},		"ReShouldntRaiseErrorRule" : {			"hash" : 3939840,			"definition" : "ReNodeRewriteRule subclass: #ReShouldntRaiseErrorRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"#shouldnt:raise: is a rather tricky method, it is mostly used to make a",				"test \"read\" nicer, however it some severe drawbacks. Hence, it should only",				"be used in certain cases. Consider the following examples.",				"",				"Example 1:",				"----------",				"\tself",				"\t\tshouldnt: [ 1 somethingNotUnderstood ]",				"\t\traise: MessageNotUnderstood.",				"",				"In this particular case the expectations meet the result, the test fails with",				"an assertion failure since a MNU is raised.",				"",				"Example 2:",				"----------",				"\tself shouldnt: [ 1/0 ] raise: MessageNotUnderstood.",				"",				"In this case the test will fail with a ZeroDivide. So in the negative case",				"#shouldnt:raise: is not very helpful. ",				"",				"As a result, #shouldnt:raise: does not change much on the test outcome, the",				"statement itself produces the same failures. However there is the third and",				"most common use case.",				"",				"Example 3:",				"----------",				"\tself shouldnt: [ 1/0 ] raise: Error.",				"",				"In this case the test fails, as expected, however not on a ZeroDivide but an",				"internal error message that shadows the real error. Using Error as argument for",				"#shouldnt:raise: shadows any possible error that might happen and thus should",				"be avoided."			],			"category" : "GeneralRules-Migrated"		},		"RubWorkspaceExample" : {			"hash" : 1873664,			"definition" : "Object subclass: #RubWorkspaceExample\r\tinstanceVariableNames: 'textModel announcer bindings mustDeclareVariables'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Widgets-Examples'",			"comment" : [				"self open"			],			"category" : "Rubric-Editing-Widgets-Examples"		},		"RFCondition" : {			"hash" : 3029760,			"definition" : "Object subclass: #RFCondition\r\tinstanceVariableNames: 'condition originalLinkCondition'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Core'",			"comment" : [				"I can be used to reify the condition of a link.",				"",				"I have myself a condition *and* I store the condtition of the link.",				"",				"on #value, I evaluate my condition and after that the orginal link condition.",				"",				"With this feature, we can thus reflectively controll links while not actually changing the condition of the link itself. "			],			"category" : "Reflectivity-Core"		},		"CmUICommandGroup" : {			"hash" : 866048,			"definition" : "CmCommandGroupDecorator subclass: #CmUICommandGroup\r\tinstanceVariableNames: 'displayStrategy isRoot icon'\r\tclassVariableNames: ''\r\tpackage: 'Commander2-UI-Core'",			"comment" : [				"I am a command group decorator adding informations useful when for usage in context of user interface (UI).",				"",				"Basically, I add:",				"- an #icon (#blank by default)",				"- the strategy to display commands group in a menu (I am displayed as a sub-menu by default)."			],			"category" : "Commander2-UI-Core"		},		"FLLargeIdentityDictionary" : {			"hash" : 557824,			"definition" : "FLLargeIdentityHashedCollection subclass: #FLLargeIdentityDictionary\r\tinstanceVariableNames: 'keys values'\r\tclassVariableNames: ''\r\tpackage: 'Fuel-Core-Collections'",			"comment" : [				"I am an IdentityDictionary optimized for including a large number of elements."			],			"category" : "Fuel-Core-Collections"		},		"SpGeneratorListModel" : {			"hash" : 2179328,			"definition" : "SpCollectionListModel subclass: #SpGeneratorListModel\r\tinstanceVariableNames: 'generator size'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Widgets-Table'",			"comment" : [				"A list model to be used with a generator.",				"",				"See `SpGeneratorListModel class>>#example`",				"See `Generator` class."			],			"category" : "Spec2-Core-Widgets-Table"		},		"CmdMenuGroup" : {			"hash" : 2091776,			"definition" : "CmdMenuItem subclass: #CmdMenuGroup\r\tinstanceVariableNames: 'contents'\r\tclassVariableNames: ''\r\tpackage: 'Commander-Core'",			"comment" : [				"I am a root of hierarchy of first class menu groups.",				"My subclasses are used to declare command position in menu. They are declared in menu command activation strategies.",				"My own menu position is defined statically by instance side method #order and class side method #parentGroup. By default #parentGroup is CmdRootMenuGroup which represents root menu items. If some group wants to be in deep tree structure it overrides #parentGroup method to return another group class. ",				"",				"My instances contain other menu items (commands and groups). I provide accessing methods for them:",				"- addItem: aMenuItem",				"- removeItem: aMenuItem",				"- includes: aMenuItem",				"- size",				"",				"Different kinds of menu activation strategies extend me to build different kind of menu (context menu, toobar, halo menu, etc.)",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcontents:\t\t<OrderedCollection of<CmdMenuItem>>"			],			"category" : "Commander-Core"		},		"BalloonEngine" : {			"hash" : 1626112,			"definition" : "Object subclass: #BalloonEngine\r\tinstanceVariableNames: 'workBuffer span bitBlt forms clipRect destOffset externals aaLevel edgeTransform colorTransform deferred postFlushNeeded'\r\tclassVariableNames: 'BezierStats BufferCache CacheProtect Counts Debug Times'\r\tpoolDictionaries: 'BalloonEngineConstants'\r\tpackage: 'FormCanvas-Core-BalloonEngine'",			"comment" : [				"BalloonEngine is the representative for the Balloon engine inside Squeak. For most purposes it should not be used directly but via BalloonCanvas since this ensures proper initialization and is polymorphic with other canvas uses."			],			"category" : "FormCanvas-Core-BalloonEngine"		},		"IceTipDiffPanel" : {			"hash" : 6312192,			"definition" : "IceTipSpPresenter subclass: #IceTipDiffPanel\r\tinstanceVariableNames: 'model diffPanel iceNodesTree'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-View-Branch'",			"comment" : [				"I'm a diff panel that shows packages/classes/methods changed in a column and a diff in the other.",				"",				"I receive a model that needs to understand #elements.",				"also #elements answer should be a collection of elements that also understand elements.",				"",				"(IceTipDiffPanel onDiff: (IceRepository registry first workingCopyDiff)) openWithSpec"			],			"category" : "Iceberg-TipUI-View-Branch"		},		"FastTablePresenter" : {			"hash" : 893440,			"definition" : "ListPresenter subclass: #FastTablePresenter\r\tinstanceVariableNames: 'iconHolder handlesDoubleClick doubleClick columns'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"An FastTablePresenter is a spec presenter for a FastTable"			],			"category" : "Spec-Core-Widgets"		},		"RBSequenceNode" : {			"hash" : 1161728,			"definition" : "RBProgramNode subclass: #RBSequenceNode\r\tinstanceVariableNames: 'leftBar rightBar statements periods temporaries'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Nodes'",			"comment" : [				"RBSequenceNode is an AST node that represents a sequence of statements. Both RBBlockNodes and RBMethodNodes contain these.",				"",				"Instance Variables:",				"\tleftBar\t<Integer | nil>\tthe position of the left | in the temporaries definition",				"\trightBar\t<Integer | nil>\tthe position of the right | in the temporaries definition",				"\tstatements\t<SequenceableCollection of: RBReturnNode or RBValueNode> the statement nodes",				"\tperiods\t<SequenceableCollection of: Integer>\tthe positions of all the periods that separate the statements",				"\ttemporaries\t<SequenceableCollection of: RBVariableNode>\tthe temporaries defined",				""			],			"category" : "AST-Core-Nodes"		},		"MCMockASubclass class" : {			"hash" : 4288000,			"definition" : "MCMockASubclass class\r\tinstanceVariableNames: ''",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "MonticelloMocks"		},		"MalNodeWithPreviousAndNext" : {			"hash" : 1769728,			"definition" : "MalNodeWithNext subclass: #MalNodeWithPreviousAndNext\r\tinstanceVariableNames: 'previousNodes'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"A basic node able to host the model and to represent edges with no additional class.",				"Edges are navigable in both way through the nextNodes and prevousNodes instances variables."			],			"category" : "Moose-Algos-Graph"		},		"RBRegexRefactoring" : {			"hash" : 3170048,			"definition" : "RBRefactoring subclass: #RBRegexRefactoring\r\tinstanceVariableNames: 'matchers'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Core-Refactorings'",			"comment" : [				"I am a abstract base class for a refactoring replacing strings by a regular expression.",				"",				"My concrete subclasses define on what kind of string the replace regulare expression should be applied to.",				"They have to implement the RBRefactoring method #transform.",				"",				"I have no special precondition.",				"",				"Here is a sample of a script that will change of the YK* classes of package PrefixOfPackageNames* into ZG*.",				"",				"```",				"| pkgPrefix newClassPrefix env model |",				"pkgPrefix := 'PrefixOfPackageNames'.",				"newClassPrefix := 'ZG'.",				"env := RBBrowserEnvironment new ",				"\t\t\tforPackageNames: (RPackage organizer packageNames select: [ : pkgName | (pkgName beginsWith: pkgPrefix) ]).",				"model := (RBClassModelFactory rbNamespace onEnvironment: env) name: 'MyModel'; yourself.",				"RBClassRegexRefactoring new",				"\tmodel: model;",				"\trenameClasses; \t\t\t\t\t\"Here I just want a rename no copy\"",				"\treplace: '^YK(.*)$' with: newClassPrefix,'$1';",				"  execute.",				"```",				"",				"- ==renameClasses== renames the classes in place",				"- ==copyclasses== copies the classes (pay attention we are not sure that it is fully working)",				"",				"",				"",				"",				"",				""			],			"category" : "Refactoring-Core-Refactorings"		},		"StPlayground class" : {			"hash" : 5453568,			"definition" : "StPlayground class\r\tinstanceVariableNames: ''",			"comment" : [				"It is useful to explore ideas or learn something before writing it to a more definitive place.",				"In older versions of Pharo, this tool was known as Workspace.",				"",				"The idea of a playground is not new in smalltalk systems and many other dynamic languages have implemented in one way or another some features of it, usually through a REPL, which shares much of a playground functionality. ",				"",				"Some of the things a playground can do for you: ",				"",				"- it can execute code (and print its results).",				"- it can debug some piece of code you just typed.",				"- it can search references, implementors and senders",				"- it can store variables (both locally or shared to all playgrounds).",				"",				"!! Opening:",				"You usually will open a playground by choosing it from the Pharo menu (Playground option), but it can also be opened programatically. ",				"[[[language=Smalltalk",				"StPlayground open.",				"StPlayground openContents: 'Some scripting'",				"]]]",				"",				"!! Using the playground",				"Most of the functionalities a playground does can be found in the context menu of it (==<meta+t>== or right button click), and we will not explain in detail each of them. But there are some usages that may requirse some more documentation than \"self discovery\". Here are some hints you may find useful: ",				"",				"!!! Keyboard friendly",				"There is a shortcut, ==<meta+t>==, that will show the context menu corresponding to the playground. Additionaly, there will be entries to control also what you can find in the toolbar or status bar. This redundancy is intentional and it will allow the user to navigate through all the options of the playgrounds without needing a secondary device (which, of course, can be used anyway if desired).",				"",				"!!! The print it popover",				"If you try to print results of a computation, you will see that you receive a popover with the results of the execution (e.g. ==21*2== will show a popover with the ==42== number). There are some other things you can do with this popover besides just dismiss it (pressing ==<esc>==, ==<backspace>== or just focusing somewhere else).",				"You can also: ",				"",				"- press ==<cr>== to print the result into your playground (it will be shown enclosed with \"quotation marks\", as a comment.",				"- press ==<meta+i>== to inspect the result.",				"",				"!!! The bindings window",				"The bindings window will be shown by selecting the \"Bindings\" option of the context menu or toolbar.",				"You will see the variables panel and an inspector allowing you to explore/modify the values of a variable. There is also a context menu in the variables list that will allow you some other options. One interesting option you will see is the \"make variable shared\" option. This option will make the variable common to all playgrounds. It is an easy way to explore some posibilities in a separated space, not modifying what you already have there.",				"",				"See *class:StPlaygroundBindingsPresenter*",				"",				"!!! The pages window",				"The pages window will be shown by selecting the \"Pages\" option of the context menu or toolbar.",				"This window will list all playgrounds pages stored in the playground cache directory. You can choose any playground edited in any moment and load it into your playgroud.",				"",				"See *class:StPlaygroundPagesPresenter*"			],			"category" : "NewTools-Playground-View"		},		"WriteBarrierTest class" : {			"hash" : 3708672,			"definition" : "WriteBarrierTest class\r\tinstanceVariableNames: ''",			"comment" : [				"My tests ensure the ReadOnly property of objects work properly.",				"",				"#testMutateIVObject is a good start to understand what is going on.",				"",				"The VM needs to be compiled with -DIMMUTABILTY= true for those tests to work."			],			"category" : "Kernel-Tests-Extended-WriteBarrier"		},		"RSPieLabeledInteraction" : {			"hash" : 5789696,			"definition" : "RSInteraction subclass: #RSPieLabeledInteraction\r\tinstanceVariableNames: 'rotated offset labelColor labelText labelShape'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Pie-Interactions'",			"comment" : [				"I can create labels for a pie builder and set the position acording to arc"			],			"category" : "Roassal3-Pie-Interactions"		},		"SDL2TouchGestureExample" : {			"hash" : 4117760,			"definition" : "SDL2TouchExample subclass: #SDL2TouchGestureExample\r\tinstanceVariableNames: 'circleCenter circleSize'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-SDL2-Examples-Gesture'",			"comment" : [				"You can move the circle by scrolling and change his size by pinching"			],			"category" : "OSWindow-SDL2-Examples-Gesture"		},		"RSAbstractWrapStrategy" : {			"hash" : 5665536,			"definition" : "RSObject subclass: #RSAbstractWrapStrategy\r\tinstanceVariableNames: 'wrapMaxWidth'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Builders-Text'",			"comment" : [				"My subclasses can define the way to wrap a text"			],			"category" : "Roassal3-Builders-Text"		},		"UIThemeDecorator" : {			"hash" : 1046016,			"definition" : "Object subclass: #UIThemeDecorator\r\tinstanceVariableNames: 'theme themeOverrideDict'\r\tclassVariableNames: ''\r\tpackage: 'Spec-MorphicAdapters-Support'",			"comment" : [				"I decorate a UITheme allowing to override desired properties.",				"",				"See #example on class side."			],			"category" : "Spec-MorphicAdapters-Support"		},		"ClyBrowserQueryCache" : {			"hash" : 4839424,			"definition" : "Object subclass: #ClyBrowserQueryCache\r\tinstanceVariableNames: 'startPosition items sizeLimit'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-NavigationModel-Model'",			"comment" : [				"I represent the cache of browser items retrieved by query. I have start position of loaded items, actual cache size and cached items.",				"",				"My instances can be created using:",				"",				"\tClyBrowserQueryCache withSize: cacheSize.",				"\tClyBrowserQueryCache filledBy: aBrowserQueryResult startingAt: startPosition size: cacheSize",				"",				"I am used by ClyBrowserQueryCursor to cache observed items. It uses first instantiation method to prepare initial cache. It not loads any items from query result. Items are loaded explicitly by one of my methods: ",				"\t- loadItemOf: aBrowserQueryResult at: position. It checks if given position is already cached and if it is not then It loads new portion of items starting from requested position.",				"\t- loadItemsOf: aBrowserQueryResult startingWhere: conditionBlock. It asks given result to load new portion of items starting at position where conditionBlock is true. At the end method will return true if such item is found and false otherwise. If no items were found the current cached items will be not changed.",				"\t",				"Second method is used when cursor performs full items update. In that case query result itself is asked to create full update object which includes new cache. It is important for remote scenario because in that case result is remote object and in one request it will return complete cache object including total result size, starting position and updated items.",				"I am supposed to be used by loading new items into cache from different positions. If original result is changed completaly the new cache instance should be requested from it. For example if user removes method from class it will change total size of class methods. In that case all observing cursors should request updated information:",				"",				"\tupdate := cache createFullUpdateOf: aBrowserQueryResult.",				"\tupdatedCache := update itemCache",				"",				"It returns new instance of cache with updated items and total result size. In remote scenario it will return all information in one request.",				"\t",				"I provide few methods to simplify access to my cached items: ",				"\t- itemAt: globalPosition. It returns cached item at position of underlying query result. globalPosition here is not index inside cache. It is index inside full query result. So the method computes local cache position and if cache has no such item then error is signalled.",				"\t- findItemsWith: actualObjects forAbsentDo: absentBlock. it returns items which represent actualObjects. If there is no item for some of given objects method uses absentBlock result.",				"\t- findItemWhich: blockCondition ifExists: presentBlock. It finds item in cache which satisfies given condition. And if item exists then presentBlock is evaluated with it.",				"\t",				"My cached items are always prepared ClyBrowserItem instances. All their properties are precomputed by plugins and ready to use. It is logic of browser query result to prepare items requested by user. Which means for the browser that only visible items collect properties.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\titems:\t\t<SequenceableCollection of<ClyBrowserItem>>",				"\tsizeLimit:\t\t<Integer>",				"\tstartPosition:\t\t<Integer>"			],			"category" : "Calypso-NavigationModel-Model"		},		"CharacterScanner class" : {			"hash" : 721408,			"definition" : "CharacterScanner class\r\tinstanceVariableNames: ''",			"comment" : [				"A CharacterScanner holds the state associated with scanning text. Subclasses scan characters for specified purposes, such as computing a CharacterBlock or placing characters into Forms.",				"",				"Instance Variables",				"\talignment:\t\t<Integer>",				"\tdestX:\t\t<Number>",				"\tdestY:\t\t<Number>",				"\temphasisCode:\t\t<Object>",				"\tfont:\t\t<AbstractFont>",				"\tindentationLevel:\t\t<Integer>",				"\tkern:\t\t<Number>",				"\tlastIndex:\t\t<Integer>",				"\tleftMargin:\t\t<Number>",				"\tline:\t\t<TextLine>",				"\tmap:\t\t<Array>",				"\tpendingKernX:\t\t<Number>",				"\trightMargin:\t\t<Number>",				"\trunStopIndex:\t\t<Integer>",				"\tspaceCount:\t\t<Integer>",				"\tspaceWidth:\t\t<Number>",				"\tstopConditions:\t\t<Array>",				"\ttext:\t\t<Text>",				"\ttextStyle:\t\t<TextStyle>",				"\twantsColumnBreaks:\t\t<Boolean>",				"\txTable:\t\t<Array>",				"",				"alignment",				"\t- an Integer encoding the alignment of text",				"",				"destX",				"\t- horizontal position for next character (distance from left of composition area)",				"",				"destY",				"\t- vertical position for next character (distance from top of composition area)",				"",				"emphasisCode",				"\t- an Integer encoding the current text emphasis to use (bold, italic, ...)",				"",				"font",				"\t- the current font used for measuring/composing/displaying characters",				"",				"indentationLevel",				"\t- an Integer specifying a number of leading tabs to be inserted at beginning of new lines",				"",				"kern",				"\t- a Number specifying additional horizontal spacing to place between characters (spacing is reduced when kern is negative)",				"",				"lastIndex",				"\t- the Integer index of next character to be processed in the text",				"",				"leftMargin",				"\t- a Number specifying the distance between left of composition zone and left of first character in the line.",				"",				"line",				"\t- an object holding information about the line currently being displayed (like first and last index in text).",				"\tNote: this is either a TextLine in Morphic, or TextLineInterval for ST80 compatibility",				"",				"map",				"\t- an array mapping character code to glyph position.",				"\tThis is used by primitive 103 only, in case of ByteString.",				"",				"pendingKernX",				"\t- a Number to be added to horizontal spacing of next char if ever it is in the same font than previous one.",				"\tThe inner scan loop is interrupted by a change of text run.",				"\tBut some changes won't change the font, so the kerning must be remembered and applied later.",				"",				"rightMargin",				"\t- a Number specifying the distance between right of composition zone and right of last character in the line.",				"",				"runStopIndex",				"\t- the Integer index of last character in current text run.",				"",				"spaceCount",				"\t- the number of spaces encoutered so far in current line. This is useful for adjusting the spacing in cas of Justified alignment.",				"",				"spaceWidth",				"\t- the width of space character in current font.",				"",				"stopConditions",				"\t- an Array mapping a table of characters codes for which special actions are to be taken.",				"\tThese are typically control characters like carriage return or horizontal tab.",				"",				"text",				"\t- the text to be measured/composed/displayed",				"",				"textStyle",				"\t- an object holding a context for the text style (which set of font to use, which margins, etc...)",				"",				"wantsColumnBreaks",				"\t- a Boolean indicating whether some special handling for multiple columns is requested.",				"\tTHIS ONLY MAKES SENSE IN CompositionScanner AND SHOULD BE MOVED TO THE SUBCLASS",				"\t",				"xTable",				"\t- an array mapping character code to glyph x coordinate in form.",				"\tThis is used by primitive 103 only, in case of ByteString.",				"\t",				"Implementation note: accelerated Character scanning with primitive 103 requires following order for 5 first instance variables, please don't alter:",				"destX lastIndex xTable map destY"			],			"category" : "Text-Scanning"		},		"SDL_Event" : {			"hash" : 4077056,			"definition" : "FFIExternalObject subclass: #SDL_Event\r\tinstanceVariableNames: ''\r\tclassVariableNames: 'EventTypeMap'\r\tpackage: 'OSWindow-SDL2-Bindings'",			"comment" : [				"This is a raw SDL2 event"			],			"category" : "OSWindow-SDL2-Bindings"		},		"RSAbstractLineLayout" : {			"hash" : 5754624,			"definition" : "RSLayout subclass: #RSAbstractLineLayout\r\tinstanceVariableNames: 'gapSize horizontalGap verticalGap alignment'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"A ROAbstractLineLayout is the abstract superclass of the line layout.",				"",				"Instance Variables",				"\talignment:\t\t<Object>",				"\tgapSize:\t\t<Object>",				"\thorizontalGap:\t\t<Object>",				"\thorizontalOutGap:\t\t<Object>",				"\thorizontallyStretchable:\t\t<Object>",				"\tverticalGap:\t\t<Object>",				"\tverticalOutGap:\t\t<Object>",				"\tverticallyStretchable:\t\t<Object>",				"",				"alignment",				"\t- xxxxx",				"",				"gapSize",				"\t- xxxxx",				"",				"horizontalGap",				"\t- xxxxx",				"",				"horizontalOutGap",				"\t- xxxxx",				"",				"horizontallyStretchable",				"\t- xxxxx",				"",				"verticalGap",				"\t- xxxxx",				"",				"verticalOutGap",				"\t- xxxxx",				"",				"verticallyStretchable",				"\t- xxxxx"			],			"category" : "Roassal3-Layouts-Core"		},		"CPUWatcher class" : {			"hash" : 3206656,			"definition" : "CPUWatcher class\r\tinstanceVariableNames: ''",			"comment" : [				"CPUWatcher implements a simple runaway process monitoring tool",				"that will suspend a process that is taking up too much of Pharo's",				"time and allow user interaction. By default it watches for a Process that",				"is taking more than 80% of the time; this threshold can be changed.",				"",				"CPUWatcher can also be used to show cpu percentages for each process ",				"from within the ProcessBrowser.",				"",				"\tCPUWatcher startMonitoring.\t\"process period 20 seconds, sample rate 100 msec\"",				"\tCPUWatcher current monitorProcessPeriod: 10 sampleRate: 20.",				"\tCPUWatcher current threshold: 0.5.\t\"change from 80% to 50%\"",				"\tCPUWatcher stopMonitoring."			],			"category" : "Tool-ProcessBrowser"		},		"RubPrimarySelectionMorph" : {			"hash" : 602368,			"definition" : "RubPlainSegmentMorph subclass: #RubPrimarySelectionMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Core'",			"comment" : [				"I represent the morph which shows the current selection "			],			"category" : "Rubric-Editing-Core"		},		"ProportionalSplitterMorph" : {			"hash" : 568576,			"definition" : "AbstractResizerMorph subclass: #ProportionalSplitterMorph\r\tinstanceVariableNames: 'leftOrTop rightOrBottom splitsTopAndBottom oldColor traceMorph'\r\tclassVariableNames: 'ShowHandles'\r\tpackage: 'Morphic-Widgets-Windows-Resizing'",			"comment" : [				"I am the morph the user grabs to adjust pane splitters."			],			"category" : "Morphic-Widgets-Windows-Resizing"		},		"CairoFreetypeFontRenderer" : {			"hash" : 3087616,			"definition" : "Object subclass: #CairoFreetypeFontRenderer\r\tuses: TCairoLibrary\r\tinstanceVariableNames: 'font utfConverter canvas advance originalFont fontExtents glyphExtents'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'AthensCairoDefinitions'\r\tpackage: 'Athens-Cairo-Text'",			"comment" : [				"I am used to render freetype font(s) with cairo library.",				"",				"Before start rendering, you must set:",				" - canvas",				" - font"			],			"category" : "Athens-Cairo-Text"		},		"ClyItemCellMorph" : {			"hash" : 5099776,			"definition" : "FTCellMorph subclass: #ClyItemCellMorph\r\tinstanceVariableNames: 'label'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-Table'",			"comment" : [				"I represent simple label based cell in QueryView table.",				"You can decorate this lable using special color or font styles: ",				"\tcellMorph label emphasis: TextEmphasis italic emphasisCode.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tlabel:\t\t<Morph>"			],			"category" : "Calypso-Browser-Table"		},		"MenuRegistration" : {			"hash" : 1664000,			"definition" : "Object subclass: #MenuRegistration\r\tinstanceVariableNames: 'parentName itemList order spec owner isGroup precondition'\r\tclassVariableNames: ''\r\tpackage: 'MenuRegistration-Core'",			"comment" : [				"A MenuRegistration stores the declaration of a menu item. It is mainly an handler for a PluggableMenuItemSpec. ",				"",				"A menu item is declared withing a particular method tagged with a pragma. This kind-of method takes a builder as argument and its evaluation results in the building of a MenuRegistration sub-tree which is stored in the builder.   As an example:",				"MenuRegistrationExample class>>myOwnCoolToolRegistrationOn: aBuilder ",				"\t<worldMenuExample> ",				"\t(aBuilder item: #MyOwnCoolTool)",				"\t\tlabel: 'My own cool tool';",				"\t\ttarget: Workspace; ",				"\t\tselector: #openContents: ;",				"\t\targuments: #('yep, my own cool tool can be opened from the world menu ! :)')",				"\t",				"Evaluating this method results in the creation of a MenuRegistration which name is #MyOwnCoolTool. Thus, the resulting sub-tree is only made of a root node. After it has be built, this root node is recorded in the builder. To experiment this, just evaluate the following code:",				"-------------",				"| builder |",				"builder := PragmaMenuBuilder new.",				"MenuRegistrationExample myOwnCoolToolRegistrationOn: builder.",				"builder explore",				"-------------",				"",				"Using pragma allows the menu builder to dynamically discover which are the methods to evaluate in order to build a menu. Thus, a resulting menu is built by evaluating a set of methods which share the same pragma keyword.",				"In the following example, all method having <worldMenuExample> are evaluated for the building of the resulting menu:",				"---------------",				"(PragmaMenuBuilder pragmaKeyword: 'worldMenuExample' model: nil) menu popUpInWorld",				"---------------",				"",				"Within a method, three kind of declarations can be used: (1) item by item (2) an item with a sub-menu and (3) a group.",				"",				"1 -  item by item menu registration declaration:",				"This kind of declaring is for the setting of one menu item and only one within a method.",				"",				"1.1 -  A simple menu item with an action",				"In the following example, a menu item with the name #'Browser' and a action which ",				"consists in sending #openClassBrowser to StandardToolSet is declared:",				"",				"AClassSomewhere class>>openBrowserOn: aBuilder",				"\t<myMenuTest>",				"\t(aBuilder item: #'Browser') ",				"\t\ttarget: StandardToolSet; ",				"\t\tselector: #openClassBrowser.",				"",				"A simple action without any argument can also be set with a block:",				"\t(aBuilder item: #'Browser') action: [StandardToolSet openClassBrowser]",				"",				"You can also indicate a balloon help string and a particular icon:",				"\t(aBuilder item: #'Browser') ",				"\t\taction: [StandardToolSet openClassBrowser];",				"\t\thelp: 'Open a system browser';",				"\t\ticon: MenuIcons smallSystemBrowserIcon",				"",				"If the action needs one or several arguments, you can also give it/them as follow:",				"\t(aBuilder item: #'Save and quit') ",				"\t\ttarget: SmalltalkImage current; ",				"\t\tselector: #snapshot:andQuit:.",				"\t\targuments: #(true true)",				"\t\t",				"By default, the item label is set with the item name but it can be explicitly given as follow:",				"\t(aBuilder item: #'Browser')",				"\t\tlabel: 'System browser'; ",				"\t\ttarget: StandardToolSet; ",				"\t\tselector: #openClassBrowser.",				"",				"1.2  -  Placing the menu item in a  menu",				"The resulting menu item of previous example will be placed at the root of the menu.",				"In order to declare another place for it, you have to explicitly set its parent name.",				"As an example, consider the following item which declares a simple entry with no action.",				"Such item is typically used as a root for a sub-menu tree:",				"",				"AClassSomewhere class>>openToolsOn: aBuilder",				"\t<myMenuTest>",				"\t(aBuilder item: #'Tools')",				"",				"Now, a sub-menu item for #Tools can be declared separately, within another method",				"by using the #parent: message:",				"",				"AnotherClassSomewhere class>>myToolsOn: aBuilder",				"\t<myMenuTest>",				"\t(aBuilder item: #'CoolTool')",				"\t\tlabel: 'Cool tool';",				"\t\tparent: #Tools;",				"",				"Note that the argument of #parent: must be the name of another item. ",				"If it is not the case, then the parent name indication is simply ignored.",				"",				"1.3  -  Item ordering",				"",				"If no ordering setting is indicated, items ordering is unpredicable (it depends on method retrieving order). If one want an item to appear at a certain position, it is possible to set it by sending #order: to a MenuRegistration. The #order: message takes a float as argument. ",				"As an example, see  the two following declarations, in the resulting menu, Wozy is placed before 'Wozy configuration'",				"",				"AnotherClassSomewhere class>>myWozySystemOpenOn: aBuilder",				"\t<myMenuTest>",				"\t(aBuilder item: #'Wozy')",				"\t\tparent: #CoolTool;",				"\t\torder: 1.0",				"\t\t",				"AnotherClassSomewhere class>>myWozySystemConfigOn: aBuilder",				"\t<myMenuTest>",				"\t(aBuilder item: #'Wozy configuration')",				"\t\tparent: #CoolTool;",				"\t\torder: 2.0",				"",				"2) Item with a submenu",				"The one menu item - one declaring method way can be ugly. When a set a menu items are known to be put all-together, it is possible to declare the sub-tree in one method. The following example show such a sub-tree with the #Tools item at root and four sub-items declared in a single method. Note a menu target declared for the root is shared by all sub-items. In that case, it also remains possible for a sub-item to declare its own target.",				"",				"AClassSomewhere class>>openToolsOn: aBuilder",				"\t<myMenuTest>",				"\t(aBuilder item: #'Tools')",				"\t\ttarget:  StandardToolSet; \"The target is shared by all children\"",				"\t\twith: [ \"My sub-menu are given here\"",				"\t\t\t(aBuilder item: #'System browser') selector: #openClassBrowser.",				"\t\t\t(aBuilder item: #Workspace) selector: #openWorkspace.",				"\t\t\t(aBuilder item: #'Test Runner') selector: #openTestRunner.",				"\t\t\t(aBuilder item: #'Monticello Browser') selector: #openMonticelloBrowser]",				"\t\t",				"3) group of menu items",				"When you want some items to be shown always grouped together, you can use a group. Its declaring is like an item with a submenu except that you are using the message #group: instead of #item:. The consequence is that only the children are shown in the menu. Of course, #label and #icon: are ignored for a group. Here is an example:",				"",				"AClassSomewhere class>>mostUsedToolsOn: aBuilder",				"\t<myMenuTest>",				"\t(aBuilder group: #MostUsedTools) \"My name can be also used as parent name\"",				"\t\twithSeparatorAfter; \"A separator will be added after my last child\"",				"\t\torder: 0; \"the entire group will be placed at the top\"",				"\t\ttarget:  StandardToolSet; \"The target is shared by all children\"",				"\t\twith: [",				"\t\t\t(aBuilder item: #'System browser') selector: #openClassBrowser.",				"\t\t\t(aBuilder item: #Workspace) selector: #openWorkspace.",				"\t\t\t(aBuilder item: #'Test Runner') selector: #openTestRunner.",				"\t\t\t(aBuilder item: #'Monticello Browser') selector: #openMonticelloBrowser]",				"",				"---------------------------",				"\t\t",				"Instance Variables",				"\tisGroup:\t\t<Boolean>",				"\titemList:\t\t<SortedCollection>",				"\torder:\t\t<Number>",				"\towner:\t\t<MenuRegistration>",				"\tparentName:\t\t<Symbol>",				"\tspec:\t\t<PluggableMenuItemSpec>",				"",				"isGroup",				"\t- if true, then this item is ignored and flatten",				"",				"itemList",				"\t- all my MenuRegistration (my sub-menus or my elements if i'm a group)",				"",				"order",				"\t- my order in the owner list",				"",				"owner",				"\t- my owner",				"",				"parentName",				"\t- the declared parent name which serve as basis for PragmaBenuBuilder>>#arrangeRegistrations",				"",				"spec",				"\t- my PluggableMenuItemSpec"			],			"category" : "MenuRegistration-Core"		},		"DiffPresenter" : {			"hash" : 886784,			"definition" : "AbstractWidgetPresenter subclass: #DiffPresenter\r\tinstanceVariableNames: 'leftTextHolder rightTextHolder showOptions contextClassHolder showOnlyDestination showOnlySource leftLabelHolder rightLabelHolder'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"I am a Spec widget useful for visualising differences between two strings.",				"",				"When a classContext: is set, the strings are highlighted using such contextual information.",				"",				"Examples:",				"",				"self exampleWithoutOptions.",				"self exampleWithOptions."			],			"category" : "Spec-Core-Widgets"		},		"ClapCommand" : {			"hash" : 398592,			"definition" : "ClapParameterized subclass: #ClapCommand\r\tinstanceVariableNames: 'flags subcommands'\r\tclassVariableNames: ''\r\tpackage: 'Clap-Core-Specification'",			"comment" : [				"I represent a command or subcommand.",				"",				"Commands are recognized by a keyword, possibly with aliases for convenience. Besides positionals, commands can have flags, as well as nested (sub)commands.",				"",				"Subcommands work like a trie, to organize and select the various behaviors of a complex program. At each level in a given invocation, at most one subcommand will be recognized, most often as the last parameter of its parent command.",				"",				"",				"To create a new instance of this class, you must write this:",				"\tClapCommand withName: <CommandName>",				"\t",				"And after, if you want to add a flag:",				"\taddFlag: ClapFlag withName: <FlagName>",				"\t",				"If you want to add a positional:",				"\taddPositional: ClapPositional withName: <PositionalName>",				"\t",				"If you want to add a subcommand:",				"\taddSubCommand: <subCommand>",				"\t",				"Example for the eval command: ",				"\t(ClapCommand withName: 'eval')",				"\t\taddFlag: ClapFlag withName: 'help';",				"\t\taddPositional: ClapPositionnal withName: 'smalltalk \t\texpression'."			],			"category" : "Clap-Core-Specification"		},		"ZnNetworkingUtils class" : {			"hash" : 1418752,			"definition" : "ZnNetworkingUtils class\r\tinstanceVariableNames: ''",			"comment" : [				"I am ZnNetworkingUtils holding various utilities related to HTTP networking.",				"",				"My class side is a general API.",				"",				"My instance side is a factory.",				"",				"ZnNetworkingUtils default socketStreamClass: SocketStream.",				"ZnNetworkingUtils default socketStreamClass: ZdcSocketStream.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Support"		},		"RBRenameInstanceVariableRefactoring" : {			"hash" : 3182336,			"definition" : "RBVariableRefactoring subclass: #RBRenameInstanceVariableRefactoring\r\tinstanceVariableNames: 'newName browsedEnvironment renameAccessors'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Core-Refactorings'",			"comment" : [				"I am a refactoring for rename instance variables.",				"",				"I rename the instance variable in the class definition, in all methods refering to this variable and rename the old accessors.",				"",				"My precondition verifies that the new variable is valid and not yet used in the whole class hierarchy."			],			"category" : "Refactoring-Core-Refactorings"		},		"RSShowProgressLabelDecorator" : {			"hash" : 5791744,			"definition" : "RSAbstractPieDecorator subclass: #RSShowProgressLabelDecorator\r\tinstanceVariableNames: 'labelShape progressLabel highlight'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Pie-Decorators'",			"comment" : [				"I put interactions on the shapes and a label for updating"			],			"category" : "Roassal3-Pie-Decorators"		},		"HistorySlot" : {			"hash" : 378624,			"definition" : "IndexedSlot subclass: #HistorySlot\r\tinstanceVariableNames: 'size'\r\tclassVariableNames: ''\r\tpackage: 'VariablesLibrary-Slots'",			"comment" : [				"This is the History slot. It saves (by default 5) older values. ",				"The complete history can be read with #readHistory:"			],			"category" : "VariablesLibrary-Slots"		},		"IceTipCheckoutModel" : {			"hash" : 6268160,			"definition" : "IceTipDiffPreviewModel subclass: #IceTipCheckoutModel\r\tinstanceVariableNames: 'checkoutStrategy checkoutStrategies'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-Model'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcheckoutStrategies:\t\t<Object>",				"\tcheckoutStrategy:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Iceberg-TipUI-Model"		},		"SourceCodeProRegular class" : {			"hash" : 726528,			"definition" : "SourceCodeProRegular class\r\tinstanceVariableNames: ''",			"comment" : [				"http://sourceforge.net/projects/sourcecodepro.adobe/",				"",				"Copyright 2010, 2012 Adobe Systems Incorporated (http://www.adobe.com/), with Reserved Font Name 'Source'. All Rights Reserved. Source is a trademark of Adobe Systems Incorporated in the United States and/or other countries.",				"",				"This Font Software is licensed under the SIL Open Font License, Version 1.1.",				"",				"This license is copied below, and is also available with a FAQ at: http://scripts.sil.org/OFL",				"",				"",				"-----------------------------------------------------------",				"SIL OPEN FONT LICENSE Version 1.1 - 26 February 2007",				"-----------------------------------------------------------",				"",				"PREAMBLE",				"The goals of the Open Font License (OFL) are to stimulate worldwide",				"development of collaborative font projects, to support the font creation",				"efforts of academic and linguistic communities, and to provide a free and",				"open framework in which fonts may be shared and improved in partnership",				"with others.",				"",				"The OFL allows the licensed fonts to be used, studied, modified and",				"redistributed freely as long as they are not sold by themselves. The",				"fonts, including any derivative works, can be bundled, embedded, ",				"redistributed and/or sold with any software provided that any reserved",				"names are not used by derivative works. The fonts and derivatives,",				"however, cannot be released under any other type of license. The",				"requirement for fonts to remain under this license does not apply",				"to any document created using the fonts or their derivatives.",				"",				"DEFINITIONS",				"\"Font Software\" refers to the set of files released by the Copyright",				"Holder(s) under this license and clearly marked as such. This may",				"include source files, build scripts and documentation.",				"",				"\"Reserved Font Name\" refers to any names specified as such after the",				"copyright statement(s).",				"",				"\"Original Version\" refers to the collection of Font Software components as",				"distributed by the Copyright Holder(s).",				"",				"\"Modified Version\" refers to any derivative made by adding to, deleting,",				"or substituting -- in part or in whole -- any of the components of the",				"Original Version, by changing formats or by porting the Font Software to a",				"new environment.",				"",				"\"Author\" refers to any designer, engineer, programmer, technical",				"writer or other person who contributed to the Font Software.",				"",				"PERMISSION & CONDITIONS",				"Permission is hereby granted, free of charge, to any person obtaining",				"a copy of the Font Software, to use, study, copy, merge, embed, modify,",				"redistribute, and sell modified and unmodified copies of the Font",				"Software, subject to the following conditions:",				"",				"1) Neither the Font Software nor any of its individual components,",				"in Original or Modified Versions, may be sold by itself.",				"",				"2) Original or Modified Versions of the Font Software may be bundled,",				"redistributed and/or sold with any software, provided that each copy",				"contains the above copyright notice and this license. These can be",				"included either as stand-alone text files, human-readable headers or",				"in the appropriate machine-readable metadata fields within text or",				"binary files as long as those fields can be easily viewed by the user.",				"",				"3) No Modified Version of the Font Software may use the Reserved Font",				"Name(s) unless explicit written permission is granted by the corresponding",				"Copyright Holder. This restriction only applies to the primary font name as",				"presented to the users.",				"",				"4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font",				"Software shall not be used to promote, endorse or advertise any",				"Modified Version, except to acknowledge the contribution(s) of the",				"Copyright Holder(s) and the Author(s) or with their explicit written",				"permission.",				"",				"5) The Font Software, modified or unmodified, in part or in whole,",				"must be distributed entirely under this license, and must not be",				"distributed under any other license. The requirement for fonts to",				"remain under this license does not apply to any document created",				"using the Font Software.",				"",				"TERMINATION",				"This license becomes null and void if any of the above conditions are",				"not met.",				"",				"DISCLAIMER",				"THE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,",				"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF",				"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT",				"OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE",				"COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,",				"INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL",				"DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING",				"FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM",				"OTHER DEALINGS IN THE FONT SOFTWARE."			],			"category" : "EmbeddedFreeType-Fonts"		},		"RubDropListButtonRuler" : {			"hash" : 596224,			"definition" : "RubScrolledTextSideRuler subclass: #RubDropListButtonRuler\r\tinstanceVariableNames: 'downArrowBtn'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Widgets'",			"comment" : [				"I'm a side button to be used with a text field to open an entry completion list "			],			"category" : "Rubric-Editing-Widgets"		},		"MessageNotUnderstood" : {			"hash" : 1058304,			"definition" : "Error subclass: #MessageNotUnderstood\r\tinstanceVariableNames: 'message receiver reachedDefaultHandler'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Exceptions'",			"comment" : [				"This exception is provided to support Object>>doesNotUnderstand:."			],			"category" : "Kernel-Exceptions"		},		"RePropertyAction" : {			"hash" : 1735936,			"definition" : "Object subclass: #RePropertyAction\r\tinstanceVariableNames: 'action icon description'\r\tclassVariableNames: ''\r\tpackage: 'Renraku-Critiques'",			"comment" : [				"I am an action that appears in the Nautiluas qa plugin next the the item's title.",				"",				"icon - a Form that will appear on the button (green square by default)",				"",				"description - the description that will be present on popup on hower",				"",				"action - a two (ortional) parameter block that is evaluated with the critic and the current code entity (class, method…) when the button is pressed",				" No newline at end of file"			],			"category" : "Renraku-Critiques"		},		"ClyActivityAnimationIconMorph" : {			"hash" : 5089024,			"definition" : "Morph subclass: #ClyActivityAnimationIconMorph\r\tinstanceVariableNames: 'progressIconMorph progress'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-UI'",			"comment" : [				"I implement rotated icon anomation.",				"I use TabMorph animation icons (#refreshIcon1, #refreshIcon2, ..) to switch rotating splines at every UI step.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tprogress:\t\t<Integer>",				"\tprogressIconMorph:\t\t<ImageMorph>"			],			"category" : "Calypso-Browser-UI"		},		"LogicalFontManager" : {			"hash" : 1842944,			"definition" : "Object subclass: #LogicalFontManager\r\tinstanceVariableNames: 'fontProviders'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'TextConstants'\r\tpackage: 'Fonts-Infrastructure-Logical'",			"comment" : [				"I reference all font families available in the  system.",				"",				"For example:",				"",				"LogicalFontManager current allFamilies.",				"",				"FreeTypeFontSelectorDialogWindow new open."			],			"category" : "Fonts-Infrastructure-Logical"		},		"EditorFindReplaceDialogWindow class" : {			"hash" : 1939456,			"definition" : "EditorFindReplaceDialogWindow class\r\tinstanceVariableNames: 'defaultFindReplaceServiceClass'",			"comment" : [				"A find/replace dialog window for editors"			],			"category" : "Text-Edition-UI"		},		"DialogWindowPresenter" : {			"hash" : 914432,			"definition" : "WindowPresenter subclass: #DialogWindowPresenter\r\tinstanceVariableNames: 'contents toolbar'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Support'",			"comment" : [				"A DialogWindowPresenter is a presenter used to describe a DialogWindow"			],			"category" : "Spec-Core-Support"		},		"TableLayoutProperties" : {			"hash" : 1841408,			"definition" : "LayoutProperties subclass: #TableLayoutProperties\r\tinstanceVariableNames: 'cellInset cellPositioning cellSpacing layoutInset listCentering listDirection listSpacing reverseTableCells rubberBandCells wrapCentering wrapDirection minCellSize maxCellSize'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Layouts'",			"comment" : [				"Properties for Table layouts like inset, spacing, ..."			],			"category" : "Morphic-Base-Layouts"		},		"MD5NonPrimitive" : {			"hash" : 1027328,			"definition" : "MD5 subclass: #MD5NonPrimitive\r\tinstanceVariableNames: ''\r\tclassVariableNames: 'ABCDTable IndexTable ShiftTable SinTable'\r\tpackage: 'System-Hashing-MD5'",			"comment" : [				"This class implements the MD5 128-bit one-way hash function.  It relies on",				"the ThirtyTwoBitRegister class supplied as part of the \"Digital Signatures\"",				"functionality included in Squeak 2.7.  As of this date (1/20/2000), the",				"U.S. Government has lifted many of the previous restrictions on the export",				"of encryption software, but you should check before exporting anything",				"including this code.  MD5 is commonly used for some secure Internet",				"protocols, including authentication in HTTP, which is why I wrote it.",				"",				"Submitted by Duane Maxwell",				""			],			"category" : "System-Hashing-MD5"		},		"IconStyler" : {			"hash" : 3507456,			"definition" : "RBProgramNodeVisitor subclass: #IconStyler\r\tinstanceVariableNames: 'textModel stylerClasses'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Tools-Breakpoints'",			"comment" : [				"I'm in charge to styling an ast with highlighting. To highglight something I need the rubric text model in textModel."			],			"category" : "Reflectivity-Tools-Breakpoints"		},		"CmdMenuCommandActivationStrategy" : {			"hash" : 2882560,			"definition" : "CmdCommandActivationStrategy subclass: #CmdMenuCommandActivationStrategy\r\tinstanceVariableNames: 'menuItemOrder menuGroup menuItemName'\r\tclassVariableNames: ''\r\tpackage: 'Commander-Core'",			"comment" : [				"I am a root of command activation hierarchy which supposed to represent commands in kind of menu.",				"I provide information about name, group and position of command inside menu:",				"- menuItemName. If it is not specified I ask command for #defaultMenuItemName.",				"- menuItemOrder",				"- menuGroup",				"My subclasses provide meaning of concrete menu type. It could be context menu, toolbar menu, halo menu and etc..",				"To build any kind of end user menu my subclasses first build abstract CmdMenu. It represents tree structure of concrete menu implemetation.",				"Concrete menu activations extend abstract menu to delegate item building to underlying commands and groups.",				"",				"Menu groups are represented by subclasses of CmdMenuGroup. They are used as classes to declare activation strategy. Instances are only created during menu building.",				"Groups are containers of command items and other groups.",				"Each group defines #parentGroup on class side. By default it is CmdRootMenuGroup. Subclasses can override it to define deep tree structure.",				"",				"I provide suitable methods to declare activators:",				"\tConcreteMenuCommandActivation byRootGroupItemFor: YourAppContext ",				"\tConcreteMenuCommandActivation byRootGroupItemOrder: aNumber for: YourAppContext",				"\tConcreteMenuCommandActivation byItemOf: menuGroupClass for: YourAppContext",				"\tConcreteMenuCommandActivation byItemOf: menuGroupClass order: aNumber for: YourAppContext",				"",				"Larger order pushes command to the end of menu. Groups are also define order by instance side method #order.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tmenuGroup:\t\t<CmdMenuGroup class>",				"\tmenuItemName:\t\t<String>",				"\tmenuItemOrder:\t\t<Number>"			],			"category" : "Commander-Core"		},		"ClyMergedHierarchy" : {			"hash" : 4895744,			"definition" : "ClyClassHierarchy subclass: #ClyMergedHierarchy\r\tinstanceVariableNames: 'mergedParts'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemQueries-Results'",			"comment" : [				"I am a special kind of hierarchy which merges multiple different hierarchies.",				"Each of my #mergedParts adds own relationship to the building hiearchy map: ",				"",				"\tClyMergedHierarchy>>buildParentMap: aHierarchyMap for: aClass",				"\t\tmergedParts do: [ :each | ",				"\t\t\taHierarchyMap hierarchy: each.",				"\t\t\teach buildParentMap: aHierarchyMap for: aClass ].",				"\t\taHierarchyMap hierarchy: self.",				"",				"To create my instances use following methods:",				"\t",				"\tClyMergedHierarchy merge: {ClySuperclassHierarchy new. ClyTraitUserHierarchy new}.",				"",				"Or simply use comma to concatenate hierarchies\t:",				"\t",				"\tClySubclassHierarchy new, ClyTraitUserHierarchy new.",				"",				"In this example the parent of each class can be either superclass or inherited trait.",				"Such hierarchy can include duplicated nodes.",				"",				"To provide consisten merging I override sort function of all my parts to ensure that all of them are sorted in same way.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tmergedParts:\t\t<Collection of<ClyClassHierarchy>>"			],			"category" : "Calypso-SystemQueries-Results"		},		"RGComment" : {			"hash" : 5252608,			"definition" : "RGElement subclass: #RGComment\r\tinstanceVariableNames: 'content author time'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"RGComment is a first-class representation of class's comments"			],			"category" : "Ring-Core-Kernel"		},		"ReDeprecateWithFirstCharacterDownshiftedRule" : {			"hash" : 3934208,			"definition" : "ReNodeRewriteRule subclass: #ReDeprecateWithFirstCharacterDownshiftedRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Use uncapitalized instead of withFirstCharacterDownshifted since withFirstCharacterDownshifted is ugly and is deprecated now."			],			"category" : "GeneralRules-Migrated"		},		"SpApplicationBackend" : {			"hash" : 2172160,			"definition" : "Object subclass: #SpApplicationBackend\r\tinstanceVariableNames: 'adapterBindings'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Support'",			"comment" : [				"I'm a backend for a Spec applications. ",				"Backends define different things from an application: ",				"- which UI backend will use (Morphic by default), ",				"- access to system resources (such as icons),",				"- access to standard dialogs usually residing in the operating system (but also simulated)",				"- ..."			],			"category" : "Spec2-Core-Support"		},		"ReAssignmentInBlockRule" : {			"hash" : 3943424,			"definition" : "ReNodeMatchRule subclass: #ReAssignmentInBlockRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks ensure:, ifCurtailed:, and showWhile: blocks for assignments or returns that are the last statement in the block. These assignments or returns can be moved outside the block since these messages return the value of the block."			],			"category" : "GeneralRules-Migrated"		},		"IceMCVersionInfo" : {			"hash" : 6217472,			"definition" : "MCLazyVersionInfo subclass: #IceMCVersionInfo\r\tinstanceVariableNames: 'commit package'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Adapters'",			"comment" : [				"Adapter to produce an MCVersionInfo that knows how to (lazily) load ancestors from an Iceberg repository."			],			"category" : "Iceberg-Adapters"		},		"MemoryStore" : {			"hash" : 1434880,			"definition" : "FileSystemStore subclass: #MemoryStore\r\tinstanceVariableNames: 'root'\r\tclassVariableNames: 'CurrentFS'\r\tpackage: 'FileSystem-Memory-Store'",			"comment" : [				"I'm a specific store for memory file system"			],			"category" : "FileSystem-Memory-Store"		},		"FFICallout class" : {			"hash" : 488960,			"definition" : "FFICallout class\r\tinstanceVariableNames: ''",			"comment" : [				"I'm implement a callout mechanism to be used with nb calls formatting.",				"",				"Callout arguments can be either:",				"- an integer constant, boolean or nil",				"- a type name (string or symbol)",				"- a class name",				"- a class variable",				"- any other object, which responds to #asExternalTypeOn:",				"",				"Options: ",				"Options may change the execution/compilation of ffi calls. ",				"Not many are predefined, here a small explanation of them: ",				"",				"optIndirectCall \t\tThis will perform an \"indirect function call\" as explained here: https://en.wikipedia.org/wiki/Function_pointer"			],			"category" : "UnifiedFFI-Callouts"		},		"RSHistogramPlot" : {			"hash" : 5811968,			"definition" : "RSAbstractPlot subclass: #RSHistogramPlot\r\tinstanceVariableNames: 'x bins bars binningStrategy'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Core'",			"comment" : [				"Histogram Plot for Roassal",				"```",				"| values c plot |",				"values := #(0.5 0.5 0.3 -0.2 1.6 0 0.1 0.1 0.6 0.4).",				"c := RSChart new.",				"plot := RSHistogramPlot new x: values; bins: #(-0.5 0 0.5 1 0.5 1 1.5 2).",				"c addPlot: plot.",				"c addDecoration: RSVerticalTick new.",				"c addDecoration: RSHorizontalTick new doNotUseNiceLabel.",				"^ c",				"```",				"",				"- Bins, can be a number or array of sorted numbers.",				"- By default bins is 10.",				"- For the previous example bins are `#(-0.5 0 0.5 1 0.5 1 1.5 2)`.",				"- First bin is #(-0.5 0), second bin is #(0 0.5), etc.",				"- All bins but last use this expression to calculate the number of values in each bin: `start <= n and: [n < end]`",				"- Last bin uses this expression `n between: start and: end`",				"- `binningStrategy:` allows to the user define different strategies to calculate the size for bins. Check `RSBinningStrategy`"			],			"category" : "Roassal3-Chart-Core"		},		"RSSunburstExtentLayout" : {			"hash" : 5787904,			"definition" : "RSAbstractSunburstLayout subclass: #RSSunburstExtentLayout\r\tinstanceVariableNames: 'wside'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Sunburst'",			"comment" : [				"I am a layout for Sunburst Visualization, I use a radius to calculate the better distance of all arcs in the visualization.",				"",				"You can use radius to set the total radius of sunburst",				"or use the selector extent:, that uses radius size"			],			"category" : "Roassal3-Sunburst"		},		"DictionaryValueHolder" : {			"hash" : 686336,			"definition" : "NewValueHolder subclass: #DictionaryValueHolder\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'NewValueHolder-Core-Base'",			"comment" : [				"I am designed specifically for dictionaries."			],			"category" : "NewValueHolder-Core-Base"		},		"DefaultExternalDropHandler class" : {			"hash" : 1650688,			"definition" : "DefaultExternalDropHandler class\r\tinstanceVariableNames: ''",			"comment" : [				"An alternative default handler that uses the file-list services to process files."			],			"category" : "Morphic-Core-Worlds"		},		"AthensBalloonSurface" : {			"hash" : 1832192,			"definition" : "AthensSurface subclass: #AthensBalloonSurface\r\tinstanceVariableNames: 'form mask maskEnabled pathTransform paintTransform imageTransform fillTransform strokeTransform engine'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Balloon-Surface'",			"comment" : [				"I am concrete implementation of Athens surface which using balloon engine for rendering. "			],			"category" : "Athens-Balloon-Surface"		},		"IceMetacelloPharoPlatform class" : {			"hash" : 6246400,			"definition" : "IceMetacelloPharoPlatform class\r\tinstanceVariableNames: ''",			"comment" : [				"I'm a class to add support for iceberg to metacello."			],			"category" : "Iceberg-Metacello-Integration-Platform"		},		"ReNodeRewriteRule" : {			"hash" : 1725184,			"definition" : "RePatternCodeRule subclass: #ReNodeRewriteRule\r\tinstanceVariableNames: 'matches'\r\tclassVariableNames: ''\r\tpackage: 'Renraku-Rules-Rewrite'",			"comment" : [				"The base rule for smalltalk code match & rewrite rules. The rule operates on AST nodes.",				"",				"Use the following methods in the initialization to setup your subclass:",				"",				"- replace:with:",				"- addMatchingExpression:rewriteTo:",				"\tadd a \"from->to\" pair of strings that represent a rewrite expression string to match and a rewrite expression to replace the matched node.",				"",				"- addMatchingMethod:rewriteTo: ",				"\tsame as the previous, but the rewrite expression are parsed as method definitions",				"",				"- replace:by:",				"- addMatchingExpression:rewriteWith:",				"\tadd \ta \"from->to\" pair, first element of which is a rewrite expression in a form of a string that is used to match nodes. The second parameter is a block that has to return a node which should replace the matched one. The block may accept 2 atguments: the matched node, and a dictionary of wildcard variables mapping. ",				"\t"			],			"category" : "Renraku-Rules-Rewrite"		},		"DeepCopier" : {			"hash" : 924160,			"definition" : "Object subclass: #DeepCopier\r\tinstanceVariableNames: 'references'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Copying'",			"comment" : [				"DeepCopier does a veryDeepCopy.  ",				"",				"It is a complete tree copy using a dictionary.  Any object that is in the tree twice is only copied once.  All references to the object in the copy of the tree will point to the new copy.  See Object|veryDeepCopy which calls (self veryDeepCopyWith: aDeepCopier).",				"",				"When a tree of morphs points at a morph outside of itself, that morph should not be copied.  Use our own kind of weak pointers for the 'potentially outside' morphs.   Default is that any new class will have all of its fields deeply copied.  If a field needs to be weakly copied, define veryDeepInner: and veryDeepFixupWith:.",				"     veryDeepInner: has the loop that actually copies the fields.  If a class defines its own copy of veryDeepInner: (to leave some fields out), then veryDeepFixupWith: will be called on that object at the end.  veryDeepInner: can compute an alternate object to put in a field.  (Object veryDeepCopyWith: discovers which superclasses did not define veryDeepInner:, and very deeply copies the variables defined in those classes).",				"\tTo decide if a class needs veryDeepInner: and veryDeepFixupWith:, ask this about an instance:  If I duplicate this object, does that mean that I also want to make duplicates of the things it holds onto?  If yes, (i.e. a Paragraph does want a new copy of its Text) then do nothing.  If no, (i.e. an undo command does not want to copy the objects it acts upon), then define veryDeepInner: and veryDeepFixupWith:.",				"\t",				"Here is an analysis for the specific case of a morph being held by another morph.  ",				"Does field X contain a morph (or a Player whose costume is a morph)?  If not, no action needed.",				"Is the morph in field X already a submorph of the object?  Is it down lower in the submorph tree?",				"\tIf so, no action needed.",				"Could the morph in field X every appear on the screen (be a submorph of some other morph)?",				"\tIf not, no action needed.",				"\tIf it could, you must write the methods veryDeepFixupWith:   and   veryDeepInner:, and in them, refrain from sending veryDeepCopyWith: to the contents of field X.",				"",				"",				"----- Things Ted is still considering -----",				"Rule:  If a morph stores a uniClass class (Player 57) as an object in a field, the new uniClass will not be stored there.   Each uniClass instance does have a new class created for it.  (fix this by putting the old class in references and allow lookup?  Wrong if encounter it before seeing an instance?)",				"",				"Rule: If object A has object C in a field, and A says (^ C) for the copy, but object B has A in a normal field and it gets deepCopied, and A in encountered first, then there will be two copies of C.  (just be aware of it)",				"",				"Dependents are now fixed up.  Suppose a model has a dependent view.  In the DependentFields dictionary, model -> (view ...).  ",				"\tIf only the model is copied, no dependents are created (no one knows about the new model).  ",				"\tIf only the view is copied, it is inserted into DependentFields on the right side.  model -> (view  copiedView ...).  ",				"\tIf both are copied, the new model has the new view as its dependent.",				"\tIf additional things depend on a model that is copied, the caller must add them to its dependents."			],			"category" : "Kernel-Copying"		},		"MWVisualizationsTest" : {			"hash" : 3401728,			"definition" : "TestCase subclass: #MWVisualizationsTest\r\tuses: TIceImagesExporting\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'MethodWrappers-Tests-Visualizations'",			"comment" : [				"This class contains tests"			],			"category" : "MethodWrappers-Tests-Visualizations"		},		"IceUnknownCommit" : {			"hash" : 6176512,			"definition" : "IceCommitish subclass: #IceUnknownCommit\r\tinstanceVariableNames: 'id datetime'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Core'",			"comment" : [				"I represent an commit that cannot be found in the current repository. I have a commit id/hash, but that commit was not fetched (or was wrongly set). Once the real commit is fetched, I'll be becomed into a real commit."			],			"category" : "Iceberg-Core"		},		"TFAbiTypes class" : {			"hash" : 2012928,			"definition" : "TFAbiTypes class\r\tinstanceVariableNames: ''",			"comment" : [				"I represent all possible ABI Types"			],			"category" : "ThreadedFFI-Base"		},		"ISOLanguageDefinition class" : {			"hash" : 766976,			"definition" : "ISOLanguageDefinition class\r\tinstanceVariableNames: ''",			"comment" : [				"The language definitions from International Organization for Standardization.",				"",				"You can obtain the list of the all the ISOCountries and languages."			],			"category" : "System-Localization-Utilities"		},		"PragmaMenuAndShortcutRegistrationItem" : {			"hash" : 1667072,			"definition" : "Object subclass: #PragmaMenuAndShortcutRegistrationItem\r\tinstanceVariableNames: 'item action parent order enabledBlock label help icon selector arguments withSeparatorAfter target enabled group with precondition shortcut platform default category shortcutName keyText'\r\tclassVariableNames: ''\r\tpackage: 'MenuRegistration-Core'",			"comment" : [				"A PragmaMenuAndShortcutRegistrationItem is an item of a menu or keymap"			],			"category" : "MenuRegistration-Core"		},		"CacheStatistics" : {			"hash" : 1609216,			"definition" : "Object subclass: #CacheStatistics\r\tinstanceVariableNames: 'hits misses'\r\tclassVariableNames: ''\r\tpackage: 'System-Caching'",			"comment" : [				"I am CacheStatistics.",				"I keep track of hits and misses of a cache."			],			"category" : "System-Caching"		},		"SpRubFindReplaceService" : {			"hash" : 3544576,			"definition" : "FindReplaceService subclass: #SpRubFindReplaceService\r\tinstanceVariableNames: 'dialog dialogWindow textAreaHolder'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-SpecFindReplaceDialog'",			"comment" : [				"I am a FindReplace service that allows to use Spec based dialog as a replacement of a native Morphic find & replace dialog. ",				"",				"I can currently work only with the default Morphic Spec backend."			],			"category" : "Rubric-SpecFindReplaceDialog"		},		"SpWindowPresenter" : {			"hash" : 2226944,			"definition" : "SpAbstractWidgetPresenter << #SpWindowPresenter\r\tslots: {\r\t\t\t #presenter => ObservableSlot .\r\t\t\t #initialPosition => ObservableSlot .\r\t\t\t #initialExtent => ObservableSlot .\r\t\t\t #isResizeable => ObservableSlot .\r\t\t\t #menu => ObservableSlot .\r\t\t\t #centered => ObservableSlot .\r\t\t\t #isClosed => ObservableSlot .\r\t\t\t #toolbar => ObservableSlot .\r\t\t\t #statusbar => ObservableSlot .\r\t\t\t #window => ObservableSlot .\r\t\t\t #decorations => ObservableSlot };\r\ttag: 'Windows';\r\tpackage: 'Spec2-Core'",			"comment" : [				"I'm a presenter defining a Window.",				"`SpWindowPresenter` defines common behavior for windows (such as title, extent, position). ",				"It can also hold a menuBar, a toolBar, and a statusBar.",				"",				"Typically you do not use this presenter directly but through a presenter you want to show. ",				"When you execute `aPresenter openWithSpec`, what happens is that a `SpWindowPresenter` is created. Then the `SpPresenter>>#initializeWindow:` message is sent and an user can configure its window there.",				"",				"You can also access your window when your presenter is active by using `SpAbstractPresenter>>#withWindowDo:`.",				"",				"## Usage ",				"",				"Typically, you do not instantiate directly a window, but you open a presenter as one.",				"",				"```",				"SpTextPresenter new",				"\ttext: 'The answer is 42';",				"\topenWithSpec.",				"```"			],			"category" : "Spec2-Core-Windows"		},		"RBEntity" : {			"hash" : 3138304,			"definition" : "Object subclass: #RBEntity\r\tinstanceVariableNames: 'modelFactory changeFactory'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Core-Model'",			"comment" : [				"I'm the root of the model classes."			],			"category" : "Refactoring-Core-Model"		},		"DamageRecorder" : {			"hash" : 1650432,			"definition" : "Object subclass: #DamageRecorder\r\tinstanceVariableNames: 'invalidRects totalRepaint'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Core-Support'",			"comment" : [				"Recording damages to repair by repainting"			],			"category" : "Morphic-Core-Support"		},		"RBClass" : {			"hash" : 3139328,			"definition" : "RBAbstractClass subclass: #RBClass\r\tinstanceVariableNames: 'classVariableNames poolDictionaryNames category comment classPool'\r\tclassVariableNames: 'LookupComment'\r\tpackage: 'Refactoring-Core-Model'",			"comment" : [				"I represent the instance side of a class in a refactoring namespace. ",				"",				"You can query methods and (instance) var names, poolDictionaries, class category and comment.",				"",				"I shouldn't be created directly, but always be part of a refactoring namespace.",				"My  namespace usally knows me and my meta class."			],			"category" : "Refactoring-Core-Model"		},		"IceGitCheckoutProgress" : {			"hash" : 6216960,			"definition" : "LGitCheckoutProgressCallback subclass: #IceGitCheckoutProgress\r\tinstanceVariableNames: 'job'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Progress'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tjob:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Iceberg-Progress"		},		"RBLintRuleTestData" : {			"hash" : 4144128,			"definition" : "Object subclass: #RBLintRuleTestData\r\tinstanceVariableNames: 'name foo1'\r\tclassVariableNames: 'Foo1 Name1'\r\tpoolDictionaries: 'TextConstants'\r\tpackage: 'Refactoring-Tests-Core-Data'",			"comment" : [				"This hierarchy is code that is used as test data to test the refactoring engine. As such the code might make",				"no sense or have lots of easy possible improvements... but as it is used for testing, they should not be fixed."			],			"category" : "Refactoring-Tests-Core-Data"		},		"SmallDictionary" : {			"hash" : 1135616,			"definition" : "Collection subclass: #SmallDictionary\r\tinstanceVariableNames: 'keys values size'\r\tclassVariableNames: ''\r\tpackage: 'Collections-Unordered-Dictionaries'",			"comment" : [				"`SmallDictionary` is a special dictionary optimized for small collections. In addition to the normal dictionary protocol, it also supports an `#empty` message which \"empties\" the collection but may hang on to the original elements (so it could collect garbage). Without `#empty` we would either need to create a new dictionary or explicitly remove everything from the dictionary. Both of these take more time and `#empty`. Be careful, I cannot have *nil* as key. ",				"",				"### Public API and Key Messages",				"",				"- #at: aKey put: aValue / #at: aKey ifAbsentPut: aValue \t\tallow to add an element.  ",				"- #at: aKey / #at: aKey ifAbsent: aBlock / #at: aKey ifPresent: aBlock ifAbsent: aBlock \t\tallow to access my values.",				"- #keysDo: aBlock / #valuesDo: aBlock / #associationsDo: \t\tallow to iterate on me effectively",				"",				"### Examples ",				"",				"",				"To create a dictiony with indexes as key: ",				"",				"```",				"SmallDictionary withAll: #(7 3 1 3)   \t\t",				"\">>>  a SmallDictionaryDictionary(1->7 2->3 3->1 4->3 \"",				"```",				"To use Objects as key (here symbols): ",				"",				"```",				"\tcolors := SmallDictionary new ",				"\t\t\t\tat: #yellow put: Color yellow; ",				"\t\t\t\tat: #blue put: Color blue;",				"\t\t\t\tat: #red put: Color red;",				"\t\t\t\tyourself.",				"\t\t\t\t",				"\tcolors at: #yellow. \t\"returns:  Color yellow\"",				"\tcolors keys          \t\t\"returns: a Set(#blue #yellow #red)\"",				"\tcolors values     \t\t\"returns:  {Color blue. Color yellow. Color red}\"",				"",				"\tcolors empty \t\"a SmallDictionary()\"",				"```",				"",				"### Internal Representation and Key Implementation Points.",				"Instance Variables",				"- keys:\t\t<Array>\t\tArray of keys (we don't use Associations for our key value pairs)",				"- size:\t\t\t<Integer>\tSize of the dictionary",				"- values:\t\t<Array>\t\tArray of our values",				"",				"",				"    Implementation Points"			],			"category" : "Collections-Unordered-Dictionaries"		},		"AnimatedImageFrame" : {			"hash" : 720128,			"definition" : "Object subclass: #AnimatedImageFrame\r\tinstanceVariableNames: 'form delay disposal offset'\r\tclassVariableNames: ''\r\tpackage: 'Images-Animated'",			"comment" : [				"I am a single frame in a sequence of frames that comprise an animated image. I am designed for use by classes like AnimatedImageMorph and am created during the reading of some image files such as GIFs (see GIFReadWriter).",				"",				"I contain a Form describing my image, a delay time in milliseconds that describes how long I should be displayed in a sequence of animated frames, and a disposal symbol that implementors can use when compositing myself in a sequence of frames. ",				"",				"See AnimatedImageMorph for examples of how I am used."			],			"category" : "Images-Animated"		},		"SpRoassal3InspectorPresenter" : {			"hash" : 5795840,			"definition" : "SpMorphPresenter subclass: #SpRoassal3InspectorPresenter\r\tinstanceVariableNames: 'canvas'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Inspector-SP2'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcanvas:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Roassal3-Inspector-SP2"		},		"IceWorkingCopy" : {			"hash" : 6213376,			"definition" : "Object subclass: #IceWorkingCopy\r\tinstanceVariableNames: 'repository packages referenceCommit shouldIgnoreNotifications project properties'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Core'",			"comment" : [				"I represent and manage all code that is loaded in the current image. My main responsibilities are the bookeeping of loaded packages, the loaded commits, the modification and diffs, and the main entry point for committing code.",				"",				"! Adding and Loading Packages",				"",				"Adding a working copy to a repository is achieved by the message addPackageNamed:",				"",				"  repository addPackageNamed: aPackageNameString.",				"",				"I can be later on queried using the following messages",				"",				"  repository includesPackageNamed: aPackageNameString.",				"  repository isLoadedPackageNamed: aPackageNameString.",				"",				"  repository packageNames.",				"",				"Packages already in a repository can be loaded and unloaded with:",				"",				"  repository checkoutPackageNamed: aPackageNameString.",				"  repository unloadPackageNamed: aPackageNameString.",				"",				"And queried with:",				"",				"  repository loadedPackages.",				"",				"! The Working Copy State",				"",				"The working copy can be in different states depending on the repository and the package. It is the working copy state reponsibility to decide wether we can commit, if we are on a merge, and so on... The working copy state can be obtained through the message #workingCopyState.",				"",				"  workingCopy workingCopyState.",				"",				"The working copy state is calculated every time that it is called. This is because the state of the repository can be modified from outside the system (e.g.,  the command line or another tool). In any case, calculating the working copy state is fast enough to be executed on-line even for big repositories such as Pharo's. The working copy state is calculated from the status of each of its packages. It was decided like this because it may happen that somebody downloads a package from different commits. If this situation changes in the future, this is a good point for simplification.",				"",				"Working copy states are instances of IceWorkingCopyState. Check it and its subclasses for more information.",				"",				"! The Current Commit(s)",				"",				"A crucial information bookeept by the working copy is the current loaded commit(s). Indeed, depending on the state of the packages and the loaded code, there may be a single current commit or several:",				"",				" - having a single commit means that all loaded packages were loaded from the same commit",				" - having multiple commits mean that we are in a merge situation",				" - having no commit means that no packages were loaded or that they were loaded from another mechanism such as monticello ",				"",				"In general terms, the current commit should not be accessed directly.",				"",				"The following methods allow for testing and accessing the current commits:",				"",				"  repository hasSingleCommit.",				"  repository hasUnknownCommit.",				"  repository isInMerge.",				"",				"  repository referenceCommit.",				"  repository referenceCommits.",				"",				"!  Changes and Committing",				"",				"The working copy bookkeeps the loaded packages and their state and thus it provides methods to query and commit those changes into the repository.",				"",				"  repository modifiedPackages.",				"  repository isModified.",				"",				"  repository commitWithMessage: aMessageString.",				"  repository commitChanges: aListOfChanges withMessage: aMessagString.",				"  repository commitPackages: aListOfPackages withMessage: aMessageString.",				"",				"NOTICE that commits can only be done if the following is true:",				"",				" - repositroy HEAD is not detached (i.e., it is a branch)",				" - I am not detached. I.e., my reference commit (in case of a merge, it should be the first one) is the same commit as #headCommit",				"",				"Such validations can be verified with the following messages",				"",				"  repository validateCanCommit.",				"  repository isDetached.",				"",				"!  Merging",				"",				"The main entry point for merging a commit is the working copy, through the method #mergeCommit:. This method will, delegating to the working copy state, verify that the commit needs to be merged, can be merged, and if it has conflicts. In case there are no conflicts an automatic merge will be issued by default.",				"",				"  workingCopy mergeCommit: aCommit.",				"",				"IMPORTANT IMPLEMENTATION NOTE. The version information and commits are so far stored inside MCWorkingCopy and co. Check #updatePackage:toCommits:"			],			"category" : "Iceberg-Core"		},		"MCPackageManager" : {			"hash" : 263168,			"definition" : "Model subclass: #MCPackageManager\r\tinstanceVariableNames: 'package modified'\r\tclassVariableNames: 'PrivateAnnouncer'\r\tpackage: 'Monticello-Versioning'",			"comment" : [				"MCPackageManager is a kind of package wrapper knowing if the package is dirty or not.",				"The class side manages registered package managers.",				"",				"Instance Variables:",				"\tpackage\t<MCPackage>",				"\tmodified\t<Boolean>",				"",				"Class Instance Variables:",				"\tregistry\t<Dictionary>"			],			"category" : "Monticello-Versioning"		},		"PanelMorph" : {			"hash" : 1952512,			"definition" : "BorderedMorph subclass: #PanelMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Windows-Widgets'",			"comment" : [				"A container morph that tracks the owner's pane colour unless an explicit fillStyle is specified. Additionally allows hooking of mouseOver events (no button down)."			],			"category" : "Morphic-Widgets-Windows-Widgets"		},		"RBDummyLintRuleTest" : {			"hash" : 4603904,			"definition" : "Object subclass: #RBDummyLintRuleTest\r\tinstanceVariableNames: 'name foo1'\r\tclassVariableNames: 'Foo1'\r\tpoolDictionaries: 'TextConstants'\r\tpackage: 'Refactoring2-Transformations-Tests'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tfoo1:\t\t<Object>",				"\tname:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Refactoring2-Transformations-Tests"		},		"StDefineMissingEntityCommand" : {			"hash" : 5424640,			"definition" : "StDebuggerCommand subclass: #StDefineMissingEntityCommand\r\tinstanceVariableNames: 'subCommands'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Debugger-Commands'",			"comment" : [				"This command requests from a debugger to create a missing method (DNU or subclassResponsibility) or class.",				"",				"This command delegates concrete behavior to its subclasses.",				"Each instance of this command has a collection of mutually exclusive subcommands (one for each of its subclasses). ",				"Each subcommand has the same debugger.",				"",				"For a given debugging context (i.e., the context of the debugger's debug session), only one of the subcommand can be executed.",				"For instance, if we are in the context of a DNU, it makes only sense to propose to create the missing method (StCreateMissingMethodDebugCommand) and all other subcommands are inapplicable."			],			"category" : "NewTools-Debugger-Commands"		},		"GeneralScrollBarMorph" : {			"hash" : 1934080,			"definition" : "ScrollBarMorph subclass: #GeneralScrollBarMorph\r\tinstanceVariableNames: 'showState'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Scrolling'",			"comment" : [				"Support for GeneralScrollPane."			],			"category" : "Morphic-Widgets-Scrolling"		},		"MemoryFileSystemDirectory" : {			"hash" : 1436416,			"definition" : "MemoryFileSystemEntry subclass: #MemoryFileSystemDirectory\r\tinstanceVariableNames: 'entries'\r\tclassVariableNames: ''\r\tpackage: 'FileSystem-Memory-Base'",			"comment" : [				"I represent a memory file system entry for a directory"			],			"category" : "FileSystem-Memory-Base"		},		"ThreePhaseButtonMorph" : {			"hash" : 580864,			"definition" : "ImageMorph subclass: #ThreePhaseButtonMorph\r\tinstanceVariableNames: 'offImage pressedImage state target actionSelector arguments actWhen'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Basic-Buttons'",			"comment" : [				"A button morph with separate images for on, off, and pressed with the mouse. ",				"",				"When the event actWhen occurs, send actionSelector with 'arguments' to target.  For other events, default to my eventHandler.  The current event is not supplied in the arguments to the actionSelector.  ",				"",				"image (a.k.a. onImage) may not be nil.  offImage and pressedImage may be nil.  nil there means be transparent and show the underlying object.  ",				"",				"Tools for debugging:",				"Display the images momentarily under program control (for positioning) (self is an instance).",				"\tself state: #on.  self state: #off.",				"\tself state: #pressed.  self state: #off.",				"Display a rectangle where the button is.",				"\tDisplay fillWithColor: bounds + (self world viewBox origin).",				"\tself invalidRect: bounds."			],			"category" : "Morphic-Widgets-Basic-Buttons"		},		"AnnouncementMockC" : {			"hash" : 3718656,			"definition" : "AnnouncementMockB subclass: #AnnouncementMockC\r\tinstanceVariableNames: 'announcingCounter'\r\tclassVariableNames: ''\r\tpackage: 'Announcements-Core-Tests-Mocks'",			"comment" : [				"This is a simple test mock"			],			"category" : "Announcements-Core-Tests-Mocks"		},		"MCWorkingCopyBrowser" : {			"hash" : 3214080,			"definition" : "MCTool subclass: #MCWorkingCopyBrowser\r\tinstanceVariableNames: 'workingCopy workingCopyWrapper repository defaults order repositoryPattern workingCopyPattern repositoryProcess packageProcess showOnlyRepositoriesFromWorkingCopy'\r\tclassVariableNames: 'Order'\r\tpackage: 'MonticelloGUI-Tools'",			"comment" : [				"Browser for working copies"			],			"category" : "MonticelloGUI-Tools"		},		"OCASTTranslator class" : {			"hash" : 1221376,			"definition" : "OCASTTranslator class\r\tinstanceVariableNames: ''",			"comment" : [				"I visit an abstract syntax tree and generate IR (intermediate representation) instructions for each node by sending the appropriate message to my methodBuilder (an IRBuilder).  I hold onto my two subclasses ",				"OCASTTranslatorForValue for generating instructions for effect and value, and",				"OCASTTranslatorForEffect for generating instructions for effect only.",				"",				"Which one to use depends on the AST nodes and whether the code will only be executed (for effect only) or if the value is used afterwards (for value).",				"",				"For example, when translating a return, the value to return needs to be pushed on stack, so the valueTranslator is used:",				"visitReturnNode: aReturnNode ",				"\tvalueTranslator visitNode: aReturnNode value.",				"\tmethodBuilder returnTop.",				"\t",				"Whereas, in #visitMethodNode:,  the effectTranslator is used, because no value is pushed on stack at the end of the method body:",				"...effectTranslator visitNode: aMethodNode body.."			],			"category" : "OpalCompiler-Core-Translator"		},		"SpPanelMorphWithSplitters" : {			"hash" : 2583552,			"definition" : "PanelMorph subclass: #SpPanelMorphWithSplitters\r\tinstanceVariableNames: 'paneMorphs'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Support'",			"comment" : [				"A PanelMorphWithSplitters is which add splitters the way SystemWindow do it"			],			"category" : "Spec2-Adapters-Morphic-Support"		},		"DiffPatchVisitor" : {			"hash" : 5361408,			"definition" : "DiffVisitor subclass: #DiffPatchVisitor\r\tinstanceVariableNames: 'stream'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Code-Diff'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tstream:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Code-Diff"		},		"RSCanvas" : {			"hash" : 5640448,			"definition" : "RSObjectWithProperty subclass: #RSCanvas\r\tuses: RSTContainer\r\tinstanceVariableNames: 'shapes fixedShapes camera animations extent color morph clearBackground showRectangles nodes edges'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Core'",			"comment" : [				"<keyClass>",				"Roassal keeps its shapes (i.e., instance of a subclass of `RSShape`) into a canvas. The class `RSCanvas` implements the Roassal canvas.",				"",				"*Responsibility*: keep the (i) structure of the Roassal shapes (both fixed and non-fixed) and (ii) the animations. `RSCanvas` hides the creation of the `RSAthensMorph`.",				"",				"*Collaborators*: This class is the entry point of Roassal. As soon as one wishes to use Roassal, she has to go through a canvas.",				"",				"*Variables*:",				"- `shapes` keeps a collection of shapes (i.e., instance of a subclass of `RSShape`) as an instance of `RSGroup`. Shapes contained in `shapes` are considered as non-fixed, which means that they are subject to the camera.",				"- `fixedShapes` is an instance of `RSGroup` that contains \"fixed\" shapes. A fixed shape is a shape that is not subject to the state of the camera. A fixed shape remains at the same position, independently if the canvas is scrolled.",				"- `color` is an instance of the Pharo class `Color` and is used to paint the background.",				"- `morph` refers to an instance of the class `RSAthensMorph`, which is the object that intersects Roassal and Morphic.",				"- `camera` refers to the camera of the canvas.",				"- `clearBackground` is a boolean indicating whether the background must be cleared at each refresh. This is useful sometime to obtain some interesting visual effects.",				"",				"*Example*:",				"```Smalltalk",				"c := RSCanvas new.",				"c add: (RSLabel new text: 'Hello from Roassal').",				"c",				"```"			],			"category" : "Roassal3-Core"		},		"StSpotter class" : {			"hash" : 5492224,			"definition" : "StSpotter class\r\tinstanceVariableNames: 'spotter'",			"comment" : [				"When exploring the system, is useful to have a single entry point that will allow users to search for different component of the system. ",				"Spotter provides such entry point and is usually available by pressing <meta+enter>.",				"",				"Spotter is just a front-end to show the result of different processors (see *StSpotterProcessor*) that provide results. Those processors can be configured in different ways and will provide different access options. ",				"",				"Some known processors and options are: ",				"",				"## Classes processor: ",				"- Type #classes in the search bar",				"- Press <meta+b>",				"",				"## Implementors processor: ",				"- Type #implementors in the search bar",				"- Press <meta+m>",				"",				"## Senders processor: ",				"- Type #senders in the search bar",				"- Press <meta+n>"			],			"category" : "NewTools-Spotter-View"		},		"SpSpinnerMorph" : {			"hash" : 2567680,			"definition" : "Morph subclass: #SpSpinnerMorph\r\tinstanceVariableNames: 'transformationMorph'\r\tclassVariableNames: 'SpinnerForm'\r\tpackage: 'Spec2-Adapters-Morphic-Support'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\ttransformationMorph:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Adapters-Morphic-Support"		},		"DigitalSignatureAlgorithm class" : {			"hash" : 939264,			"definition" : "DigitalSignatureAlgorithm class\r\tinstanceVariableNames: ''",			"comment" : [				"This class implements the Digital Signature Algorithm (DSA) of the U.S. government's \"Digital Signature Standard\" (DSS). The DSA algorithm was proposed in 1991 and became a standard in May 1994. The official description is available as a Federal Information Processing Standards Publication (FIPS PUB 186, May 19, 1994). A companion standard, the Secure Hash Standard, or SHS (FIPS PUB 180-1, April 17, 1995), describes a 160-bit message digest algorithm known as the Secure Hash Algorithm (SHA). This message digest is used to compute the document signature.",				"",				"Here's how to use it:",				"",				"  1. The \"signer\" creates a pair of keys. One of these must be kept private. The other may be freely distributed. For example, it could be built into the signature checking code of an application.",				"",				"  2. When the signer wishes to sign a packet of data (a \"message\") , he uses the secure hash algorithm to create a 160-bit message digest (hash) which is used as the input to DSA. The result of this is a pair of large numbers called a \"signature\" that is attached to the original message.",				"",				"  3. When someone receives a signed message purported to have come from the signer, they compute the 160-bit hash of the message and pass that, along with the message signature and the signer's public key, to the signature verification algorithm. If the signature checks, then it is virtually guaranteed that the message originated from someone who had the signer's private key. That is, the message is not a forgery and has not been modified since it was signed. For example, if the message contains a program, and the recipient trusts the signer, then the recipient can run the program with the assurance that it won't do anything harmful. (At least, not intentionally. A digital signature is no guarantee against bugs! :->)",				"",				"The signer must keep the private key secure, since anyone who has the private key can forge the signer's signature on any message they like. As long as the secret key is not stolen, cryptographers believe it to be virtually impossible either to forge a signature, to find a message that matches an existing sigature, or to discover the signer's private key by analyzing message signatures. Knowing the public key (which, for example, could be recovered from an application that had it built in), does not weaken the security at all.",				"",				"An excellent reference work on digital signatures and cryptography in general is:",				"",				"  Schneier, Bruce",				"  \"Applied Cryptography: Protocols, Algorithms, and Source Code in C\"",				"  John Wiley and Sons, 1996.",				"",				"I used this book as a guide to implementing many of the numerical algorithms required by DSA.",				"",				"Patents and Export Restrictions:",				"",				"Many digital signature technologies are patented. DSA is also patented, but the patent is owned by the U.S. government which has made DSA available royalty-free. There is a claim that the government patent infringes on an earlier patent by Schnorr, but the government is requiring the use of DSA, so they apparently believe this claim is not strong enough to be a serious threat to their own patent.",				"",				"Most cryptography technology, including digital signature technology, requires an export license for it to be distributed outside the U.S. Recent legislation may have relaxed the export license requirements, but it would be prudent to check the current regulations before exporting this code."			],			"category" : "System-Hashing-DSA"		},		"SpAbstractWidgetPresenter" : {			"hash" : 2205440,			"definition" : "SpPresenter << #SpAbstractWidgetPresenter\r\tslots: {\r\t\t\t #borderWidth => ObservableSlot .\r\t\t\t #borderColor => ObservableSlot .\r\t\t\t #dragEnabled => ObservableSlot .\r\t\t\t #dropEnabled => ObservableSlot .\r\t\t\t #color => ObservableSlot .\r\t\t\t #help => ObservableSlot .\r\t\t\t #enabled => ObservableSlot .\r\t\t\t #wantsDrop => ObservableSlot .\r\t\t\t #acceptDrop => ObservableSlot .\r\t\t\t #deferredActions };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"SpAbstractBasicWidget is an abstract class for basic widgets."			],			"category" : "Spec2-Core-Widgets"		},		"ReToDoCollectRule" : {			"hash" : 3952640,			"definition" : "ReNodeMatchRule subclass: #ReToDoCollectRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for users of to:do: when the shorter collect: would work."			],			"category" : "GeneralRules-Migrated"		},		"RSPolyInterpolator" : {			"hash" : 5713152,			"definition" : "RSEasingInterpolator subclass: #RSPolyInterpolator\r\tinstanceVariableNames: 'exponent'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Animation-Easing'",			"comment" : [				"linear := TSEasing poly exponent: 1.",				"quad := TSEasing poly exponent: 2.",				"cubic := TSEasing poly exponent: 3",				"",				"TSEasing polyIn ",				"Polynomial easing; raises t to the specified exponent. If the exponent is not specified, it defaults to 3, equivalent to cubicIn.",				"",				"TSEasing polyOut",				"Reverse polynomial easing; equivalent to 1 - polyIn(1 - t). If the exponent is not specified, it defaults to 3, equivalent to cubicOut.",				"",				"TSEasing poly ",				"TSEasing polyInOut ",				"Symmetric polynomial easing; scales polyIn for t in [0, 0.5] and polyOut for t in [0.5, 1]. If the exponent is not specified, it defaults to 3, equivalent to cubic."			],			"category" : "Roassal3-Animation-Easing"		},		"PreDebugDoesNotUnderstandAction" : {			"hash" : 2983680,			"definition" : "DoesNotUnderstandDebugAction subclass: #PreDebugDoesNotUnderstandAction\r\tinstanceVariableNames: 'preDebugWindow'\r\tclassVariableNames: ''\r\tpackage: 'Debugger-Actions-Actions'",			"comment" : [				"A PreDebugDoesNotUnderstandAction adds the DoesNotUnderstandDebugAction debugging actions to the pre debug window. When executed, it will further close the pre debug window and open the full debugger. ",				"",				"Instance Variables",				"\tpreDebugWindow:\t\t<Object>",				"",				"preDebugWindow",				"\t- xxxxx"			],			"category" : "Debugger-Actions-Actions"		},		"ZipWriteStream" : {			"hash" : 1347072,			"definition" : "DeflateStream subclass: #ZipWriteStream\r\tinstanceVariableNames: 'literals distances literalFreq distanceFreq litCount matchCount encoder crc crcPosition bytesWritten'\r\tclassVariableNames: 'VerboseLevel'\r\tpoolDictionaries: 'ZipConstants'\r\tpackage: 'Compression-Streams'",			"comment" : [				"A ZIP write stream"			],			"category" : "Compression-Streams"		},		"TonelFileSystemUtils class" : {			"hash" : 1528320,			"definition" : "TonelFileSystemUtils class\r\tinstanceVariableNames: ''",			"comment" : [				"I'm a file utils implementation who works with FileSystem framework.",				"Pharo should use me."			],			"category" : "MonticelloTonel-FileSystem"		},		"STONWriter" : {			"hash" : 340736,			"definition" : "Object subclass: #STONWriter\r\tinstanceVariableNames: 'writeStream prettyPrint stonCharacters newLine asciiOnly jsonMode keepNewLines referencePolicy level objects'\r\tclassVariableNames: 'STONCharacters STONSimpleSymbolCharacters'\r\tpackage: 'STON-Core-Writer'",			"comment" : [				"STONWriter serializes objects using the Smalltalk Object Notation format. ",				"",				"Customization options are:",				"",				"- prettyPrint <Boolean> default is false",				"\tif true, produce pretty printed output",				"- newLine <String> default is String cr",				"\twhat sequence to use for EOL",				"- asciiOnly <Boolean> default is false",				"   if true, use \\u escapes for all non-ASCII characters",				"   most common control characters are still escaped",				"- jsonMode <Boolean> default is false",				"\tif true, the follow changes occur",				"\t- strings are delimited with double quotes",				"\t- nil is encoded as null",				"\t- symbols are treated as strings",				"\t- only STON listClass and STON mapClass instances are allowed as composite objects",				"\tit is wise to also use either #error or #ignore as referencePolicy to avoid references",				"- referencePolicy <#normal|#ignore|#error> default is #normal",				"\tif #normal, track and count object references and use references to implement sharing and break cycles",				"\tif #error, track object references and signal STONWriterError when a shared reference is encountered",				"\tif #ignore, don't track object references which might loop forever on cycles",				" - keepNewLines <Boolean> default is false",				"\tif true, any newline sequence CR, LF or CRLF inside strings or symbols will not be escaped ",				"\tbut will be written as the newline EOF convention",				"\t",				"Note that in default STON mode I only use the following named character escapes: \\b \\t \\n \\f \\' and \\\\ while in JSON mode \\' is replaced by \\\""			],			"category" : "STON-Core-Writer"		},		"AthensTigerWindow" : {			"hash" : 3417856,			"definition" : "StandardWindow subclass: #AthensTigerWindow\r\tinstanceVariableNames: 'surface scale frames example rotation'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Examples-Morphic'",			"comment" : [				"I'm an example that shows a tiger that moves via rotation, translation and zoom in a Morph window."			],			"category" : "Athens-Examples-Morphic"		},		"IceLibgitTreeBuilder" : {			"hash" : 6512128,			"definition" : "Object subclass: #IceLibgitTreeBuilder\r\tinstanceVariableNames: 'parent entryName builder children changes initialTree hasChanges'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Libgit-Core'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbuilder:\t\t<Object>",				"\tchanges:\t\t<Object>",				"\tchildren:\t\t<Object>",				"\tentryName:\t\t<Object>",				"\toriginalTree:\t\t<LGitTree> Contains the original contents on which this builder bases. Warning: this will not reflect the actual contents of the builder. Use #buildTree instead.",				"\tparent:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Iceberg-Libgit-Core"		},		"StSpotterModel" : {			"hash" : 5508352,			"definition" : "Object subclass: #StSpotterModel\r\tinstanceVariableNames: 'steps searchUpdatedAction amountChangedAction mutex queryStartedAction queryEndedAction noResultsAction scheduler pendingQuery queryRequestTime'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Spotter-Model'",			"comment" : [				"A model to process queries (to be used with StSpotter).",				"The main method is `StSpotterModel>>processSearch:on:` (is the entry point to any query).",				"",				"To process searches the spotter model will use a worker pool to schedule a `StSpotterQuery`, which is the actual responsible of processing it."			],			"category" : "NewTools-Spotter-Model"		},		"PoolDefiner class" : {			"hash" : 3657472,			"definition" : "PoolDefiner class\r\tinstanceVariableNames: ''",			"comment" : [				"A pool used for testing purposes"			],			"category" : "Kernel-Tests-Classes"		},		"ClyNavigationEnvironment" : {			"hash" : 4845568,			"definition" : "Object subclass: #ClyNavigationEnvironment\r\tinstanceVariableNames: 'plugins updateStrategy accessGuard updateGuard system queryCache'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-NavigationModel-Model'",			"comment" : [				"I am an environment allowing navigation over a particular system by quering objects from a particular scope of other objects. ",				"I cache query results and extend retrieved objects using the builtin plugin system.",				"",				"My instances should be created over some system: ",				"",				"\tenvironment := ClyNavigationEnvironment over: aSystem",				"",				"I do not impose any requirements on the class of the target system. It can be any object from the particular domain which represents its global view.",				"But Calypso requires two things which system should implement. It can define them as extensions in the Calypso integration package:",				"",				"1) The system should provide a global scope which will adapt it to Calypso's navigation model. This scope will represent the root from which all objects in the system can be reached.",				"Concrete systems should implement a subclass of ClySystemScope and return an instance as the global scope of an actual system object. It should be returned from the system's #asGlobalScopeIn: method.",				"Users can access the system and its scope from my instance:",				"\t",				"\tenvironment system",				"\tenvironment systemScope",				"",				"2) The system should notify my instance about changes.",				"I maintain a query cache and it requires invalidation when the system is changed. So systems have the responsibility to subscribe and unsubscribe my instances for possible changes: ",				"\t",				"\taSystem subscribe: environment",				"\taSystem unsubscribe: environment",				"\t",				"I am subscribed when I am attaching to the system:",				"\t",				"\tenvironment attachToSystem",				"\t",				"And I am unsubscribed when detaching: ",				"",				"\tenvironment detachFromSystem",				"\t",				"User should manually attach my instances to the system when they are interested in updates.",				"",				"I should not be subclassed. ",				"",				"Users can maintain a singleton instance of me for a concrete system. It will provide a global cache for all queries over the given system.",				"For this purpose, I provide a class side variable defaultGlobalEnvironments. It maps a system instance to my instance (aNavigationEnvironment) over it.",				"The idea is that applications usually have a kind of default system instance (e.g. Smalltalk global). To provide default navigation over it, users can extend my class-side with an appropriate accessing method. ",				"For example, navigation over the current Smalltalk image is accessed using the #currentImage method: ",				"",				"\tClyNavigationEnvironment class>>currentImage \t",				"\t\t^self defaultOver: ClySystemEnvironment currentImage",				"",				"The method #defaultOver: retrieves existing instance or creates new one. Such default instances are automatically attached to the system.",				"In this example the system is an instance of ClySystemEnvironment which represents Smalltalk system. (it was suitable to introduce extra wrapper for this domain. Look it comment for details).",				"",				"To reset all global environments send #reset message to me: ",				"",				"\tClyNavigationEnvironment reset",				"\t",				"It will detach (unsubscribe) environments from their systems and clear collection.",				"",				"I provide #query: method to execute queries using cache. But userrs should not use it directly.",				"Users should prepare scope instance using given environment:",				"",				"\tscope := ClyClassScope of: Object in: environment ",				"",				"And then create and execute query instance: ",				"",				"\tquery := ClyAllMethods from: scope.",				"\tquery execute",				"",				"Underhood my #query: method is called by scope during query execution logic. I returns existing result if it exists. Otherwise I build new one.",				"",				"There is another method which allow to check that given query will produce empty result:",				"\t",				"\tenvironment isQueryEmpty: query",				"\t",				"It also should not be used directly. But query should be asked directly: ",				"",				"\tquery hasEmptyResult",				"",				"If there is existing result then I just check that it is not empty. Otherwise I ask query to #checkEmptyResult where it evaluates actual logic.",				"",				"To maintain query cache I use two mutexes:",				"",				"- accessGuard, protects any modification of queryCache",				"- updateGuard, protects cache updating in the way that multiple changes will be always processed in sequence",				"",				"In my cache the query is a key and the result is a value. The cache is weak and unused result is cleaned by GC. In same time unused keys (queries which result is cleaned) are collected when new query is executed (using #cleanGarbageInCache).",				"",				"I am extendable by plugins, subclasses of ClyEnvironmentPlugin. Plugins are responsible to extend queries of particular system in following ways:",				"",				"- plugin can extend properties of query result (ClyBrowserItem instances and query metadata).",				"- plugin can supply information about other systems. ",				"Plugins are packaged separatelly. Plugin package can extend visibility of existing scopes by providing new information from external systems. This information can be retrieved by new queries.",				"And to manage this information plugin should notify environment about external changes.",				"",				"To add plugin use following method:",				"",				"\tenvironment addPlugin: MyTestPlugin new.",				"\t",				"And to access plugins use: ",				"\t",				"\tenvironment pluginsDo: aBlock",				"\t",				"When I am attached to the system I also attach all my plugins to it using:",				"",				"\tplugin attachToSystem",				"",				"In this method plugin is able to subscribe on own system changes to notify environment about them.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables ",				"\tplugins:\t\t<Collection of<ClyEnvironmentPlugin>>>",				"\tqueryCache:\t\t<WeakValueDictionary of<ClyQuery, ClyQueryResult>>",				"\tsystem: \t<Object>",				"\tupdateStrategy:\t<ClyEnvironmentUpdateStrategy>",				"\tupdateGuard:\t<Mutex>",				"\taccessGuard:\t<Mutex>"			],			"category" : "Calypso-NavigationModel-Model"		},		"Delay class" : {			"hash" : 926208,			"definition" : "Delay class\r\tinstanceVariableNames: ''",			"comment" : [				"I am the main way that a process may pause for some amount of time.  ",				"The simplest usage is like...",				"\t(Delay forSeconds: 5) wait.   ",				"or...",				"\t5 seconds asDelay wait.",				"",				"An instance of Delay responds to the message 'wait' by suspending the caller's process for a certain amount of time. The duration of the pause is specified when the Delay is created with the message forMilliseconds: or forSeconds:. A Delay can be used again when the current wait has finished. For example, a clock process might repeatedly wait on a one-second Delay.  Delays work across  clock roll-overs.",				"",				"The maximum possible delay depends on which delay ticker is used:",				"  * DelayMillisecondTicker uses a 32-bit value that rolls over about every six days, or SmallInteger maxVal // 2 milliseconds.",				"  * DelayMicrosecondTicker is 64-bit and rolls over every 50,000 years. ",				"",				"A delay in progress when an image snapshot is suspended and resumed when the snapshot is re-started. ",				"i.e. from the image perspective of timing, the image snapshot never happened."			],			"category" : "Kernel-Delays"		},		"LGitId class" : {			"hash" : 3404032,			"definition" : "LGitId class\r\tinstanceVariableNames: ''",			"comment" : [				"I'm an unique identity of any object (commit, tree, blob, tag).",				"",				"https://libgit2.github.com/libgit2/#HEAD/type/git_oid",				"",				"NOTE: This might be replaces by an FFITypeArray in the future."			],			"category" : "LibGit-Core-CoreObjects"		},		"RSSVGPathLine" : {			"hash" : 2296832,			"definition" : "RSAbstractDualLine subclass: #RSSVGPathLine\r\tinstanceVariableNames: 'svgPath'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-SVG-Shapes'",			"comment" : [				"I represent path a complex line from one point to another with an svg path"			],			"category" : "Roassal3-SVG-Shapes"		},		"SymbolicIntegerTest" : {			"hash" : 2862592,			"definition" : "IntegerTest subclass: #SymbolicIntegerTest\r\tuses: TIceImagesExporting\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Tests'",			"comment" : [				"This class contains tests"			],			"category" : "Containers-Essentials-Tests"		},		"AbstractFormButtonPresenter" : {			"hash" : 879616,			"definition" : "AbstractWidgetPresenter subclass: #AbstractFormButtonPresenter\r\tinstanceVariableNames: 'actionWhenActivatedHolder stateHolder labelClickableHolder labelHolder actionWhenDeactivatedHolder'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets-Support'",			"comment" : [				"AbstractFormButtonPresenter is an abstract class for button of form (like radiobuttons or checkbox).",				"See AbstractWidgetPresenter",				"",				"self example",				"",				"I provide the following variables and their accessors",				"- activationAction and desactivationAction are actions to perform when I am activated / deactivated.",				"- label is the text displayed near the box.",				"- state is a boolean representing if I am activated, it is false by default",				"",				"I provide the following methods",				"- click to simulate a click on me.",				"- toggleState to reverse my state."			],			"category" : "Spec-Core-Widgets-Support"		},		"DiffJoinMorph" : {			"hash" : 3353600,			"definition" : "ProportionalSplitterMorph subclass: #DiffJoinMorph\r\tinstanceVariableNames: 'srcOffset dstOffset mappings'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Diff-Morphs'",			"comment" : [				"Morph to display a diff join"			],			"category" : "Tool-Diff-Morphs"		},		"RSAttachPoint" : {			"hash" : 5681920,			"definition" : "RSObject subclass: #RSAttachPoint\r\tinstanceVariableNames: 'inverted'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-AttachPoint'",			"comment" : [				"I am the base for attach points"			],			"category" : "Roassal3-Shapes-AttachPoint"		},		"StMicrodownClassAPIHelpBuilder" : {			"hash" : 6587648,			"definition" : "HelpBuilder subclass: #StMicrodownClassAPIHelpBuilder\r\tinstanceVariableNames: 'addSubclasses addMethods subclassesAsSeparateTopic addMethodsWithoutComment iconBuilder'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-DocumentationReader'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\taddMethods:\t\t<Object>",				"\taddMethodsWithoutComment:\t\t<Object>",				"\taddSubclasses:\t\t<Object>",				"\ticonBuilder:\t\t<Object>",				"\tsubclassesAsSeparateTopic:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "NewTools-DocumentationReader"		},		"MemoryStore class" : {			"hash" : 1434624,			"definition" : "MemoryStore class\r\tinstanceVariableNames: ''",			"comment" : [				"I'm a specific store for memory file system"			],			"category" : "FileSystem-Memory-Store"		},		"SycRemoveMethodCommand" : {			"hash" : 4787456,			"definition" : "SycMethodCommand subclass: #SycRemoveMethodCommand\r\tinstanceVariableNames: 'removeStrategy'\r\tclassVariableNames: ''\r\tpackage: 'SystemCommands-MethodCommands'",			"comment" : [				"I am a command to remove given methods.",				"",				"I use special remove strategy to define what to do when given methods are in use.",				"",				"So I delegate actual remove operation to the strategy: ",				"",				"\tremoveStrategy removeMethods: methods",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tremoveStrategy:\t\t<SycRemoveMethodStrategy>"			],			"category" : "SystemCommands-MethodCommands"		},		"MCLazyVersionInfo" : {			"hash" : 265472,			"definition" : "MCVersionInfo subclass: #MCLazyVersionInfo\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Versioning'",			"comment" : [				"A MCLazyVersionInfo puts ancestor and stepChilds data in WeakArrays to allow their memory to be reclaimed and reloaded on demand.",				"",				"For all purposes, a MCLazyVersionInfo behaves exactly like a MCVersionInfo with the same data, but:",				"- let the ancestry (and step children) be garbage collected",				"- and reload that ancestry (and stepChildren) from the MC repositories when accessed (MCLazyVersionInfo>>loadAncestorsAndStepChildren for the reload, MCLazyVersionInfo>>ancestors and MCLazyVersionInfo>>stepChildren for the access).",				"",				"MCLazyVersionInfo is installed just as the ancestor in a MCWorkingAncestry (the direct ancestry of a WorkingCopy, which is the state all packages take when they are loaded in an image). It allows a MCWorkingAncestry to still know which package it is coming from, and, of course, the MCLazyVersionInfo to be able to reload the relevant ancestry from the right package.",				"",				"Once installed, by flushing the Monticello package cache, all the stored ancestry is garbage collected, except the roots of those ancestry trees, which are the MCLazyVersionInfo instances inside the MCWorkingAncestry instances.",				"",				"Warnings:",				"",				"- Algorithms which traverse the entire ancestry chain of all packages will force a reload of all the packages contained in the image, which is a time and memory and network consuming process...",				"",				"- It degrades gracefully when reloading becomes impossible (returns an empty ancestry, keeps knowledge of the fact some ancestry is missing, reloading a full ancestry on when possible). This has been tested.",				"",				""			],			"category" : "Monticello-Versioning"		},		"SingleCodeCriticResultList class" : {			"hash" : 1705472,			"definition" : "SingleCodeCriticResultList class\r\tinstanceVariableNames: 'icons'",			"comment" : [				"I am a browser for the SmallLint Critics of a rule."			],			"category" : "Tool-CriticBrowser-Parts"		},		"ChooseDropListDialogWindow" : {			"hash" : 1941248,			"definition" : "MessageDialogWindow subclass: #ChooseDropListDialogWindow\r\tinstanceVariableNames: 'listMorph list'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Windows'",			"comment" : [				"Message dialog containing a drop list for selection of an item."			],			"category" : "Polymorph-Widgets-Windows"		},		"CalendarMorph" : {			"hash" : 1912576,			"definition" : "BorderedMorph subclass: #CalendarMorph\r\tinstanceVariableNames: 'date days touchPoints announcer'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Extra'",			"comment" : [				"A CalendarMorph is a standalone morph that represents a selectable monthly calendar.",				"",				"CalendarMorph openOn: Date today",				"",				"",				"",				"Instance Variables",				"\tdate:\t\t<Date>",				"\tdays:\t\t<OrderedCollection of: <CalendarChooserDay>>",				"\ttouchPoints:\t<Dictionary key: <Rectangle> value: <Symbol>>",				"",				"date",				"\t- the currently selected date (always within the current month)",				"",				"days",				"\t- all the days that are visible, including days from the previous month, the current month, and the next month",				"",				"touchPoints",				"\t- extra hotspots that are touch-responsive (key rectangle is in world coordinates)"			],			"category" : "Morphic-Widgets-Extra"		},		"SpCommandGroup" : {			"hash" : 2400000,			"definition" : "CmUICommandGroup subclass: #SpCommandGroup\r\tinstanceVariableNames: 'toolbarPopoverButton'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Commander2-Core'",			"comment" : [				"I am a command group decorator adding informations useful when for usage in context of a Spec application.",				"",				"Basically, I add:",				"- an #icon (#blank by default)",				"- the strategy to display commands group in a MenuPresenter"			],			"category" : "Spec2-Commander2-Core"		},		"Process" : {			"hash" : 795392,			"definition" : "Link subclass: #Process\r\tinstanceVariableNames: 'suspendedContext priority myList name env effectiveProcess terminating level'\r\tclassVariableNames: 'InheritablePSKeys PSKeys PSKeysSema'\r\tpackage: 'Kernel-Processes'",			"comment" : [				"I represent an independent path of control in the system. This path of control may be stopped (by sending the message suspend) in such a way that it can later be restarted (by sending the message resume). When any one of several paths of control can be advanced, the single instance of ProcessorScheduler named Processor determines which one will actually be advanced partly using the value of priority.",				"",				"(If anyone ever makes a subclass of Process, be sure to use allSubInstances in anyProcessesAbove:.)",				"",				"",				"Process-specific storage: ",				"",				"\tAn old implementation using #environmentAt: [ifAbsent:/put:] protocol are no longer supported.",				"\tOne must not use a process-specific storage (PSS) methods directly, and instead use ProcessSpecificVariable (or subclass) instances to access process-specific storage.",				"\t",				"A new implemention is a revision towards making an access to PSS faster.",				"",				"When new instance of ProcessSpecificVariable are created, it obtains an unique index, which is registered using #allocatePSKey: (see class side).",				"This allows to dynamically create as many process-specific variables as needed, and access them in fast manner via simple array index (instead of dictionary lookup,",				"as in previous implementation).",				"",				"Another important aspect of new implementation is that all values in PSS are held weakly. This is done to prevent accidental memory leaks",				"as well as no need to manually unregistering a process-specific keys , once they are no longer in use."			],			"category" : "Kernel-Processes"		},		"VariableBreakpointMockClass" : {			"hash" : 3531776,			"definition" : "Object subclass: #VariableBreakpointMockClass\r\tinstanceVariableNames: 'v1'\r\tclassVariableNames: 'ClassVar'\r\tpackage: 'Reflectivity-Tests-Breakpoints'",			"comment" : [				"I'm just a class with inst var and accesses to it"			],			"category" : "Reflectivity-Tests-Breakpoints"		},		"ClyOldMessageBrowserAdapter" : {			"hash" : 5235712,			"definition" : "Object subclass: #ClyOldMessageBrowserAdapter\r\tinstanceVariableNames: 'messages title autoSelect refreshingBlock openedBrowser'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemTools-OldToolCompatibillity'",			"comment" : [				"I am a special adapter for the old message browser interface which users call using: ",				"",				"\tSmalltalk tools messageList ",				"",				"The most of system queries are triggered by SystemNavigation which collects list of result methods and pass them to the registered message browser.",				"In contrast Calypso needs instance of query.",				"",				"So to suppord old (current) approach I build special ClyOldMessageBrowserQuery on constant list of methods and then I open ClyQueryBrowser on it.",				" ",				"When Calypso is registered as default browser I am used as #messageList.",				"In future we should introduce #queryBrowser instead of it with direct usage of Calypso queries.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tautoSelect:\t\t<Boolean>",				"\tmessages:\t\t<Collection of<CompiledMethod>>",				"\trefreshingBlock:\t\t<BlockClosure>",				"\ttitle:\t\t<String>"			],			"category" : "Calypso-SystemTools-OldToolCompatibillity"		},		"SpActionBarPresenter" : {			"hash" : 2215680,			"definition" : "SpAbstractWidgetPresenter subclass: #SpActionBarPresenter\r\tinstanceVariableNames: 'items'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Widgets'",			"comment" : [				"A full width bar designed to present contextual actions. ",				"It is expected to be displayed below the content and expand horizontally to fill the area.",				"This is like the small action bars at the bottom of a list in most mobile apps (or macOS), which shows small icons with actions."			],			"category" : "Spec2-Core-Widgets"		},		"ChangeSorterModel class" : {			"hash" : 5395200,			"definition" : "ChangeSorterModel class\r\tinstanceVariableNames: ''",			"comment" : [				"A ChangeSorterModel is a model used by Change Sorter UIs for computation"			],			"category" : "NewTools-ChangeSorter"		},		"ClapParameterized" : {			"hash" : 398080,			"definition" : "ClapParameter subclass: #ClapParameterized\r\tinstanceVariableNames: 'parameters positionals aliases'\r\tclassVariableNames: ''\r\tpackage: 'Clap-Core-Specification'",			"comment" : [				"I am an abstract class specifying a parameter with nested positional parameters."			],			"category" : "Clap-Core-Specification"		},		"FinderUI class" : {			"hash" : 3333376,			"definition" : "FinderUI class\r\tinstanceVariableNames: 'searchedTextListMaxSize'",			"comment" : [				"A FinderUI is a UI used to render a Finder instance.",				"",				"This tool is used to look for selectors, class, source code or patterns through the system, or through a specified environment"			],			"category" : "Tool-Finder-UI"		},		"FT2Constants class" : {			"hash" : 1896448,			"definition" : "FT2Constants class\r\tinstanceVariableNames: ''",			"comment" : [				"The various flags from the Freetype/2 header.",				"",				"The LoadXXXX flags can be used with `primitiveLoadGlyph:flags:` or with the Cairo `primCairoFtFontCreateForFtFace:flags:scale:` primitives.",				"",				"#### `FT_LOAD_DEFAULT`",				"  Corresponding to 0, this value is used a default glyph load.  In this",				"  case, the following will happen:",				"                                                                        ",				"1. FreeType looks for a bitmap for the glyph corresponding to the",				"   face's current size.  If one is found, the function returns.  The",				"   bitmap data can be accessed from the glyph slot (see note below).",				"                                                                        ",				"2. If no embedded bitmap is searched or found, FreeType looks for a",				"   scalable outline.  If one is found, it is loaded from the font",				"   file, scaled to device pixels, then \"hinted\" to the pixel grid in",				"   order to optimize it.  The outline data can be accessed from the",				"   glyph slot (see note below).",				"                                                                        ",				"Note that by default, the glyph loader doesn't render outlines into",				"bitmaps. The following flags are used to modify this default",				"behaviour to more specific and useful cases.",				"                                                                        ",				"#### `FT_LOAD_NO_SCALE`",				"  Don't scale the vector outline being loaded to 26.6 fractional",				"  pixels, but kept in font units.  Note that this also disables",				"  hinting and the loading of embedded bitmaps.  You should only use it",				"  when you want to retrieve the original glyph outlines in font units.",				"                                                                        ",				"#### `FT_LOAD_NO_HINTING`",				"  Don't hint glyph outlines after their scaling to device pixels.",				"  This generally generates \"blurrier\" glyphs in anti-aliased modes.",				"                                                                        ",				"  This flag is ignored if `FT_LOAD_NO_SCALE` is set.",				"                                                                        ",				"#### `FT_LOAD_RENDER` ",				"  Render the glyph outline immediately into a bitmap before the glyph",				"  loader returns.  By default, the glyph is rendered for the",				"  `FT_RENDER_MODE_NORMAL` mode, which corresponds to 8-bit anti-aliased",				"  bitmaps using 256 opacity levels.  You can use either",				"  `FT_LOAD_TARGET_MONO` or `FT_LOAD_MONOCHROME` to render 1-bit",				"  monochrome bitmaps.",				"                                                                        ",				"  This flag is ignored if `FT_LOAD_NO_SCALE` is set.",				"                                                                        ",				"####`FT_LOAD_NO_BITMAP`",				"  Don't look for bitmaps when loading the glyph.  Only scalable",				"  outlines will be loaded when available, and scaled, hinted, or",				"  rendered depending on other bit flags.",				"                                                                        ",				"  This does not prevent you from rendering outlines to bitmaps",				"  with `FT_LOAD_RENDER`, however.",				"                                                                        ",				"####`FT_LOAD_VERTICAL_LAYOUT`",				"  Prepare the glyph image for vertical text layout.  This basically",				"  means that `face.glyph.advance` will correspond to the vertical",				"  advance height (instead of the default horizontal advance width),",				"  and that the glyph image will be translated to match the vertical",				"  bearings positions.",				"                                                                        ",				"####`FT_LOAD_FORCE_AUTOHINT`",				"  Force the use of the FreeType auto-hinter when a glyph outline is",				"  loaded.  You shouldn't need this in a typical application, since it",				"  is mostly used to experiment with its algorithm.",				"                                                                        ",				"####`FT_LOAD_CROP_BITMAP`",				"  Indicates that the glyph loader should try to crop the bitmap (i.e.,",				"  remove all space around its black bits) when loading it.  This is",				"  only useful when loading embedded bitmaps in certain fonts, since",				"  bitmaps rendered with `FT_LOAD_RENDER` are always cropped by default.",				"                                                                        ",				"####`FT_LOAD_PEDANTIC`",				"  Indicates that the glyph loader should perform pedantic",				"  verifications during glyph loading, rejecting invalid fonts.  This",				"  is mostly used to detect broken glyphs in fonts.  By default,",				"  FreeType tries to handle broken fonts also.",				"                                                                        ",				"#### `FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH`",				"  Indicates that the glyph loader should ignore the global advance",				"  width defined in the font.  As far as we know, this is only used by",				"  the X-TrueType font server, in order to deal correctly with the",				"  incorrect metrics contained in DynaLab's TrueType CJK fonts.",				"                                                                        ",				"####`FT_LOAD_NO_RECURSE`",				"  This flag is only used internally.  It merely indicates that the",				"  glyph loader should not load composite glyphs recursively.  Instead,",				"  it should set the `num_subglyph` and `subglyphs` values of the glyph",				"  slot accordingly, and set \"glyph->format\" to `FT_GLYPH_FORMAT_COMPOSITE`.",				"                                                                        ",				"  The description of sub-glyphs is not available to client",				"  applications for now.",				"                                                                        ",				"####`FT_LOAD_IGNORE_TRANSFORM`",				"  Indicates that the glyph loader should not try to transform the",				"  loaded glyph image.  This doesn't prevent scaling, hinting, or",				"  rendering.",				"                                                                        ",				"####`FT_LOAD_MONOCHROME`",				"  This flag is used with `FT_LOAD_RENDER` to indicate that you want",				"  to render a 1-bit monochrome glyph bitmap from a vectorial outline.",				"                                                                        ",				"  Note that this has no effect on the hinting algorithm used by the",				"  glyph loader.  You should better use `FT_LOAD_TARGET_MONO` if you",				"  want to render monochrome-optimized glyph images instead.",				"                                                                        ",				"####`FT_LOAD_LINEAR_DESIGN`",				"  Return the linearly scaled metrics expressed in original font units",				"  instead of the default 16.16 pixel values.",				"                                                                        ",				"####`FT_LOAD_NO_AUTOHINT`",				"  Indicates that the auto-hinter should never be used to hint glyph",				"  outlines.  This doesn't prevent native format-specific hinters from",				"  being used.  This can be important for certain fonts where unhinted",				"  output is better than auto-hinted one.",				"",				"One of following flags (as LoadTargetXXX) can be used to further specify the result.",				"",				"####`FT_RENDER_MODE_NORMAL`                                          ",				"     This is the default render mode; it corresponds to 8-bit        ",				"     anti-aliased bitmaps, using 256 levels of opacity.              ",				"                                                                     ",				"####`FT_RENDER_MODE_LIGHT`                                           ",				"     This is similar to `FT_RENDER_MODE_NORMAL`, except that this     ",				"     changes the hinting to prevent stem width quantization.  This   ",				"     results in glyph shapes that are more similar to the original,  ",				"     while being a bit more fuzzy (\"better shapes\", instead of       ",				"     \"better contrast\" if you want :-).                              ",				"                                                                     ",				"####`FT_RENDER_MODE_MONO`                                            ",				"     This mode corresponds to 1-bit bitmaps.                         ",				"                                                                     ",				"####`FT_RENDER_MODE_LCD`                                             ",				"     This mode corresponds to horizontal RGB/BGR sub-pixel displays, ",				"     like LCD-screens.  It produces 8-bit bitmaps that are 3 times   ",				"     the width of the original glyph outline in pixels, and which use",				"     the `FT_PIXEL_MODE_LCD` mode.                                    ",				"                                                                     ",				"####`FT_RENDER_MODE_LCD_V`                                         ",				"     This mode corresponds to vertical RGB/BGR sub-pixel displays    ",				"     (like PDA screens, rotated LCD displays, etc.).  It produces    ",				"     8-bit bitmaps that are 3 times the height of the original       ",				"     glyph outline in pixels and use the `FT_PIXEL_MODE_LCD_V` mode.  ",				"                                                                     ",				"####Note                                                              ",				"  The LCD-optimized glyph bitmaps produced by `FT_Render_Glyph` are    ",				"  _not filtered_ to reduce color-fringes.  It is up to the caller to ",				"  perform this pass.                                                 ",				""			],			"category" : "FreeType-Base"		},		"HiFastTableExample" : {			"hash" : 4214784,			"definition" : "FTSimpleDataSource subclass: #HiFastTableExample\r\tinstanceVariableNames: 'hiedraColumnController'\r\tclassVariableNames: ''\r\tpackage: 'Hiedra-Examples-FastTable'",			"comment" : [				"I am an example of use of Hiedra in a FastTable."			],			"category" : "Hiedra-Examples-FastTable"		},		"SearchableTree" : {			"hash" : 2107136,			"definition" : "ComposablePresenter subclass: #SearchableTree\r\tinstanceVariableNames: 'inputField roots tree label button'\r\tclassVariableNames: ''\r\tpackage: 'Spec-PolyWidgets-ListAndTree'",			"comment" : [				"I am a tree plus an input field to be able to filter the tree elements"			],			"category" : "Spec-PolyWidgets-ListAndTree"		},		"MetacelloPlatform class" : {			"hash" : 1482240,			"definition" : "MetacelloPlatform class\r\tinstanceVariableNames: ''",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "Metacello-Core-Model"		},		"ReThemeAPIUpdateRule" : {			"hash" : 3941376,			"definition" : "ReNodeRewriteRule subclass: #ReThemeAPIUpdateRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Do not explicitly refer to UITheme current but use Smalltalk ui theme. Similarly do not directly refer to ThemeIcons current but use Smalltalk ui icons."			],			"category" : "GeneralRules-Migrated"		},		"SpToolbarButtonPresenter" : {			"hash" : 2223872,			"definition" : "SpAbstractWidgetPresenter << #SpToolbarButtonPresenter\r\tslots: {\r\t\t\t #label => ObservableSlot .\r\t\t\t #icon => ObservableSlot .\r\t\t\t #action .\r\t\t\t #badge };\r\ttag: 'Widgets-Toolbar';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A button to be shown in a `SpToolbarPresenter`.",				"A `SpToolbarButtonPresenter` can show a badge."			],			"category" : "Spec2-Core-Widgets-Toolbar"		},		"ClassFactoryForTestCase" : {			"hash" : 350976,			"definition" : "Object subclass: #ClassFactoryForTestCase\r\tinstanceVariableNames: 'createdClasses createdTraits createdSilently'\r\tclassVariableNames: 'Counter'\r\tpackage: 'SUnit-Core-Extensions'",			"comment" : [				"I'm useful when classes needs to be created during the execution of the test. This avoid polluting your unit tests with dummy and mock classes.",				"A typical usage of it is:",				"",				"TestCase subclass: #YourTest",				"       instanceVariableNames: 'classFactory'",				"",				"YourTest>>setUp",				"       classFactory := ClassFactoryForTestCase new",				"",				"YourTest>>tearDown",				"       classFactory deleteClasses.",				"",				"YourTest>>testIsBehavior",				"       | cls |",				"       cls := classFactory newClass.",				"       self assert: cls isBehavior"			],			"category" : "SUnit-Core-Extensions"		},		"RSLegend" : {			"hash" : 5773568,			"definition" : "RSAbstractContainerBuilder subclass: #RSLegend\r\tinstanceVariableNames: 'layout defaultLabel defaultTitle defaultCircle defaultBox location menuShape defaultBoldText legendBlock'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Legend-Core'",			"comment" : [				"I am an handy class to build legend in a visualization",				"",				"```Smalltalk",				"scale := NSScale ordinalColored: 4.",				"",				"values := { 'Bonjour' . 'Guten Morgen' . 'Hello' . 'Hola' }.",				"c := RSCanvas new.",				"c @ RSCanvasController.",				"1 to: 20 do: [ :i |",				"\ttxt := values atRandom.",				"\tc add: (RSLabel new text: txt; color: (scale scale: txt)).",				"].",				"RSFlowLayout on: c shapes.",				"",				"",				"legend := RSLegend new.",				"legend container: c.",				"legend title: 'Color legend'.",				"legend text: 'French' withBoxColor: (scale scale: values first).",				"legend text: 'German' withBoxColor: (scale scale: values second).",				"legend text: 'English' withBoxColor: (scale scale: values third).",				"legend text: 'Espagnol' withBoxColor: (scale scale: values fourth).",				"legend build.",				"",				"c",				"```"			],			"category" : "Roassal3-Legend-Core"		},		"CmdMenu" : {			"hash" : 2090240,			"definition" : "Object subclass: #CmdMenu\r\tinstanceVariableNames: 'rootGroup activationStrategyClass'\r\tclassVariableNames: ''\r\tpackage: 'Commander-Core'",			"comment" : [				"I represent abstract tree structure for concrete menu implementation like context menu, toolbar, halo menu and etc..",				"I am created for commands which have given #commandActivatorClass:",				"\tmenu := CmdMenu activatedBy: aCommandActivatorClass",				"",				"Then I can build items for given context:",				"\tmenu buildInContext: aToolContext.",				"This method can be called multiple times for different contexts. It allows to build single menu for multiple parts of application. For example toolbar menu can include commands for all visible widgets.   ",				"When menu is built you can inspect #rootGroup to analyze structure.",				"",				"Concrete activator packages extend me to build concrete type of end user menu. For example context menu activator ask me to #buildContextMenu. Then I ask all my items to build context menu. And at the end commands receive context menu message where they build menu item morphs. ",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcommandActivatorClass:\t\t<CmdMenuCommandActivator class>",				"\trootCommandClass:\t\t<CmdCommand class>",				"\trootGroup:\t\t<CmdMenuGroup class>"			],			"category" : "Commander-Core"		},		"TextEditorDialogWindow" : {			"hash" : 1946368,			"definition" : "MessageDialogWindow subclass: #TextEditorDialogWindow\r\tinstanceVariableNames: 'entryText textEditorMorph'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Windows'",			"comment" : [				"Multi-line text entry dialog."			],			"category" : "Polymorph-Widgets-Windows"		},		"StMockDebuggerActionModel" : {			"hash" : 5550080,			"definition" : "StDebuggerActionModel subclass: #StMockDebuggerActionModel\r\tinstanceVariableNames: 'tag interruptedContext'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Debugger-Tests-Utils'",			"comment" : [				"I'm used to mock certain aspects of the `StDebuggerActionModel` class for testing."			],			"category" : "NewTools-Debugger-Tests-Utils"		},		"RxsPredicate class" : {			"hash" : 1451008,			"definition" : "RxsPredicate class\r\tinstanceVariableNames: ''",			"comment" : [				"-- Regular Expression Matcher v 1.1 (C) 1996, 1999 Vassili Bykov",				"--",				"This represents a character that satisfies a certain predicate.",				"",				"Instance Variables:",				"",				"\tpredicate\t<BlockClosure>\tA one-argument block. If it evaluates to the value defined by <negated> when it is passed a character, the predicate is considered to match.",				"\tnegation\t<BlockClosure>\tA one-argument block that is a negation of <predicate>."			],			"category" : "Regex-Core-Nodes"		},		"OSEnvironment class" : {			"hash" : 1602304,			"definition" : "OSEnvironment class\r\tinstanceVariableNames: ''",			"comment" : [				"I represent the user environment variables. See  `man environ` for more details.",				"Get access using: ",				"",				"\tSmalltalk os environment",				"",				"I have a Dictionary-like API to access the system environment variables.",				"The common denominator for all platforms implements a simple API that uses strings.",				"In other words, methods",				"",				"- #at:",				"- #at:put:",				"",				"and its variants receive normal strings and decide whether they have to encode those strings to platform bytes or not depending on the platform.",				"",				"My subclasses may or may not provide additional APIs to have more control on the particular encoding used."			],			"category" : "System-OSEnvironments-Base"		},		"CommandLineArguments" : {			"hash" : 910336,			"definition" : "Object subclass: #CommandLineArguments\r\tinstanceVariableNames: 'arguments'\r\tclassVariableNames: ''\r\tpackage: 'System-BasicCommandLineHandler-Utilities'",			"comment" : [				"The CommandLineArguments represents the arguments passed to the image.",				"In the following case,",				"",				"\t$PHARO_VM myImage.image --foo bar",				"\t",				"`CommandLineArguments default` contains {'--foo'. 'bar'}."			],			"category" : "System-BasicCommandLineHandler-Utilities"		},		"SpCommand" : {			"hash" : 2395904,			"definition" : "CmUICommand subclass: #SpCommand\r\tinstanceVariableNames: 'buildPresenterBlock presenter'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Commander2-Core'",			"comment" : [				"I am a command decorator adding informations useful when for usage in context of a Spec application.",				"",				"Basically, I add:",				"- an #icon (#blank by default)",				"- a #shortcutKey (optional)",				"- a #displayStrategy to handle how to show the command if it is not executable on a context (default is to be disabled)",				"- a #positionStrategy to handle on which side presenter with left and right side I should be (default is left)"			],			"category" : "Spec2-Commander2-Core"		},		"SpAthensPresenter" : {			"hash" : 2216192,			"definition" : "SpAbstractWidgetPresenter << #SpAthensPresenter\r\ttraits: {SpTContextMenu};\r\tslots: {\r\t\t\t #drawBlock => ObservableSlot .\r\t\t\t #surfaceExtent => ObservableSlot };\r\ttag: 'Widgets-Athens';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter that contains an athens surface (See `AthensSurface` and `AthensSurfaceExamples class`). ",				"Users can draw their own vectorial images  and render them as part of a Spec based application by using this presenter."			],			"category" : "Spec2-Core-Widgets-Athens"		},		"FreeTypeCache class" : {			"hash" : 1902080,			"definition" : "FreeTypeCache class\r\tinstanceVariableNames: 'current'",			"comment" : [				"Cache for freetype fonts"			],			"category" : "FreeType-Cache"		},		"ZnServerLogEvent" : {			"hash" : 1387264,			"definition" : "ZnLogEvent subclass: #ZnServerLogEvent\r\tinstanceVariableNames: 'serverId processId'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Logging'",			"comment" : [				"I am ZnServerLogEvent, a ZnLogEvent generated by ZnServer and its subclasses.",				"",				"I hold a processId attribute.",				"I hold an optional serverId attribute."			],			"category" : "Zinc-HTTP-Logging"		},		"ZnLogEvent class" : {			"hash" : 1381376,			"definition" : "ZnLogEvent class\r\tinstanceVariableNames: ''",			"comment" : [				"I am ZnLogEvent, the base class of a log events emitted by elements of the Zinc HTTP Components framework.",				"",				"I add a timestamp and a simple id attribute. The id can wrap around and should only be used to distinguish between events that have the same timestamp.",				"",				"ZnLogEvents are distributed as Announcement through a singleton Announcer that I maintain.",				"",				"I have a small convenience API to log to the Transcript or open a simple GUI on the emitted log events."			],			"category" : "Zinc-HTTP-Logging"		},		"BitBlt class" : {			"hash" : 468992,			"definition" : "BitBlt class\r\tinstanceVariableNames: ''",			"comment" : [				"I represent a block transfer (BLT) of pixels into a rectangle (destX, destY, width, height) of the destinationForm.  The source of pixels may be a similar rectangle (at sourceX, sourceY) in the sourceForm, or a constant color, currently called halftoneForm.  If both are specified, their pixel values are combined with a logical AND function prior to transfer.  In any case, the pixels from the source are combined with those of the destination by as specified by the combinationRule.",				"",				"The combination rule whose value is 0 through 15 programs the transfer to produce 1 or 0 according to its 4-bit representation as follows:",				"\t8:\tif source is 0 and destination is 0",				"\t4:\tif source is 0 and destination is 1",				"\t2:\tif source is 1 and destination is 0",				"\t1:\tif source is 1 and destination is 1.",				"At each pixel the corresponding bits of the source and destination pixel values determine one of these conditions;  if the combination rule has a 1 in the corresponding bit position, then the new destination value will be 1, otherwise it will be zero.  Forms may be of different depths, see the comment in class Form.",				"",				"In addition to the original 16 combination rules, this BitBlt supports",				"\t16\tfails (to simulate paint bits)",				"\t17\tfails (to simulate erase bits)",				"\t18\tsourceWord + destinationWord",				"\t19\tsourceWord - destinationWord",				"\t20\trgbAdd: sourceWord with: destinationWord.  Sum of color components",				"\t21\trgbSub: sourceWord with: destinationWord.  Difference of color components",				"\t22\tOLDrgbDiff: sourceWord with: destinationWord.  Sum of abs of differences in components",				"\t23\tOLDtallyIntoMap: destinationWord.  Tallies pixValues into a colorMap",				"\t\t\tthese old versions don't do bitwise dest clipping.  Use 32 and 33 now.",				"\t24\talphaBlend: sourceWord with: destinationWord.  32-bit source and dest only",				"\t25\tpixPaint: sourceWord with: destinationWord.  Wherever the sourceForm is non-zero, it replaces the destination.  Can be used with a 1-bit source color mapped to (0, FFFFFFFF), and a fillColor to fill the dest with that color wherever the source is 1.",				"\t26\tpixMask: sourceWord with: destinationWord.  Like pixPaint, but fills with 0.",				"\t27\trgbMax: sourceWord with: destinationWord.  Max of each color component.",				"\t28\trgbMin: sourceWord with: destinationWord.  Min of each color component.",				"\t29\trgbMin: sourceWord bitInvert32 with: destinationWord.  Min with (max-source)",				"\t30\talphaBlendConst: sourceWord with: destinationWord.  alpha is an arg. works in 16 bits.",				"\t31\talphaPaintConst: sourceWord with: destinationWord.  alpha is an arg. works in 16 bits.",				"\t32\trgbDiff: sourceWord with: destinationWord.  Sum of abs of differences in components",				"\t33\ttallyIntoMap: destinationWord.  Tallies pixValues into a colorMap",				"\t34\talphaBlendScaled: srcWord with: dstWord. Alpha blend of scaled srcWord and destWord.",				"",				"The color specified by halftoneForm may be either a Color or a Pattern.   A Color is converted to a pixelValue for the depth of the destinationForm.  If a Pattern, BitBlt will simply interpret its bitmap as an array of Color pixelValues.  BitBlt aligns the first element of this array with the top scanline of the destinationForm, the second with the second, and so on, cycling through the color array as necessary.  Within each scan line the 32-bit value is repeated from left to right across the form.  If the value repeats on pixels boudaries, the effect will be a constant color;  if not, it will produce a halftone that repeats on 32-bit boundaries.",				"",				"Any transfer specified is further clipped by the specified rectangle (clipX, clipY, clipWidth, clipHeight), and also by the bounds of the source and destination forms.",				"\tTo make a small Form repeat and fill a big form, use an InfiniteForm as the source.",				"\tTo write on a form and leave with both transparent and opapue areas, use a MaskedForm as the source.",				"",				"Pixels from a source to a destination whose pixels have a different depth are converted based on the optional colorMap.  If colorMap is nil, then conversion to more bits is done by filling the new high-order bits with zero, and conversion to fewer bits is done by truncating the lost high-order bits.  ",				"",				"The colorMap, if specified, must be a either word array (ie Bitmap) with 2^n elements, where n is the pixel depth of the source, or a fully specified ColorMap which may contain a lookup table (ie Bitmap) and/or four separate masks and shifts which are applied to the pixels. For every source pixel, BitBlt will first perform masking and shifting and then index the lookup table, and select the corresponding pixelValue and mask it to the destination pixel size before storing.",				"\tWhen blitting from a 32 or 16 bit deep Form to one 8 bits or less, the default is truncation.  This will produce very strange colors, since truncation of the high bits does not produce the nearest encoded color.  Supply a 512 long colorMap, and red, green, and blue will be shifted down to 3 bits each, and mapped.  The message copybits...stdColors will use the best map to the standard colors for destinations of depths 8, 4, 2 and 1.  Two other sized of colorMaps are allowed, 4096 (4 bits per color) and 32786 (five bits per color).",				"\tNormal blits between 16 and 32 bit forms truncates or pads the colors automatically to provide the best preservation of colors.",				"\tColors can be remapped at the same depth.  Sometimes a Form is in terms of colors that are not the standard colors for this depth, for example in a GIF file.  Convert the Form to a MaskedForm and send colorMap: the list of colors that the picture is in terms of.  MaskedForm will use the colorMap when copying to the display or another Form. (Note also that a Form can be copied to itself, and transformed in the process, if a non-nil colorMap is supplied.)"			],			"category" : "Graphics-Primitives-BitBlt"		},		"CmCommand" : {			"hash" : 799488,			"definition" : "CmAbstractCommand subclass: #CmCommand\r\tuses: CmTWithBasicNameAndDescription + CmTDecorable\r\tinstanceVariableNames: 'context'\r\tclassVariableNames: ''\r\tpackage: 'Commander2-Commands'",			"comment" : [				"I am the common superclass to all commands defined in the context of Commander2.",				"",				"My subclasses need to redefine at least #execute method.",				"This method defines the behaviour of the command.",				"",				"Eventually, #canBeRun can be override to check if the command can be run according to its current context."			],			"category" : "Commander2-Commands"		},		"SQSurfaceDispatch" : {			"hash" : 3074816,			"definition" : "FFIExternalStructure subclass: #SQSurfaceDispatch\r\tinstanceVariableNames: 'getSurfaceFormatFn lockSurfaceFn showSurfaceFn unlockSurfaceFn'\r\tclassVariableNames: 'OFFSET_GETSURFACEFORMATFN OFFSET_LOCKSURFACEFN OFFSET_MAJORVERSION OFFSET_MINORVERSION OFFSET_SHOWSURFACEFN OFFSET_UNLOCKSURFACEFN'\r\tpackage: 'Athens-Cairo-Surface'",			"comment" : [				"A structure from SurfacePlugin.h ",				" ",				"",				"typedef struct sqSurfaceDispatch {",				"\t/* Version information. Must be provided by the client",				"\t   so the surface manager can check if certain operations",				"\t   are supported. */",				"\tint majorVersion;",				"\tint minorVersion;",				"",				"\t/* Version 1.0 */",				"\tfn_getSurfaceFormat getSurfaceFormat;",				"\tfn_lockSurface lockSurface;",				"\tfn_unlockSurface unlockSurface;",				"\tfn_showSurface showSurface;",				"} sqSurfaceDispatch; "			],			"category" : "Athens-Cairo-Surface"		},		"FileDialogWindow" : {			"hash" : 3356160,			"definition" : "DialogWindowMorph subclass: #FileDialogWindow\r\tinstanceVariableNames: 'directoryTreeMorph fileListMorph directories selectedDirectory selectedFileIndex fileSelectionBlock showDirectoriesInFileList fileSortBlock fileNameText defaultExtension actionSelector answer entryCache entryCacheDirectory previewType previewMorph preferredFileSystem'\r\tclassVariableNames: ''\r\tpackage: 'Tool-FileList'",			"comment" : [				"Dialog based file chooser for selecting or saving files. Supports various types of answer (file stream, file name, directory path etc) with optional extension filters and image or text file preview."			],			"category" : "Tool-FileList"		},		"ShortcutReminder" : {			"hash" : 1880320,			"definition" : "Object subclass: #ShortcutReminder\r\tinstanceVariableNames: 'limit size position countDict backgroundColor textColor'\r\tclassVariableNames: 'DefaultReminder Enabled'\r\tpackage: 'Morphic-Base-Menus'",			"comment" : [				"ShortcutReminder is an object used to bring up a notification whenever a menu entry that has a keyboard shortcut is clicked on instead of using the keyboard.",				"",				"It is configurable from the settings browser, where one can choose the location and size of the notification Morph. The notification also holds a count of how many times a specific menu entry has been reminded for, and will only notify up to that limit. It is possible to set this limit to -1 such that it will always notify."			],			"category" : "Morphic-Base-Menus"		},		"OSWindowGLAttributes class" : {			"hash" : 4055808,			"definition" : "OSWindowGLAttributes class\r\tinstanceVariableNames: ''",			"comment" : [				"I holding a set of OpenGL attributes, used to initialize an opengl rendering context for a window."			],			"category" : "OSWindow-Core-OpenGL"		},		"ChangeSet" : {			"hash" : 1320448,			"definition" : "Object subclass: #ChangeSet\r\tinstanceVariableNames: 'name preamble postscript changeRecords'\r\tclassVariableNames: 'AllChangeSets DefaultChangeSetDirectoryName MustCheckForSlips'\r\tpackage: 'System-Changes-Base'",			"comment" : [				"ChangeSets keep track of the changes made to a system, so they can be written on a file as source code (a \"fileOut\"). ",				"",				"---",				"preamble and postscript:  two strings that serve as prefix (useful for documentation) and suffix (useful for doits) to the fileout of the changeSet.",				"",				"",				"changeRecords -  Dictionary {class name -> a ClassChangeRecord}.",				"These classChangeRecords (qv) remember all of the system changes."			],			"category" : "System-Changes-Base"		},		"ReSizeCheckRule" : {			"hash" : 3951104,			"definition" : "ReNodeMatchRule subclass: #ReSizeCheckRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Check for code that checks that a collection is non-empty before sending it an iteration message (e.g., do:, collect:, etc.). Since the collection iteration messages work for empty collections, we do not need to clutter up our method with the extra size check."			],			"category" : "GeneralRules-Migrated"		},		"DiskStore class" : {			"hash" : 1288448,			"definition" : "DiskStore class\r\tinstanceVariableNames: ''",			"comment" : [				"I am an abstract superclass for disk store implementations. My subclasses provide access to the actual data storage of a particular kind of filesystem. "			],			"category" : "FileSystem-Disk-Store"		},		"TransferMorph" : {			"hash" : 614144,			"definition" : "Morph subclass: #TransferMorph\r\tinstanceVariableNames: 'transferType passenger draggedMorph source dropNotifyRecipient accepted copy dragHand'\r\tclassVariableNames: 'CopyPlusIcon'\r\tpackage: 'Morphic-Base-Events'",			"comment" : [				"This is a Morph that is used to visually indicate the progress of a drag operation, and also as a container for various bits of drag state information.",				"",				"It polls the shift state in its step method to update its copy state (shift pressed = should copy).",				"",				"And if you hit the Escape key while dragging, it aborts the drag operation."			],			"category" : "Morphic-Base-Events"		},		"MCRepositoryGroup" : {			"hash" : 292352,			"definition" : "Object subclass: #MCRepositoryGroup\r\tinstanceVariableNames: 'repositories useCache'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Versioning'",			"comment" : [				"A singleton class, holds the list of repositories. Can look for a requested VersionInfo among its repositories."			],			"category" : "Monticello-Versioning"		},		"TKTAbstractExecutor" : {			"hash" : 407808,			"definition" : "Object subclass: #TKTAbstractExecutor\r\tuses: TTaskExecutor\r\tinstanceVariableNames: 'exceptionHandler busy'\r\tclassVariableNames: ''\r\tpackage: 'TaskIt-Kernel'",			"comment" : [				"I am an abstract class defining the basic behaviour and state to execute a task:",				"  - the basic executeTask: method",				"  - an exception handler meant to manage unhandled exception"			],			"category" : "TaskIt-Kernel"		},		"StSpotterQuery" : {			"hash" : 5508864,			"definition" : "Object subclass: #StSpotterQuery\r\tinstanceVariableNames: 'candidatesList processors candidateLinks searchText finished spotterPresenter'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Spotter-Model'",			"comment" : [				"A query (a search) for Spotter.",				"A query iterates all defined `relevantProcessors` to retrieve the `results`.",				"To produce a result, it takes the `searchText` and `process` it."			],			"category" : "NewTools-Spotter-Model"		},		"TraitedMetaclass" : {			"hash" : 1299200,			"definition" : "Metaclass subclass: #TraitedMetaclass\r\tinstanceVariableNames: 'localMethods composition baseLocalMethods baseComposition'\r\tclassVariableNames: ''\r\tpackage: 'TraitsV2-Base'",			"comment" : [				"All the traited class metaclasses are instances of myself.",				"",				"I include all the custom behavior to implement traits.",				"I override a number of methods in Metaclass to implement traits.",				"",				"Also I have the localMethodDict and the traitComposition of the base class.  ",				"So it is not needed to recompile the methods from TraitedClass. Check #initializeBasicMethods for more details"			],			"category" : "TraitsV2-Base"		},		"ZnFastLineReader" : {			"hash" : 1211392,			"definition" : "Object subclass: #ZnFastLineReader\r\tinstanceVariableNames: 'readStream cr lf bufferStream'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-Character-Encoding-Core'",			"comment" : [				"I am ZnFastLineReader, a helper to efficiently read CR, LF or CRLF terminated lines from a character stream."			],			"category" : "Zinc-Character-Encoding-Core"		},		"RBBasicDummyLintRuleTest" : {			"hash" : 4604416,			"definition" : "RBDummyLintRuleTest subclass: #RBBasicDummyLintRuleTest\r\tinstanceVariableNames: 'methodBlock result classBlock anInstVar'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring2-Transformations-Tests'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tanInstVar:\t\t<Object>",				"\tclassBlock:\t\t<Object>",				"\tmethodBlock:\t\t<Object>",				"\tresult:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Refactoring2-Transformations-Tests"		},		"HiUniformColorStrategy" : {			"hash" : 4209152,			"definition" : "HiAbstractColorStrategy subclass: #HiUniformColorStrategy\r\tinstanceVariableNames: 'linkColor nodeColor'\r\tclassVariableNames: ''\r\tpackage: 'Hiedra-UI'",			"comment" : [				"I map all nodes to a color and all links to another color (by default the same color)."			],			"category" : "Hiedra-UI"		},		"TFVariadicFunctionDefinition" : {			"hash" : 2020864,			"definition" : "TFFunctionDefinition subclass: #TFVariadicFunctionDefinition\r\tinstanceVariableNames: 'fixedArgumentCount'\r\tclassVariableNames: ''\r\tpackage: 'ThreadedFFI-Base'",			"comment" : [				"I represent Variadic Argument Functions.",				"I work the same as my superclass, with the difference that I use a different primitive. ",				"This primitive uses the libFFI API for variadic functions.",				"",				"For compatibility reason with older VMs, If the new primitive fails, the old primitive is used instead."			],			"category" : "ThreadedFFI-Base"		},		"RSHighlightable" : {			"hash" : 5732864,			"definition" : "RSInteraction subclass: #RSHighlightable\r\tuses: RSTAnnounceable\r\tinstanceVariableNames: 'announcer copyKey highlightShapes propertyKey'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Core'",			"comment" : [				"<keyClass>",				"`RSHighlightable` is an interaction for shapes to make them highlightable. ",				"",				"*Responsibility*: make shapes highlightable",				"",				"*Collaborators*: closely colaborate with `RSShape`",				"",				"*Variables*:",				"- `announcer`: highlightable uses announcement to trigger the interaction. ",				"- `copyKey`: symbol that is used to keep in the property the previous color. One needs to modity the `copyKey` to avoid conflict between several highlightable interactions.",				"- `highlightShapes`: refers to a one-arg-block that takes as parameter a shape and returns the shapes that must be highlighted. ",				"- `propertyKey`: symbol that is used in the property of the `RSCanvas` to keep highlighted shapes. This is useful to avoid conflicts between different highlightable.",				"   ",				"",				"*Example*:",				"```Smalltalk",				"c := RSCanvas new.",				"",				"shapes := (1 to: 10) collect: [ :v | RSEllipse new size: 20; model: v ] as: RSGroup.",				"c addAll: shapes.",				"shapes @ RSPopup @ RSDraggable.",				"",				"RSGridLayout on: shapes.",				"",				"eb := RSEdgeBuilder arrowedLineWithOffset: 0.5.",				"eb canvas: c.",				"eb connectTo: [ :v | 1 ].",				"",				"int := RSHighlightable new withEdges highlightColor: Color red.",				"shapes @ int.",				"",				"c @ RSCanvasController",				"```",				"",				"Another example:",				"```Smalltalk",				"c := RSCanvas new.",				"shapes := (1 to: 30) collect: [ :v | RSBox new border: (RSBorder new color: Color red; width: 3); model: v ] as: RSGroup.",				"c addAll: shapes.",				"shapes @ RSPopup.",				"",				"RSNormalizer size",				"\tshapes: shapes;",				"\tnormalize: #yourself.",				"",				"interaction := RSHighlightable new.",				"interaction highlightColor: Color blue.",				"interaction highlightBorder: (RSBorder new color: Color black; width: 3).",				"shapes @ interaction.",				"",				"RSGridLayout on: shapes.",				"c @ RSCanvasController",				"```",				"",				"Another example:",				"```Smalltalk",				"c := RSCanvas new.",				"shapes := (1 to: 30) collect: [ :v | RSEllipse new  model: v; size: 10 ] as: RSGroup.",				"c addAll: shapes.",				"shapes @ RSPopup.",				"",				"RSEdgeBuilder line",				"\tcanvas: c;",				"\twithBorderAttachPoint;",				"\tconnectFrom: [ :v | v // 2 ].",				"",				"interaction := RSHighlightable new.",				"interaction highlightBorder: (RSBorder new color: Color black; width: 3).",				"interaction withEdges.",				"shapes @ interaction.",				"",				"RSTreeLayout on: shapes.",				"c @ RSCanvasController",				"```",				"",				"```Smalltalk",				"c := RSCanvas new.",				"shapes := (1 to: 30) collect: [ :v | RSBox new  size: 20; model: v ] as: RSGroup.",				"c addAll: shapes.",				"shapes @ RSPopup.",				"",				"interaction := RSHighlightable new.",				"interaction highlightBorder: (RSBorder new width: 3; color: Color pink).",				"shapes @ interaction.",				"",				"RSGridLayout on: shapes.",				"c @ RSCanvasController",				"```",				"",				"Example of multiple selections:",				"```Smalltalk",				"classes := Collection withAllSubclasses.",				"",				"c := RSCanvas new.",				"shapes := classes collect: [ :cls | RSBox new model: cls ] as: RSGroup.",				"",				"c addAll: shapes.",				"RSNormalizer size shapes: shapes; normalize: #numberOfMethods.",				"RSFlowLayout on: shapes.",				"",				"shapes @ RSPopup.",				"",				"",				"buttonReset := RSLabel text: 'Reset'.",				"c add: buttonReset.",				"buttonReset setAsFixed.",				"buttonReset @ (RSHighlightable defaultRed).",				"buttonReset when: RSMouseClick do: [ :evt | ",				"\tselectedShapes do: [ :s | highlightable restore: s selector: #color ].",				"\tselectedShapes := RSGroup new.",				"\tlbl text: ''.",				"\tc signalUpdate. ].",				"",				"buttonInspect := RSLabel text: 'Inspect'.",				"c add: buttonInspect.",				"buttonInspect setAsFixed.",				"buttonInspect @ (RSHighlightable defaultRed).",				"buttonInspect when: RSMouseClick do: [ :evt | selectedShapes inspect ].",				"",				"lbl := RSLabel new.",				"c add: lbl.",				"lbl setAsFixed.",				"lbl translateTo: 90 @ 30.",				"",				"g := {buttonReset . buttonInspect } asGroup.",				"RSHorizontalLineLayout on: g.",				"g translateTo: g extent / 2 + (10 @ 10).",				"",				"selectedShapes := RSGroup new.",				"highlightable := RSHighlightable new.",				"shapes when: RSMouseClick do: [ :evt |",				"\t(selectedShapes includes: evt shape) ",				"\t\tifFalse: [ selectedShapes add: evt shape ].",				"\thighlightable",				"\t\t\trecord: evt shape",				"\t\t\tselector: #color",				"\t\t\tvalue: Color red.",				"\tlbl text: selectedShapes size asString, ' selected shapes'.",				"\tc signalUpdate.",				"\t\t ].",				"",				"c @ RSCanvasController.",				"c openOnce",				"```"			],			"category" : "Roassal3-Interaction-Core"		},		"MetaLinkNodesMapper" : {			"hash" : 3027712,			"definition" : "Object subclass: #MetaLinkNodesMapper\r\tinstanceVariableNames: 'nodesForObjects objectsForNodes'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Installer'",			"comment" : [				"I map how instance specific links are put on nodes, in different ways.",				"",				"I provide an interface to easily and fastly find a links for a given node or nodes for a given link."			],			"category" : "Reflectivity-Installer"		},		"MenuItemMorph" : {			"hash" : 607488,			"definition" : "StringMorph subclass: #MenuItemMorph\r\tinstanceVariableNames: 'isEnabled subMenu isSelected target selector arguments icon keyText'\r\tclassVariableNames: 'BottomArrow LeftArrow SubMenuMarker UpArrow'\r\tpackage: 'Morphic-Base-Menus'",			"comment" : [				"I represent an item in a menu.",				"",				"",				"",				"Instance variables:",				"\tisEnabled \t<Boolean>\tTrue if the menu item can be executed.",				"\tsubMenu \t<MenuMorph | nil>\tThe submenu to activate automatically when the user mouses over the item.",				"\tisSelected \t<Boolean>\tTrue if the item is currently selected.",				"\ttarget \t\t<Object>\t\tThe target of the associated action.",				"\tselector \t\t<Symbol>\tThe associated action.",				"\targuments \t<Array>\t\tThe arguments for the associated action.",				"\ticon\t\t<Form | nil>\tAn optional icon form to be displayed to my left.",				""			],			"category" : "Morphic-Base-Menus"		},		"ImageMorph class" : {			"hash" : 579584,			"definition" : "ImageMorph class\r\tuses: TAbleToRotate classTrait\r\tinstanceVariableNames: ''",			"comment" : [				"ImageMorph is a morph that displays a picture (Form). My extent is determined by the extent of my form.",				"",				"Use #image: to set my picture.",				"",				"Structure:",				" instance var\t\tType \t\tDescription",				" image\t\t\t\tForm\t\tThe Form to use when drawing",				"",				"Code examples:",				"\tImageMorph new openInWorld; grabFromScreen",				"",				"\t(Form fromFileNamed: 'myGraphicsFileName') asMorph openInWorld",				"",				"Relationship to SketchMorph: ImageMorph should be favored over SketchMorph, a parallel, legacy class -- see the Swiki FAQ for details ( http://minnow.cc.gatech.edu/squeak/1372 ). "			],			"category" : "Morphic-Base-Basic"		},		"AColorSelectorMorph" : {			"hash" : 1932544,			"definition" : "BracketSliderMorph subclass: #AColorSelectorMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-ColorPicker'",			"comment" : [				"ColorComponentSelector showing an alpha gradient over a hatched background."			],			"category" : "Morphic-Widgets-ColorPicker"		},		"IceExternalJob" : {			"hash" : 6190848,			"definition" : "Object subclass: #IceExternalJob\r\tinstanceVariableNames: 'title started min max current'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Progress'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcurrent:\t\t<Object>",				"\tmax:\t\t<Object>",				"\tmin:\t\t<Object>",				"\tstarted:\t\t<Object>",				"\ttitle:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Iceberg-Progress"		},		"SpMenuButtonPresenter" : {			"hash" : 2206976,			"definition" : "SpAbstractButtonPresenter << #SpMenuButtonPresenter\r\tslots: { #menu => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter to create a menu button (a button who exposes a menu instead having an action) "			],			"category" : "Spec2-Core-Widgets"		},		"MetaLinkAnonymousClassBuilder" : {			"hash" : 3026688,			"definition" : "Object subclass: #MetaLinkAnonymousClassBuilder\r\tinstanceVariableNames: 'classes migratedObjects'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Installer'",			"comment" : [				"I build anonymous subclasses for object with instance specific MetaLinks. ",				"",				"I can compile methods in those subclasses, and provide access to anonymous classes;",				"",				"I also handle the migration of an object from its original class to an anonymous subclass and vice versa.",				"",				"I consider that for one anonymous subclass i hold one object reference. I therefore cannot work as is with other clients using anonymous subclasses."			],			"category" : "Reflectivity-Installer"		},		"RBTransformationRule class" : {			"hash" : 1696768,			"definition" : "RBTransformationRule class\r\tinstanceVariableNames: ''",			"comment" : [				"A RBTransformationRule is a special rule that not only detects problems but also can automatically transform the good."			],			"category" : "Refactoring-Critics"		},		"RSPieSlice" : {			"hash" : 5676800,			"definition" : "RSBoundingShape subclass: #RSPieSlice\r\tinstanceVariableNames: 'alphaAngle betaAngle innerRadius externalRadius segmentSpacing cornerRadii'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Bounding'",			"comment" : [				"A ring shape to draw ring in a circle shape, not in a ellipse."			],			"category" : "Roassal3-Shapes-Bounding"		},		"SpBoxConstraints" : {			"hash" : 2151680,			"definition" : "SpLayoutConstraints subclass: #SpBoxConstraints\r\tinstanceVariableNames: 'expand fill padding placedAtStart height width'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Layout-Box'",			"comment" : [				"I am the constraints that can be applied to a presenter placed into a box layout.",				"I can define: ",				"",				"- expand: the widget will expand to take all the space the layout wants to give it.",				"- fill: the widget will fill the space taken (this property just has sense if expand=false)",				"- padding: the padding let before the next presenter.",				"- width/height: fixed width and height to take. "			],			"category" : "Spec2-Layout-Box"		},		"ZipWriteStream class" : {			"hash" : 1345792,			"definition" : "ZipWriteStream class\r\tinstanceVariableNames: ''",			"comment" : [				"A ZIP write stream"			],			"category" : "Compression-Streams"		},		"SDL2TuioObjectStateMachine" : {			"hash" : 4119808,			"definition" : "Object subclass: #SDL2TuioObjectStateMachine\r\tinstanceVariableNames: 'color position angle objectId objectNumber'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-SDL2-Examples-Touch'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tangle:\t\t<Object>",				"\tcolor:\t\t<Object>",				"\tobjectId:\t\t<Object>",				"\tobjectNumber:\t\t<Object>",				"\tposition:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "OSWindow-SDL2-Examples-Touch"		},		"FreeTypeFontProvider class" : {			"hash" : 711680,			"definition" : "FreeTypeFontProvider class\r\tinstanceVariableNames: 'current'",			"comment" : [				"This is a font provider for true type fonts. You can use it to add TTF files to your image:",				"",				"FreeTypeFontProvider current ",				"\tupdateFontsFromSystem;",				"\tupdateAvailableFontFamilies. ",				"",				"You can add TTF fonts from a spetial dirrectory:",				"FreeTypeFontProvider current ",				"\tupdateFromDirectory: './fonts/' asFileReference done: Set new.",				"",				"Then you can use font dialog:",				"\tFreeTypeFontSelectorDialogWindow new open.",				"",				"Or set for example set ballon or default font as following:",				"\tStandardFonts balloonFont: ",				"\t        (LogicalFont familyName: 'Arial'  pointSize: 10). ",				"\tStandardFonts defaultFont: ",				"\t        (LogicalFont familyName: 'Arial'  pointSize: 10)."			],			"category" : "FreeType-FontManager"		},		"AthensDisplayScanner" : {			"hash" : 3416832,			"definition" : "DisplayScanner subclass: #AthensDisplayScanner\r\tinstanceVariableNames: 'canvas'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Morphic'",			"comment" : [				"An AthensDisplayScanner displays the paragraphs text on an AthensCanvas."			],			"category" : "Athens-Morphic"		},		"OSWindowGestureHandler" : {			"hash" : 4055040,			"definition" : "OSWindowEventGestureVisitor subclass: #OSWindowGestureHandler\r\tinstanceVariableNames: 'fingers fingerCount registeredGestures devicesFingers lastUpdateTimestamp'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Gestures'",			"comment" : [				"I am a handler who can manage gestures and provide them informations on past and current touch events"			],			"category" : "OSWindow-Core-Gestures"		},		"ZipArchive" : {			"hash" : 1342208,			"definition" : "Archive subclass: #ZipArchive\r\tinstanceVariableNames: 'centralDirectorySize centralDirectoryOffsetWRTStartingDiskNumber zipFileComment writeCentralDirectoryOffset writeEOCDOffset'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'ZipFileConstants'\r\tpackage: 'Compression-Archives'",			"comment" : [				"A ZipArchive represents an archive that is read and/or written using the PKZIP file format.",				"",				"ZipArchive instances know how to read and write such archives; their members are subinstances of ZipArchiveMember."			],			"category" : "Compression-Archives"		},		"SpMorphicPaginatorAdapter" : {			"hash" : 2610176,			"definition" : "SpAbstractMorphicAdapter subclass: #SpMorphicPaginatorAdapter\r\tuses: SpTBackendUpdating\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Paginator'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbackendUpdating:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Adapters-Morphic-Paginator"		},		"StBaseFilter" : {			"hash" : 5500160,			"definition" : "Object subclass: #StBaseFilter\r\tinstanceVariableNames: 'context filteredItems streamed'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Spotter-Filters'",			"comment" : [				"A base for spotter filters. ",				"A spotter filter provides the functionality for filtering items based on a query.",				"",				"It returns the list of all items that match the filter, but subclasses should only send to the processor the first  `StBaseFilter>>#itemsLimit` items ."			],			"category" : "NewTools-Spotter-Filters"		},		"CoResultSet" : {			"hash" : 5318912,			"definition" : "Object subclass: #CoResultSet\r\tinstanceVariableNames: 'results fetcher filter'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Model-Core'",			"comment" : [				"I am the main entry point of the completion system.",				"I am built from a (potentially composed) fetcher and a filter-string.",				"",				"When asked for results, I fetch them from the fetcher.",				"Internally, I keep also a list of already fetched results to avoid fetching many times the same.",				"This is particularly useful when the filter is being narrowed (e.g., we go from a filter 'ab' to a filter 'abc').",				"In such a case, some of the results already fetched are still valid, and the fetcher state is valid too.",				"  => we then filter the subresults and change the fetcher filter",				"In case the filter is being broadened (e.g., we go from 'abc' to 'ab'), all results we already have are valid, but probably lots of other results were filtered already. So we reset both the results and the fetcher and restart the search."			],			"category" : "HeuristicCompletion-Model-Core"		},		"EditableList" : {			"hash" : 2099968,			"definition" : "ComposablePresenter subclass: #EditableList\r\tinstanceVariableNames: 'title list addButton removeButton upButton downButton topButton bottomButton addItemBlock okBlock'\r\tclassVariableNames: ''\r\tpackage: 'Spec-PolyWidgets-ListAndTree'",			"comment" : [				"This widget allows you to edit a list of items :",				"- add / remove an item to/from the list ",				"- order the list by moving elements up/down/top/bottom.",				"",				"The default behavior is to do a copy of the list. The widget works with its internal copy. It allows the user to accept / reject changes (for example by opening the widget in a DialogWindow) before affecting the original list. It is your responsibility to copy EditableList items back to the original list.",				"",				"The addItemBlock is used to provide a way to give the item to add (e.g. a UIManager default chooseFrom: values:).",				"",				"Example:",				"self example"			],			"category" : "Spec-PolyWidgets-ListAndTree"		},		"StMockCandidatesList" : {			"hash" : 5520640,			"definition" : "Object subclass: #StMockCandidatesList\r\tinstanceVariableNames: 'results totalResults'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Spotter-Processors-Tests'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tresults:\t\t<Object>",				"\ttotalResults:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "NewTools-Spotter-Processors-Tests"		},		"ClassAnnotationRegistry" : {			"hash" : 2072832,			"definition" : "Object subclass: #ClassAnnotationRegistry\r\tinstanceVariableNames: 'annotations annotatedClasses'\r\tclassVariableNames: ''\r\tpackage: 'ClassAnnotation'",			"comment" : [				"I implement a registry of class annotations.",				"I organize it in two dictionaries:",				"",				"1)  annotations",				"It maps annotation class to all instances of this class. Instances are sorted by annotation priority in ascending order. ",				"Annotation class is responsible to provide such container: ",				"",				"\tClassAnnotation createContainerForRegistry",				"",				"For details about annotation priorities look at ClassAnnotation comment.",				"",				"2) annotatedClasses",				"It maps annotated class to all its annotations. The annotations are managed as a Set.",				"",				"I provide default instance which keeps all class annotations in the system.",				"",				"\tClassAnnotationRegistry default",				"\t",				" It is used by ClassAnnotation query methods and you can access it from it:",				"\t",				"\tClassAnnotation registry",				"",				"I am subscribed on system changes and reset default instance when related methods or classes are changed.",				"And when user access annotations I rebuild it lazily. ",				"Look for details in class side method #ensureSystemSubscription  ",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tannotations:\t\t<IdentityDictionary<ClassAnnotation class, SortedCollection<ClassAnnotation>>>",				"\tannotatedClasses:\t\t<IdentityDictionary<Class, Set<ClassAnnotation>>>"			],			"category" : "ClassAnnotation"		},		"RSVariableTimer" : {			"hash" : 5707008,			"definition" : "RSAbstractTimer subclass: #RSVariableTimer\r\tinstanceVariableNames: 'currentTime'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Animation-Core'",			"comment" : [				"This roassal timer, changes the time depending the user's needs. Ideally you add time when you complete a task with the canvas"			],			"category" : "Roassal3-Animation-Core"		},		"OSEvent" : {			"hash" : 4004352,			"definition" : "Object subclass: #OSEvent\r\tinstanceVariableNames: 'window suppressDefaultAction'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Events'",			"comment" : [				"I am a basic class of OSEvent hierarchy.",				"The specific events are coming from operating system and converted to corresponding OSEvent subinstance(s) in order to handle them.",				"",				"Events can implement a default action, which will be performed after dispatch on event handling,",				"unless they are suppressed using #suppressDefaultAction message."			],			"category" : "OSWindow-Core-Events"		},		"SpCodePresenter" : {			"hash" : 5346560,			"definition" : "SpTextPresenter << #SpCodePresenter\r\tslots: {\r\t\t\t #syntaxHighlight => ObservableSlot .\r\t\t\t #lineNumbers => ObservableSlot .\r\t\t\t #interactionModel => ObservableSlot .\r\t\t\t #overrideContextMenu .\r\t\t\t #submitBlock .\r\t\t\t #resetBlock .\r\t\t\t #environment .\r\t\t\t #systemNavigation .\r\t\t\t #syntaxHighlightTheme => ObservableSlot };\r\ttag: 'Base';\r\tpackage: 'Spec2-Code'",			"comment" : [				"I'm a code (Pharo code) presenter. ",				"I will style and provide completion according to the behaviour being edited."			],			"category" : "Spec2-Code-Base"		},		"GroupWindowMorph" : {			"hash" : 577792,			"definition" : "Morph subclass: #GroupWindowMorph\r\tuses: TEasilyThemed\r\tinstanceVariableNames: 'tabGroup'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Windows-Widgets'",			"comment" : [				"I'm a morph where you can drag windows to group them as tabs.",				"",				"Try:",				"",				"(GroupWindowMorph new openInWindowLabeled: 'Window organizer') extent: 400@400."			],			"category" : "Morphic-Widgets-Windows-Widgets"		},		"DiffBuilder" : {			"hash" : 5357824,			"definition" : "Object subclass: #DiffBuilder\r\tinstanceVariableNames: 'compareBlock'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Code-Diff'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcompareBlock:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Code-Diff"		},		"ReReturnsIfTrueRule" : {			"hash" : 3950080,			"definition" : "ReNodeMatchRule subclass: #ReReturnsIfTrueRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Check for methods that return the value of an ifTrue: or ifFalse: message. These statements return nil when the block is not executed."			],			"category" : "GeneralRules-Migrated"		},		"RSRectanglePackLayout" : {			"hash" : 5766912,			"definition" : "RSLayout subclass: #RSRectanglePackLayout\r\tinstanceVariableNames: 'freeSpace gap padding bounds preferredAngle shouldUseProgressBar'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"A layout that packs elements according to their bounding box. Check #gap and #preferredAngle.",				"",				"Here is an example:",				"```",				"numberOfBoxes := 900.",				"r := Random seed: 42.",				"shapes := RSGroup new.",				"numberOfBoxes timesRepeat: [ ",				"\tshapes add: (RSBox new width: (r nextInt: 40); height: (r nextInt: 40)) ].",				"",				"c := RSCanvas new.",				"c addAll: shapes.",				"RSRectanglePackLayout new useProgressBar; on: shapes.",				"c @ RSCanvasController",				"```",				"",				"Another example:",				"```",				"nodes := (1 to: 20) asArray shuffleBy: (Random seed: 42).",				"",				"canvas := RSCanvas new.",				"shapes := RSCircle models: nodes.",				"shapes size: 30.",				"canvas addAll: shapes.",				"RSNormalizer size",				"    shapes: shapes;",				"    normalize.",				"",				"RSRectanglePackLayout on: shapes.",				"canvas zoomToFit.",				"canvas open",				"```"			],			"category" : "Roassal3-Layouts-Core"		},		"MenuTitleMorph" : {			"hash" : 1910016,			"definition" : "AlignmentMorph subclass: #MenuTitleMorph\r\tinstanceVariableNames: 'titleContainer icon closeBox pinBox'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Menus'",			"comment" : [				"This is a TitleMorph used by MenuMorph.",				"",				"\"",				"\tExample usage:",				"",				"\t| menu |",				"\t",				"\tmenu := MenuMorph new.",				"",				"\tmenu buildTitle: [ :titleMorph | titleMorph",				"\t\ttitle: 'aCoolTitle';",				"\t\ticon: self theme icons alertIcon;",				"\t\twithCloseBox;",				"\t\twithPinBox;",				"\t\tcolor: Color purple\t\t",				"\t].",				"",				"\t... \" add items\" ...",				"\t",				"\tmenu popUpInWorld"			],			"category" : "Morphic-Base-Menus"		},		"RBArrayNode" : {			"hash" : 1175808,			"definition" : "RBValueNode subclass: #RBArrayNode\r\tinstanceVariableNames: 'left right statements periods'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Nodes'",			"comment" : [				"An RBArrayNode is an AST node for runtime arrays.",				"",				"Instance Variables",				"\tleft:\t <Integer | nil> position of {",				"\tperiods: <SequenceableCollection of: Integer> the positions of all the periods that separate the statements",				"\tright: <Integer | nil> position of }",				"\tstatements: <SequenceableCollection of: RBValueNode> the statement nodes"			],			"category" : "AST-Core-Nodes"		},		"RGBehavior" : {			"hash" : 5251584,			"definition" : "RGBehaviorStrategyUser subclass: #RGBehavior\r\tinstanceVariableNames: 'superclass localMethods traitComposition metaclass tagsForMethods tags'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"An RGBehavior is an abstract definition for class-alike entities (e.g. classes, traits)",				"",				"Instance Variables",				"\tmethods:\t\t<Collection>",				"\tprotocols:\t\t<Collection>",				"\tsuperclass:\t\t<Object>"			],			"category" : "Ring-Core-Kernel"		},		"TraitMethodDescription" : {			"hash" : 1310976,			"definition" : "Object subclass: #TraitMethodDescription\r\tinstanceVariableNames: 'selector locatedMethods'\r\tclassVariableNames: ''\r\tpackage: 'TraitsV2-Compatibility-Composition'",			"comment" : [				"Used by Trait to encapsulates a collection of methods for one particular selector when querying for changes. According to the number and kind of those methods a provided method exists, there is a conflict or there are no provided nor conflicting methods at all. I provide the interface to query for those situations, e.g., effectiveMethod returns the provided method or the conflict marker method."			],			"category" : "TraitsV2-Compatibility-Composition"		},		"ReKeysDoRule" : {			"hash" : 3937792,			"definition" : "ReNodeRewriteRule subclass: #ReKeysDoRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Replaces keys/values do: by keysDo: and valuesDo:.  This rule is based on the observation that using aDict keys do: or aDict values do: create an intermediary collection. ",				"",				"Dictionary>>keys",				"\t\"Answer an Array containing the receiver's keys.\"",				"\t",				"\t^Array new: self size streamContents: [:s| self keysDo: [:key| s nextPut: key]]",				"\t",				"This array can be quite large and using the keysDo: does not create such intermediate collection."			],			"category" : "GeneralRules-Migrated"		},		"TestCase class" : {			"hash" : 353792,			"definition" : "TestCase class\r\tinstanceVariableNames: 'history'",			"comment" : [				"`TestCase` instances are created with the class method `TestCase class>>#selector:`, passing the symbol that names the method to be executed when the test case runs.  TestCase instances are then executed using the method `TestCase>>#run`. Now usually you do not execute your tests that primitive way",				"but tests are grouped in `TestSuite` (a.k.a. a composite of TestCase) and run using a test runner.",				"Various UIs exist to run these instances and they can also be created and run programmatically.",				"",				"Each method of a `TestCase` subclass starting with 'test' acts an executable test. When you create a subclass of `TestCase`, the framework automatically builds a test suite from the test methods of such class. ",				"The methods `setUp` and `tearDown` are always executed before and after the execution of a test method. You use them to set a specific context in which your test methods are executed. ",				"",				"### As you go...",				"",				"When you discover a new fixture (context) for your test, encapsulates it in a specific TestCase subclass. ",				"You can create a #test... method for the first test.  As that method develops and more #test... methods are added, you will find yourself refactoring temps into instance variables for the objects in the fixture and overriding #setUp to initialize these variables.  ",				"As required, override #tearDown to nil references, release objects and deallocate.",				"",				"### Design Point",				"",				"A TestCase is an implementation of the Command pattern to run a test. ",				"",				"### Mini tutorial - step one",				"",				"Create a specific subclass",				"",				"```",				"TestCase << #MyExampleSetTest",				"\tpackage: 'MySetTest'",				"```",				"",				"### Mini tutorial - step two ",				"",				"Define a test method",				"",				"```",				"MyExampleSetTest >> testIncludes",				"\t| full empty |",				"\tfull := Set with: 5 with: 6.",				"\tempty := Set new.",				"\tself assert: (full includes: 5).",				"\tself assert: (full includes: 6).",				"\tself assert: (empty includes: 5) not",				"```\t",				"",				"### Mini tutorial - step three",				"",				"Execute your tests",				"",				"```",				"MyExampleSetTest run: testIncludes ",				"```",				"",				"See my superclass' comment for assertion and logging information.",				"",				"### Mini tutorial - step four",				"",				"Create a setUp method (add the empty and full instances to the class)",				"",				"```",				"MyExampleSetTest >> setUp",				"\tsuper setUp.",				"\tempty := Set new.",				"\tfull := Set with: 5 with: 6",				"```",				"",				"Redefine your method to avoid duplicating the setUp logic",				"```",				"MyExampleSetTest >> testIncludes",				"",				"\tself assert: (full includes: 5).",				"\tself assert: (full includes: 6).",				"\tself assert: (empty includes: 5) not",				"```\t",				"",				"Run your test!",				"",				"```",				"MyExampleSetTest run: testIncludes ",				"```",				"",				"You are done. Remember tests are your best friends. ",				"And enjoy coding in the debugger."			],			"category" : "SUnit-Core-Kernel"		},		"IceTipReadOnlyFormBuilder" : {			"hash" : 6279424,			"definition" : "Object subclass: #IceTipReadOnlyFormBuilder\r\tinstanceVariableNames: 'labelColor labelWidth rowHeight items spApplication'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-Spec2'",			"comment" : [				"I'm a \"read only form\", used to display data in a more readable way than a list morph or a panel morph.",				"I receive a list of \"label\" and \"values\", being label a string and value a string or text object.",				"",				"I can show lists of elements as this example shows: ",				"",				"IceTipReadOnlyForm new ",				"\taddLabel: 'Commit:' value: 'a test';",				"\taddLabel: 'Parents:' value: '123456789';",				"\taddLabel: 'Author:' value: 'Some Author <author@email.net>';",				"\taddLabel: 'Date:' value: DateAndTime now asStringYMDHM;",				"\taddLabel: 'Labels:' value: '';",				"\taddLabel: 'Comment' value: String loremIpsum;",				"\topenWithSpec.",				"\t"			],			"category" : "Iceberg-TipUI-Spec2"		},		"GCoordinates" : {			"hash" : 5600000,			"definition" : "GeometryObject subclass: #GCoordinates\r\tinstanceVariableNames: 'coordinates'\r\tclassVariableNames: ''\r\tpackage: 'Geometry-Core'",			"comment" : [				"Description",				"--------------------",				"",				"I represent a set of coordinates that will be used by other geometric elements.",				"",				"My subclass will represent sets of a certain amount of coordinates. In the long terme we would like to remove all the subclasses and that everything manage myself as a n-dimensions coordinates set, but for now we prefer to begin with simple sets like 2D or 3D.",				"",				"I implement basic arithmetic that can be done with coordinates.",				"",				"Examples",				"--------------------",				"\t",				"\t\"Instance creation\"",				"\tGCoordinates withCollection: #(1 3). \t\"(1,3)\"",				"\t",				"\t#(1 3) asGCoordinates.\t\"(1,3)\"",				"\t",				"\t\"Arithmetic\"\t\t",				"\t(GCoordinates withCollection: #(1 3)) + (GCoordinates withCollection: #(5 1)). \t\"(6,4)\"",				"\t\t",				"\t(GCoordinates withCollection: #(1 3)) - (GCoordinates withCollection: #(5 1)). \t\"(-4,2)\"",				"\t\t",				"\t(GCoordinates withCollection: #(1 3)) * 2. \t\"(2,6)\"",				"\t\t",				"\t(GCoordinates withCollection: #(1 3)) / 2. \t\"((1/2),(3/2))\"",				" ",				"Internal Representation and Key Implementation Points.",				"--------------------",				"",				"    Instance Variables",				"\tcoordinates:\t\t<aCollection> \tA collection of all the coordinates I contains."			],			"category" : "Geometry-Core"		},		"MemoryFileSystemEntry" : {			"hash" : 1435904,			"definition" : "Object subclass: #MemoryFileSystemEntry\r\tinstanceVariableNames: 'creationTime modificationTime basename'\r\tclassVariableNames: ''\r\tpackage: 'FileSystem-Memory-Base'",			"comment" : [				"I am an abstract file system entry for a memory file system.",				"My subclasses should specialize on the kind of file they are."			],			"category" : "FileSystem-Memory-Base"		},		"RSBimetricLine" : {			"hash" : 2297344,			"definition" : "RSSVGPathLine subclass: #RSBimetricLine\r\tinstanceVariableNames: 'widthFrom widthTo'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-SVG-Shapes'",			"comment" : [				"I am a line with different sizes in each side.",				"",				"Here is how to use it, from Roassal code",				"```",				"| view e1 e2 box l |",				"\tview := RSView new.",				"\tbox := RSShapeBuilder box ",				"\t\tsize: 100;",				"\t\tdraggable.",				"\te1 := box element.",				"\te1 color: Color blue.",				"\te2 := box element.",				"\te2 translateTo: 400@0.",				"\tl := RSSingleEdgeBuilder bimetricLine",				"\t\twidthFrom: 50;",				"\t\twidthTo: 10;",				"\t\tpaint: Color red;",				"\t\tborder: nil;",				"\t\twithBorderAttachPoint;",				"\t\tfrom: e1;",				"\t\tto: e2;",				"\t\tedge.",				"\tview addAll: { e1. e2. l}.",				"\tview @ RSControlsView. ",				"\tview open",				"```"			],			"category" : "Roassal3-SVG-Shapes"		},		"DropListItem" : {			"hash" : 928256,			"definition" : "Object subclass: #DropListItem\r\tinstanceVariableNames: 'actionHolder model displayBlock icon'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets-Support'",			"comment" : [				"A DropListItem is an item (wrapper) designed to fit into a DropList"			],			"category" : "Spec-Core-Widgets-Support"		},		"SpGridLayout" : {			"hash" : 2147584,			"definition" : "SpExecutableLayout subclass: #SpGridLayout\r\tinstanceVariableNames: 'borderWidth columnSpacing rowSpacing rowConstraints columnConstraints columnHomogeneous rowHomogeneous childrenByPosition'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Layout-Grid'",			"comment" : [				"I am a grid layout. ",				"As my name tells, I can place my elements in a grid, following some constraints: ",				"",				"- a position is mandatory",				"- a span can be added if desired",				"",				"A grid layout is typically used while doing \"form-like\" presenters, for example, we can ",				"do something like this: ",				"",				"```",				"--------------------------",				"| Name:      | ######### |",				"--------------------------",				"| Password:  | ######### |",				"--------------------------",				"|       [Accept] [Cancel]| ",				"--------------------------",				"```",				"",				"You can achieve this in several ways, but a simple one would be where `#nameText` refer to a getter method.",				"",				"",				"```",				"SpGridLayout new ",				"\tadd: 'Name:' \t\t\tat: 1@1;",				"\tadd: #nameText \t\t\tat: 2@1",				"\tadd: 'Password:' \t\tat: 1@2;",				"\tadd: #passwordText \tat: 2@2;",				"\tadd: (SpBoxLayout newHorizontal",				"\t\t\taddLast: #acceptButton;",				"\t\t\taddLast: #cancelButton;",				"\t\t\tyourself)",				"\t\tat: 1@3 ",				"\t\tspan: 2@1;",				"\tyourself",				"```",				"",				"Note that using a string as in ",				"```",				"SpecGridLayout new ",				"\tadd: 'Name:' \t\t\tat: 1@1;",				"```",				"automatically add a label. ",				"",				"",				"In addition as you can see that we can have other layouts taking several cell elements as in the following where the SpBoxLayout is taking two cells of the grid.",				"```",				"add: (SpBoxLayout newHorizontal",				"\t\t\taddLast: #acceptButton;",				"\t\t\taddLast: #cancelButton;",				"\t\t\tyourself)",				"\t\tat: 1@3 ",				"\t\tspan: 2@1;",				"```",				"",				"",				""			],			"category" : "Spec2-Layout-Grid"		},		"StObjectInspectorPresenter" : {			"hash" : 5399040,			"definition" : "StPresenter subclass: #StObjectInspectorPresenter\r\tinstanceVariableNames: 'views evaluator model activationBlock header alivePresentersByPage activateOnSingleClick'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Inspector-View'",			"comment" : [				"I am a single object inspector.",				"I present a notebook with the possible inspection of the object.",				"",				"I am usually embedded into an StInspector, but I can be used standalone."			],			"category" : "NewTools-Inspector-View"		},		"SpAbstractTextPresenter" : {			"hash" : 2211584,			"definition" : "SpAbstractWidgetPresenter << #SpAbstractTextPresenter\r\ttraits: {SpTContextMenu};\r\tslots: {\r\t\t\t #hasUnacceptedEdits => ObservableSlot .\r\t\t\t #selection => ObservableSlot .\r\t\t\t #wantsVisualFeedback => ObservableSlot .\r\t\t\t #askBeforeDiscardingEdits => ObservableSlot .\r\t\t\t #text => ObservableSlot .\r\t\t\t #actionToPerform => ObservableSlot .\r\t\t\t #readSelection => ObservableSlot .\r\t\t\t #placeholder => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A base for text presenters, it defines basic functionality common to all texts."			],			"category" : "Spec2-Core-Widgets"		},		"FFIExternalResourceManager" : {			"hash" : 491264,			"definition" : "Object subclass: #FFIExternalResourceManager\r\tinstanceVariableNames: 'registry'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-External-Resources'",			"comment" : [				"I am responsible for managing a finalization of external resources.",				"",				"When object, registered as external resource being garbage collected,",				"i telling an object's class to finalize it's associated data (by passing an object,",				"received from #resourceData message sent to an object at registration time).",				"",				"I automatically keep tracking for session change (image save/boot), and ignore finalization of resources of old sessions (since they are not longer valid,",				"and cannot be freed since session changed).",				"",				"Like that, a user of FFIExternalResourceManager don't need to implement a session checking logic, and need only to:",				"",				"a) register object as external resource:",				"     FFIExternalResourceManager addResource: anObject.",				"",				"b) an object should understand the #resourceData message, which is remembered at registration point (it can be any external resource like, id, handle or memory pointer).",				"",				"Then, when object is garbage collected, its class will receive a message to finalize the resource data in #finalizeResourceData:",				"The passed data is exactly same as previously returned by #resourceData method.",				"",				"An example:",				"",				"Imagine that you want to represent an external resource by keeping its handle.",				"",				"Object subclass: #MyExternalObject",				" \tinstanceVariableNames: 'handle'",				"\tclassVariableNames: ''",				"\tpoolDictionaries: ''",				"\tcategory: 'XYZ'",				"\t",				"",				"To let your object(s) to be managed by external resource manager, you need to register it.",				"Usually you do it after successfully claiming an external resource:",				"",				"MyExternalObject>>initialize",				"",				"\thandle := self createNewExternalResource.  \"claim resource\"",				"\tself assert: self handleIsValid. \"etc...\"",				"\t",				"\t\"Now, register receiver as external resource\" ",				"\tFFIExternalResourceManager addResource: self ",				"\"Another form of use is: ",				"\tFFIExternalResourceManager addResource: self data: handle.",				"\"",				"",				"----  ",				"If you used #addResource: method for registration, you should provide an implementation of #resourceData method:",				"",				"MyExternalObject>>resourceData",				"\t^ handle \"since we need only handle to identify external resource\"",				"",				"----\t",				"Now, for properly finalizing the external resource we should implement:",				"",				"MyExternalObject class>> finalizeResourceData: aHandle",				"\t^ self destroyHandle: aHandle. \"do whatever is needed to destroy the handle\"",				"",				"Note that in #finalizeResourceData: you cannot access any other properties of your instance, since it is already garbage collected. You also don't need to do a session checking, since it is done automatically by resource manager. ",				""			],			"category" : "UnifiedFFI-External-Resources"		},		"MCFileTreeStCypressWriter class" : {			"hash" : 310784,			"definition" : "MCFileTreeStCypressWriter class\r\tinstanceVariableNames: 'specials'",			"comment" : [				"Writer for Cypress format ",				"",				"see https://github.com/CampSmalltalk/Cypress"			],			"category" : "MonticelloFileTree-Core"		},		"VTermOutputStyleElement" : {			"hash" : 1168128,			"definition" : "Object subclass: #VTermOutputStyleElement\r\tinstanceVariableNames: 'color'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'VTermOutputStyles'\r\tpackage: 'System-CommandLine-VTerm-Styling'",			"comment" : [				"I represent a style element of a VTermOutputStyle.",				"I can change my color"			],			"category" : "System-CommandLine-VTerm-Styling"		},		"IRBytecodeScope" : {			"hash" : 1241856,			"definition" : "Object subclass: #IRBytecodeScope\r\tinstanceVariableNames: 'temps numArgs ownTempVectors copiedValues'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Core-Bytecode'",			"comment" : [				"I am an internal class used by the  decompiler to recreat variable information"			],			"category" : "OpalCompiler-Core-Bytecode"		},		"StSpotterContext" : {			"hash" : 5506816,			"definition" : "Object subclass: #StSpotterContext\r\tinstanceVariableNames: 'step stream search text textTrimmed textLowercase processor filter streamed cache continuing'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Spotter-Model'",			"comment" : [				"Defines the context execution of a `StSpotterQuery`. ",				"It has the `StSpotterContext>>#text` that is being searched and the `StSpotterContext>>#stream` for it. "			],			"category" : "NewTools-Spotter-Model"		},		"NSPerlinNoise3" : {			"hash" : 5631744,			"definition" : "Object subclass: #NSPerlinNoise3\r\tinstanceVariableNames: 'octaves p fallOff'\r\tclassVariableNames: ''\r\tpackage: 'NumericNoise'",			"comment" : [				"based on https://mrl.nyu.edu/~perlin/noise/"			],			"category" : "NumericNoise"		},		"OSTouchStateGestureDetector" : {			"hash" : 4048384,			"definition" : "OSTouchGestureDetector subclass: #OSTouchStateGestureDetector\r\tinstanceVariableNames: 'modeActivated'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Gestures'",			"comment" : [				"I am a gesture detector who detects gestures with a begin, current and end state"			],			"category" : "OSWindow-Core-Gestures"		},		"MenuItemPresenter" : {			"hash" : 899584,			"definition" : "AbstractWidgetPresenter subclass: #MenuItemPresenter\r\tinstanceVariableNames: 'action name shortcut subMenu icon description state enabled autoRefresh'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"I represent a menu item.",				"",				"You can also have a look at ApplicationWithToolbar for a full example of how to use them.",				"",				"I collaborate with MenuGroupPresenter to manage me.",				"",				"I provide the following variables and their accessors",				"- name is the text I display.",				"- icon is the text I display.",				"- description is the text I display in my tooltip.",				"- action is the action to perform when I am clicked.",				"- subMenu is the submenu to display when I am clicked.",				"",				"Usually I do NOT have an action AND a submenu.",				"",				"todo",				"- autoRefresh",				"- enabled",				"- fromSpec:",				"- performMenuActionWith:",				"- shortcut is ..., the shortcut is displayed near my name.",				"- state"			],			"category" : "Spec-Core-Widgets"		},		"ZipNewFileMember" : {			"hash" : 1344256,			"definition" : "ZipArchiveMember subclass: #ZipNewFileMember\r\tinstanceVariableNames: 'externalFileName stream reference'\r\tclassVariableNames: ''\r\tpackage: 'Compression-Archives'",			"comment" : [				"ZipNewFileMember instances are used to represent files that are going to be written to a ZipArchive.",				"Their data comes from external file streams."			],			"category" : "Compression-Archives"		},		"CairoUTF8Converter" : {			"hash" : 3088128,			"definition" : "Object subclass: #CairoUTF8Converter\r\tinstanceVariableNames: 'buffer encoder bs'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Cairo-Text'",			"comment" : [				"i use persistent buffer to convert strings to utf-8 strings (an input neede by cairo)"			],			"category" : "Athens-Cairo-Text"		},		"FFIExternalStructureFieldSpec" : {			"hash" : 492288,			"definition" : "Object subclass: #FFIExternalStructureFieldSpec\r\tinstanceVariableNames: 'fields'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-External-StructureHandling'",			"comment" : [				"I'm a field spec for fields in FFIExternalStructure"			],			"category" : "UnifiedFFI-External-StructureHandling"		},		"RBRefactoryChange" : {			"hash" : 3183360,			"definition" : "Object subclass: #RBRefactoryChange\r\tinstanceVariableNames: 'name changeFactory onSystemDictionary'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Changes-Base'",			"comment" : [				"I am the superclass of all refactoring change objects. ",				"All I have is a name for the refactoring, but I can perform one or more refactoring operations with the message #execute. ",				"I am a composite object. To know about my components, ask me with #changes and #changesSize. "			],			"category" : "Refactoring-Changes-Base"		},		"ClyLongExampleQuery" : {			"hash" : 4866048,			"definition" : "ClyReturningScopeBasisExampleQuery subclass: #ClyLongExampleQuery\r\tinstanceVariableNames: 'executionSemaphore'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-NavigationModel-Tests'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\texecutionSemaphore:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Calypso-NavigationModel-Tests"		},		"RSAbstractScaleInteraction" : {			"hash" : 5729280,			"definition" : "RSInteraction subclass: #RSAbstractScaleInteraction\r\tinstanceVariableNames: 'minScale maxScale'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Extra'",			"comment" : [				"I define accessors for min and max scale value for some scale interactions"			],			"category" : "Roassal3-Interaction-Extra"		},		"OupsSingleDebuggerSelector" : {			"hash" : 447744,			"definition" : "OupsDebuggerSelectionStrategy subclass: #OupsSingleDebuggerSelector\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Debugger-Oups-Strategies'",			"comment" : [				"I select the first available debugger in the system and try to open a debug session with that debugger.",				"I do not care about the possible existence of any other debugger.",				"",				"I am equivalent to the debugger selection strategy encoded in MorphicUIManager prior to the integration of DebuggerSelector."			],			"category" : "Debugger-Oups-Strategies"		},		"OmStoreFactory" : {			"hash" : 4180736,			"definition" : "Object subclass: #OmStoreFactory\r\tinstanceVariableNames: 'nullStore storeByPath'\r\tclassVariableNames: ''\r\tpackage: 'Ombu-Stores'",			"comment" : [				"I provide a facade to create and reuse OmStore hierarchy instances."			],			"category" : "Ombu-Stores"		},		"CornerGripMorph" : {			"hash" : 563968,			"definition" : "AbstractResizerMorph subclass: #CornerGripMorph\r\tinstanceVariableNames: 'target'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Windows-Resizing'",			"comment" : [				"I am the superclass of a hierarchy of morph specialized in allowing the user to resize windows."			],			"category" : "Morphic-Widgets-Windows-Resizing"		},		"CalendarDayMorph" : {			"hash" : 721152,			"definition" : "Object subclass: #CalendarDayMorph\r\tinstanceVariableNames: 'date bounds owner highlighted'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Extra'",			"comment" : [				"A CalendarDyaMorph represents a specific day on a monthly calendar.",				"",				"",				"Instance Variables",				"\tbounds:\t\t<Rectangle>",				"\tdate:\t\t<Date>",				"\thighlighted:\t<Boolean>",				"\towner:\t\t<CalendarChooserMorph>",				"",				"bounds",				"\t- owner-relative bounding box",				"",				"date",				"\t- the specific date (year/month/day) the CalendarMorph represents",				"",				"highlighted",				"\t- flag to keep track of when a CalendarMorph has the mouse dragging over it, and is thus highlighted",				"",				"owner",				"\t- the morph that contains the CalendarMorph, and all its siblings"			],			"category" : "Morphic-Widgets-Extra"		},		"RSAbstractCircleLayout" : {			"hash" : 5748480,			"definition" : "RSLayout subclass: #RSAbstractCircleLayout\r\tinstanceVariableNames: 'initialAngle initialIncrementalAngle initialRadius factor'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Layouts-Core"		},		"Morph" : {			"hash" : 1651968,			"definition" : "Object subclass: #Morph\r\tinstanceVariableNames: 'bounds owner submorphs fullBounds color extension'\r\tclassVariableNames: 'CmdGesturesEnabled CycleHalosBothDirections DefaultYellowButtonMenuEnabled EmptyArray EventDispatcher HalosEnabled ShortcutsHandler'\r\tpackage: 'Morphic-Core-Kernel'",			"comment" : [				"A Morph (from the Greek \"shape\" or \"form\") is an interactive graphical object. General information on the Morphic system can be found at http://minnow.cc.gatech.edu/squeak/30. ",				"",				"Morphs exist in a tree, rooted at a World (generally a PasteUpMorph). The morphs owned by a morph are its submorphs. Morphs are drawn recursively; if a Morph has no owner it never gets drawn. To hide a Morph and its submorphs, set its #visible property to false using the #visible: method. ",				"",				"The World (screen) coordinate system is used for most coordinates, but can be changed if there is a TransformMorph somewhere in the owner chain. ",				"",				"My instance variables have accessor methods (e.g., #bounds, #bounds:). Most users should use the accessor methods instead of using the instance variables directly.",				"",				"Structure:",				"instance var \tType \t\t\tDescription ",				"bounds \t\t\tRectangle \t\tA Rectangle indicating my position and a size that will enclose \t\t\t\t\t\t\t\t\tme. ",				"owner \t\t\tMorph\t\t \tMy parent Morph, or nil for the top-level Morph, which is a",				" \t\t\t\tor nil\t\t\tworld, typically a PasteUpMorph.",				"submorphs \t\tArray \t\t\tMy child Morphs. ",				"fullBounds \t\tRectangle \t\tA Rectangle minimally enclosing me and my submorphs. ",				"color \t\t\tColor \t\t\tMy primary color. Subclasses can use this in different ways. ",				"extension \t\tMorphExtension Allows extra properties to be stored without adding a",				"\t\t\t\tor nil  \t\t\t\tstorage burden to all morphs. ",				"",				"By default, Morphs do not position their submorphs. Morphs may position their submorphs directly or use a LayoutPolicy to automatically control their submorph positioning.",				"",				"Although Morph has some support for BorderStyle, most users should use BorderedMorph if they want borders."			],			"category" : "Morphic-Core-Kernel"		},		"QuoRemComplementary class" : {			"hash" : 2319104,			"definition" : "QuoRemComplementary class\r\tinstanceVariableNames: ''",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "Containers-Essentials-Numbers"		},		"ReflectivitySourceCodeAgroupation" : {			"hash" : 3522304,			"definition" : "Morph subclass: #ReflectivitySourceCodeAgroupation\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Examples'",			"comment" : [				"I'm an agroupation of ReflectivityCodeMorph"			],			"category" : "Reflectivity-Examples"		},		"Context class" : {			"hash" : 794624,			"definition" : "Context class\r\tinstanceVariableNames: ''",			"comment" : [				"Instance variables:",				"\treceiver: <Object> (self)",				"\tclosureOrNil: <BlockClosure|nil> ",				"\t\tnil if I'm a method context",				"\t\tthe blockClosure being executed if I'm a block context",				"\tmethod <CompiledMethod> ",				"\t\tmethod being executed if I'm a method context",				"\t\tmethod holding the block if I'm a block context",				"\tvariable fields: <Object> temporary variables (including arguments)",				"",				"My instances hold all the dynamic state associated with the execution of either a method activation resulting from a message send or a block activation resulting from a block evaluation.",				"\t",				"MethodContexts, though normal in their variable size, are actually only used in two sizes, small and large, which are determined by the temporary space required by the method being executed.",				"",				"MethodContexts must only be created using the method newForMethod:.  Note that it is impossible to determine the real object size of a MethodContext except by asking for the frameSize of its method.  Any fields above the stack pointer (stackp) are truly invisible -- even (and especially!) to the garbage collector.  Any store into stackp other than by the primitive method stackp: is potentially fatal."			],			"category" : "Kernel-Methods"		},		"MorphicTreeAdapter" : {			"hash" : 1022976,			"definition" : "AbstractMorphicAdapter subclass: #MorphicTreeAdapter\r\tinstanceVariableNames: 'treeModel'\r\tclassVariableNames: ''\r\tpackage: 'Spec-MorphicAdapters-Base'",			"comment" : [				"I am the adapter used to bridge a TreePresenter and a MorphTreeMorph"			],			"category" : "Spec-MorphicAdapters-Base"		},		"RSControlConfiguration" : {			"hash" : 5718528,			"definition" : "RSObject subclass: #RSControlConfiguration\r\tinstanceVariableNames: 'padding maxScale minScale shouldUseBasicZoom zoomToFitOnStart zoomToFitOnExtent hasHorizontalScrolling hasVerticalScrolling'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Utils'",			"comment" : [				"A control configuration is made to set a configuration for the canvas. For example, by modifying a control configuraiton, you can decide if you wish to have an horizontal scrollbar or no, the minimum zoom, or maximum zoom, the padding, ...",				"",				"For example:",				"-=-=--=-=--=-=--=-=-",				"c := RSCanvas new. ",				"controller := RSCanvasController new.",				"controller configuration: (RSControlConfiguration new maxScale: 10).",				"c @ controller.",				"-=-=--=-=--=-=--=-=-",				"",				"",				"-=-=--=-=--=-=--=-=-",				"canvas := RSCanvas new.",				"shapes := #('hello' 'world' 'from' 'Roassal3') collect: [ :s | RSLabel new text: s ] as: RSGroup.",				"canvas addAll: shapes.",				"RSVerticalLineLayout on: shapes.",				"int := RSCanvasController new.",				"int configuration",				"\tminScale: 1;",				"\tmaxScale: 3.",				"canvas @ int.",				"canvas",				"-=-=--=-=--=-=--=-=-"			],			"category" : "Roassal3-Interaction-Utils"		},		"StNodeHelpTopic" : {			"hash" : 6588160,			"definition" : "HelpTopic subclass: #StNodeHelpTopic\r\tinstanceVariableNames: 'node iconBuilder'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-DocumentationReader'",			"comment" : [				"I'm a help topic and as such I hold a Microdown root document. ",				"This is in this document that further microdown elements will be added. ",				"",				"Note that I can have subtopics in addition to the microdown element. ",				"A subtopic is just similar to myself."			],			"category" : "NewTools-DocumentationReader"		},		"InternetConfiguration class" : {			"hash" : 1363968,			"definition" : "InternetConfiguration class\r\tinstanceVariableNames: ''",			"comment" : [				"I read several parameters related to the default web browser network preferences, through the InternetConfigPlugin VM module.",				"",				"For example, to get the default path where downloaded files should be placed:",				"",				"InternetConfiguration getDownloadPath.",				"",				"Seems to work only on MacOSX"			],			"category" : "Network-Kernel-Base"		},		"ZdcSecureSMTPClient" : {			"hash" : 4448768,			"definition" : "SMTPClient subclass: #ZdcSecureSMTPClient\r\tinstanceVariableNames: 'variant lineReader'\r\tclassVariableNames: ''\r\tpackage: 'Zodiac-Extra'",			"comment" : [				"I am ZdcSecureSMTPClient.",				"",				"I open a ZdcSecureSocketStream to the SMTP server and connect it at the SSL level.",				"",				"| mailMessage |",				"mailMessage := MailMessage empty.",				"mailMessage setField: 'subject' toString: 'ZdcSecureSMTPClient Test'.",				"mailMessage body: (MIMEDocument contentType: 'text/plain' content: 'This is test from Pharo Smalltalk').",				"ZdcSecureSMTPClient",				"\tsendUsingGMailAccount: '<your-name>@gmail.com' ",				"\tpassword: '<your-password>'",				"\tto: '<email-address>' ",				"\tmessage: mailMessage"			],			"category" : "Zodiac-Extra"		},		"CoCompletionEngine" : {			"hash" : 5328128,			"definition" : "CompletionEngine subclass: #CoCompletionEngine\r\tinstanceVariableNames: 'completionBuilder'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Morphic-Core'",			"comment" : [				"I am an adaptor between the Morphic text morphs supporting completion and Complishon.",				"I contain a complishonBuilder that is used to create a complishon.",				"",				"See my superclass for details"			],			"category" : "HeuristicCompletion-Morphic-Core"		},		"SpToolbarPresenterBuilder" : {			"hash" : 2399488,			"definition" : "CmVisitor subclass: #SpToolbarPresenterBuilder\r\tinstanceVariableNames: 'toolbarPresenter'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Commander2-Visitors'",			"comment" : [				"I build a ToolBarPresenter from a group of commands.",				"",				"To do that, I visit recursively groups of command breadth first and simple add each command encountered to the tool bar."			],			"category" : "Spec2-Commander2-Visitors"		},		"SharedRandom" : {			"hash" : 1129728,			"definition" : "Random subclass: #SharedRandom\r\tinstanceVariableNames: 'mutex'\r\tclassVariableNames: ''\r\tpackage: 'Random-Core-Base'",			"comment" : [				"I represent a Random number generator that can be shaded between different code.",				"",				"I wrap the access to my parent's functionality (#next, #nextInt: and #next:into:)  through a mutex making me safe for multi threaded use.",				"",				"To access the default shared random number generator, do:",				"",				"\tSharedRandom globalGenerator.",				"\t",				"In principle it is better to use a shared generator since multiple users will create a more random pattern."			],			"category" : "Random-Core-Base"		},		"ProcessSpecificVariable class" : {			"hash" : 918272,			"definition" : "ProcessSpecificVariable class\r\tinstanceVariableNames: 'soleInstance'",			"comment" : [				"My subclasses (not instances of them) keep state specific to the current process.",				"",				"There are two kinds of process-specific variables: process-local (state available",				"for read and write in all methods inside the process), and dynamic variables",				"(implementing dynamic scope).",				"",				"My subclasses could supply inheritable values which will be installed on forked (child) processes. To enable this classes should return true from  #isInheritable method (on class side).",				"Also subclasses could provide specific logic for installing variables into new processes which allows interesting hooks to control forked processes"			],			"category" : "Kernel-Processes"		},		"LGitAbstractError" : {			"hash" : 6060800,			"definition" : "Error subclass: #LGitAbstractError\r\tinstanceVariableNames: 'object'\r\tclassVariableNames: ''\r\tpackage: 'LibGit-Core-Exceptions'",			"comment" : [				"Abstract superclass for git errors"			],			"category" : "LibGit-Core-Exceptions"		},		"RSGaussianJitterVanDerPloegTreeLayout" : {			"hash" : 2327040,			"definition" : "RSVanDerPloegTreeLayout subclass: #RSGaussianJitterVanDerPloegTreeLayout\r\tuses: RSTWalkBasedRegularTreeLayoutRandomizedGaps\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Roassal'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "Containers-Essentials-Roassal"		},		"IconListPresenter" : {			"hash" : 894976,			"definition" : "ListPresenter subclass: #IconListPresenter\r\tinstanceVariableNames: 'iconHolder'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"An IconListPresenter is a spec presenter for icon list.",				"See AbstractWidgetPresenter",				"",				"self example",				"",				"You can also have a look at ExampleListPresenter >> exampleIconList for another example.",				"",				"I provide the following variables icons and its accessors, it is a block that convert an item in the icon to display near the item.",				"",				"todo",				"- getIconFor:"			],			"category" : "Spec-Core-Widgets"		},		"OCASTTranslator" : {			"hash" : 1243648,			"definition" : "RBProgramNodeVisitor subclass: #OCASTTranslator\r\tinstanceVariableNames: 'methodBuilder effectTranslator valueTranslator'\r\tclassVariableNames: 'OptimizedMessages'\r\tpackage: 'OpalCompiler-Core-Translator'",			"comment" : [				"I visit an abstract syntax tree and generate IR (intermediate representation) instructions for each node by sending the appropriate message to my methodBuilder (an IRBuilder).  I hold onto my two subclasses ",				"OCASTTranslatorForValue for generating instructions for effect and value, and",				"OCASTTranslatorForEffect for generating instructions for effect only.",				"",				"Which one to use depends on the AST nodes and whether the code will only be executed (for effect only) or if the value is used afterwards (for value).",				"",				"For example, when translating a return, the value to return needs to be pushed on stack, so the valueTranslator is used:",				"visitReturnNode: aReturnNode ",				"\tvalueTranslator visitNode: aReturnNode value.",				"\tmethodBuilder returnTop.",				"\t",				"Whereas, in #visitMethodNode:,  the effectTranslator is used, because no value is pushed on stack at the end of the method body:",				"...effectTranslator visitNode: aMethodNode body.."			],			"category" : "OpalCompiler-Core-Translator"		},		"WorldMorph class" : {			"hash" : 1653248,			"definition" : "WorldMorph class\r\tinstanceVariableNames: 'displayScaleFactor'",			"comment" : [				"A WorldMorph is a special morph that represents the world.",				"It is a paste up and it holds active hand.",				"",				"A World, the entire Smalltalk screen, is a PasteUpMorph.  A World responds true to #isWorld."			],			"category" : "Morphic-Core-Worlds"		},		"CTLinkedStoragePoolCircularDoubly" : {			"hash" : 2362624,			"definition" : "CTLinkedStoragePoolCircular subclass: #CTLinkedStoragePoolCircularDoubly\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Containers-LinkedStoragePool'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "Containers-LinkedStoragePool"		},		"IceGitHubNewBranchFromIssuePanel" : {			"hash" : 6478592,			"definition" : "IceTipCheckoutNewBranchPanel subclass: #IceGitHubNewBranchFromIssuePanel\r\tinstanceVariableNames: 'remotePanel issueNumberText issueLabel issue fetched selectRemoteModel currentWaitingProcess issueText'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Plugin-GitHub-View'",			"comment" : [				"I'm a panel to create a new branch taking a GitHub issue as basis.",				"A GitHub issue will be created in the form: ",				"",				"123-a-github-issue"			],			"category" : "Iceberg-Plugin-GitHub-View"		},		"UITheme class" : {			"hash" : 696832,			"definition" : "UITheme class\r\tinstanceVariableNames: 'defaultSettings'",			"comment" : [				"Common superclass for User Interface themes. Provides methods for creating new morphs in a standard way, various \"services\" like a file dialog, message dialogs etc. and also methods for customising aspects of the appearance of various morphs.",				"Though conceptually abstract, no code is \"missing\". Subclasses, therefore, should override the aspects they wish to change."			],			"category" : "Polymorph-Widgets-Themes"		},		"ReferenceFinder" : {			"hash" : 4461056,			"definition" : "Object subclass: #ReferenceFinder\r\tinstanceVariableNames: 'backlinks objectsLeft testBlock foundBlock'\r\tclassVariableNames: ''\r\tpackage: 'ReferenceFinder-Core-Base'",			"comment" : [				"Finds reference paths between objects to help find memory leaks. It finds the shortest paths between the objects. ",				"",				"If you want to find a path between the \"Smalltalk\" global dictionary and some instance of a class, you can use the findPathToInstanceOf: method. For example, \"ReferenceFinder findPathToInstanceOf: WriteStream\" will find a reference path between Smalltalk and an instance of WriteStream."			],			"category" : "ReferenceFinder-Core-Base"		},		"TreePresenter" : {			"hash" : 912896,			"definition" : "AbstractWidgetPresenter subclass: #TreePresenter\r\tinstanceVariableNames: 'childrenBlockHolder menuBlockHolder rootsHolder selectionHolder autoMultiSelection columnInset doubleClick evenRowColor isCheckList keyStroke multiSelection oddRowColor preferedPaneColor resizerWidth rowInset displayBlock columns treeUpdated iconBlock autoDeselection allowMenuOnNoItem rootNodeHolder removeOnlyLastSelected highlightedItem hasChildrenBlockHolder autoRefreshOnExpand'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"I am the Spec presenter of a MorphTreeMorph tree."			],			"category" : "Spec-Core-Widgets"		},		"AbstractMessageCentricBrowser" : {			"hash" : 5392384,			"definition" : "StPresenter subclass: #AbstractMessageCentricBrowser\r\tinstanceVariableNames: 'messageList textConverter toolbarPresenter'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-MethodBrowsers-Base'",			"comment" : [				"I am an abstract class for browsers centered around messages such as class `MessageBrowser` or class `VersionBrowser`."			],			"category" : "NewTools-MethodBrowsers-Base"		},		"CircularMemoryLogger" : {			"hash" : 386816,			"definition" : "MemoryLogger subclass: #CircularMemoryLogger\r\tinstanceVariableNames: 'entryCount index fullBuffer loopCount'\r\tclassVariableNames: ''\r\tpackage: 'Beacon-Core-Loggers'",			"comment" : [				"`CircularMemoryLogger` records the signals that it receives in a circular buffer, default size 5000 entries.",				"",				"###Example1: Instance usage",				"",				"```",				"\t(CircularMemoryLogger new ",				"\t\trunDuring: [ ",				"\t\t\tStringSignal emit: 'This is a message' ]\t)",				"\t\t\t\tinspect.",				"```",				"",				"###Example 2: Global usage",				"",				"```",				"\tCircularMemoryLogger reset.",				"\tCircularMemoryLogger start.",				"\tStringSignal emit: 'This is a message' .",				"\tCircularMemoryLogger instance recordings inspect.",				"\tCircularMemoryLogger stop.",				"```"			],			"category" : "Beacon-Core-Loggers"		},		"RubHoverHighlightSegmentMorph" : {			"hash" : 601344,			"definition" : "RubTextSegmentMorph subclass: #RubHoverHighlightSegmentMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Core'",			"comment" : [				"I am a text segment morph used for highlighting a text segment on mouse over. ",				"My default color are the text secondary (light) color.",				"And my default behavior is to delete myself when the mouse focus leaves me."			],			"category" : "Rubric-Editing-Core"		},		"SpHeaderCellMorph" : {			"hash" : 2547712,			"definition" : "FTIndentedCellMorph subclass: #SpHeaderCellMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Table'",			"comment" : [				"I am a header cell.",				"I am used to allow a header to have some extra properties (sort, etc.).",				"",				"Instead using a FTHeaderColumnCellMorph I extent FTIndentedCellMorph becaue I need the text to be indented."			],			"category" : "Spec2-Adapters-Morphic-Table"		},		"CTLinkedStoragePoolCircular" : {			"hash" : 2362112,			"definition" : "CTLinkedStoragePool subclass: #CTLinkedStoragePoolCircular\r\tinstanceVariableNames: 'head'\r\tclassVariableNames: ''\r\tpackage: 'Containers-LinkedStoragePool'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\thead:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Containers-LinkedStoragePool"		},		"ReAtIfAbsentRule" : {			"hash" : 3932160,			"definition" : "ReNodeRewriteRule subclass: #ReAtIfAbsentRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Replaces at:ifAbsent: by at:ifAbsentPut:. Its leads to shorter and more readable code.",				""			],			"category" : "GeneralRules-Migrated"		},		"IceRepositoryCreator" : {			"hash" : 6512640,			"definition" : "Object subclass: #IceRepositoryCreator\r\tinstanceVariableNames: 'location url remote branchName subdirectory repository ensureProjectFile isBareRepository'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Libgit-Core'",			"comment" : [				"I create repositories. ",				"I do this (trying in this order):",				"",				"- with a location and url defined, I check if it can be a repository and in positive case, I answer the repository, or I can do a clone+checkout (into location) and answer the resulting repository.",				"- with a remote defined , I can take url and location and perform the correct actions.",				"",				"You can also define  branchName to checkout a specific branch."			],			"category" : "Iceberg-Libgit-Core"		},		"ReDetectContainsRule" : {			"hash" : 3946496,			"definition" : "ReNodeMatchRule subclass: #ReDetectContainsRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for bytecodePrimEqual  using the do: method instead of using the contains: or detect: methods."			],			"category" : "GeneralRules-Migrated"		},		"GAngle class" : {			"hash" : 5599232,			"definition" : "GAngle class\r\tinstanceVariableNames: ''",			"comment" : [				"Description",				"--------------------",				"",				"I represent a geometric angle. ",				"",				"For now I can manage angle in radians or degrees.",				"",				"If the angle is not in [0;2π[ , I'll take care to convert it in order to store the angle as a radian value in [0;2π[.",				"",				"Examples",				"--------------------",				"",				"\t90 degrees. \"90.0°\"",				"",				"\t(0.5 * Float pi)  radians. \"90.0°\"",				"\t",				"\t0.5π radians. \"90.0°\"\t",				"\t",				"\t450 degrees. \"90.0°\"",				"\t",				"\t0.5π radians + 0.5π radians. \"180.0°\"",				"\t",				"\t0.5π radians - 0.25π radians. \"45.0°\"",				"\t",				"\t0.5π radians * 6. \"180.0°\"",				"\t",				"\t6 * 0.5π radians. \"180.0°\"",				"\t",				"\t90 degrees < 100 degrees. \"true\"",				"\t",				"\t90 degrees < -270 degrees. \"false\"",				"\t",				"\t90 degrees < 460 degrees. \"false\"",				"\t",				"\t0 radians isZero. \"true\"",				"\t",				"\t90 degrees explementary. \"270.0°\"",				" ",				"Internal Representation and Key Implementation Points.",				"--------------------",				"",				"    Instance Variables",				"\tradians:\t\t<aNumber>\t\tThe angle in radians in bounds [0;2π["			],			"category" : "Geometry-Core"		},		"ZnDefaultServerDelegate" : {			"hash" : 1409792,			"definition" : "Object subclass: #ZnDefaultServerDelegate\r\tinstanceVariableNames: 'prefixMap byteArray'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Client-Server'",			"comment" : [				"I am ZnDefaultServerDelegate.",				"I function as a delegate for ZnServer, implementing #handleRequest:",				"",				"I implement responses to the following prefixes:",				"",				"/echo - an echo text of request information for debugging purposes",				"/dw-bench - a dynamic html page for benchmarking purposes",				"/unicode - a unicode test page",				"/random - a random string (/random/32 for a specific size)",				"/bytes - bytes according to a pattern (/bytes/32 for a specific size)",				"/favicon.ico - a Zn favicon",				"/status - a server status page",				"/error - force server errors",				"/session - a simpler session based counter",				"/help - lists all page prefixes",				"/ - an html welcome page",				"",				"Without any matches, I respond with a page not found.",				"",				"I can be reused without any default handlers mapped using #empty and configured using #map:to: where the second argument can be a block.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Client-Server"		},		"KeyboardEvent" : {			"hash" : 1657600,			"definition" : "UserInputEvent subclass: #KeyboardEvent\r\tinstanceVariableNames: 'keyValue charCode scanCode key supressNextKeyPress'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Core-Events'",			"comment" : [				"I am a keyboard event. I contain the char code of the event pressed, the modifiers pressed, and the keycode of the key pressed."			],			"category" : "Morphic-Core-Events"		},		"RGMethod" : {			"hash" : 5253120,			"definition" : "RGElement subclass: #RGMethod\r\tinstanceVariableNames: 'sourceCode package author time tags'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"RG2Method is a concrete representation of methods. It can be used to build browser for methods that are not in the image. It is polymorphic with CompiledMethod. ",				"",				"* We can ask a RG2Method for its selector using the selector message.",				"Example:",				"\t(Point>>#dist:) asRing2Definition selector",				"\t\t-> #dist",				"",				"We can also ask the ring object representation of its class or the Smalltalk class actually implementing the corresponding compiledMethod. ",				"",				"* To access the ring class definition name, use parentName",				"\taRG2MethodDefinition parentName",				"\t",				"Example:",				"\t(Point>>#dist:) asRing2Definition parentName",				"\t\t->  #Point",				"\t\t",				"* If you have a complete model where classes and methods are ring definition, to access the ring class definition , use parent",				"\taRG2MethodDefinition parent",				"\t",				"Example:",				"\taRG2MethodDefinition(Point>>#dist:) parent",				"\t\t->  aRG2ClassDefinition(Point)",				"\t\t",				"* If you want to access the smalltalk class that contains the compiledMethod that is represented by a ringMethodDefinition, use realParent",				"\taRG2MethodDefinition realParent",				"\t",				"Example:",				"\t(Point>>#dist:) asRing2Definition realParent",				"\t\t->  Point",				"\t\t",				"",				"Now a RingEntityDefinition offers two APIs: one that is generic and works for all the source code entities and this is the one we just ",				"presented: parent, parentName and realParent. Having such interface is important to build generic tools that could manipulate ",				"any entities in a polymorphic way (yes no isKindOf: everywhere).",				"",				"In addition, a ring method definition offers a specific interface that should only be used when you know that you are solely manipulate",				"specific entity such as class element: method definition, class comment, and variables. ",				"",				"Here is the equivalence table",				"",				"\trealParent \t\t\t\trealClass",				"\tparent\t\t\t\t\tringClass",				"\tparentName\t\t\tclassName",				"",				"",				"* The message class returns the class of the object :).",				"",				"Example:",				"\t(Point>>#dist:) asRing2Definition class",				"\t\t->  RingMethodDefinition",				"\t\t",				"* The message className returns the name of the ring class defining the reingMethodDefinition.",				"",				"Example:",				"\t(Point>>#dist:) asRing2Definition className",				"\t\t->  #Point\t\t",				"\t\t",				"* If you have a complete model where classes and methods are ring definition, to access the ring class definition , use parent",				"\taRG2MethodDefinition ringClass",				"\t",				"Example:",				"\taRG2MethodDefinition(Point>>#dist:) ringClass",				"\t\t->  aRG2ClassDefinition(Point)",				"\t\t",				"\t\t",				"* If you want to access the smalltalk class that contains the compiledMethod that is represented by a ringMethodDefinition, use realClass",				"\taRG2MethodDefinition realClass",				"\t",				"Example:",				"\t(Point>>#dist:) asRing2Definition realClass",				"\t\t->  Point",				""			],			"category" : "Ring-Core-Kernel"		},		"ClyStatusBarItemMorph" : {			"hash" : 5091584,			"definition" : "Morph subclass: #ClyStatusBarItemMorph\r\tinstanceVariableNames: 'ownerTool'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-UI'",			"comment" : [				"I am a base class for status bar items related to particular browser tab (tool).",				"My subclasses should implement method #build where they should create required widgets and subscribe of required events.",				"",				"My instance should be create for concrete browser tool: ",				"",				"\tClyStatusBarItem for: aBrowserTool",				"\t",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\townerTool:\t\t<ClyBrowserTool>"			],			"category" : "Calypso-Browser-UI"		},		"Symbol class" : {			"hash" : 792064,			"definition" : "Symbol class\r\tinstanceVariableNames: ''",			"comment" : [				"I represent Strings that are created uniquely. Thus, someString asSymbol == someString asSymbol.",				"",				"To see the difference between Symbol and Strings look at this example:",				"",				"```",				"| s1 s2 |",				"s1 := 1234 asString.",				"s2 := 1234 asString.",				"",				"\"Strings are not unique, while Symbols are\"",				"s1 = s2. \"true\"",				"s1 == s2. \"false\"",				"",				"s1 asSymbol = s2 asSymbol. \"true\"",				"s1 asSymbol == s2 asSymbol. \"true\"",				"",				"(s1 class allInstances select: [:s | s = s1 ]) size. \"2\"",				"(s1 asSymbol class allInstances select: [:s | s = s1 asSymbol ]) size. \"1\"",				"```",				"",				"Comparing Symbols takes less time than comparing Strings.",				"",				"```",				"[ #stringA = #stringB ] bench. \"26,812,864 per second\"",				"[ 'StringA' = 'StringB' ] bench. \"3,492,987 per second\"",				"```"			],			"category" : "Collections-Strings-Base"		},		"RBTransformationRule" : {			"hash" : 1697024,			"definition" : "RBLintRule subclass: #RBTransformationRule\r\tinstanceVariableNames: 'rewriteRule builder class'\r\tclassVariableNames: 'RecursiveSelfRule'\r\tpackage: 'Refactoring-Critics'",			"comment" : [				"A RBTransformationRule is a special rule that not only detects problems but also can automatically transform the good."			],			"category" : "Refactoring-Critics"		},		"AthensCairoDefinitions class" : {			"hash" : 3069440,			"definition" : "AthensCairoDefinitions class\r\tinstanceVariableNames: ''",			"comment" : [				"I hold a lot of different constants needed to work with cairo library"			],			"category" : "Athens-Cairo-Pools"		},		"ExpanderTitleMorph" : {			"hash" : 1953536,			"definition" : "PanelMorph subclass: #ExpanderTitleMorph\r\tinstanceVariableNames: 'labelMorph buttonMorph expanded'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Base'",			"comment" : [				"The titlebar area for and ExpanderMorph. Includes title label and expand/collapse button."			],			"category" : "Polymorph-Widgets-Base"		},		"MenuGroupPresenter" : {			"hash" : 898048,			"definition" : "AbstractWidgetPresenter subclass: #MenuGroupPresenter\r\tinstanceVariableNames: 'items autoRefresh'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"I am a group of menu items.",				"",				"I am part of a menu (MenuPresenter), and groups items (MenuItemPresenter) by meaning.",				"",				"You can also have a look at ApplicationWithToolbar for a full example of how to use them.",				"",				"I provide the following methods",				"- addItem: use the block in parameter to initialize a new item, then add it in my collection.",				"- addMenuItem: add the item in parameter in my collection.",				"- isEmpty return a boolean representing if my collection is empty.",				"- menuItems getter of my collection.",				"",				"",				"todo",				"- autoRefresh",				"- buildWithSpecLayout:",				"- fromSpec:"			],			"category" : "Spec-Core-Widgets"		},		"ObservableValueHolder" : {			"hash" : 383232,			"definition" : "Object subclass: #ObservableValueHolder\r\tinstanceVariableNames: 'subscriptions lock value'\r\tclassVariableNames: ''\r\tpackage: 'VariablesLibrary-Observable'",			"comment" : [				"I am a class holding any object. Each time the object changes, I execute a list of commands the user might have register in me.",				"",				"I am used as an internal mecanism of the ObservableSlot. The slot contains one of my instance and is giving me the blocks to execute when the value change. ",				"",				"I SHOULD NOT BE USED DIRECTLY BUT VIA AN OBSERVABLE SLOT.",				" ",				"In addition, infinite loops of propagation are prevented.",				"",				"Use case: you have two lists A, and B, and you want to keep their selection synchronised. So when A selection changes, you set B selection. But since B selection changes, you set A selection, and so on… ",				"",				"This case is prevented by the use of a `lock` variable."			],			"category" : "VariablesLibrary-Observable"		},		"ClyConcreteCritiqueMethodGroup" : {			"hash" : 5009152,			"definition" : "ClyMethodGroup subclass: #ClyConcreteCritiqueMethodGroup\r\tinstanceVariableNames: 'ruleSeverity'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemPlugins-Critic-Queries'",			"comment" : [				"I am a method group which include methods with critiques of particular severity level.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\truleSeverity:\t\t<ClyCritiqueSeverity>"			],			"category" : "Calypso-SystemPlugins-Critic-Queries"		},		"AbstractFont class" : {			"hash" : 1629184,			"definition" : "AbstractFont class\r\tinstanceVariableNames: ''",			"comment" : [				"The abstract class AbstractFont defines the generic interface that all fonts need to implement."			],			"category" : "Fonts-Abstract-Base"		},		"Mutex" : {			"hash" : 1067264,			"definition" : "Object subclass: #Mutex\r\tinstanceVariableNames: 'semaphore owner'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Processes'",			"comment" : [				"A Mutex is a light-weight MUTual EXclusion object being used when two or more processes need to access a shared resource concurrently. A Mutex grants ownership to a single process and will suspend any other process trying to aquire the mutex while in use. Waiting processes are granted access to the mutex in the order the access was requested.",				"",				"A Mutex is also more robust to nested critical calls.",				"For example ",				"",				"mutex critical: [ mutex critical: [ Trasncript show: 'nested passes through' ] ]",				"",				"will not deadlock, while a semaphore will. This is why a mutex is also called a recursionLock.",				"",				"Instance variables:",				"\tsemaphore\t<Semaphore>\t\tThe (primitive) semaphore used for synchronization.",				"\towner\t\t<Process>\t\tThe process owning the mutex."			],			"category" : "Kernel-Processes"		},		"NavigationHistory" : {			"hash" : 1850112,			"definition" : "Object subclass: #NavigationHistory\r\tinstanceVariableNames: 'storage index maxSize paused'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Base-Utilities'",			"comment" : [				"I act as a web browser history"			],			"category" : "Tool-Base-Utilities"		},		"FFICalloutAPI" : {			"hash" : 489728,			"definition" : "Object subclass: #FFICalloutAPI\r\tinstanceVariableNames: 'options callingConvention senderContext uFFIEntryPointContext fixedArgumentCount'\r\tclassVariableNames: 'CalloutAPIClass'\r\tpackage: 'UnifiedFFI-Callouts'",			"comment" : [				"I'm a façade to perform ffi nb calls."			],			"category" : "UnifiedFFI-Callouts"		},		"NSOrdinalScale" : {			"hash" : 5628160,			"definition" : "NSScale subclass: #NSOrdinalScale\r\tinstanceVariableNames: 'ranger dictionary argument rangeBand'\r\tclassVariableNames: ''\r\tpackage: 'NumericInterpolator-Scales'",			"comment" : [				"I am a scale for ordinal ranges"			],			"category" : "NumericInterpolator-Scales"		},		"RBVariableNode" : {			"hash" : 1181952,			"definition" : "RBValueNode subclass: #RBVariableNode\r\tinstanceVariableNames: 'name variable start'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Nodes'",			"comment" : [				"RBVariableNode is an AST node that represents a variable (global, inst var, temp, etc.).",				"",				"Although this is the basic class for the concrete variable types, this is not an abstract class and is actually used",				"by the parser for all variables that aren't special builtin types like self/super/thisContext. All other variables are",				"just RBVariableNodes until the semantic analyser can deduce the type.",				"",				"Instance Variables:",				"\tname\t<RBValueToken>\tthe variable's name I represent",				"\tnameStart <Integer>\tthe position where I was found at the source code"			],			"category" : "AST-Core-Nodes"		},		"SpPatchPresenter" : {			"hash" : 5363456,			"definition" : "SpAbstractWidgetPresenter << #SpPatchPresenter\r\tslots: {\r\t\t\t #patch => ObservableSlot .\r\t\t\t #interactionModel => ObservableSlot .\r\t\t\t #syntaxHighlightTheme .\r\t\t\t #marks };\r\tpackage: 'Spec2-Code-Diff'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tinteractionModel:\t\t<Object>",				"\tmarks:\t\t<Object>",				"\tpatch:\t\t<Object>",				"\tsyntaxHighlightTheme:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Code-Diff"		},		"RSTickConfiguration" : {			"hash" : 5819136,			"definition" : "Object subclass: #RSTickConfiguration\r\tinstanceVariableNames: 'numberOfTicks shouldHaveLabels labelConversion shouldUseNiceLabel labelRotation fontSize tickSize'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Ticks'",			"comment" : [				"<keyClass>",				"`RSTickConfiguration` describes a configuration for a vertical or horizontal tick. Note that the same configuration can be shared for the two tick objects.",				"",				"*Responsibility*: maintain the different configurable attributes for vertical or horizontal tickis.",				"",				"*Collaborators*: used by `RSAbstractTick`",				"",				"*Variables*:",				"- `numberOfTicks`: number of ticks the tick decoration should have",				"- `shouldHaveLabels`: a boolean indicating whether a the tick should have labels or not",				"- `labelConversion`: one arg block to transform a value. E.g., `[ :p | 'V', p asString ]`",				"- `shouldUseNiceLabel`: a boolean indicating whether the tick should use the nice tick label generator (e.g., `RSNiceLabel`)",				"- `labelRotation`: rotation degree of the label",				"- `fontSize`: size of the label font",				"- `tickSize`: size of the tick, in pixels",				"",				"*Example*:",				"```Smalltalk",				"classes := RSObject withAllSubclasses.",				"x := classes collect: [ :c | c numberOfMethods ].",				"y := classes collect: [ :c | c linesOfCode ].",				"",				"c := RSChart new.",				"",				"d := RSScatterPlot new.",				"d color: Color blue translucent.",				"d x: x y: y.",				"c addPlot: d.",				"",				"tickConfiguration := RSTickConfiguration new",				"\t\tnumberOfTicks: 5;",				"\t\tfontSize: 5;",				"\t\tlabelRotation: 0;",				"\t\tshouldHaveLabels: true;",				"\t\tshouldUseNiceLabel: true;",				"\t\tlabelConversion: [ :value | value ] ;",				"\t\ttickSize: 3;",				"\t\tyourself.",				"c addDecoration: (RSHorizontalTick new configuration: tickConfiguration).",				"c addDecoration: (RSVerticalTick new configuration: tickConfiguration).",				"c",				"```",				"",				"Another similar example:",				"```Smalltalk",				"classes := RSObject withAllSubclasses.",				"x := classes collect: [ :c | c numberOfMethods ].",				"y := classes collect: [ :c | c linesOfCode ].",				"",				"c := RSChart new.",				"",				"d := RSScatterPlot new.",				"d color: Color blue translucent.",				"d x: x y: y.",				"c addPlot: d.",				"",				"tickConfiguration := RSTickConfiguration new.",				"tickConfiguration labelConversion: [ :p | 'V', p asString ].",				"",				"c addDecoration: (RSHorizontalTick new configuration: tickConfiguration).",				"c",				"```"			],			"category" : "Roassal3-Chart-Ticks"		},		"WaitfreeQueue" : {			"hash" : 1093632,			"definition" : "AtomicCollection subclass: #WaitfreeQueue\r\tinstanceVariableNames: 'tail dummy'\r\tclassVariableNames: ''\r\tpackage: 'Collections-Atomic-Base'",			"comment" : [				"This is a thread-safe implementation of a queue with wait-free operations. ",				"It is guaranteed that any message sent to my instance (like adding new item, or fetching item) will not block sender, nor enter a waiting loop.",				"",				"The implementation is based on atomicity of simple assignment operations, which can't be interrupted in a middle,",				"i.e. two assignment statements in a row, like:",				"",				"x := y.",				"y := z.",				"",				"can't be interrupted by interpreter and can be seen as a single atomic operation.",				"",				"",				"This implementation fits best for case, when multiple threads populating queue, but only single thread fetching items from it.",				"",				"In given implementation, inserting new items into queue can't block the sender and insertion operation always takes constant time (if we ignore the possible GC interference here).",				"For reading/polling operations queue using a lock mechanism, which indicating that queue currently in the middle of extraction, and therefore, if some thread obtained a lock upon the queue, other threads must wait till one that obtained the lock will finish its operation(s) and release the lock.",				"All operations which may block the sender will answer the default value(s) instead. ",				"",				"",				"",				"Implementation Notes",				"",				"As mentioned above WaitfreeQueue relies on the VM treating simple assignment operations as uninterruptable.  It also ensures that reader and writer processes can't modify the same variables at the same time.",				"",				"The queue consists of a linked list of AtomicQueueItems.  Each item contains a pointer to the next item and the object which is the queue entry.",				"",				"An item can be:",				"",				"- \"circular\", meaning that the next item is itself.",				"- a \"zombie\", meaning that the object points back to the queue's dummy object (more below).",				"",				"Writing processes create a new item and then use atomic access to get the old tail entry and update the queue's tail variable.  They then own the old tail entry and can update its next variable at any time.  Because the queue's tail variable is updated atomically, any number of writer processes can be adding items to the queue.",				"",				"A reader process uses atomic access to the get first item and make the dummy item circular.  At this point the reader process owns the linked list and can modify any item except the last one (which will be circular).  Any other process attempting to read the queue will find the dummy object is circular and return nil - meaning the queue is either empty or locked.",				"",				"If the reader process wants to return the object from the last item in the linked list (which may be owned by a writer process), it will retrieve the object and then mark the item as a zombie, i.e. set the item's object to the queue's dummy item.  The zombie item will then be removed by a later reader process when it is no longer last in the linked list.",				"",				"Once the reader process has retrieved the object it sets the dummy item's next variable to the first item in the linked list, making the queue avilable again to other processes."			],			"category" : "Collections-Atomic-Base"		},		"ReInvocationSequenceRule" : {			"hash" : 1721088,			"definition" : "ReAbstractRule subclass: #ReInvocationSequenceRule\r\tinstanceVariableNames: 'preConditions postConditions'\r\tclassVariableNames: ''\r\tpackage: 'Renraku-Rules'",			"comment" : [				"I am checking for the violation in message sequences.",				"",				"Subclass me and rewrite initialization method to all super initialize and then all the sequences with the methods for adding protocol.",				"",				"Check the class side examples for examples.",				"",				"You have to call",				"ReRuleManager reset",				"to make changes take place!!!!!!!!!!!!!!!!"			],			"category" : "Renraku-Rules"		},		"SelectPackageBrowser" : {			"hash" : 1704704,			"definition" : "SelectBrowser subclass: #SelectPackageBrowser\r\tinstanceVariableNames: 'addTestCaseClassesModel removeTestPackageModel testPackage'\r\tclassVariableNames: ''\r\tpackage: 'Tool-CriticBrowser-Parts'",			"comment" : [				"To select packages."			],			"category" : "Tool-CriticBrowser-Parts"		},		"RGClassDefinition" : {			"hash" : 1329152,			"definition" : "RGClassDescriptionDefinition subclass: #RGClassDefinition\r\tinstanceVariableNames: 'metaClass comment classVariables category package sharedPools'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Definitions-Core-Base'",			"comment" : [				"RGClassDefinition is the concrete representation of a class (no trait)"			],			"category" : "Ring-Definitions-Core-Base"		},		"LazyMorphListMorph" : {			"hash" : 584960,			"definition" : "LazyListMorph subclass: #LazyMorphListMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Pluggable-Lists'",			"comment" : [				"Support for morph lists in PluggableMorphListMorph."			],			"category" : "Morphic-Widgets-Pluggable-Lists"		},		"AbstractCache" : {			"hash" : 1607680,			"definition" : "Object subclass: #AbstractCache\r\tinstanceVariableNames: 'factory statistics weight access'\r\tclassVariableNames: ''\r\tpackage: 'System-Caching'",			"comment" : [				"I am Cache.",				"I am an abstract class.",				"",				"I am a limited cache holding onto key/value pairs.",				"",				"My primary interface is #at:ifAbsentPut: which takes two arguments: a key and a block. Either the key is found (cache hit) and its value is returned, or the key is not found (cache miss). If the latter case, block should compute a new value to cache. Because block takes the key as optional argument, you can specify a factory style argument as well. With an explicit factory specified, you can also use #at: to access me.",				"",				"For each addition to the cache, a weight is computed by #computeWeight (a selector or block) and added to #totalWeight. When #totalWeight is no longer below #maximumWeight, the least recently used item of the cache is evicted (removed) to make room. ",				"",				"The default #computeWeight returns 1 for each value, effectively counting the number of entries. The default #maximumWeight is 16.",				"",				"I count hits and misses and can return my #hitRatio.",				"",				"Optionally, but not by default, I can be configured so that it is safe to access me from different threads/processes during my important operations. See #beThreadSafe."			],			"category" : "System-Caching"		},		"RSAbstractHorizontalTreeLayout" : {			"hash" : 5759744,			"definition" : "RSAbstractRegularTreeLayout subclass: #RSAbstractHorizontalTreeLayout\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Layouts-Core"		},		"RbScriptingSetBeforeModel" : {			"hash" : 4139008,			"definition" : "ReInvocationSequenceRule subclass: #RbScriptingSetBeforeModel\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Rules'",			"comment" : [				"You have to call scripting methods after #model: or it will not work"			],			"category" : "Rubric-Rules"		},		"QuotedPrintableMimeConverter" : {			"hash" : 1368832,			"definition" : "MimeConverter subclass: #QuotedPrintableMimeConverter\r\tinstanceVariableNames: 'newline'\r\tclassVariableNames: ''\r\tpackage: 'Network-MIME-Converter'",			"comment" : [				"I am QuotedPrintableMimeConverter.",				"I am a MimeConverter.",				"",				"Quoted-Printable, or QP encoding, is an encoding using printable ASCII characters (alphanumeric and the equals sign \"=\") to transmit 8-bit data over a 7-bit data path or, generally, over a medium which is not 8-bit clean. It is defined as a MIME content transfer encoding for use in e-mail.",				"",				"QP works by using the equals sign \"=\" as an escape character. It also limits line length to 76, as some software has limits on line length.",				"",				"See also ",				"",				"  http://en.wikipedia.org/wiki/Quoted-printable",				"  http://tools.ietf.org/html/rfc2045",				"",				"I do quoted printable MIME decoding as specified in RFC 2045 \"MIME Part One: Format of Internet Message Bodies\".",				"",				"Short version of RFC2045, Sect. 6.7:",				"",				"\t(1) Any octet, except a CR or LF that is part of a CRLF line break of the canonical (standard) form of the data being encoded, may be represented by an \"=\" followed by a two digit hexadecimal representation of the octet's value. [...]",				"",				"\t(2) Octets with decimal values of 33 through 60 inclusive, and 62 through 126, inclusive, MAY be represented as the US-ASCII characters which correspond to those octets [...].",				"",				"\t(3) Octets with values of 9 and 32 MAY be represented as US-ASCII TAB (HT) and SPACE characters,",				" respectively, but MUST NOT be so represented at the end of an encoded line.  [...]",				"",				"\t(4) A line break in a text body, represented as a CRLF sequence in the text canonical form, must be represented by a (RFC 822) line break, which is also a CRLF sequence, in the Quoted-Printable encoding.  [...]",				"",				"\t(5) The Quoted-Printable encoding REQUIRES that encoded lines be no more than 76 characters long.  If longer lines are to be encoded with the Quoted-Printable encoding, \"soft\" line breaks",				" must be used.  An equal sign as the last character on a encoded line indicates such a non-significant (\"soft\") line break in the encoded text."			],			"category" : "Network-MIME-Converter"		},		"IceTipBrowser" : {			"hash" : 6290688,			"definition" : "IceTipSpPresenter subclass: #IceTipBrowser\r\tinstanceVariableNames: 'model toolbar'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-View'",			"comment" : [				"I'm the superclass of Spec2 browsers in Iceberg Tip-UI. Each concrete subclass has some kind",				"of list or table that contain the items that are being browsed.",				"",				"Some design remarks: ",				"",				"* Each browser has to have ONE model as entry point for data, and JUST ONE. See #model accessor.",				"* Browsers have a toolbar with commands that are applicable for the model.",				"* Browsers have a context menu on list or table items, that provide commands that are specific for the selection."			],			"category" : "Iceberg-TipUI-View"		},		"PanelMorphWithSplitters" : {			"hash" : 1039872,			"definition" : "PanelMorph subclass: #PanelMorphWithSplitters\r\tinstanceVariableNames: 'paneMorphs'\r\tclassVariableNames: ''\r\tpackage: 'Spec-MorphicAdapters-Support'",			"comment" : [				"A PanelMorphWithSplitters is which add splitters the way SystemWindow do it"			],			"category" : "Spec-MorphicAdapters-Support"		},		"StWithoutDuplicatesDecorator" : {			"hash" : 5481728,			"definition" : "StIteratorDecorator subclass: #StWithoutDuplicatesDecorator\r\tinstanceVariableNames: 'uniqueResults'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Spotter-Processors-Iterators'",			"comment" : [				"I implement a decorator for the iterators. ",				"I don't allow duplicates to be returned. For doing so, I have a collection of the already returned values, so I can filter duplicates."			],			"category" : "NewTools-Spotter-Processors-Iterators"		},		"MWHandlerProfiling" : {			"hash" : 3384576,			"definition" : "MWHandlerPrePostPlugging subclass: #MWHandlerProfiling\r\tinstanceVariableNames: 'tree runWithInMethod timedReturns orphans'\r\tclassVariableNames: ''\r\tpackage: 'MethodWrappers'",			"comment" : [				"I am a variant that waits a delay before returning from the hook notification message."			],			"category" : "MethodWrappers"		},		"StAbstractStringFilter" : {			"hash" : 5478144,			"definition" : "StIteratorDecorator subclass: #StAbstractStringFilter\r\tinstanceVariableNames: 'returnedIndex originalUnwrapped results filteringText'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Spotter-Processors-Iterators'",			"comment" : [				"I implement an abstract string based filter.",				"My users can update the filteringText using the message #filteringText:",				"When a new filtering is done I can handle the update of the filtering strategy and also I keep a list of already returned values so on a reset the filter is reapply to them, without reseting the inner iterator.",				"If the filter requires a full reset, I reset myself and the inner one.",				"",				"My subclasses implements #criterium: to change how the strings are compared."			],			"category" : "NewTools-Spotter-Processors-Iterators"		},		"DateAndTime class" : {			"hash" : 806912,			"definition" : "DateAndTime class\r\tinstanceVariableNames: ''",			"comment" : [				"I am DateAndTime.",				"I represent a point in time or timestamp as defined by ISO 8601. ",				"I am a Magnitude. ",				"I have nanosecond precision.",				"I am TimeZone aware. ",				"I have zero duration.",				"",				"  DateAndTime now.",				"  DateAndTime now asUTC rounded.",				"  DateAndTime fromString: '1969-07-20T20:17:40.123+02:00'.",				"  DateAndTime fromString: '1969-07-20T20:17:40Z'.",				"",				"My implementation uses three SmallIntegers and a Duration:",				"  julianDayNumber - julian day number (starting at midnight UTC rather than noon GMT).",				"  seconds - number of seconds since midnight UTC. Always positive, between 0 and 86399.",				"  nanos\t - the number of nanoseconds since the second. Always positive, between 0 and 999999999.",				"  offset\t- duration from UTC.",				"",				"The offset is used to print the date and time in a local time zone, but the date and time are handled in UTC internally.",				"The nanosecond attribute is often zero but it defined for full ISO compliance and is suitable for timestamping."			],			"category" : "Kernel-Chronology"		},		"CmCommandGroup" : {			"hash" : 835840,			"definition" : "CmAbstractCommandsGroup subclass: #CmCommandGroup\r\tuses: CmTWithBasicNameAndDescription + CmTDecorable\r\tinstanceVariableNames: 'entries'\r\tclassVariableNames: ''\r\tpackage: 'Commander2-Groups'",			"comment" : [				"I allow one to group together commands that are semantically related.",				"",				"I can hold either commands or sub-groups.",				"",				"I provide a nice API to query the tree of commands and groups. See my 'public-api' protocol."			],			"category" : "Commander2-Groups"		},		"IRTranslator" : {			"hash" : 1252096,			"definition" : "IRVisitor subclass: #IRTranslator\r\tinstanceVariableNames: 'gen currentScope trailer tempVectorStack compilationContext'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Core-IR-Manipulation'",			"comment" : [				"I visit IRMethod instructions, sending the appropriate bytecode messages to my BytecodeGenerator (gen). "			],			"category" : "OpalCompiler-Core-IR-Manipulation"		},		"AbstractWidgetPresenter" : {			"hash" : 877568,			"definition" : "ComposablePresenter subclass: #AbstractWidgetPresenter\r\tinstanceVariableNames: 'helpHolder borderWidth borderColor enabledHolder dragEnabled dropEnabled dragTransformationBlock wantDropBlock acceptDropBlock transferBlock color'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"AbstractBasicWidget is an abstract class for basic widgets",				"",				"I collaborate with",				"- ValueHolder to managed some of my variables.",				"- ComposablePresenter to manage me with other elements.",				"",				"I provide the following variables and their accessors",				"- enabled is a boolean representing if I am usable or not, it is true by default. It  have also shortcut enable and disable.",				"- help is the text displayed in the tooltip.",				"- borderWidth, its default value is 0, it must be called after have displayed the widget. ",				"- borderColor, its default value is transparent, it must be called after have displayed the widget. ",				"",				"For the two methods borderWidth and borderColor, notice that some of my subclasses don't display my border",				"",				"Me and my subclasses provide shortcut hook for my valueHolder, they are named \"when\" followed of the event.",				"",				"My drag and drop system don't work well.",				"",				"todo",				"- defaultColor",				"- color",				"- eventKeyStrokesForNextFocus"			],			"category" : "Spec-Core-Widgets"		},		"StDebuggerInspectorModel" : {			"hash" : 5529088,			"definition" : "StInspectorModel subclass: #StDebuggerInspectorModel\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Debugger-Model'",			"comment" : [				"I am a model representing the first variable lists in the debugger inspector."			],			"category" : "NewTools-Debugger-Model"		},		"ReEndTrueFalseRule" : {			"hash" : 1724160,			"definition" : "ReNodeMatchRule subclass: #ReEndTrueFalseRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Renraku-Rules-Rewrite'",			"comment" : [				"Checks for ifTrue:ifFalse: blocks that have the same code at the beginning or end. While you might not originally write such code, as it is modified, it is easier to create such code. Instead of having the same code in two places, you should move it outside the blocks.",				"",				"For example, ",				"test ",				"\tifTrue: [self foo. self bar ] ",				"\tifFalse: [ self foo. self baz ]",				" is equivalent to: ",				"",				"self foo.  ",				"test ",				"\tifTrue: [ self bar ] ",				"\tifFalse: [ self baz ]"			],			"category" : "Renraku-Rules-Rewrite"		},		"MalBfsNode" : {			"hash" : 1766656,			"definition" : "MalGraphNode subclass: #MalBfsNode\r\tuses: MalTEdgeNode - {#previousEdges. #from:edge:}\r\tinstanceVariableNames: 'nextEdges firstDepth'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tfirstDepth:\t\t<Object>",				"\tnextEdges:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Moose-Algos-Graph"		},		"RSAbstractLabelDecoration" : {			"hash" : 5814528,			"definition" : "RSChartDecoration subclass: #RSAbstractLabelDecoration\r\tinstanceVariableNames: 'title baseShape location label'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Decoration'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Chart-Decoration"		},		"RSNiceLabel" : {			"hash" : 5802752,			"definition" : "RSObject subclass: #RSNiceLabel\r\tinstanceVariableNames: 'min max step score'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Labeling'",			"comment" : [				"I am an utility class for RSLabelGenerator.",				"",				"-=-=-=-=-=-=-=-=-=",				"values := #(1 2.3 4.3).",				"c := RSChart new.",				"d := RSScatterPlot new x: values y: values.",				"c addPlot: d.",				"c addDecoration: RSHorizontalTick new.",				"",				"tick := RSVerticalTick new.",				"c addDecoration: tick.",				"c build.",				"",				"tick createNiceLabelIn: c ",				"-=-=-=-=-=-=-=-=-=",				"",				"prints the following: \"(Score: 0.75) 1.00\t2.00\t3.00\t4.00\t5.00\t\"",				"\t\t\t\t\t",				"The min and max represents the range of the ticks"			],			"category" : "Roassal3-Chart-Labeling"		},		"BracketMorph" : {			"hash" : 569600,			"definition" : "Morph subclass: #BracketMorph\r\tinstanceVariableNames: 'orientation'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Scrolling'",			"comment" : [				"Morph displaying opposing arrows."			],			"category" : "Morphic-Widgets-Scrolling"		},		"HashTableSizes class" : {			"hash" : 799744,			"definition" : "HashTableSizes class\r\tinstanceVariableNames: 'sizes smallSizesLookupTable'",			"comment" : [				"HashTableSizes is a helper class, used by hashedCollections to determine sizes for hash tables.",				"",				"Public protocol is all class-side:",				"",				"- `#goodSizeAtLeast:` anInteger  answers a \"good\" integer greater than or equal to the given integer.",				"",				"An integer is not \"good\" as a hash table size if it is any of:",				"* Not prime",				"* Divides 256**k +- a, for small k and a",				"* Close to a power of two",				"* Close to dividing the hashMultiply constant",				"",				"See Andres Valloud's hashing book, and Knuth TAOCP vol. 3.",				"",				"This class caches a primary table of selected good primes within the positive SmallInteger range. When this table must be rebuilt, it uses an instance to compute the table. Primes are selected to keep the table fairly small, with approximately five entries per power of two. It is ordered, and is binary searched to find the closest good size >= the requested size.",				"",				"This class caches a second table built from the first to support faster direct lookup of primes for requested sizes in the range of 0 to \"self maxSmallSize\"."			],			"category" : "Collections-Unordered-Utilities"		},		"PharoCommonTools class" : {			"hash" : 1628672,			"definition" : "PharoCommonTools class\r\tinstanceVariableNames: ''",			"comment" : [				"A PharoCommonTools is a ToolRegistry that knows about common tools that may be replaced by other packages. It manages a list of the recently registered tools and provides settings for reregistering to a former registered tool."			],			"category" : "Tool-Registry"		},		"ClyFullBrowserMorph" : {			"hash" : 5160448,			"definition" : "ClyBrowserMorph subclass: #ClyFullBrowserMorph\r\tinstanceVariableNames: 'packageView classView methodGroupView methodView metaLevelScope methodGroupQuery'\r\tclassVariableNames: 'DefaultPackageFilter'\r\tpackage: 'Calypso-SystemTools-FullBrowser-UI'",			"comment" : [				"I am a classic four panes Smalltalk browser.",				"",				"The instance side and class side mode is based on #metaLevelScope class. It affects the query scope which is used to show methods and method groups.",				"",				"The method groups and variables mode is based on #methodGroupQuery: ",				"- when user switches to variables the groups query is replaced by ClyAllVariables query based on same scope.",				"- when user switches to groups the variables query is replaced by ClyAllMethodGroups query based on same scope.",				"",				"Also methodGroupQuery is used to keep current method visibility level:",				"- when user enables some superclass visibility it just adds to the current query scope.",				"",				"In addition I implement special logic for extending classes and default visibility of traits:",				"",				"- when extending class is selected (which is gray in class view) I switches to its one meta level.",				"- when extending class is selected I add at the top of list the extending package method group",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tpackageView:\t\t<ClyQueryView>",				"\tclassView:\t\t<ClyQueryView>",				"\tmethodGroupView:\t\t<ClyQueryView>",				"\tmethodView:\t\t<ClyQueryView>",				"\tmetaLevelScope:\t\t<ClyMetaLevelClassScope>",				"\tmethodGroupQuery:\t\t<ClyQuery>"			],			"category" : "Calypso-SystemTools-FullBrowser-UI"		},		"TextDiffBuilder class" : {			"hash" : 1891840,			"definition" : "TextDiffBuilder class\r\tinstanceVariableNames: ''",			"comment" : [				"I implement the diff algorithm. I can show the differences between two texts. See my method comments for further information.",				"",				"Instance Variables",				"\txLines:\t\t<Array>",				"\tyLines:\t\t<Array>",				"",				"xLines",				"\t- an Array of DiffElement which is created from the first input text",				"",				"yLines",				"\t- an Array of DiffElement which is created from the second input text"			],			"category" : "Text-Diff-Building"		},		"CmdWorldMenuRegistration class" : {			"hash" : 4731392,			"definition" : "CmdWorldMenuRegistration class\r\tinstanceVariableNames: ''",			"comment" : [				"I implement registration of world menu and global shortucts using standard system pragmas: ",				"",				"- <worldMenu>",				"- <keymap>",				"",				"In addition to support shortucts I register special #CmdWorldShortcutsCategory in current World instance. During shortcuts collection I use this category to add keymaps into the given builder.  ",				"",				"Registration is done during class initialization. Or you can reevaluate it with:",				"",				"\tCmdWorldMenuRegistration attachShorctutsToWorld "			],			"category" : "Commander-Activators-WorldMenu"		},		"SpInformDialog" : {			"hash" : 2334976,			"definition" : "SpDialogPresenter subclass: #SpInformDialog\r\tinstanceVariableNames: 'label title initialExtent acceptLabel'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Dialogs'",			"comment" : [				"A dialog to present some simple information to users."			],			"category" : "Spec2-Dialogs"		},		"GB2312 class" : {			"hash" : 2239744,			"definition" : "GB2312 class\r\tinstanceVariableNames: ''",			"comment" : [				"This class represents the domestic character encoding called GB 2312 used for simplified Chinese."			],			"category" : "Deprecated10-I18N"		},		"RSStrokeStyle" : {			"hash" : 5691648,			"definition" : "RSObject subclass: #RSStrokeStyle\r\tinstanceVariableNames: 'capStyle joinStyle dashArray dashOffset'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Border'",			"comment" : [				"I represent different styles for the stroke"			],			"category" : "Roassal3-Shapes-Border"		},		"ZnConstants class" : {			"hash" : 1406464,			"definition" : "ZnConstants class\r\tinstanceVariableNames: ''",			"comment" : [				"I am ZnConstants, holding various constants that we use.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Support"		},		"IceTipInteractiveCredentialsProvider class" : {			"hash" : 6247936,			"definition" : "IceTipInteractiveCredentialsProvider class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a credential provider that requires the missing plaintext credential to the user."			],			"category" : "Iceberg-TipUI-Credentials"		},		"AthensSceneView" : {			"hash" : 3410688,			"definition" : "Morph subclass: #AthensSceneView\r\tinstanceVariableNames: 'surface scene session transform state keepRefreshing'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Morphic'",			"comment" : [				"i am simple morph for representing some scene.",				"",				"The scene is any object which implements #renderOn: method,",				"or a block with single argument.",				"(an argument passed is an Athens canvas).",				"",				"I implement a simple view panning and zooming with mouse drag and mouse-wheel (correspondigly).",				"",				"Example1: open scene view, by passing a simple rendering block.",				"",				"```",				"| view |",				"view  := AthensSceneView new.",				"",				"view scene: [:canvas |",				"\tcanvas surface clear:  Color black.",				"\tcanvas setPaint: Color red.",				"\tcanvas drawShape: (0@0 corner:120@100)",				"].",				"view openInWindow.",				"```",				"",				"Example2: open scene view on imported SVG file (note you need 'Athens-SVG' package loaded):",				"",				"```",				"| view |",				"view  := AthensSceneView new.",				"view scene: (AthensSVGConverter fromFile: 'lion.svg').",				"",				"view openInWindow.",				"```"			],			"category" : "Athens-Morphic"		},		"SpecTransferMorph" : {			"hash" : 1041408,			"definition" : "TransferMorph subclass: #SpecTransferMorph\r\tinstanceVariableNames: 'model'\r\tclassVariableNames: ''\r\tpackage: 'Spec-MorphicAdapters-Support'",			"comment" : [				"I am a Spec specific subclass of TransferMorph used to initialize the trasnfer morph state correctly with the Spec constraints"			],			"category" : "Spec-MorphicAdapters-Support"		},		"RBBasicLintRule" : {			"hash" : 1694976,			"definition" : "RBLintRule subclass: #RBBasicLintRule\r\tinstanceVariableNames: 'result'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Critics'",			"comment" : [				"I am a rule that has a result. ",				"It is not clear why it is not merged with its superclass but this is ok too."			],			"category" : "Refactoring-Critics"		},		"ClyNotebookPageAction" : {			"hash" : 5109504,			"definition" : "Object subclass: #ClyNotebookPageAction\r\tinstanceVariableNames: 'action icon label'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-Tabs'",			"comment" : [				"I am a data object representing an action associated to a page.",				"I contains",				"\t- an action to be performed when clicked",				"\t- an icon to be rendered",				"\t- a label to add indication about what I am supposed to do"			],			"category" : "Calypso-Browser-Tabs"		},		"RBAbstractClass" : {			"hash" : 3138816,			"definition" : "RBEntity subclass: #RBAbstractClass\r\tinstanceVariableNames: 'name newMethods instanceVariableNames model superclass subclasses removedMethods realClass'\r\tclassVariableNames: 'LookupSuperclass'\r\tpackage: 'Refactoring-Core-Model'",			"comment" : [				"I am the base class of RBClass and RBMetaclass implementing the common behavior for creating and accessing class and metaclass elements in a refactoring namespace. ",				"",				"My subclass instances are created in a refactoring namespace when querying the environment for existing ",				"classes (or metaclasses) and when creating or changing classes during refactoring operations.",				"",				"RBClass and RBMetaclass are used to model existing, changed or newly added classes before actually applying the refactoring change to the system. ",				"You can query the class name,  defined methods and  variables. ",				"They provide a similar interface like the real classes, but only the part that is necessary  for the ",				"refactoring framework.",				"",				"They shouldn't be directly used and always be a part of a refacotoring namespace - the model.",				"",				"Likewise this classes, my methods aren't real methods but models (RBMethod) that representing a real methods.",				"",				"Changes for my methods during refactoring are stored in a list of",				"newMethods and removedMethods.",				"Like a real class I referre to my superclass and subclass, which again are actually RBClasses."			],			"category" : "Refactoring-Core-Model"		},		"ShSlotChangeDetector" : {			"hash" : 823552,			"definition" : "ShAbstractInstanceSideClassChangeDetector subclass: #ShSlotChangeDetector\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Shift-Changes'",			"comment" : [				"I know how to detect a change in the collection of slots."			],			"category" : "Shift-Changes"		},		"ZdcAbstractSocketStream" : {			"hash" : 1428224,			"definition" : "Object subclass: #ZdcAbstractSocketStream\r\tinstanceVariableNames: 'socket readBuffer writeBuffer timeout debug'\r\tclassVariableNames: ''\r\tpackage: 'Zodiac-Core'",			"comment" : [				"I am ZdcAbstractSocketStream, a binary read/write stream for socket communication.",				"",				"Interally, IO is done through a read and a write ZdcIOBuffer.",				"",				"I am abstract, my subclasses should implement actual IO through a delegate."			],			"category" : "Zodiac-Core"		},		"SindarinDebugSession" : {			"hash" : 5377024,			"definition" : "Object subclass: #SindarinDebugSession\r\tinstanceVariableNames: 'triggerEventOn canBeTerminated debugSession'\r\tclassVariableNames: ''\r\tpackage: 'Sindarin-Base'",			"comment" : [				"stepRecord: StepRecord",				"",				"StepRecords: LinkedList[StepRecord]"			],			"category" : "Sindarin-Base"		},		"RBPragmaEnvironment" : {			"hash" : 3135744,			"definition" : "RBBrowserEnvironmentWrapper subclass: #RBPragmaEnvironment\r\tinstanceVariableNames: 'keywords condition'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Environment'",			"comment" : [				"I am a RBBrowserEnvironment on a set of Pragmas.",				"I containt all entities that define methods using this pragmas.",				"Example:",				"(RBBrowserEnvironment new) forPragmas:{ #primitive:}."			],			"category" : "Refactoring-Environment"		},		"RSElasticInterpolator" : {			"hash" : 5712128,			"definition" : "RSEasingInterpolator subclass: #RSElasticInterpolator\r\tinstanceVariableNames: 'tau amplitude period s'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Animation-Easing'",			"comment" : [				"TSEasing elasticIn",				"Elastic easing, like a rubber band. The amplitude and period of the oscillation are configurable; if not specified, they default to 1 and 0.3, respectively.",				"",				"TSEasing elasticOut",				"Reverse elastic easing; equivalent to 1 - elasticIn(1 - t).",				"",				"TSEasing elastic ",				"TSEasing elasticInOut.",				"Symmetric elastic easing; scales elasticIn for t in [0, 0.5] and elasticOut for t in [0.5, 1]."			],			"category" : "Roassal3-Animation-Easing"		},		"NECPreferences class" : {			"hash" : 3126784,			"definition" : "NECPreferences class\r\tinstanceVariableNames: 'enabled caseSensitive smartCharacters smartCharactersMapping backgroundColor expandPrefixes captureNavigationKeys useEnterToAccept popupShowAutomatic popupAutomaticDelay popupShowWithShortcut smartCharactersWithSingleSpace smartCharactersWithDoubleSpace'",			"comment" : [				"I control the preferences for completion framework. ",				"It is the same for NECompletion and NOCompletion (and other potential completion algorithms should be configured here too)",				""			],			"category" : "NECompletion-Preferences"		},		"DeflateStream" : {			"hash" : 1345536,			"definition" : "WriteStream subclass: #DeflateStream\r\tinstanceVariableNames: 'hashHead hashTail hashValue blockPosition blockStart'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'ZipConstants'\r\tpackage: 'Compression-Streams'",			"comment" : [				"I'm the base class for \"stream compressor\". For example, my subclass `GZipWriteStream` can compress a stream contents using gzip algorithm.",				"",				"### Examples",				"",				"```",				"gzData := String streamContents: [:aStream|",				"         (GZipWriteStream on: aStream)",				"                nextPutAll: 'Some data to be gzipped';",				"                close. ].",				"Transcript ",				"        show: gzData; ",				"        cr;",				"        show: (GZipReadStream on: gzData) upToEnd;",				"        cr.",				"```",				"See `InflateStream`"			],			"category" : "Compression-Streams"		},		"SpBoxLayout" : {			"hash" : 2146560,			"definition" : "SpDirectionableLayout subclass: #SpBoxLayout\r\tuses: SpTAlignable\r\tinstanceVariableNames: 'spacing borderWidth homogeneous'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Layout-Box'",			"comment" : [				"I'm a layout that will arrange presenters in a box, vertically (top to bottom) or horizontally (left to right).",				"Elements can be added at the begining or at the end of the box (see `SpBoxLayout>>#add:` and `SpBoxLayout>>#addLast:` method families).",				"",				"## Discussion",				"",				"The box layout is the main layout in Spec, because its versatility and ease to use. While one may think its functionality is limited, the fact that it can be composed with other types of layouts or other instances of itself (other boxes), will let users do almost everything they need.",				"The basic usage is, however, very simple: ",				"",				"```Smalltalk",				"SpBoxLayout newTopToBottom",				"\tadd: aPresenter;",				"\tadd: otherPresenter;",				"\tyourself.",				"```",				"",				"This will arrange `aPresenter` and `otherPresenter` vertically, assigning to each presenter as much `height` as they can receive (usually 50% of the box).  ",				"Of course, being able to do _just that_ would be very limiting, but then is where layout properties start to be important.",				"",				"### The expand property (`SpBoxLayout>>#add:expand:`)",				"",				"With the previous example, let's define a some real presenters: ",				"",				"```Smalltalk",				"| presenter |",				"",				"presenter := SpPresenter new.",				"presenter layout: (SpBoxLayout newTopToBottom",				"\tadd: presenter newTextInput;",				"\tadd: presenter newText;",				"\tyourself).",				"\t\t",				"presenter openWithSpec",				"```",				"",				"What's happened when we opened it? Well, the box layout was filled with an input text and a text area, but the height assigned to the first presenter is not what we would have expected, since even if text input is smaller, area height assigned is still half.",				"The property expand fixes this problem, by telling the layout not to assign more height than what is explicitly needed by the contained presenter: ",				"",				"```Smalltalk",				"| presenter |",				"",				"presenter := SpPresenter new.",				"presenter layout: (SpBoxLayout newTopToBottom",				"\tadd: presenter newTextInput expand: false;",				"\tadd: presenter newText;",				"\tyourself).",				"\t\t",				"presenter openWithSpec",				"```",				"",				"Now the presenter will behave as one would expect (This code is in `SpBoxLayout class>>#exampleExpand`).",				"",				"### Adding presenters **last**.",				"",				"Now, consider this problem: You want to add something *at the end* of your presenter (for example, you want to add a button, making a dialog): ",				"",				"```Smalltalk",				"| presenter |",				"",				"presenter := SpPresenter new.",				"presenter layout: (SpBoxLayout newTopToBottom",				"\tadd: 'Enter text' expand: false;",				"\tadd: presenter newTextInput expand: false;",				"\tadd: (presenter newButton label: 'Ok') expand: false;",				"\tyourself).",				"\t\t",				"presenter openWithSpec",				"```",				"",				"But you want that button to be shown at the end. This is why we use the `addLast:` method, who will instruct the layout to add this presenter at the end.",				"",				"```Smalltalk",				"| presenter |",				"",				"presenter := SpPresenter new.",				"presenter layout: (SpBoxLayout newTopToBottom",				"\tadd: 'Enter text' expand: false;",				"\tadd: presenter newTextInput expand: false;",				"\taddLast: (presenter newButton label: 'Ok') expand: false;",				"\tyourself).",				"\t\t",				"presenter openWithSpec",				"```",				"",				"That makes the presenter work as expected  (This code is in SpBoxLayout class>>#exampleAddLast).",				"",				"### Composing layouts",				"",				"The real power of a layout comes when you understand they can be composed (with other instances of themselves or any other kind, children of `SpExecutableLayout`).",				"For example, taking the previous example, let's say you want to add two buttons (Ok, Cancel), aligned horizontaly. To accomplish that, you add a new layout with the buttons: ",				"",				"```Smalltalk",				"| presenter |",				"",				"presenter := SpPresenter new.",				"presenter layout: (SpBoxLayout newTopToBottom",				"\tadd: 'Enter text' expand: false;",				"\tadd: presenter newTextInput expand: false;",				"\taddLast: (SpBoxLayout newLeftToRight",				"\t\t\taddLast: (presenter newButton label: 'Ok') expand: false;",				"\t\t\taddLast: (presenter newButton label: 'Cancel') expand: false;",				"\t\t\tyourself)",				"\t\texpand: false;",				"\tyourself).",				"\t\t",				"presenter openWithSpec",				"```",				"",				"Now, the presenter will show buttons at bottom-right corner (This code is in `SpBoxLayout class>>#exampleComposite`)."			],			"category" : "Spec2-Layout-Box"		},		"DropListPresenter" : {			"hash" : 888832,			"definition" : "AbstractWidgetPresenter subclass: #DropListPresenter\r\tinstanceVariableNames: 'listHolder selectionHolder displayBlock iconHolder'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"A DropListPresenter is a Spec presenter for drop lists.",				"",				"I am assume there is a little problem on an empty list, but frankly, who creates an empty drop list ?",				"",				"See DropListExample for an example"			],			"category" : "Spec-Core-Widgets"		},		"ChronologyConstants class" : {			"hash" : 807936,			"definition" : "ChronologyConstants class\r\tinstanceVariableNames: ''",			"comment" : [				"ChronologyConstants is a SharedPool for the constants used by the Kernel-Chronology classes."			],			"category" : "Kernel-Chronology"		},		"Float class" : {			"hash" : 872704,			"definition" : "Float class\r\tinstanceVariableNames: ''",			"comment" : [				"My instances represent IEEE-754 floating-point double-precision numbers.  They have about 16 digits of accuracy and their range is between plus and minus 10^307. Some valid examples are:",				"\t",				"\t8.0 13.3 0.3 2.5e6 1.27e-30 1.27e-31 -12.987654e12",				"",				"Mainly: no embedded blanks, little e for tens power, and a digit on both sides of the decimal point.  It is actually possible to specify a radix for Float constants.  This is great for teaching about numbers, but may be confusing to the average reader:",				"",				"\t3r20.2 --> 6.66666666666667",				"\t8r20.2 --> 16.25",				"",				"If you don't have access to the definition of IEEE-754, you can figure out what is going on by printing various simple values in Float hex.  It may help you to know that the basic format is...",				"\tsign\t\t1 bit",				"\texponent\t11 bits with bias of 1023 (16r3FF) to produce an exponent",				"\t\t\t\t\t\tin the range -1023 .. +1024",				"\t\t\t\t- 16r000:",				"\t\t\t\t\tsignificand = 0: Float zero",				"\t\t\t\t\tsignificand ~= 0: Denormalized number (exp = -1024, no hidden '1' bit)",				"\t\t\t\t- 16r7FF:",				"\t\t\t\t\tsignificand = 0: Infinity",				"\t\t\t\t\tsignificand ~= 0: Not A Number (NaN) representation",				"\tmantissa\t53 bits, but only 52 are stored (20 in the first word, 32 in the second).  This is because a normalized mantissa, by definition, has a 1 to the right of its floating point, and IEEE-754 omits this redundant bit to gain an extra bit of precision instead.  People talk about the mantissa without its leading one as the FRACTION, and with its leading 1 as the SIGNFICAND.",				"",				"The single-precision format is...",				"\tsign\t\t1 bit",				"\texponent\t8 bits, with bias of 127, to represent -126 to +127",				"                    - 0x0 and 0xFF reserved for Float zero (mantissa is ignored)",				"                    - 16r7F reserved for Float underflow/overflow (mantissa is ignored)",				"\tmantissa\t24 bits, but only 23 are stored",				"This format is used in FloatArray (qv), and much can be learned from the conversion routines, Float asIEEE32BitWord, and Float class fromIEEE32Bit:.",				"",				"Thanks to Rich Harmon for asking many questions and to Tim Olson, Bruce Cohen, Rick Zaccone and others for the answers that I have collected here."			],			"category" : "Kernel-Numbers"		},		"RBBlockNode" : {			"hash" : 1181184,			"definition" : "RBValueNode subclass: #RBBlockNode\r\tinstanceVariableNames: 'left right colons arguments bar body scope bcToASTCache'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Nodes'",			"comment" : [				"RBBlockNode is an AST node that represents a block \"[...]\".",				"",				"Like RBMethodNode, the scope attribute is only valid after doing a semantic analyzing step.",				"",				"Instance Variables:",				"\targuments\t<SequenceableCollection of: RBVariableNode>\tthe arguments for the block",				"\tbar\t<Integer | nil>\tposition of the | after the arguments",				"\tbody\t<RBSequenceNode>\tthe code inside the block",				"\tcolons\t<SequenceableCollection of: Integer>\tpositions of each : before each argument",				"\tleft\t<Integer>\tposition of [",				"\tright\t<Integer>\tposition of ]",				"\tscope\t<OCBlockScope | OCOptimizedBlockScope | nil> the scope associated with this code of this block",				""			],			"category" : "AST-Core-Nodes"		},		"SpTestApplicationWithLocale" : {			"hash" : 2501888,			"definition" : "SpApplication subclass: #SpTestApplicationWithLocale\r\tinstanceVariableNames: 'locale'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Tests-Localization'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tlocale:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Tests-Localization"		},		"SpDialogWindowPresenter" : {			"hash" : 2227456,			"definition" : "SpWindowPresenter subclass: #SpDialogWindowPresenter\r\tinstanceVariableNames: 'buttons okAction cancelAction cancelled defaultButton'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Windows'",			"comment" : [				"I'm a presenter used to describe a DialogWindow. ",				"Pay attention that it will not create a real modal in the sense that the user will keep the focus on other windows.",				"",				"Usually instances of `SpDialogWindowPresenter` are created using the method `SpAbstractPresenter>>#openDialogWithSpec`.",				"",				"If you want to make the user focus only on your dialog you should use `SpAbstractPresenter>>#openModalWithSpec` instead.",				"",				"Canonical actions can be parameterized using the methods: `SpDialogWindowPresenter>>#cancelAction:` and `SpDialogWindowPresenter>>#okAction:`. ",				"",				"## Usage ",				"Typically, you do not instantiate directly a dialog, but you open a presenter as one.",				"",				"```",				"SomePresenter >> open",				"\t^ self openDialogWithSpec",				"\t\tokAction: [ self accept ];",				"\t\tcancelAction: [ self cancel ];",				"\t\tyourself",				"```",				"And to control how the dialog should behave, you define the method `initializeDialogWindow:` in your presenters.",				"",				"```",				"SomePresenter >> initializeDialogWindow: aDialogPresenter ",				"\tsuper initializeDialogWindow: aDialogPresenter.",				"\taDialogPresenter",				"\t\tinitialExtent: 600@400;",				"\t\ttitle: 'A title'\t",				"```"			],			"category" : "Spec2-Core-Windows"		},		"WeakArray class" : {			"hash" : 810496,			"definition" : "WeakArray class\r\tinstanceVariableNames: ''",			"comment" : [				"WeakArray is an array which holds only weakly on its elements. This means whenever an object is only referenced by instances of WeakArray it will be garbage collected."			],			"category" : "Collections-Weak-Base"		},		"SelfPropagatingLinkDemo" : {			"hash" : 3521280,			"definition" : "Object subclass: #SelfPropagatingLinkDemo\r\tinstanceVariableNames: 'methodsvisited link'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Examples'",			"comment" : [				"Small Demo of a Link that propages itself at runtime",				"",				"instance :=SelfPropagatingLinkDemo new.",				"",				"Now install on #factorial:",				"instance installOnAllSendsInMethod: (Integer>>#factorial)",				"",				"if we now execute the code",				"",				"    10 factorial",				"",				"inspec the instance of SelfPropagatingLinkDemo to see which methods have been visited by the link"			],			"category" : "Reflectivity-Examples"		},		"DAPackageCycle" : {			"hash" : 1782016,			"definition" : "Object subclass: #DAPackageCycle\r\tinstanceVariableNames: 'packages'\r\tclassVariableNames: ''\r\tpackage: 'Tool-DependencyAnalyser-Core'",			"comment" : [				"A PDPackageCycle is used to represent a cycle among packages. \t",				"All the packages in the cycle are stored in a Collection, in the their name alphabetical order.",				"",				"As soon as possible, they will be stored in the order they have been found."			],			"category" : "Tool-DependencyAnalyser-Core"		},		"SpAbstractButtonPresenter" : {			"hash" : 2205952,			"definition" : "SpAbstractWidgetPresenter << #SpAbstractButtonPresenter\r\tslots: {\r\t\t\t #icon => ObservableSlot .\r\t\t\t #label => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A base for button presenters, it defines basic functionality common to all buttons."			],			"category" : "Spec2-Core-Widgets"		},		"IceWorkingCopyPatcherVisitor" : {			"hash" : 6210816,			"definition" : "IceTreeVisitor subclass: #IceWorkingCopyPatcherVisitor\r\tinstanceVariableNames: 'repository loader'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Changes'",			"comment" : [				"I visit a tree of changes and apply those changes to the working copy."			],			"category" : "Iceberg-Changes"		},		"StRemoveBindingCommand" : {			"hash" : 5454336,			"definition" : "CmCommand subclass: #StRemoveBindingCommand\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Playground-Command'",			"comment" : [				"Remove a binding."			],			"category" : "NewTools-Playground-Command"		},		"SpObservablePoint" : {			"hash" : 2139392,			"definition" : "Object << #SpObservablePoint\r\ttraits: {TObservable};\r\tslots: {\r\t\t\t #x => ObservableSlot .\r\t\t\t #y };\r\tpackage: 'Spec2-ObservableSlot'",			"comment" : [				"I am a point used to test observable properties.",				"I have an observable property x and a non-observable property y.",				"",				"I use TObservable that has methods to ease the usage of my observable properties."			],			"category" : "Spec2-ObservableSlot"		},		"Stdio class" : {			"hash" : 1146112,			"definition" : "Stdio class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a facade class to access standard output streams:",				"",				"- standard input",				"- standard output",				"- standard error",				"",				"I initialize standard streams in a lazy fashion, asking to the VM for the #stdioHandles. I cache those standard streams and release them on shutdown.",				"",				"The possible scenarios, i.e. for each of stdin, stderr and stdout:",				"",				"    the stream is attached to a terminal (default on posix platforms, PharoConsole.exe on Windows (see below for Pharo.exe))",				"    the stream is redirected to a normal file, e.g. pharo pharo.image > output.txt",				"    the stream is redirected to a pipe, e.g. pharo pharo.image | tee output.txt",				"",				"To know exactly which kind of stream you are using, you can use File >> #fileDescriptorType: (args are 0 1 2 for the stdios).",				"",				"",				"Windows Subtleties",				"=====================",				"",				"If launched as a desktop app (not from the console), Pharo.exe will not be linked to external streams because none is created. To overcome that, the default behavior of this class is to create a normal file for the three stdio. This can be modified to:",				"\tnot create a file (execute #useNullStreams)",				"\tuse a memory stream (execute #useMemoryStreams)."			],			"category" : "Files-Core"		},		"ZipConstants class" : {			"hash" : 1341184,			"definition" : "ZipConstants class\r\tinstanceVariableNames: ''",			"comment" : [				"This class defines magic numbers taken from RFC1951 [1b], and also ",				"possibly RFC1950 [1a] & RFC1952 [1c]. ",				"It presets some dictionary structures as described at [1a] 8.1. ",				"",				"A class can import these bindings as 'class variables' by including the ",				"following in its class definition: ",				"   poolDictionaries: 'ZipFileConstants' ",				"",				"Following are source references to these constants contained within ",				"several class side initialization methods. ",				"(These might be better spread through out those methods as time permits) ",				"",				"initializeDeflateConstants ",				"    WindowSize [2e]\"w_size\", [2a]\"windowBits is the base two logarithm ",				"of windowSize where default windowBits=15\" ",				"    WindowMask [2e]\"w_mask\" ",				"    MaxDistance [2e]\"MAX_DIST\" ",				"    MinMatch [2c] ",				"    MaxMatch [2c] ",				"    HashBits [2e]\"hash_bits\" ",				"    HashMask [2e]\"hash_mask\" ",				"    HashShift [2e]\"hash_shift\" ",				"",				"initializeDistanceCodes ",				"    BaseDistance [2f] ",				"    DistanceCodes [2f] ",				"",				"initializeExtraBits ",				"    ExtraLengthBits [1]3.2.5, [2b] ",				"    ExtraDistanceBits [1]3.2.5, [2b] ",				"    ExtraBitLengthBits [2b] ",				"    BitLengthOrder [1]3.2.7, [2b] ",				"",				"initializeFixedTrees ",				"    [1]3.2.6 ",				"",				"initializeWriteStreamConstants ",				"    MaxBits [2d] ",				"    MaxBitLengthBits [2b] ",				"    EndBlock [2b] ",				"    StoredBlock [2c] ",				"    FixedBlock [2c] ",				"    DynamicBlock [2c] [1]3.2.3\"BTYPE\" ",				"    NumLiterals ",				"    MaxLengthCodes [2e] ",				"    MaxDistCodes [2e] ",				"    MaxBitLengthCodes [2e] ",				"    MaxLiteralCodes ",				"    Repeat3To6 [2b] ",				"    Repeat3To10 [2b] ",				"    Repeat11To138 [2b] ",				"",				"[1a]  \"ZLIB Compressed Data Format Specification version 3.3\" ",				"http://www.ietf.org/rfc/rfc1950.txt",				"[1b] \"DEFLATE Compressed Data Format Specification version 1.3\" ",				"http://www.ietf.org/rfc/rfc1951.txt",				"[1c] \"GZIP file format specification version 4.3\" ",				"http://www.ietf.org/rfc/rfc1952.txt",				"[2] ZLIB Source Code http://zlib.net/zlib-1.2.5.tar.gz",				"[2a] zlib.h ",				"[2b] trees.c ",				"[2c] zutil.h ",				"[2d] inftrees.c ",				"[2e] deflate.h ",				"[2f] trees.h "			],			"category" : "Compression-Streams"		},		"SpTextPresenter" : {			"hash" : 2213632,			"definition" : "SpAbstractTextPresenter << #SpTextPresenter\r\ttraits: {SpTHaveWrappingScrollBars};\r\tslots: {\r\t\t\t #scrollValue => ObservableSlot .\r\t\t\t #editionContextMenu => ObservableSlot .\r\t\t\t #editable => ObservableSlot .\r\t\t\t #wrapWord => ObservableSlot .\r\t\t\t #undoRedoHistory };\r\ttag: 'Widgets-Text';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter to handle basic multi-line text."			],			"category" : "Spec2-Core-Widgets-Text"		},		"RubParagraph" : {			"hash" : 1864960,			"definition" : "Object subclass: #RubParagraph\r\tinstanceVariableNames: 'text composer container drawingEnabled textArea'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Core'",			"comment" : [				"I represent a paragraph of a text area"			],			"category" : "Rubric-Editing-Core"		},		"RSSearchInCanvasInteraction" : {			"hash" : 5724160,			"definition" : "RSAbstractControlCanvasInteraction subclass: #RSSearchInCanvasInteraction\r\tinstanceVariableNames: 'canvas useExactMatch fixedLabels highlightesShapes colorsToUse highlightableLabels'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Controls'",			"comment" : [				"`RSSearchInCanvas` am an option for the canvas controller. ",				"You can use `RSSearchInCanvas` as follows (press the S key and the R key):",				"",				"```Smalltalk",				"c := RSCanvas new.",				"shapes := Collection withAllSubclasses collect: [ :n | RSEllipse new size: 20; model: n ] as: RSGroup.",				"c addAll: shapes.",				"shapes @ RSPopup.",				"eb := RSEdgeBuilder line.",				"eb canvas: c.",				"eb connectFrom: #superclass.",				"RSTreeLayout on: shapes.",				"c @ RSCanvasController.",				"```",				"",				"```Smalltalk",				"c := RSCanvas new.",				"shapes := (1 to: 10) collect: [ :n | RSEllipse new size: 20; model: n ] as: RSGroup.",				"c addAll: shapes.",				"RSGridLayout on: shapes.",				"shapes @ RSPopup.",				"con := RSCanvasController new.",				"con addInteraction: RSSearchInCanvas new.",				"c @ con.",				"```",				"",				"Another example:",				"```Smalltalk",				"c := RSCanvas new.",				"",				"classes := Collection withAllSubclasses.",				"elements := classes collect: [ :cls |",				"\tg := RSGroup new",				"\t\tadd: (RSLabel new text: cls name);",				"\t\tadd: (RSEllipse new size: (cls numberOfMethods + 5) sqrt; color: Color blue );",				"\t\tyourself.",				"\tRSVerticalLineLayout new center; on: g.",				"\tg asShapeFor: cls ] as: RSGroup.",				"",				"c addAll: elements.",				"high := RSHighlightable defaultRed.",				"elements @ high.",				"RSGridLayout new",				"\tlineItemsCount: 5;",				"\ton: elements.",				"",				"con := RSCanvasController new.",				"con addInteraction: (search := RSSearchInCanvas new ",				"\tcolorToHighlight: Color blue translucent;",				"\tyourself).",				"",				"c @ con.",				"```"			],			"category" : "Roassal3-Interaction-Controls"		},		"ShMetaclassChangeDetector" : {			"hash" : 826112,			"definition" : "ShAbstractClassChangeDetector subclass: #ShMetaclassChangeDetector\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Shift-Changes'",			"comment" : [				"I am responsible of detecting when a class changes its metaclass."			],			"category" : "Shift-Changes"		},		"RubAnnotationDisplayer" : {			"hash" : 595712,			"definition" : "RubScrolledTextSideRuler subclass: #RubAnnotationDisplayer\r\tuses: TRubWithWrapPolicy + (TRubWithLineNumber - {#fontToUse})\r\tinstanceVariableNames: 'lineAnnotation row wrappingPolicyMorph editingModeMorph tabWidthMorph columnDisplayMorph lineNumbersDisplayMorph'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Widgets'",			"comment" : [				"I represent a bar with annotations for the text area, like editing mode, line numbers etc"			],			"category" : "Rubric-Editing-Widgets"		},		"SpMethodToolbarPresenter" : {			"hash" : 1561600,			"definition" : "SpPresenter subclass: #SpMethodToolbarPresenter\r\tinstanceVariableNames: 'browseModel sendersModel implementorsModel versionModel dropListModel model usersModel method'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Morphic-Widgets'",			"comment" : [				"A MethodToolbar is xxxxxxxxx.",				"",				"self example"			],			"category" : "Spec2-Morphic-Widgets"		},		"ZnChunkedWriteStream" : {			"hash" : 1405184,			"definition" : "Object subclass: #ZnChunkedWriteStream\r\tinstanceVariableNames: 'stream extraHeaders totalSize chunkCount'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Streaming'",			"comment" : [				"I am ZnChunkedWriteStream, I wrap another write stream and add HTTP 1.1 chunked transfer encoding.",				"",				"I write a chunk for each #nextPutAll: or #next:putAll:startingAt:",				"I should be wrapped in a ZnBufferedWriteStream for #next: to work.",				"When done, send #close or #finish to me.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Streaming"		},		"PermaLink" : {			"hash" : 3028736,			"definition" : "Object subclass: #PermaLink\r\tinstanceVariableNames: 'slotOrVariable persistenceType isInstanceSpecific slotOrVarClass link'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Installer'",			"comment" : [				"I specify a kind of persistence for links to be put on a slot, a temporary variable or a class variable.  ",				"",				"I can be of kind: ",				"- #read only read nodes",				"- #write only assignment nodes ",				"- #all both",				"",				"I know the class of the slot/var the link will be put on. I also know my link, although several versions of me can exist for the same link, but with different targets (slots/var).",				"",				"The isInstanceSpecific inst var seems to be needed to keep track that the metalink is installed on an object, because this information is lost after the link is installed through the API. It could be done better perhaps. "			],			"category" : "Reflectivity-Installer"		},		"AthensWorldMorph" : {			"hash" : 3416320,			"definition" : "WorldMorph subclass: #AthensWorldMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Athens-Morphic'",			"comment" : [				"An AthensWorldMorph is a special version of a WorldMorph.",				"It is within a real Morph in a real morphic world. The Morph it is in defines the DisplayScreen dimension. (see AthensWrappedWorldDisplay)"			],			"category" : "Athens-Morphic"		},		"DynamicComposablePresenter" : {			"hash" : 919040,			"definition" : "ComposablePresenter subclass: #DynamicComposablePresenter\r\tinstanceVariableNames: 'widgets layout'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Base'",			"comment" : [				"I'm a CompsableModel with a dynamic behavior for managing subwidgets and the value holder communicates with them.",				"",				"The idea is that instead of having a fix set of valueHolders controlling various aspects of the model. I have a dictionary to hold such elements.",				"",				"You can also have a look at DynamicalPopup for an example.",				"",				"I provide the following variables and its accessors",				"- layout to put a layout created dynamically.",				"- widget is a Dictionary containing my dynamics widgets.",				"",				"I'm specializing",				"- doesNotUnderstand:  to search in my dictionary before rise an exception, so that the programmer can simply use accessors to access my dynamic elements. ",				"- openWithSpec to use the layout in my variable if it is not nil.",				"",				"I provide the following messages",				"- instantiateModels: to create instances of subwidgets. It takes a collection of pair, first of each pair is the string to use as key in the dictionary, second is the class name to instantiate.",				"- assign:to: to put in the dictionary a widget already instantiated.",				"",				"todo",				"- needFullRebuild:",				"- retrieveSpec:"			],			"category" : "Spec-Core-Base"		},		"CodeImporter" : {			"hash" : 1265920,			"definition" : "Object subclass: #CodeImporter\r\tinstanceVariableNames: 'readStream codeDeclarations parserClass requestor logSource'\r\tclassVariableNames: ''\r\tpackage: 'CodeImport-Base'",			"comment" : [				"## Description",				"I'm an object in charge of import source files.  I know a format object that knows how to parse the files, and I import the parsed results into the image.",				"",				"I handle doIts normally, but some special cases like class organization, class comment or methods are handled via a double dispatch (See my method extensions for that).",				"I read code from chunk format. The chunk format is a code format where elements are delimited by exclamation marks. Exclamation mark represents events of compilation (chunk that was being read from input stream is now  evaluated/compiled). ",				"",				"Each code element is preceded by some kind of annotation that says what kind of element it is / how it should be read.",				"For example, the annotation:  ",				"``` ",				"CodeImportTestCaseTestClass #methodsFor: ''some protocol'' #stamp: ''GuillermoPolito 5/2/2012 13:35",				"```  ",				"says that the thing that follows is a method for the class CodeImportTestCaseTestClass, its protocol, and some other metadata like the last modification stamp.",				"A chunk can then contain:",				"- a method",				"- a class comment",				"- a \"package organization\" which is like a package definition, ",				"- an arbitrary \"doIt\" expression. ",				"- The definition of classes are integrated within arbitrary expressions.",				"",				"## How to use me",				"",				"If you want to fileIn the code -aka compile/evaluate it:",				"`CodeImporter evaluateReadStream: '2+2!' readStream.`  ",				"or  ",				"`CodeImporter evaluateString: '2+2!'`  ",				"or  ",				"`CodeImporter evaluateFileNamed: 'something.st'`  ",				"or  ",				"`CodeImporter evaluateFileStream: (FileStream readOnlyFileNamed: 'something.st')`  ",				"",				"Now, you can also generate a model of code declarations inside a file by just creating an instance:",				"`CodeImporter fileStream: (FileStream readOnlyFileNamed: 'something.st').`  ",				"And then query me sending the message `#codeDeclarations`",				"",				"Instances of me can be created through ",				"`#fromString:`  ",				"`#readStream:`  ",				"`#fileNamed:`  ",				"`#fileStream:`  "			],			"category" : "CodeImport-Base"		},		"OmSTONEntryWriter" : {			"hash" : 4174592,			"definition" : "OmEntryWriter subclass: #OmSTONEntryWriter\r\tinstanceVariableNames: 'writer'\r\tclassVariableNames: ''\r\tpackage: 'Ombu-Persistence'",			"comment" : [				"I implement how to write entries to a stream using Ston serializer."			],			"category" : "Ombu-Persistence"		},		"StSpotterHeaderPresenter" : {			"hash" : 5494016,			"definition" : "StSpotterBasePresenter subclass: #StSpotterHeaderPresenter\r\tinstanceVariableNames: 'model candidatePresentersList labelPresenter diveButtonPresenter diveInAction finalAmount amountLabelPresenter helpLabelPresenter order diveOutAction nested'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Spotter-View'",			"comment" : [				"A presenter to display a group of results.",				"Each processor define a group. ",				"Each group has a list of children (instances of *StSpotterCandidateListPresenter). "			],			"category" : "NewTools-Spotter-View"		},		"MalLongestPath" : {			"hash" : 1759488,			"definition" : "MalGraphAlgorithm subclass: #MalLongestPath\r\tinstanceVariableNames: 'previousRanks rootNodes leafNodes maxIterations'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"A MalLongestPath is the implementation of the longest path algo.",				"This is working only on graph not weighted and without circuits",				"",				"See tests for more informations"			],			"category" : "Moose-Algos-Graph"		},		"MicCodeBlock" : {			"hash" : 6549760,			"definition" : "MicSameStartStopMarkupBlock subclass: #MicCodeBlock\r\tinstanceVariableNames: 'firstTag'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Model'",			"comment" : [				"I am a code block. I look like this, starting and ending with three $`",				"my 'arguments' is just the text from the fourth character up to the end of line.",				"",				"```",				" ```arguments",				" line 1",				" line 2",				" line 3",				" ``` ",				"```",				"",				"A codeblock does not interpreter its contents. ",				"You can however specify different tag and multiple argument. ",				"",				"```",				"\t```language=pharo|caption=A method&label=method ",				"\tpharoMotto ",				"\t\t^ 'Doing something every is the best way to make progress'",				"\t```",				"```",				"",				"",				"For now we do not support the use of multiple backticks. The markup is only 3 backticks. If you want to embed codeblock inside codeblock you must use an extra space. ",				"",				"```",				" ```",				"  ```",				"  A nested codeblock",				"  ```",				" ```",				"```",				"",				"#### Implementation thoughts",				"The current implementation stores lines in a single text and this is a bad idea because first what if the user use lf in his text!",				"Second if we want to treat lines separatedly we have to reparse it. Now we do not need it so this is good but this is just by chance!"			],			"category" : "Microdown-Model"		},		"SpToolbarToggleButtonMorphTest" : {			"hash" : 2938112,			"definition" : "SpSmokeTest subclass: #SpToolbarToggleButtonMorphTest\r\tuses: SpTMorphicUIRedrawer\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Morphic-Tests-Examples'",			"comment" : [				"This class contains tests"			],			"category" : "Spec2-Morphic-Tests-Examples"		},		"SpConfirmDialog" : {			"hash" : 2334464,			"definition" : "SpDialogPresenter subclass: #SpConfirmDialog\r\tinstanceVariableNames: 'label title initialExtent acceptLabel cancelLabel'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Dialogs'",			"comment" : [				"A simple confirm dialog. ",				"By default, it will show the `label` message and ask for a conformation with `Yes` and `No` as default button options."			],			"category" : "Spec2-Dialogs"		},		"MalSccExtractor" : {			"hash" : 1760000,			"definition" : "MalGraphAlgorithm subclass: #MalSccExtractor\r\tinstanceVariableNames: 'circuits'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"A utility class to easily get circuits, i.e. SCC with more than one node."			],			"category" : "Moose-Algos-Graph"		},		"RSAbstractCanvasMonitorInteraction" : {			"hash" : 5720064,			"definition" : "RSAbstractCanvasInteraction subclass: #RSAbstractCanvasMonitorInteraction\r\tinstanceVariableNames: 'shape lastFrameEndTime canvas'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Extra'",			"comment" : [				"I am an interaction for RSView, I can add to the a fixed shape that contains basic information about",				"",				"Frames per second, this number show the quantity of frames rendered. useful to debug animations"			],			"category" : "Roassal3-Interaction-Extra"		},		"MalDijkstraEdge" : {			"hash" : 1765120,			"definition" : "MalWeightedEdge subclass: #MalDijkstraEdge\r\tinstanceVariableNames: 'visited'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tvisited:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Moose-Algos-Graph"		},		"AthensCurveFlattener" : {			"hash" : 3065600,			"definition" : "AthensPathSegmentConverter subclass: #AthensCurveFlattener\r\tinstanceVariableNames: 'transform lengthTolerance lengthToleranceSquared'\r\tclassVariableNames: 'CurveAngleToleranceEpsilon CurveCollinearityEpsilon CurveDistanceEpsilon SubdivisionLimit'\r\tpackage: 'Athens-Core-PathsGeometry'",			"comment" : [				"This converter flattens all curves by converting them to series of lines.",				"This means that path can be rendered using simple polygon rendering technique",				"and nothing else."			],			"category" : "Athens-Core-PathsGeometry"		},		"RSFlowLayout" : {			"hash" : 5751552,			"definition" : "RSAbstractFlowLayout subclass: #RSFlowLayout\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"A RTFlowLayout arrange elements in a rectangle including space (gapSize) between them, ideally it give you a square if all elements have an equal height and width ."			],			"category" : "Roassal3-Layouts-Core"		},		"SpecSplitterVertical" : {			"hash" : 966144,			"definition" : "SpecLayoutAdd subclass: #SpecSplitterVertical\r\tinstanceVariableNames: 'commands'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Layout-Actions'",			"comment" : [				"A SpecSplitterVertical is the description of the addition of a vertical splitter"			],			"category" : "Spec-Layout-Actions"		},		"MicRichTextComposer class" : {			"hash" : 6582272,			"definition" : "MicRichTextComposer class\r\tinstanceVariableNames: 'imageCache'",			"comment" : [				"I am a visitor that produces rich text (class Text) based on a pillar document model.",				"I am implemented using a canvas/brush pattern. The class offers multiple configurations: an offline mode, ",				"a not rendering mode, and a not catching exceptions (to ease debugging).",				"",				"The main API is the method: `BCRichTextComposer class>>#renderComment:of:`.",				"",				"Web-based images or LaTeX rendering requires network access and are cached.",				"",				"",				"",				"!!Note The composer should be improved to render better and in nicer ways elements. ",				"",				"#### Advanced  ",				"For the LaTeX rendering, internet connexion is required. ",				"You can also turn it off/on doing",				"",				"```",				"BCRichTextComposer putOffLine",				"```",				"",				"In addition, images fetched via http requests are cached to avoid multiple http requests.",				"The cache can be reset executing `PRRichTextComposer resetCache`. When the system is off line and an image is requested, a placeholder is computed but not put in the cache. This way when the system is put online the requested elements will be requested and put in the cache (without needing to flush placeholders from the cache).",				"When the system is online but the request failed I display an uncached placeholder.",				"",				"It means that web-based images can be prefilled and Pharo images can be provided preloaded. ",				"",				"When you want to get all the errors (typically to debug and fix them), you can configure the system to stop capturing errors using ",				"",				"```",				"PRRichTextComposer captureErrors: false",				"",				"```",				"\\'",				"",				"",				"#### Known limits",				"Monospaced text (e.g., `Point`, `Point class`,  `Point>>#setX:setY:`, or `#'Pillar-ExporterPillar'`) uses TextAction to trigger browser opening on the corresponding element. It would be better to use a TextLink because the styler is aware of them. ",				""			],			"category" : "Microdown-MicrodownRichTextComposer"		},		"SettingsStonWriter" : {			"hash" : 1878272,			"definition" : "Object subclass: #SettingsStonWriter\r\tinstanceVariableNames: 'stream storedSettings'\r\tclassVariableNames: ''\r\tpackage: 'System-Settings-Core-Persistence-Ston-StoredSettings-Builder'",			"comment" : [				"I am a writer of system settings to a file (stream). I know how to write the settings into a stream.",				"",				"Collaborators: SystemSettingsPersistence",				"",				"Public API and Key Messages",				"",				"- stream:",				"- store ",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tstoredSettings:\t\t<Array>",				"\tstream:\t\t\t\t<WriteStream>"			],			"category" : "System-Settings-Core-Persistence-Ston-StoredSettings-Builder"		},		"MicElement" : {			"hash" : 6536960,			"definition" : "Object subclass: #MicElement\r\tinstanceVariableNames: 'parent properties'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Model'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tparent:\t\t<Object>",				"\tproperties:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Microdown-Model"		},		"RSTimeLinePlot" : {			"hash" : 5813504,			"definition" : "RSAbstractPlot subclass: #RSTimeLinePlot\r\tinstanceVariableNames: 'gapRatio bars barSize'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Core'",			"comment" : [				"Define a time line, a bit like a Gantt diagram."			],			"category" : "Roassal3-Chart-Core"		},		"MicRichTextComposer" : {			"hash" : 6582528,			"definition" : "MicrodownVisitor subclass: #MicRichTextComposer\r\tinstanceVariableNames: 'canvas monospaceBackgroundColor superscriptColor subscriptColor annotatedParagraphColor annotatedParagraphAnnotationColor annotatedParagraphAlignment'\r\tclassVariableNames: 'CaptureErrors HeaderFontSizes HeaderFonts ImageCache NotRendering OffLine Stylers'\r\tpackage: 'Microdown-MicrodownRichTextComposer'",			"comment" : [				"I am a visitor that produces rich text (class Text) based on a pillar document model.",				"I am implemented using a canvas/brush pattern. The class offers multiple configurations: an offline mode, ",				"a not rendering mode, and a not catching exceptions (to ease debugging).",				"",				"The main API is the method: `BCRichTextComposer class>>#renderComment:of:`.",				"",				"Web-based images or LaTeX rendering requires network access and are cached.",				"",				"",				"",				"!!Note The composer should be improved to render better and in nicer ways elements. ",				"",				"#### Advanced  ",				"For the LaTeX rendering, internet connexion is required. ",				"You can also turn it off/on doing",				"",				"```",				"BCRichTextComposer putOffLine",				"```",				"",				"In addition, images fetched via http requests are cached to avoid multiple http requests.",				"The cache can be reset executing `PRRichTextComposer resetCache`. When the system is off line and an image is requested, a placeholder is computed but not put in the cache. This way when the system is put online the requested elements will be requested and put in the cache (without needing to flush placeholders from the cache).",				"When the system is online but the request failed I display an uncached placeholder.",				"",				"It means that web-based images can be prefilled and Pharo images can be provided preloaded. ",				"",				"When you want to get all the errors (typically to debug and fix them), you can configure the system to stop capturing errors using ",				"",				"```",				"PRRichTextComposer captureErrors: false",				"",				"```",				"\\'",				"",				"",				"#### Known limits",				"Monospaced text (e.g., `Point`, `Point class`,  `Point>>#setX:setY:`, or `#'Pillar-ExporterPillar'`) uses TextAction to trigger browser opening on the corresponding element. It would be better to use a TextLink because the styler is aware of them. ",				""			],			"category" : "Microdown-MicrodownRichTextComposer"		},		"ImagePresenter" : {			"hash" : 889856,			"definition" : "AbstractWidgetPresenter subclass: #ImagePresenter\r\tinstanceVariableNames: 'imageHolder actionHolder autoScaleHolder'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"An ImagePresenter is a spec presenter for images.",				"See AbstractWidgetPresenter",				"",				"I provide the following variables and their accessors",				"- action is the action performed when I am displayed.",				"- image is the form i display."			],			"category" : "Spec-Core-Widgets"		},		"TestRunner" : {			"hash" : 3098880,			"definition" : "Model subclass: #TestRunner\r\tinstanceVariableNames: 'classes classIndex classesSelected failedList failedSelected errorList errorSelected lastUpdate result previousRun classPattern testAnnouncementBlock packages packagesSelected packagePattern packageIndex'\r\tclassVariableNames: ''\r\tpackage: 'SUnit-UI-Tools'",			"comment" : [				"<lint: #ignore rule: #classNotReferenced rational: 'this view is only accessed from menus'>",				"",				"Although tests can be most easily be run from a browser, I provide the ability to: ",				"* select sets of test suites to run. I am designed to make it easy to execute groups of tests",				"* obtain a more detailed log of the results ",				"",				"",				"UI Description ",				"___________ ",				"",				"My left-most pane lists all of the categories that contain test classes (i.e., subclasses of TestCase); when some of these categories are selected, the test classes that they contain appear in the pane to the right. Abstract classes are italicized, and the test class hierarchy is shown by indentation, so subclasses of ClassTestCase are indented more than subclasses of TestCase. ",				"",				"The tests that did not pass (if any) are listed in the right-hand panes of the Test Runner; if you want to debug one, to see why it failed, just click on the name."			],			"category" : "SUnit-UI-Tools"		},		"CoCompletionContext" : {			"hash" : 5304576,			"definition" : "Object subclass: #CoCompletionContext\r\tinstanceVariableNames: 'engine source position completionBuilder completionClass completion'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Model-SystemIntegration'",			"comment" : [				"I am the interface with the System's CompletionEngine, following the API of CompletionContext (entries, entryCount, activateEntryAt:, etc).",				"I delegate the calculation of the entries completely to a complishon object which is lazily built by a complishon builder.",				"The complishonBuilder instance can be specialized or replaced to change the search heuristics."			],			"category" : "HeuristicCompletion-Model-SystemIntegration"		},		"SpecLayoutFrame" : {			"hash" : 947712,			"definition" : "Object subclass: #SpecLayoutFrame\r\tinstanceVariableNames: 'bottomFraction bottomOffset leftFraction leftOffset rightFraction rightOffset topFraction topOffset'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Support'",			"comment" : [				"I am a wrapper for the layout of widget.",				"",				"Each framework can then adapt me as it wants in its adapters"			],			"category" : "Spec-Core-Support"		},		"RSRectangleForceLayout" : {			"hash" : 5765888,			"definition" : "RSForceBasedLayout subclass: #RSRectangleForceLayout\r\tinstanceVariableNames: 'enclosingRectangle enclosingThreshold enclosingForce'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"I am a specific kind of force based layout that has an enclosing rectangle for elements. On each step, I apply a repulsion force to elements that are close to the enclosing rectangle."			],			"category" : "Roassal3-Layouts-Core"		},		"Deprecation class" : {			"hash" : 935936,			"definition" : "Deprecation class\r\tinstanceVariableNames: ''",			"comment" : [				"This Warning is signalled by methods which are deprecated.",				"",				"Idiom: Imagine I want to deprecate the message #foo.",				"",				"foo",				"\t^ 'foo'",				"",				"I can replace it with:",				"",				"foo",				"\tself ",				"\t\tdeprecated:   'The method #foo was not good. Use Bar>>newFoo instead.'",				"\t\ton:  'here add date'",				"\t\tin:  'here add version'",				"\t\t transformWith:   '`@receiver foo' -> '`@receiver newFoo'.\t",				"\t^self newFoo",				"\t",				"\t",				"The  transformWith:  part is optional. It allows to transform the deprecated method automatically when called.",				"If the transformation is defined, the Warning will not signalled.",				""			],			"category" : "Kernel-Exceptions"		},		"AthensPathBuilder class" : {			"hash" : 3057664,			"definition" : "AthensPathBuilder class\r\tinstanceVariableNames: ''",			"comment" : [				"i am abstract path builder, to specify an interface protocol which is available for building paths,",				"by using  canvas or surface #createPath: method."			],			"category" : "Athens-Core-Paths"		},		"MacRomanTextConverter class" : {			"hash" : 2237184,			"definition" : "MacRomanTextConverter class\r\tinstanceVariableNames: ''",			"comment" : [				"Text converter for Mac Roman.  An encoding used for the languages originated from Western Europe area."			],			"category" : "Deprecated90"		},		"SDL_Surface" : {			"hash" : 4101120,			"definition" : "SDL2Structure subclass: #SDL_Surface\r\tinstanceVariableNames: ''\r\tclassVariableNames: 'OFFSET_CLIP_RECT OFFSET_FLAGS OFFSET_FORMAT OFFSET_H OFFSET_LOCKED OFFSET_LOCK_DATA OFFSET_MAP OFFSET_PITCH OFFSET_PIXELS OFFSET_REFCOUNT OFFSET_USERDATA OFFSET_W'\r\tpackage: 'OSWindow-SDL2-Bindings'",			"comment" : [				"SDL2 library structure"			],			"category" : "OSWindow-SDL2-Bindings"		},		"TestResult" : {			"hash" : 358656,			"definition" : "Object subclass: #TestResult\r\tinstanceVariableNames: 'timeStamp failures errors passed skipped'\r\tclassVariableNames: ''\r\tpackage: 'SUnit-Core-Kernel'",			"comment" : [				"This implements the Collecting Parameter pattern for running a bunch of tests.  It holds tests that have run, sorted into the result categories of passed, failures and errors.",				"",				"TestResult is an interesting object to subclass or substitute. #runCase: is the external protocol you need to reproduce. TestResult subclasses can  handle multi-threaded tests (see SUnitXProcPatterns) and might record coverage information or send emails when the run completes."			],			"category" : "SUnit-Core-Kernel"		},		"ReEqualNilRule" : {			"hash" : 3935744,			"definition" : "ReNodeRewriteRule subclass: #ReEqualNilRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Replaces = nil and == nil by isNil, ~= nil and ~~ nil by notNil to make the code more readable.  "			],			"category" : "GeneralRules-Migrated"		},		"RFMetaContext" : {			"hash" : 3030272,			"definition" : "Object subclass: #RFMetaContext\r\tinstanceVariableNames: 'level'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Contexts'",			"comment" : [				"I model the meta level when activating a MetaLink."			],			"category" : "Reflectivity-Contexts"		},		"RSAlgoritmia" : {			"hash" : 2290176,			"definition" : "Object subclass: #RSAlgoritmia\r\tinstanceVariableNames: 'canvas extent degs nRadius outRadius totalTweens inBetween circleNumber perlin models rand radii frameCount masterX masterY cos color border animation'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-Animations'",			"comment" : [				"based on https://www.openprocessing.org/sketch/85954"			],			"category" : "Roassal3-Experimental-Animations"		},		"FLFileReferenceStreamStrategy" : {			"hash" : 4253440,			"definition" : "FLStreamStrategy subclass: #FLFileReferenceStreamStrategy\r\tinstanceVariableNames: 'reference'\r\tclassVariableNames: ''\r\tpackage: 'Fuel-Tests-Core-StreamStrategies'",			"comment" : [				"I use binary read and write streams atop a memory filesystem."			],			"category" : "Fuel-Tests-Core-StreamStrategies"		},		"ClyQueryBrowserFilter" : {			"hash" : 4931072,			"definition" : "ClyItemStringFilter subclass: #ClyQueryBrowserFilter\r\tinstanceVariableNames: 'scriptBlock badScript'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemQueries-Queries'",			"comment" : [				"I am a query filter which specifically created for the query browser which can represent different kind of items in one list.",				"I delegate actual testing logic to the actual object of given browser items:",				"",				"\tactualObject matchesQueryBrowserFilter: self",				"",				"This method is implemented by methods, classes and class comments. So this objects can be shown and filtered in query browser.",				"Implementors call be back with #matchesString: messge where I check given string for my pattern.",				"",				"I also provide special trick to filter items by script. To activate it the pattern string should be in form of one arg block. For example:",				"\t[ :each | each linesOfCode > 10 ] ",				"Such block will be evaluated with actual object of browser item.",				"  ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbadScript:\t\t<Boolean>",				"\tscriptBlock:\t\t<BlockClosure>"			],			"category" : "Calypso-SystemQueries-Queries"		},		"Base64MimeConverter" : {			"hash" : 1368320,			"definition" : "MimeConverter subclass: #Base64MimeConverter\r\tinstanceVariableNames: 'multiLine'\r\tclassVariableNames: 'FromCharTable ToCharTable'\r\tpackage: 'Network-MIME-Converter'",			"comment" : [				"This class encodes and decodes data in Base64 format.  This is MIME encoding.  We translate a whole stream at once, taking a Stream as input and giving one as output.  Returns a whole stream for the caller to use.",				"           0 A            17 R            34 i            51 z",				"           1 B            18 S            35 j            52 0",				"           2 C            19 T            36 k            53 1",				"           3 D            20 U            37 l            54 2",				"           4 E            21 V            38 m            55 3",				"           5 F            22 W            39 n            56 4",				"           6 G            23 X            40 o            57 5",				"           7 H            24 Y            41 p            58 6",				"           8 I            25 Z            42 q            59 7",				"           9 J            26 a            43 r            60 8",				"          10 K            27 b            44 s            61 9",				"          11 L            28 c            45 t            62 +",				"          12 M            29 d            46 u            63 /",				"          13 N            30 e            47 v",				"          14 O            31 f            48 w         (pad) =",				"          15 P            32 g            49 x",				"          16 Q            33 h            50 y",				"Outbound: bytes are broken into 6 bit chunks, and the 0-63 value is converted to a character.  3 data bytes go into 4 characters.",				"Inbound: Characters are translated in to 0-63 values and shifted into 8 bit bytes.",				"",				"(See: N. Borenstein, Bellcore, N. Freed, Innosoft, Network Working Group, Request for Comments: RFC 1521, September 1993, MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies. Sec 6.2)",				"",				"By Ted Kaehler, based on Tim Olson's Base64Filter."			],			"category" : "Network-MIME-Converter"		},		"WorldState" : {			"hash" : 1663232,			"definition" : "Object subclass: #WorldState\r\tinstanceVariableNames: 'hands damageRecorder stepList lastStepTime lastStepMessage alarms lastAlarmTime activeHand currentCursor worldRenderer realWindowExtent'\r\tclassVariableNames: 'CanSurrenderToOS DebugShowDamage DeferredUIMessages DesktopMenuPragmaKeyword DesktopMenuTitle EasySelectingWorld LastCycleTime MinCycleLapse ServerMode ShowUpdateOptionInWorldMenu'\r\tpackage: 'Morphic-Core-Worlds'",			"comment" : [				"The state of a Morphic world.  (This needs some serious commenting!!)",				"",				"",				"The MinCycleLapse variable holds the minimum amount of time that a morphic cycle is allowed to take.  If a cycle takes less than this, then interCyclePause: will wait until the full time has been used up."			],			"category" : "Morphic-Core-Worlds"		},		"SpecAdapterBindings" : {			"hash" : 942080,			"definition" : "Object subclass: #SpecAdapterBindings\r\tinstanceVariableNames: 'bindings'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Base'",			"comment" : [				"I am an abstract class",				"",				"I am used to link a spec-oriented adapter name to a framework specific adapter class name"			],			"category" : "Spec-Core-Base"		},		"KMComposedModifier" : {			"hash" : 780032,			"definition" : "KMModifier subclass: #KMComposedModifier\r\tinstanceVariableNames: 'modifiers'\r\tclassVariableNames: ''\r\tpackage: 'Keymapping-KeyCombinations'",			"comment" : [				"I represent a composed key modifier. I contain a collection of modifiers that should match with a keyboard event.",				"",				"Look at my superclass for a more detailed explanaition."			],			"category" : "Keymapping-KeyCombinations"		},		"RSCornerRadius" : {			"hash" : 5686016,			"definition" : "RSObject subclass: #RSCornerRadius\r\tinstanceVariableNames: 'bottomRight bottomLeft topRight topLeft'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Border'",			"comment" : [				"I have information about the corner radius and methods to create it"			],			"category" : "Roassal3-Shapes-Border"		},		"SpMorphicRoassalAdapter class" : {			"hash" : 1981184,			"definition" : "SpMorphicRoassalAdapter class\r\tinstanceVariableNames: ''",			"comment" : [				"I am bridging RoassalPresenter and RTView"			],			"category" : "Roassal3-Spec-Morphic"		},		"RSUMLClassBuilder" : {			"hash" : 5784832,			"definition" : "RSUMLAbstractBuilder subclass: #RSUMLClassBuilder\r\tinstanceVariableNames: 'classes'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-UML-Builder'",			"comment" : [				"I am a builder to create UML diagrams in Roassal3, see examples"			],			"category" : "Roassal3-UML-Builder"		},		"StoredSettingsMerger" : {			"hash" : 1884416,			"definition" : "Object subclass: #StoredSettingsMerger\r\tinstanceVariableNames: 'storedSettings'\r\tclassVariableNames: ''\r\tpackage: 'System-Settings-Core-Persistence-Ston-StoredSettings-Builder'",			"comment" : [				"I merge several stored settings together. If you ask me twice to store same stored settings, the last one wins. ",				"",				"Collaborators: SystemSettingsPersistence",				"",				"Public API and Key Messages",				"",				"- addStoredSetting:",				"- addStoredSettings:",				"- storedSettings",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tstoredSettings:\t\t<Collection of StoredSetting>"			],			"category" : "System-Settings-Core-Persistence-Ston-StoredSettings-Builder"		},		"FluidBuilder" : {			"hash" : 2242560,			"definition" : "Object subclass: #FluidBuilder\r\tinstanceVariableNames: 'shiftClassBuilder packageName slotsToBuild tagToBuild uses nameToBuild classSlotsToBuild classTraitsToBuild'\r\tclassVariableNames: ''\r\tpackage: 'FluidClassBuilder-Base'",			"comment" : [				"I'm responsible to build class expressed with the fluid syntax.",				"",				"```",				"```",				"Object << #Point ",				"\tslots: { #x . #y };",				"\ttag: 'Basics';",				"\tpackage: 'Kernel'",				"```\t",				"",				"### Design decisions",				"",				"The KEY design decisions are:",				"",				"- The code snippet above should be able to be used for scripting (interactively).",				"- The code snippet above must return a class builder ",				"- A class builder should offer two important messsage: ",				"-- `build` that returns a class but does not install it. ",				"-- `install` that installs the class in the system.",				"",				"To manage class side slots and traits, I follow the design of the classBuilder which is to get all the instance ",				"side information in addition to the class side one. ",				"For this the fillFromClass: method is responsible to convert all the class information into an information expected ",				"by the class builder. ",				"",				"In the future we would like to revisit the need for such fluid class builders and also revisit the API of the class builders (shift and fluid).",				"There are too many conversion and we should realigned the APIs with the class default values too. ",				"",				""			],			"category" : "FluidClassBuilder-Base"		},		"SpMorphicStatusBarAdapter" : {			"hash" : 2613248,			"definition" : "SpAbstractMorphicAdapter subclass: #SpMorphicStatusBarAdapter\r\tinstanceVariableNames: 'pushedMessages'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Base'",			"comment" : [				"I'm the adapter used to bridge a StatusBarPresenter and its morphic representation."			],			"category" : "Spec2-Adapters-Morphic-Base"		},		"MCWorkingCopy" : {			"hash" : 263680,			"definition" : "MCPackageManager subclass: #MCWorkingCopy\r\tinstanceVariableNames: 'ancestry counter repositoryGroup requiredPackages'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Versioning'",			"comment" : [				"MCWorkingCopy represents one version of a package in memory. It provides support for ancestry access, required packages and the repositories in which the package is managed.",				"",				"Instance Variables:",				"\tversionInfo\t<MCAncestry>",				"\tancestry\t<MCWorkingAncestry>",				"\tcounter\t<Number>",				"\trepositoryGroup\t<MCRepositoryGroup>",				"\trequiredPackages\t<Collection>"			],			"category" : "Monticello-Versioning"		},		"LogicalFont class" : {			"hash" : 624128,			"definition" : "LogicalFont class\r\tinstanceVariableNames: 'all'",			"comment" : [				"I describe a font."			],			"category" : "Fonts-Infrastructure-Logical"		},		"Job" : {			"hash" : 1201664,			"definition" : "Object subclass: #Job\r\tinstanceVariableNames: 'block currentValue min max title children isRunning parent process'\r\tclassVariableNames: ''\r\tpackage: 'Jobs-Base'",			"comment" : [				"A Job is a task to run and potentially notified to the user.",				"",				"[:job | job title: 'Let us get started'.",				"\t1 to: 10 do: [:each |",				"\t\tjob",				"\t\t\tprogress: (0.1 * each);",				"\t\t\ttitle: 'Youpi ', each printString.",				"\t\t(Delay forMilliseconds: 100) wait.",				"\t\t] ]  asJob run"			],			"category" : "Jobs-Base"		},		"AdvancedHelpBrowserDummy" : {			"hash" : 4340736,			"definition" : "Object subclass: #AdvancedHelpBrowserDummy\r\tinstanceVariableNames: 'rootTopic isOpen'\r\tclassVariableNames: ''\r\tpackage: 'HelpSystem-Tests-Core-UI'",			"comment" : [				"This is a dummy for a custom Help browser that can be registered as a replacement for the HelpBrowser class.",				"",				"Instance Variables",				"\trootTopic:\t\t<HelpTopic>",				"",				"rootTopic",				"\t- The root help topic"			],			"category" : "HelpSystem-Tests-Core-UI"		},		"Integer" : {			"hash" : 1011968,			"definition" : "Number subclass: #Integer\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Numbers'",			"comment" : [				"I am a common abstract superclass for all Integer implementations. My implementation subclasses are SmallInteger, LargePositiveInteger, and LargeNegativeInteger.",				"\t",				"Integer division consists of:",				"\t/\texact division, answers a fraction if result is not a whole integer",				"\t//\tanswers an Integer, rounded towards negative infinity",				"\t\\\\\tis modulo rounded towards negative infinity",				"\tquo: truncated division, rounded towards zero"			],			"category" : "Kernel-Numbers"		},		"Protocol" : {			"hash" : 846336,			"definition" : "Object subclass: #Protocol\r\tinstanceVariableNames: 'name methodSelectors'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Protocols'",			"comment" : [				"A Protocol is a simple value holder representing a protocol.",				"It's composed of a name and a set of method selectors"			],			"category" : "Kernel-Protocols"		},		"GroupboxMorph" : {			"hash" : 1923328,			"definition" : "ModelMorph subclass: #GroupboxMorph\r\tinstanceVariableNames: 'contentMorph labelMorph getContentSelector'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Base'",			"comment" : [				"Groupbox with title with a vertical layout. Appears in a lighter colour than the owner's pane colour."			],			"category" : "Polymorph-Widgets-Base"		},		"FFIMethodRegistry class" : {			"hash" : 1575168,			"definition" : "FFIMethodRegistry class\r\tinstanceVariableNames: 'uniqueInstance'",			"comment" : [				"I keep a  registry of FFI prepared methods. ",				"Registry is used to know exactly which methods are executing FFI-NB calls and then which ones need to be recompiled when a platform has change."			],			"category" : "UnifiedFFI-Base"		},		"MCFileTreeAbstractStWriter" : {			"hash" : 310016,			"definition" : "MCWriter subclass: #MCFileTreeAbstractStWriter\r\tinstanceVariableNames: 'stWriter initializers orderedClassNames orderedTraitNames'\r\tclassVariableNames: ''\r\tpackage: 'MonticelloFileTree-Core'",			"comment" : [				"Abstract superclass for FileTree writers"			],			"category" : "MonticelloFileTree-Core"		},		"RBVariableEnvironment" : {			"hash" : 3137280,			"definition" : "RBBrowserEnvironmentWrapper subclass: #RBVariableEnvironment\r\tinstanceVariableNames: 'instanceVariables instanceVariableReaders instanceVariableWriters classVariables selectorCache'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Environment'",			"comment" : [				"I am a RBBrowserEnvironment for items referring class or instvars.",				"Constructed by quering extisting environments with ",				"refering, reading or writing to the variables of a class.",				"",				"Example:",				"(RBBrowserEnvironment new) instVarWritersTo:#color in: Morph.",				"-> a RBVariableEnvironment"			],			"category" : "Refactoring-Environment"		},		"RSElasticBoxInteraction" : {			"hash" : 5726208,			"definition" : "RSAbstractCanvasInteraction subclass: #RSElasticBoxInteraction\r\tuses: RSTAnnounceable\r\tinstanceVariableNames: 'events draggingCanvas announcer baseBox selectedShapes startPosition shouldUseNegativeBox targetShapes'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-ElasticBox'",			"comment" : [				"Elastic box interaction creates an selection box for a group o elements",				"",				"this interaction works with an announcer. with this events `RSSelectionChangedEvent`, `RSSelectionEndEvent` and `RSSelectionEndEvent`."			],			"category" : "Roassal3-Interaction-ElasticBox"		},		"IcePackage" : {			"hash" : 6201088,			"definition" : "Object subclass: #IcePackage\r\tinstanceVariableNames: 'package repository isDirty'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Core'",			"comment" : [				"Can give information about a package that is saved in a repository, for example: ",				"- isLoaded if the package has been loaded into the image.",				"- isModified if the package has local changes to be commited",				"- incomingCommits information about commits in the repository that are newer than the version loaded into the image."			],			"category" : "Iceberg-Core"		},		"DelayMillisecondTickerSimulation" : {			"hash" : 931840,			"definition" : "DelayMillisecondTicker subclass: #DelayMillisecondTickerSimulation\r\tinstanceVariableNames: 'vmSimNow vmSimTheTimerSemaphore vmSimNextWakeupTick'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Delays'",			"comment" : [				"To facilitate unit tests without interferring with the live VM interface,",				"I simulate the VM code for the millisecond primitives."			],			"category" : "Kernel-Delays"		},		"MenuItemMorph class" : {			"hash" : 607232,			"definition" : "MenuItemMorph class\r\tinstanceVariableNames: ''",			"comment" : [				"I represent an item in a menu.",				"",				"",				"",				"Instance variables:",				"\tisEnabled \t<Boolean>\tTrue if the menu item can be executed.",				"\tsubMenu \t<MenuMorph | nil>\tThe submenu to activate automatically when the user mouses over the item.",				"\tisSelected \t<Boolean>\tTrue if the item is currently selected.",				"\ttarget \t\t<Object>\t\tThe target of the associated action.",				"\tselector \t\t<Symbol>\tThe associated action.",				"\targuments \t<Array>\t\tThe arguments for the associated action.",				"\ticon\t\t<Form | nil>\tAn optional icon form to be displayed to my left.",				""			],			"category" : "Morphic-Base-Menus"		},		"ZnMimeType class" : {			"hash" : 1316864,			"definition" : "ZnMimeType class\r\tinstanceVariableNames: ''",			"comment" : [				"I am ZnMimeType.",				"Mime types are an element used in describing resources, more specifically their format.",				"",				"Here are some examples MIME types:",				"",				"\ttext/plain",				"\ttext/html",				"\ttext/plain;charset=utf-8",				"\timage/png",				"\ttext/*",				" ",				"A mime type has a main/sub form with optional parameters. ",				"",				"For more information: http://en.wikipedia.org/wiki/MIME_type",				"I know whether I am binary or not and know my charset when applicable.",				"My class side offers access to some common constants.",				"Note that for text types we default to UTF-8 encoding.",				"",				"Examples:",				"",				"\tZnMimeType textPlain = 'text/plain;charset=utf-8' asZnMimeType.",				"\tZnMimeType textPlain charSet.",				"\tZnMimeType textHtml matches: ZnMimeType text.",				"\tZnMimeType default matches: ZnMimeType any.",				"\tZnMimeType imagePng isBinary.",				"\tZnMimeType forFilenameExtension: 'html'.",				"",				"I started life as a copy of WAMineType.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-Resource-Meta-Core"		},		"RadioButtonGroupPresenter" : {			"hash" : 920576,			"definition" : "DynamicComposablePresenter subclass: #RadioButtonGroupPresenter\r\tinstanceVariableNames: 'buttons canDeselectByClick currentActivated'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"I am a group for radio buttons.",				"See DynamicComposablePresenter",				"",				"self example",				"",				"You can also have a look at MrAndMrsRadioButton and RadioButtonGroupExample for more examples.",				"",				"I ensures that only one button is activated at the same time and I hold the button activated.",				"",				"I provide the following variables and their accessors",				"- buttons is the collection of the buttons I manage.",				"- currentActivated is the last activated button.",				"",				"I provide the following methods",				"- addRadioButton: to add a button in my collection and link it at others.",				"- default: to activate the button when I am built.",				"- linkRadioButton: to make the button deselected when another is selected.",				"",				"defaultOnce: is use to avoid a problem appearing with default: when it is include in other DynamicComposablePresenter but it should be replace by a fix.",				"",				"I use the following method for my internal work",				"- createWidgets assign each button of my collection in my super class collection that manage dynamical subwidgets.",				"- dynamicLayout refresh the layout using my super class collection.",				"- rebuildWidget trigger the steps for refresh the widget and the layout.",				"",				"todo",				"- canDeselectByClick"			],			"category" : "Spec-Core-Widgets"		},		"FFIExternalType" : {			"hash" : 494336,			"definition" : "Object subclass: #FFIExternalType\r\tinstanceVariableNames: 'pointerArity loader'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-Types'",			"comment" : [				"I'm an abstract class to implement FFI external types (types who will later be mapped to something understandable for a C library)"			],			"category" : "UnifiedFFI-Types"		},		"SpMorphicBoxLayoutTest" : {			"hash" : 2924288,			"definition" : "TestCase subclass: #SpMorphicBoxLayoutTest\r\tinstanceVariableNames: 'instance backend'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Morphic-Backend-Tests'",			"comment" : [				"This class contains tests"			],			"category" : "Spec2-Morphic-Backend-Tests"		},		"STONTestDomainObject" : {			"hash" : 4381952,			"definition" : "Object subclass: #STONTestDomainObject\r\tinstanceVariableNames: 'created modified integer float description color tags bytes boolean'\r\tclassVariableNames: ''\r\tpackage: 'STON-Tests-Support'",			"comment" : [				"STONTestDomainObject is used to support unit tests.",				"",				"Instance Variables",				"\tboolean:\t\t<Boolean>",				"\tbytes:\t\t\t<ByteArray>",				"\tcolor:\t\t\t<Symbol>",				"\tcreated:\t\t<DateAndTime>",				"\tdescription:\t<String>",				"\tfloat:\t\t\t<Float>",				"\tinteger:\t\t<Integer>",				"\tmodified:\t<DateAndTime>",				"\ttags:\t\t\t<Array of: Symbol>"			],			"category" : "STON-Tests-Support"		},		"ClyAllProblemMethodQuery" : {			"hash" : 5005056,			"definition" : "ClyMethodQuery subclass: #ClyAllProblemMethodQuery\r\tinstanceVariableNames: 'critiqueQuery'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemPlugins-Critic-Queries'",			"comment" : [				"I return methods from my scope which include critiques from my critiquesQuery parameter.",				"",				"To create my instance use following methods: ",				"",				"\tClyAllProblemMethods from: aScope withCritiquesFrom: aCritiqueQuery.",				"\tClyAllProblemMethods from: aScope withCritiquesFromGroup: crituqueGroupName.",				"\t",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcritiqueQuery:\t\t<ClyCritiqueQuery>"			],			"category" : "Calypso-SystemPlugins-Critic-Queries"		},		"SpDropListItem" : {			"hash" : 2180352,			"definition" : "Object subclass: #SpDropListItem\r\tinstanceVariableNames: 'model displayBlock icon action'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Support'",			"comment" : [				"A DropListItem is an item (wrapper) designed to fit into a DropList."			],			"category" : "Spec2-Core-Support"		},		"SpMorphicBackendForTest" : {			"hash" : 2916352,			"definition" : "SpAbstractBackendForTest subclass: #SpMorphicBackendForTest\r\tuses: SpTMorphicUIRedrawer\r\tinstanceVariableNames: 'app'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Backend-Tests-Base'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tapp:\t\t<Object>",				"\tuiWaitingSemaphore:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Backend-Tests-Base"		},		"ReflectivityCodeMorph" : {			"hash" : 3521792,			"definition" : "Morph subclass: #ReflectivityCodeMorph\r\tinstanceVariableNames: 'textModel compiledMethod'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Examples'",			"comment" : [				"I'm a morph that shows the source codes of a compiled method "			],			"category" : "Reflectivity-Examples"		},		"RSExpandingBoxes" : {			"hash" : 2265600,			"definition" : "RSObject subclass: #RSExpandingBoxes\r\tinstanceVariableNames: 'canvas color base border'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Examples-Experimental'",			"comment" : [				"This is a simple example suggested by Nicolas Anquetil"			],			"category" : "Roassal3-Examples-Experimental"		},		"ThumbnailMorph class" : {			"hash" : 1965056,			"definition" : "ThumbnailMorph class\r\tuses: TAbleToRotate classTrait\r\tinstanceVariableNames: ''",			"comment" : [				"A Morph that views another morph, its objectToView."			],			"category" : "Morphic-Base-Basic"		},		"RSVerticalLineLayout" : {			"hash" : 5755648,			"definition" : "RSAbstractLineLayout subclass: #RSVerticalLineLayout\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"A RTVerticalLineLayout locates all the elements vertically"			],			"category" : "Roassal3-Layouts-Core"		},		"FTExampleClassInfoTableDataSource" : {			"hash" : 738560,			"definition" : "FTSimpleDataSource subclass: #FTExampleClassInfoTableDataSource\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Examples'",			"comment" : [				"I'm an example of fast table, who will use a list of classes as data source elements."			],			"category" : "Morphic-Widgets-FastTable-Examples"		},		"RSNoWrapStrategy" : {			"hash" : 5666048,			"definition" : "RSAbstractWrapStrategy subclass: #RSNoWrapStrategy\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Builders-Text'",			"comment" : [				"This does not apply a wrap in the text"			],			"category" : "Roassal3-Builders-Text"		},		"TTLCache" : {			"hash" : 1608704,			"definition" : "LRUCache subclass: #TTLCache\r\tinstanceVariableNames: 'timeToLive'\r\tclassVariableNames: ''\r\tpackage: 'System-Caching'",			"comment" : [				"I am TTLCache. ",				"I am an LRUCache.",				"",				"I record a timestamp when I store a value for a key.",				"",				"Upon a cache hit, I check if the timestamp of the stored value does not exceed the allowed time to live duration - if so, the value has become stale and I will retrieve the value again.",				"",				"The default timeToLive is 1 hour.",				"",				"Note that eviction, making room in a full cache, still happens according to the LRU algorithm from my superclass - stale entries to not get evicted automatically.",				"",				"I can remove all my stale values in O(n), see #removeStaleValues.",				"",				"Implementation Notes",				"",				"I extend my superclass by storing TTLAssociations (which also hold a timestamp) instead of Associations in the DoubleLinkedList, lruList, ordered from least to most recently used.",				"",				"In case of a hit, there is now an additional check to see if the value has become stale (exceeded its time to live). If so, the value is computed again.",				"",				"Timestamps are implemented using Integer seconds (Time totalSeconds) for performance reasons."			],			"category" : "System-Caching"		},		"AthensTextRenderer" : {			"hash" : 1568768,			"definition" : "Object subclass: #AthensTextRenderer\r\tinstanceVariableNames: 'text font canvas glyphRenderer color advance maxAscent currentLine'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Text'",			"comment" : [				"This is a text renderer, which pipelining a text command(s), produced by `AthensTextComposer`",				"into a concrete calls to canvas.",				"",				"It is using a glyph renderer instance(s) to draw separate font glyphs on a surface in a most suitable/efficient manner for given Athens surface."			],			"category" : "Athens-Text"		},		"RSForceBasedLayout" : {			"hash" : 5765376,			"definition" : "RSLineDrivenLayout subclass: #RSForceBasedLayout\r\tinstanceVariableNames: 'iterations nodes initialLayout gravity friction theta strength length charge center alpha shouldUseProgressBar random quadtree autoRepulse'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"I am a layout that uses forces in each elements, I have create a light representation of one element.",				"For example:",				"-=-=-=-=-=-=-=-=-=",				"c := RSCanvas new.",				"c addAll: ((1 to: 100) collect: [:i | RSEllipse new size: 10; model: i]).",				"",				"eb := RSEdgeBuilder line.",				"eb canvas: c.",				"eb connectFrom: [ :v | v // 2 ].",				"",				"RSForceBasedLayout on: c nodes.",				"c",				"-=-=-=-=-=-=-=-=-="			],			"category" : "Roassal3-Layouts-Core"		},		"RandomBernoulli" : {			"hash" : 2321408,			"definition" : "Random subclass: #RandomBernoulli\r\tinstanceVariableNames: 'p'\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Random'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tp:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Containers-Essentials-Random"		},		"OSTouchSwipeDetector class" : {			"hash" : 4051712,			"definition" : "OSTouchSwipeDetector class\r\tinstanceVariableNames: ''",			"comment" : [				"I am the abstract class for all the Swipe gesture detectors"			],			"category" : "OSWindow-Core-Gestures"		},		"RSIdentityMatrix" : {			"hash" : 5739264,			"definition" : "RSObject subclass: #RSIdentityMatrix\r\tinstanceVariableNames: 'rows'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Util'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Layouts-Util"		},		"IceGitHubAPI" : {			"hash" : 6479104,			"definition" : "Object subclass: #IceGitHubAPI\r\tinstanceVariableNames: 'credentials isAnonymous acceptMediaType'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Plugin-GitHub-Model'",			"comment" : [				"I represent an access point to the GitHub API. ",				"I provide different high level abstractions to interact with GitHub, following the speciphications you can find here: https://developer.github.com/v3/"			],			"category" : "Iceberg-Plugin-GitHub-Model"		},		"ClySubstringPattern" : {			"hash" : 4864512,			"definition" : "ClyStringPattern subclass: #ClySubstringPattern\r\tinstanceVariableNames: 'isCaseSensitive'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-NavigationModel-Model'",			"comment" : [				"I represent string pattern using substring which tested strings are supposed to include.",				"",				"I can be case sensitive or not depending on my variable.",				"To create my instances you can use following messages:",				"\tClySubstringPattern with: 'expected substring' caseSensitive: true",				"By default my instances are not case sensitive.\t",				"\t",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tisCaseSensitive:\t\t<Boolean>"			],			"category" : "Calypso-NavigationModel-Model"		},		"ShSmalltalkGlobalsEnvironment" : {			"hash" : 819968,			"definition" : "ShGlobalsEnvironment subclass: #ShSmalltalkGlobalsEnvironment\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Shift-ClassBuilder'",			"comment" : [				"I represent the Smalltalk globals environment. ",				"I am used to generate the classes by the ShiftClassBuilder when it is using directly the Smalltalk environment."			],			"category" : "Shift-ClassBuilder"		},		"ReFileBlocksRule" : {			"hash" : 3947520,			"definition" : "ReNodeMatchRule subclass: #ReFileBlocksRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks assignment to a variable that is the first statement inside the value block that is also used in the unwind block. For example",				"",				"| inputStream  |",				"    [",				"    inputStream := self openStream. \"may fail !\"",				"    inputStream doSomeOperation. \"may fail !\"",				"    ] ensure: [ inputStream ifNotNil: [ inputStream close ]].",				"",				" if \"openStream\" fails, we don't need to ensure the stream is closed.",				"And otherwise, if we move the assignment outside of the block, we don't need",				"an \"ifNotNil\"-check for the ensure block if \"doSomeOperation\" fails.",				"This code can be changed to",				"",				"| inputStream  |",				"    inputStream := self openStream. \"may fail !\"",				"    [inputStream doSomeOperation. \"may fail !\"",				"    ] ensure: [ inputStream close ]."			],			"category" : "GeneralRules-Migrated"		},		"AthensStrokePaint" : {			"hash" : 3051776,			"definition" : "AthensPaint subclass: #AthensStrokePaint\r\tinstanceVariableNames: 'fillPaint width miterLimit'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Core-Paints'",			"comment" : [				"I representing a stroke paint object used by Athens.",				"My subclasses provide backend-specific implementation.",				"I am more serving to define the common protocols and",				"requirements for all backends (such as defaults).",				"",				"",				"IMPORTANT NOTE: a stroke paint object provides a protocol ",				"only for setting stroke properties, but not retrieving them back.",				"This is intentionally, because the way how these properties is",				"managed are highly backend-specific. ",				"",				"The stroke paint has following properties:",				" - fill paint. A paint to use for filling strokes.",				"\tCan be any athens basic paint, except from stroke one.",				"",				" - stroke width. Can be set using #width:",				"",				"\tDefault: if width is not set explicitly for stroke paint,",				"\t\tit is assumed to be equal to 1.0.",				"\t\t",				" - join style. ",				"\t\tCurrently there are 3 kinds of joins supported:",				"\t\t\tbevel",				"\t\t\tmiter",				"\t\t\tround",				"\t\tTo set join style for paint, use ",				"\t\t\t#joinBevel, #joinMiter or #joinRound methods.",				"",				"\tDefault: if join style is not explicitly set for stroke paint,",				"\t\tit will use bevel join style.",				"",				" - cap style",				"\t\tsupported: butt, round and square.",				"\t\tTo set cap style, use",				"\t\t\t#capButt, #capRound or #capSquare methods.",				"",				"\tDefault: if cap style is not explicitly set for stroke paint,",				"\t\tit will use butt cap style.",				"",				" - miter limit, set with #miterLimit: accessor.",				"\t(default and meaning of limit is not yet determined)",				"",				"Dashes: ",				"\tstroke can use dashing. ",				"\tDash is special kind of stroke which won't draw a continuous",				"\tstroke connecting path segments, but instead stroke with",				"\talternating fill-gap style , defined by provided input.",				"\t",				"\tProtocol:",				"\t",				"\tpaint ",				"\t\tdashes: dashPattern ",				"\t\toffset: anOffset.",				"\t\t",				"\tThe dash pattern is a simple ",				"\tcollection of alternating lengths, like: ",				"\t#(\"fill\" 50 \"gap\" 50) ",				"\t",				"\tin this example , first 50 length units of path",				"\twill be filled with stroke, and next 50 will be skipped,",				"\tforming a gap, then again filled and again skipped,",				"\tand so on until path ends.",				"\tThe dash pattern can contain as many length elements",				"\tas needed. Just remember that each odd element represents",				"\tlength to fill with stroke, and each even element, length to skip,",				"\twhile traversing along the path.",				"\t",				"\tThe offset controls the shift in length units, ",				"\trelative to path start.",				"\t",				"\tDefault: if dash is not explicitly set for stroke paint,",				"\t\tit will fill the path using continuous stroke (no gaps). "			],			"category" : "Athens-Core-Paints"		},		"SubscriptionRegistry" : {			"hash" : 828416,			"definition" : "Object subclass: #SubscriptionRegistry\r\tinstanceVariableNames: 'subscriptions monitor'\r\tclassVariableNames: ''\r\tpackage: 'Announcements-Core-Subscription'",			"comment" : [				"The subscription registry is a threadsafe storage for the subscriptions to an Announcer.",				"",				"In Pharo, subscriptionsFor: protocol is not implemented.",				"This is because Announcer does not provide public access to its registery for encapsulation reasons.",				"(We do not want access to the announcer from action blocks to break encapsulation to other subscribers)"			],			"category" : "Announcements-Core-Subscription"		},		"EmbeddedFreeTypeFontInstaller" : {			"hash" : 727808,			"definition" : "Object subclass: #EmbeddedFreeTypeFontInstaller\r\tinstanceVariableNames: 'embeddedFileInfoCache provider'\r\tclassVariableNames: ''\r\tpackage: 'EmbeddedFreeType-Installation'",			"comment" : [				"An EmbeddedFreeTypeFontInstaller installs embedded free type fonts in a provider.",				"It registers itself as a font installer to FreeTypeFontProvider. And when someone asks to update fonts from system, EmbeddedFreeTypeFontInstaller installs corresponding fonts.",				"",				"Instance Variables",				"\tembeddedFileInfoCache:\t\t<Dictionary>",				"\tprovider:\t\t<FreeTypeFontProvider>",				"",				"embeddedFileInfoCache",				"\t- internal cache",				"",				"provider",				"\t- a provider which asks for installing the embedded fonts."			],			"category" : "EmbeddedFreeType-Installation"		},		"SpAbstractSelectionMode" : {			"hash" : 2165504,			"definition" : "Object subclass: #SpAbstractSelectionMode\r\tuses: TObservable\r\tinstanceVariableNames: 'widget'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Widgets-Table'",			"comment" : [				"A base for selection modes. ",				"`SpAbstractSelectionMode` children will define selection styles (single, multiple) and realise the different selecting logic. "			],			"category" : "Spec2-Core-Widgets-Table"		},		"RBPragmaNode" : {			"hash" : 1159936,			"definition" : "RBProgramNode subclass: #RBPragmaNode\r\tinstanceVariableNames: 'selector keywordsPositions arguments left right'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Nodes'",			"comment" : [				"RBPragmaNode is an AST node that represents a method pragma.",				"",				"We have a fixed set of allowed \"primitive\" pragma keywords. Every method implemented as a primitive call uses one of this pragmas.",				"And as we need some special treatment for methods implemented as primitive, the RBPragmaNode adds the #isPrimitive testing method.",				"",				"Instance Variables:",				"\targuments <SequenceableCollection of: RBLiteralNode> our argument nodes",				"\tleft <Integer | nil> position of <",				"\tright <Integer | nil> position of >",				"\tselector\t<Symbol>\tthe selector we're sending",				"\tkeywordsPositions\t<IntegerArray | nil>\tthe positions of the selector keywords"			],			"category" : "AST-Core-Nodes"		},		"TKTFutureExecution" : {			"hash" : 421632,			"definition" : "TKTTaskExecution subclass: #TKTFutureExecution\r\tinstanceVariableNames: 'future'\r\tclassVariableNames: ''\r\tpackage: 'TaskIt-Futures'",			"comment" : [				"I represent a task execution with a result: I have an associated future where I will deploy my result, as either a success or a failure."			],			"category" : "TaskIt-Futures"		},		"SpecDialogWindow" : {			"hash" : 1033728,			"definition" : "DialogWindowMorph subclass: #SpecDialogWindow\r\tinstanceVariableNames: 'specWidget toolbar'\r\tclassVariableNames: ''\r\tpackage: 'Spec-MorphicAdapters-Support'",			"comment" : [				"A SpecDialogWindow is a window made for embedding Spec models into dialog windows"			],			"category" : "Spec-MorphicAdapters-Support"		},		"RSOffsetAttachPoint" : {			"hash" : 5682944,			"definition" : "RSAttachPoint subclass: #RSOffsetAttachPoint\r\tinstanceVariableNames: 'startOffset endOffset'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-AttachPoint'",			"comment" : [				"I can define offsets in each side of the attach point"			],			"category" : "Roassal3-Shapes-AttachPoint"		},		"TestExecutionEnvironment" : {			"hash" : 366336,			"definition" : "ExecutionEnvironment subclass: #TestExecutionEnvironment\r\tinstanceVariableNames: 'watchDogProcess watchDogSemaphore testCase maxTimeForTest testCompleted services mainTestProcess'\r\tclassVariableNames: ''\r\tpackage: 'SUnit-Core-Kernel'",			"comment" : [				"I am a special execution environment to manage the execution of tests.\t",				"I am installed when test is running (or test suite) by",				"",				"\tCurrentExecutionEnvironment runTestCase: aTestCase",				"\t\t",				"My current instance for tests can be accessed with handy method directly from the test case: ",				"",				"\tself executionEnvironment ",				"\t",				"It simply returns the value of CurrentExecutionEnvironment.",				"\t",				"Some tests requires completely clean and simplest environment. To disable me override #runCaseManaged on your test class: ",				"",				"\trunCaseManaged ",				"\t\t^DefaultExecutionEnvironment beActiveDuring: [ self runCase]",				"",				"1) Test watchdog",				"",				"I implement a watchdog to ensure that tests complete in finite time and never hanged.",				"I give them 10 seconds by default which can be overriden by test class using method #defaultTimeLimit.",				"Or it can be specified directly in the test method:",				"\tself timeLimit: 10 seconds",				"It can be changed at any time during the test.",				"",				"To implement this logic I maintain special watchdog process which controls the execution time of tests. It is a single process for overall test suite.",				"",				"2) Test services ",				"",				"In addition I provide an extandable service infrastructure to monitor the test execution.",				"During the test I track all signaled exceptions from the test process and all forked processes.",				"I notify registered services about these events:",				"",				"- #handleException:, it is executed for every exception signaled from the test ",				"- #handleCompletedTest, it is executed when test is completes (successfully or due to the error)",				"- #handleNewProcess:, it is executed for every process created during the test",				"- #cleanUpAfterTest:, it is executed as final action when test is done and the environment needs to be prepared for the next test run.",				"",				"My #services are subclasses of TestExecutionService (see its comment for details).",				"\t",				"I automatically register all service classes enabled by default (#registerDefaultServices). But users can enable required services manually for given tests:",				"",				"\tself executionEnvironment enableService: TestServiceExample",				"",				"Or with configuration block: ",				"",				"\tself executionEnvironment enableService: TestServiceExample using: [:service | ]",				"\t",				"I lookup given service class in my registered services and use the found one if it exists. Otherwise I create and register new service instance with enabled state. \t",				"At the end of test I disable services which were registered manually registered and which are disabled by default. So no other tests are affected by them.",				"\t",				"I provide handy method to access well known service ProcessMonitorTestService:",				"",				"\tself executionEnvironment processMonitor ",				"\t",				"Or simply:",				"",				"\tself executionProcessMonitor",				"\t\t ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tservices:\t\t<OrderedCollection<TestExecutionService>>",				"\tmainTestProcess:\t\t<Process>",				"\tmaxTimeForTest:\t\t<Duration>",				"\ttestCase:\t\t<TestCase>",				"\twatchDogProcess:\t\t<Process>",				"\twatchDogSemaphore:\t\t<Semaphore>",				"\ttestCompleted:\t\t<Boolean>"			],			"category" : "SUnit-Core-Kernel"		},		"RSNormalizer" : {			"hash" : 5690624,			"definition" : "RSObject subclass: #RSNormalizer\r\tinstanceVariableNames: 'scale executeBlock shapes minAndMaxBlock'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Util'",			"comment" : [				"<keyClass>",				"A normalizer is made to assign a color for a particual visual cue (e.g., size, color, font size). The normalization is performed using the model of the considered shapes.",				"",				"Scales can be set, useful for transformation (e.g., logarithmic).",				"",				"*Responsibility*: normalize a ",				"",				"*Collaborators*: interact with `RSShape` and the shape's model",				"",				"*Variables*:",				"- `scale`: refers to `NSScale` ",				"- `executeBlock`: one-arg block useful to compute a metric or property from the shape model. The block takes a shape model as argument",				"- `shapes`: shapes that are normalized",				" ",				"*Example*:",				"```Smalltalk",				"c := RSCanvas new.",				"shapes := (1 to: 150) collect: [ :n | RSEllipse new size: 20; model: n ] as: RSGroup.",				"",				"c addAll: shapes.",				"RSGridLayout on: shapes.",				"",				"RSNormalizer color",				"\tshapes: shapes;",				"\tscale: NSScale category20b;",				"\tnormalize: #yourself.",				"",				"c @ RSCanvasController.",				"c",				"",				"```",				"",				"```Smalltalk",				"classes := Collection withAllSubclasses.",				"c := RSCanvas new.",				"",				"shapes := classes collect: [ :cls |",				"\tb := RSBox new.",				"\tb model: cls.",				"\tb size: cls numberOfMethods.",				"\tb @ RSDraggable @ RSPopup.",				"\tb ].",				"",				"RSNormalizer color",				"\tshapes: shapes;",				"\tnormalize: #numberOfMethods.",				"",				"c addAll: shapes.",				"RSFlowLayout on: shapes.",				"",				"c @ RSCanvasController ",				"```",				"",				"",				"```Smalltalk",				"canvas := RSCanvas new.",				"classes := Collection withAllSubclasses.",				"shapes := classes collect: [ :cls |",				"    RSEllipse new",				"        size: 10;",				"        model: cls;",				"        draggable;",				"        yourself ].",				"canvas addAll: shapes.",				"",				"RSNormalizer size",				"    from: 10;",				"    to: 100;",				"    shapes: shapes;",				"    normalize: #numberOfMethods.",				"RSNormalizer color",				"    from: Color green;",				"    to: Color red;",				"    shapes: shapes;",				"    normalize: #numberOfMethods.",				"",				"RSEdgeBuilder orthoVertical",				"    withVerticalAttachPoint;",				"    markerStart: (RSShapeFactory arrow size: 5; color: Color blue);",				"    canvas: canvas;",				"    shapes: shapes;",				"    connectFrom: #superclass.",				"    ",				"RSTreeLayout on: shapes.",				"canvas @ RSCanvasController.",				"canvas",				"```",				"",				"```Smalltalk",				"c := RSCanvas new.",				"",				"(30 to: 100 by: 5) do: [ :nb |",				"\tc add: (RSEllipse new size: nb; model: nb) ].",				"",				"RSNormalizer size",				"\tshapes: c shapes;",				"\tnormalize: #yourself.",				"",				"RSNormalizer color",				"\tshapes: c shapes;",				"\tnormalize: #yourself.",				"RSFlowLayout on: c shapes.",				"c shapes @ RSPopup.",				"c @ RSCanvasController",				"```"			],			"category" : "Roassal3-Shapes-Util"		},		"FadingMorph" : {			"hash" : 1915136,			"definition" : "BorderedMorph subclass: #FadingMorph\r\tinstanceVariableNames: 'alpha fadingFactor resetable'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Basic'",			"comment" : [				"FadingMorph is a morph that fades out of existence after a certain time. The implementation uses a stepping event which reduces the visibility of the morph and its submorphs until they are no longer visible, when this happens the morph will delete itself.",				"",				"Variables:",				"<alpha> holds the current alpha value. [ Float ]",				"<fadingFactor> a value of how much the alpha shall be reduced per step message send. [ Float ]",				"<resetable> boolean value used by #handleMouseMove: to descide whether or not to reset the alpha on mouse over.",				"",				"The morph has a default layout, color, and borderstyle which can be changed after instance creation the same way other morphs can.",				"",				"The morph itself updates its translucency per 100ms. One can change the variable fadingFactor to reduce or increase the time a FadingMorph is present in the world.",				"",				"If the mouse is moved over a FadingMorph present in the world, it will reset the alpha, which means that the fading will start from the begining again, this can be turned off by sending #beUnResetable. "			],			"category" : "Morphic-Base-Basic"		},		"ReMissingMethodCritique" : {			"hash" : 1710848,			"definition" : "ReAbstractCritique subclass: #ReMissingMethodCritique\r\tinstanceVariableNames: 'selector class source'\r\tclassVariableNames: ''\r\tpackage: 'Renraku-Critiques'",			"comment" : [				"This kind of critiques occur when a method is missing. The critique knows what is the selector of the missing method, and it's perspective class. The critique provides a change which is a creation of the missing method. Also a sourcecode of a method can be specified. For now there are two shortcuts for the source code, that set it to either subclassResponsability or shouldBeImplemented "			],			"category" : "Renraku-Critiques"		},		"MalTarjanNode" : {			"hash" : 1772288,			"definition" : "MalNodeWithNext subclass: #MalTarjanNode\r\tinstanceVariableNames: 'index lowlink inStack cycleNodes'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"Node type used by the MalTarjan algorithm.",				"Edges are not representated as full objects. We just keep a list of next nodes (following described directed edges)."			],			"category" : "Moose-Algos-Graph"		},		"Microdown" : {			"hash" : 6564096,			"definition" : "Object subclass: #Microdown\r\tinstanceVariableNames: 'parser resolverRoot file'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Core'",			"comment" : [				"I'm a kind of facade to steer Microdown services."			],			"category" : "Microdown-Core"		},		"PSMCMergeMorph" : {			"hash" : 3343872,			"definition" : "ComposableMorph subclass: #PSMCMergeMorph\r\tinstanceVariableNames: 'patchMorph codeMorph merged'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Diff-Morphs'",			"comment" : [				"A PSMCMergeMorph is a graphical tool to navigate changes and select changes in case of conflicts."			],			"category" : "Tool-Diff-Morphs"		},		"SpSelectDialog" : {			"hash" : 2337024,			"definition" : "SpDialogPresenter subclass: #SpSelectDialog\r\tinstanceVariableNames: 'label title initialExtent acceptLabel cancelLabel list'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Dialogs'",			"comment" : [				"A dialog that allow the users to select from a list of `items`"			],			"category" : "Spec2-Dialogs"		},		"PharoLightTheme" : {			"hash" : 698112,			"definition" : "UITheme subclass: #PharoLightTheme\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Themes'",			"comment" : [				"The theme is developed in the context of the Glamour project, and its goal is to create a look that:",				"- does not look like a specific operating system. In particular, the icons should be operating system agnostic, because, for example, people in Windows are confused by the red, yellow, green buttons of apple.",				"- uses a limited amount of colors and effects.",				"- is fast.",				"",				"self defaultSettings: nil.",				"self beCurrent. ",				"",				"Is adopted as the theme for Pharo3, but it was renamed to avoid collisions with the glamour team,"			],			"category" : "Polymorph-Widgets-Themes"		},		"RGTraitExclusion" : {			"hash" : 5267968,			"definition" : "RGTraitTransformation subclass: #RGTraitExclusion\r\tinstanceVariableNames: 'exclusions'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\texclusions:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"HashTableSizes" : {			"hash" : 800000,			"definition" : "Object subclass: #HashTableSizes\r\tinstanceVariableNames: 'candidate goodPrimes primesToAvoid valuesNotToDivide'\r\tclassVariableNames: ''\r\tpackage: 'Collections-Unordered-Utilities'",			"comment" : [				"HashTableSizes is a helper class, used by hashedCollections to determine sizes for hash tables.",				"",				"Public protocol is all class-side:",				"",				"- `#goodSizeAtLeast:` anInteger  answers a \"good\" integer greater than or equal to the given integer.",				"",				"An integer is not \"good\" as a hash table size if it is any of:",				"* Not prime",				"* Divides 256**k +- a, for small k and a",				"* Close to a power of two",				"* Close to dividing the hashMultiply constant",				"",				"See Andres Valloud's hashing book, and Knuth TAOCP vol. 3.",				"",				"This class caches a primary table of selected good primes within the positive SmallInteger range. When this table must be rebuilt, it uses an instance to compute the table. Primes are selected to keep the table fairly small, with approximately five entries per power of two. It is ordered, and is binary searched to find the closest good size >= the requested size.",				"",				"This class caches a second table built from the first to support faster direct lookup of primes for requested sizes in the range of 0 to \"self maxSmallSize\"."			],			"category" : "Collections-Unordered-Utilities"		},		"OSWindowAthensRenderer" : {			"hash" : 4059136,			"definition" : "OSWindowRenderer subclass: #OSWindowAthensRenderer\r\tinstanceVariableNames: 'athensSurface session'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Renderer'",			"comment" : [				"I am an abstract Athens renderer. "			],			"category" : "OSWindow-Core-Renderer"		},		"ZnChunkedReadStream" : {			"hash" : 1402624,			"definition" : "Stream subclass: #ZnChunkedReadStream\r\tinstanceVariableNames: 'stream chunk position limit atEnd totalSize chunkCount extraHeaders'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Streaming'",			"comment" : [				"I am ZnChunkedReadStream, implementing HTTP 1.1 chunked transfer encoding on a wrapped streams.",				"",				"Clients should read me until I am atEnd.",				"",				"After I am completely read, I can tell you my totalSize and optional extraHeaders.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Streaming"		},		"SHRBTextStyler class" : {			"hash" : 1685248,			"definition" : "SHRBTextStyler class\r\tuses: TRBProgramNodeVisitor classTrait\r\tinstanceVariableNames: 'styleTable textAttributesByPixelHeight formatIncompleteIdentifiers'",			"comment" : [				"I'm the one who visits node to coloring the code"			],			"category" : "Shout-Styling"		},		"ZdcSecureSocketStream" : {			"hash" : 1429760,			"definition" : "ZdcOptimizedSocketStream subclass: #ZdcSecureSocketStream\r\tinstanceVariableNames: 'sslSession in out connecting'\r\tclassVariableNames: ''\r\tpackage: 'Zodiac-Core'",			"comment" : [				"I am ZdcSecureSocketStream, a binary read/write stream for SSL communication.",				"",				"I am a ZdcOptimizedSocketStream.",				"",				"When I am used as a client, call #connect on me before using me as a normal stream.",				"",				"When I am used as a server, call #accept on me before using me as a normal stream.",				"",				"Currently, certificate management is ignored."			],			"category" : "Zodiac-Core"		},		"IceTipAbstractCredentialsModel" : {			"hash" : 6301440,			"definition" : "IceTipDialog subclass: #IceTipAbstractCredentialsModel\r\tinstanceVariableNames: 'storeCheckbox credentialStore accepted tool credentials askingHostname'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-Credentials'",			"comment" : [				"I implement the basic behavior of all the dialogs ",				"to ask / add / edit credentials.",				"",				"There are subclasses to each of the actions and the types of keys."			],			"category" : "Iceberg-TipUI-Credentials"		},		"RSPieTitleInteraction" : {			"hash" : 5790208,			"definition" : "RSInteraction subclass: #RSPieTitleInteraction\r\tinstanceVariableNames: 'labelBuilder labelText'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Pie-Interactions'",			"comment" : [				"I can add a basic title in a pie"			],			"category" : "Roassal3-Pie-Interactions"		},		"ClyTextEditingMode" : {			"hash" : 5114112,			"definition" : "RubSmalltalkCodeMode subclass: #ClyTextEditingMode\r\tinstanceVariableNames: 'isForScripting browserTool'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-TextEditors'",			"comment" : [				"I am used to override standard text editor operations in Calypso way.",				"Actual logic is in ClyTextEditor. I am another helper class which allows hook into the text morph.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbrowserTool:\t\t<ClyTextEditorTool>",				"\tisForScripting:\t\t<Boolean>"			],			"category" : "Calypso-Browser-TextEditors"		},		"PharoCommonTools" : {			"hash" : 1628928,			"definition" : "ToolRegistry subclass: #PharoCommonTools\r\tinstanceVariableNames: 'recentTools'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Registry'",			"comment" : [				"A PharoCommonTools is a ToolRegistry that knows about common tools that may be replaced by other packages. It manages a list of the recently registered tools and provides settings for reregistering to a former registered tool."			],			"category" : "Tool-Registry"		},		"RPackageTag" : {			"hash" : 1103616,			"definition" : "Object subclass: #RPackageTag\r\tinstanceVariableNames: 'package name classNames'\r\tclassVariableNames: ''\r\tpackage: 'RPackage-Core-Base'",			"comment" : [				"I'm a class tag for an RPackage. ",				"Class tags can be any kind of metadata the user needs, but they are for now equivalent to class categories. "			],			"category" : "RPackage-Core-Base"		},		"OmDeferrer class" : {			"hash" : 4170752,			"definition" : "OmDeferrer class\r\tinstanceVariableNames: ''",			"comment" : [				"I schedule and postpone a message send until the specified duration passed."			],			"category" : "Ombu-Common"		},		"VariableBreakpointMockSubclass" : {			"hash" : 3532288,			"definition" : "VariableBreakpointMockClass subclass: #VariableBreakpointMockSubclass\r\tinstanceVariableNames: 'v2'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Tests-Data'",			"comment" : [				"I have instvar accesses and I have a super class with variables that I access"			],			"category" : "Reflectivity-Tests-Data"		},		"ReMinMaxRule" : {			"hash" : 3938304,			"definition" : "ReNodeRewriteRule subclass: #ReMinMaxRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"The use of the messages #min: and #max: improves code readability and avoids heavily nested conditionals.",				"",				"For example ",				"",				"[[[ ",				"\ta < b ifTrue: [a] ifFalse: [b]",				"]]]\t\t\t",				"",				"is transformed into ",				"",				"[[[  ",				"a min: b",				"]]]",				"\t\t\t",				"\t\t"			],			"category" : "GeneralRules-Migrated"		},		"ClyDataSource" : {			"hash" : 5087488,			"definition" : "FTDataSource subclass: #ClyDataSource\r\tinstanceVariableNames: 'query itemCursor depth parentItem lastFilteredDataSource queryView dirty'\r\tclassVariableNames: 'UpdateScheduler'\r\tpackage: 'Calypso-Browser-DataSource'",			"comment" : [				"I am a root of fast table data source classes which adopt Calypso query result to FastTable interface.",				"",				"My subclasses represent concrete kind of underlying tree structure: all items can be initialy expanded or initialy collapsed.",				"To create my instances use following expression:",				"\tdataSource := ClyCollapsedDataSource on: aQuery.",				"It just creates instance of data source without executing given query.",				"Query is opened by ClyQueryView when you pass data source to it: ",				"\tqueryView dataSource: aDataSource ",				"It ask data source to open for itself:",				"\tdataSource openOn: queryView",				"It executes the query and retrieves cursor to access result items in optimized way.",				"Also it subscribes on result changes. So the query view is updated when result is changed.",				"When data source is not needed anymore it should be closed:",				"\tdataSource close",				"",				"I represent actual elements of fast table by ClyDataSourceItem.",				"\tdataSource elementAt: 1 \"=>aDataSourceItem\"  ",				"Management of children is implemented by my subclasses. According to type of tree structure they implement following methods: ",				"- numberOfRows",				"- elementAt: rowIndex",				"- globalPositionOf: childDataSourceItem",				"- countChildrenOf: aDataSourceItem",				"- isItemHasChildren: aDataSourceItem",				"- definesChildren",				"- collapse: aDataSourceItem",				"- expand: aDataSourceItem",				"- isExpanded: aDataSourceItem",				"- updateExpandingItems",				"Children are represented by data sources too. My parentItem and depth variables point to the position in full tree.",				"You can ask global position in the tree using: ",				"\tdataSource globalPositionOf: childDataSourceItem",				"It should return global row index in the table of given children item.",				"",				"I implement query interface to find items",				"- findItemsWhere: conditionBlock ",				"- findItemsWith: actualObjects ",				"- findItemsSimilarTo: dataSourceItems",				"",				"My instances are subscribed on ClyEnvironmentChanged event which happen when underlying query result is changed.",				"In case of the event I update my children structure and refresh table:",				"- itemsChanged",				"Update is performed in special logic to prevent multiple updates during complex system changes.",				"First I check if I am already dirty. In that case I do nothing.",				"Otherwise I mark myself as dirty and defer actual update using UpdateScheduler which performs update in low priority process when there is a time. So if complex system change is initiated from UI operation (which is common scenario) I will be updated only when full operation will be finished. And it will be always single update independently how many changes operation produces with the system. ",				"For details look at ClyDataSourceUpdateScheduler comments.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tquery:\t\t<ClyQuery>",				"\tqueryView:\t\t<ClyQueryView>",				"\titemCursor:\t\t<ClyBrowserQueryCursor>",				"\tparentItem:\t\t<ClyDataSourceItem>",				"\tdepth:\t\t<Integer>",				"\tdirty: <Boolean>",				"\tlastFilteredDataSource: <ClyDataSource>"			],			"category" : "Calypso-Browser-DataSource"		},		"ReIsNilAndConditionalRule" : {			"hash" : 3937280,			"definition" : "ReNodeRewriteRule subclass: #ReIsNilAndConditionalRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Replaces isNil ifTrue , isNil ifFalse and isNil ifTrue:ifFalse by ifNil: , ifNotNil and ifNil:ifNotNil: to make the code more readable. Helps to avoid unnecesary temporal variables."			],			"category" : "GeneralRules-Migrated"		},		"RBSmalllintChecker" : {			"hash" : 1697536,			"definition" : "Object subclass: #RBSmalllintChecker\r\tinstanceVariableNames: 'rule environment context methodBlock'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Critics'",			"comment" : [				"I apply a lint rule to all classes and methods in a given environment.",				"",				"My main API is ",				"",				"- ==run== which resets and runs the rules."			],			"category" : "Refactoring-Critics"		},		"RBReplaceRule" : {			"hash" : 1153792,			"definition" : "RBParseTreeRule subclass: #RBReplaceRule\r\tinstanceVariableNames: 'verificationBlock'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Matching'",			"comment" : [				"RBReplaceRule is the abstract superclass of all of the transforming rules. The rules change the source code by replacing the node that matches the rule. Subclasses implement different strategies for this replacement.",				"",				"Subclasses must implement the following messages:",				"\tmatching",				"\t\tfoundMatchFor:",				"",				"Instance Variables:",				"\tverificationBlock\t<BlockClosure>\tIs evaluated with the matching node. This allows for further verification of a match beyond simple tree matching.",				""			],			"category" : "AST-Core-Matching"		},		"Duration" : {			"hash" : 830464,			"definition" : "Magnitude subclass: #Duration\r\tinstanceVariableNames: 'nanos seconds'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'ChronologyConstants'\r\tpackage: 'Kernel-Chronology'",			"comment" : [				"I represent a duration of time. I have nanosecond precision"			],			"category" : "Kernel-Chronology"		},		"SpDemoFormModel" : {			"hash" : 2446080,			"definition" : "Object subclass: #SpDemoFormModel\r\tinstanceVariableNames: 'name surname number1 number2 scale password rememberMe date gender selectedItems'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Examples-Demo-Forms'",			"comment" : [				"Simple structure-like model for the form demo"			],			"category" : "Spec2-Examples-Demo-Forms"		},		"ReImplementedNotSentRule class" : {			"hash" : 3965696,			"definition" : "ReImplementedNotSentRule class\r\tinstanceVariableNames: 'allMessages'",			"comment" : [				"This smell arises when a method is implemented but never sent. If a method is not sent, it can be removed. This rule pays attention not to identify as unsent methods, methods with pragmas and test methods since they are likely to be sent through reflection.",				"\tNow if your code is used and extended by others better use a deprecation mechanism. To define a deprecate method follow the pattern: ",				"\t",				"\tfoo",				"\t\tself deprecated: ''Use bar instead ''. ",				"\t\t^ self bar",				"\t\t ",				"NOTE: the rule updates its data with messages send in new methods, but does not remove messages till the next image startup. The reason is that it would be to slow to re-calculate the data at each method removal.",				"",				"It can be forced to update by executing:",				"",				"\tReImplementedNotSentRule reset"			],			"category" : "GeneralRules-Migrated"		},		"ReGuardingClauseRule" : {			"hash" : 1724672,			"definition" : "ReNodeMatchRule subclass: #ReGuardingClauseRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Renraku-Rules-Rewrite'",			"comment" : [				"Checks for ifTrue: or ifFalse: conditions at end of methods that have two or more statements inside their blocks. Such code might better represent the true meaning of the code if they returned self instead."			],			"category" : "Renraku-Rules-Rewrite"		},		"MalCseEdge" : {			"hash" : 1765632,			"definition" : "MalDijkstraEdge subclass: #MalCseEdge\r\tinstanceVariableNames: 'cseVisited'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcseVisited:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Moose-Algos-Graph"		},		"MCDictionaryRepository" : {			"hash" : 288000,			"definition" : "MCRepository subclass: #MCDictionaryRepository\r\tinstanceVariableNames: 'description dict'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Repositories'",			"comment" : [				"A dictionary repository (in nemory)"			],			"category" : "Monticello-Repositories"		},		"ZnCookie" : {			"hash" : 1407232,			"definition" : "Object subclass: #ZnCookie\r\tinstanceVariableNames: 'attributes'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Support'",			"comment" : [				"I represent an HTTP Cookie, a small piece of data sent by an HTTP web server to an HTTP user-agent client and by the client to the same server afterwards, to remember stateful information across indepedent request/responses.",				"",				"References",				"",				"https://en.wikipedia.org/wiki/HTTP_cookie",				"https://tools.ietf.org/html/rfc6265",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Support"		},		"FileCompilerRequestor" : {			"hash" : 1265664,			"definition" : "Object subclass: #FileCompilerRequestor\r\tinstanceVariableNames: 'contents fileReference interactive'\r\tclassVariableNames: ''\r\tpackage: 'CodeImport-Utilities'",			"comment" : [				"I am an Object used to interact with the OpalCompiler.",				"I keep a reference to the original input so that error messages can be properly analyzed later-on."			],			"category" : "CodeImport-Utilities"		},		"MergeDiffMorph" : {			"hash" : 3343360,			"definition" : "DiffMorph subclass: #MergeDiffMorph\r\tinstanceVariableNames: 'allowJoinClicks'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Diff-Morphs'",			"comment" : [				"A morph to display merge differences and allow to merge them",				"with clickable icons on the spitter"			],			"category" : "Tool-Diff-Morphs"		},		"PolygonMorph" : {			"hash" : 1957120,			"definition" : "BorderedMorph subclass: #PolygonMorph\r\tuses: TAbleToRotate\r\tinstanceVariableNames: 'vertices closed filledForm arrows arrowForms smoothCurve curveState borderDashSpec handles borderForm'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Basic'",			"comment" : [				"This class implements a morph which can behave as four different objects depending on the the following two facts:",				"- is it OPEN or CLOSED?",				"- is it SEGMENTED or SMOOTHED.",				"",				"1. The OPEN and SEGMENTED variant looks like polyline.",				"",				"2. The OPEN and SMOOTHED variant looks like spline (kind of curve)",				"",				"3. The CLOSED and SEGMENTED variant looks like polygon. This is actually what you get when you do",				"\tPolygonMorph new openInWorld",				"You get a triangle. See below how to manipulate these objects...",				"",				"4. The CLOSED and SMOOTHED variant looks like blob (???)",				"",				"Prototypes of this morph can also be found in \"Object Catalog\". Several (different variants) of this object are among \"Basic\" morphs.",				"",				"Explore the assiciated morph-menu. It enables you",				"- to toggle showing of \"handles\". They make it possible to",				"\t- reposition already existing vertices (by moving yellow handles)",				"\t- create new vertices (by moving green handles)",				"\t- delete already existing vertices (by dragging and dropping one yellow handle closely",				"\t  nearby the adjacent yellow handle",				"  Handles can be made visible/hidden by shift+leftclicking the morph. This way it is possible",				"  to quickly show handles, adjust vertices and then again hide handles.",				"- making closed polygon open, i.e. converting it to a curve (and vice versa)",				"- toggle smoothed/segmented line/outline",				"- set up custom dashing (for line, curves or borders of closed polygons",				"- set up custom arrow-heads (for lines resp. curves)",				"",				"------------------------------------------------------------------------------------------",				"Implementation notes:",				"",				"This class combines the old Polygon and Curve classes.",				"",				"The 1-bit fillForm to make display and containment tests reasonably fast.  However, this functionality is in the process of being supplanted by balloon capabilities, which should eventually provide anti-aliasing as well.",				"",				"wiz 7/18/2004 21:26",				"s have made some changes to this class to",				"",				"1) correct some bugs associated with one vertex polygons.",				"",				"2) prepare for some enhancements with new curves.",				"",				"3) add shaping items to menu."			],			"category" : "Morphic-Base-Basic"		},		"ClapCompositeMatch" : {			"hash" : 395008,			"definition" : "ClapExplicit subclass: #ClapCompositeMatch\r\tinstanceVariableNames: 'children'\r\tclassVariableNames: ''\r\tpackage: 'Clap-Core-Activation'",			"comment" : [				"I am a match for a composite parameter specification, and thus cover a (possibly empty) range of words in the arguments sequence.",				"",				"I provide methods for querying and accessing the matches of my specification's children parameters."			],			"category" : "Clap-Core-Activation"		},		"FFICallout" : {			"hash" : 489216,			"definition" : "Object subclass: #FFICallout\r\tinstanceVariableNames: 'fnSpec options requestor methodArgs receiver method stringEncodingStrategy'\r\tclassVariableNames: 'TypeAliases'\r\tpackage: 'UnifiedFFI-Callouts'",			"comment" : [				"I'm implement a callout mechanism to be used with nb calls formatting.",				"",				"Callout arguments can be either:",				"- an integer constant, boolean or nil",				"- a type name (string or symbol)",				"- a class name",				"- a class variable",				"- any other object, which responds to #asExternalTypeOn:",				"",				"Options: ",				"Options may change the execution/compilation of ffi calls. ",				"Not many are predefined, here a small explanation of them: ",				"",				"optIndirectCall \t\tThis will perform an \"indirect function call\" as explained here: https://en.wikipedia.org/wiki/Function_pointer"			],			"category" : "UnifiedFFI-Callouts"		},		"PNGReadWriter class" : {			"hash" : 769536,			"definition" : "PNGReadWriter class\r\tinstanceVariableNames: ''",			"comment" : [				"I am PNGReadWriter.",				"I am a concrete subclass of ImageReadWriter.",				"",				"I read and write the  Portable Network Graphics (PNG) image format.",				"",				"  https://en.wikipedia.org/wiki/Portable_Network_Graphics",				"",				"Submitted by Duane Maxwell"			],			"category" : "Graphics-Files"		},		"RSFlowCanvas" : {			"hash" : 2278912,			"definition" : "Object subclass: #RSFlowCanvas\r\tinstanceVariableNames: 'breadcrumbs breadcrumbsLabels canvas mapping breadcrumbsLabel'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Mondrian-Flow'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbreadcrumbs:\t\t<Object>",				"\tbreadcrumbsLabel:\t\t<Object>",				"\tbreadcrumbsLabels:\t\t<Object>",				"\tcanvas:\t\t<Object>",				"\tmapping:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Roassal3-Mondrian-Flow"		},		"SystemAnnouncement" : {			"hash" : 880640,			"definition" : "Announcement subclass: #SystemAnnouncement\r\tinstanceVariableNames: 'timeStamp properties'\r\tclassVariableNames: ''\r\tpackage: 'System-Announcements-System-Base'",			"comment" : [				"The root announcement for the events coming from the Pharo system.",				"",				"Currently, it wraps the event that comes from the SystemChangeNotifier."			],			"category" : "System-Announcements-System-Base"		},		"FontChooser" : {			"hash" : 2994432,			"definition" : "Model subclass: #FontChooser\r\tinstanceVariableNames: 'title selectedFontIndex fontList fontListStrings target getSelector setSelector pointSize fontStyleList selectedFontStyleIndex weightValue slantValue stretchValue pointSizeList'\r\tclassVariableNames: ''\r\tpackage: 'Fonts-Chooser'",			"comment" : [				"I'm an object holding information to choose a font from a list of fonts."			],			"category" : "Fonts-Chooser"		},		"IceNode" : {			"hash" : 6163712,			"definition" : "IceAbstractNode subclass: #IceNode\r\tinstanceVariableNames: 'parent childrenDictionary value'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Changes'",			"comment" : [				"I am a tree implementation used for diffing and merging.",				"",				"I work by composition and not inheritance. My users should use the values of the node (kept in the #value instance variable) and not subclass myself.",				"Each node stores its child nodes in a dictionary, indexed by a key.",				"",				"Tree API:",				" - #/ access to children",				" - #path get the path of the current node in the tree",				" - #parent get the parent node of the current node",				" - #rootNode get the root node of the current tree",				" - #children get the children of the current node",				" - #keys, #keysDo:, #includesKey: enumerate the keys of the node",				" - #at:put, #childAt:ifAbsentPut:, #childAt:ifPresent:",				" - #resolve:, #resolve:ifAbsent: resolve a path in the current node",				" - #replaceBy: replaces the current node by another node",				" - #replace:with: replaces the given child node by another node",				"",				"Enumerating API:",				" - #allSatisfy:",				" - #anySatisfy:",				" - #collect:",				" - #detect:",				" - #select:",				" - #count:",				" - #do:",				"",				"Visiting API:",				" - visit:"			],			"category" : "Iceberg-Changes"		},		"PharoDarkTheme" : {			"hash" : 697600,			"definition" : "UITheme subclass: #PharoDarkTheme\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Themes'",			"comment" : [				"A dark theme for pharo, inspired on ",				"",				"http://blog.jetbrains.com/blog/2013/06/11/inside-darcula-look-and-feel-an-interview-with-konstantin-bulenkov/",				"",				"This theme works well with the \"Dark\" text styling. ",				"You can have \"the full experience\", executing: ",				"",				"self installFullTheme."			],			"category" : "Polymorph-Widgets-Themes"		},		"ReModifiesCollectionRule" : {			"hash" : 3948544,			"definition" : "ReNodeMatchRule subclass: #ReModifiesCollectionRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for remove:''s of elements inside of collection iteration methods such as do:. These can cause the do: method to break since it will walk of the end of the collection. The common fix for this problem is to copy the collection before iterating over it.",				"",				"For example turning",				"",				"aCol do: [ :each |  ... aCol remove:... ]",				"",				"into ",				"",				"aCol copy do: [ :each |  ... aCol remove:... ]"			],			"category" : "GeneralRules-Migrated"		},		"RGContainer" : {			"hash" : 1333248,			"definition" : "RGAbstractContainer subclass: #RGContainer\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Ring-Definitions-Containers-Base'",			"comment" : [				"A concrete container already knows how to treat classes, methods and packages. "			],			"category" : "Ring-Definitions-Containers-Base"		},		"IceAnnouncer" : {			"hash" : 6218496,			"definition" : "Announcer subclass: #IceAnnouncer\r\tinstanceVariableNames: 'suspendedConditions suspendAll'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Core'",			"comment" : [				"I'm the general announcer of Iceberg.",				"I'm an announcer that knows how to suspend just some kind of announcements (the ones that matches matching block on #suspendAllMatching:while:).",				"",				"In current implementation of Iceberg, I will be used mainly for the convenience method: #suspendAllForRepository:while:"			],			"category" : "Iceberg-Core"		},		"FTPluggableIconListMorphAdaptor" : {			"hash" : 575232,			"definition" : "FTTableMorph subclass: #FTPluggableIconListMorphAdaptor\r\tinstanceVariableNames: 'setSelectionListSelector getSelectionListSelector setIndexSelector getIndexSelector keystrokeSelector resetListSelector doubleClickSelector keystrokeActionSelector'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-PluggableAdaptor'",			"comment" : [				"I'm an adaptor to adapt a PluggableIconListMorph into a FastTable. ",				"I implement all required methods, but transform them to serve a table through a FTDataSource."			],			"category" : "Morphic-Widgets-FastTable-PluggableAdaptor"		},		"MockSocketStream" : {			"hash" : 3540480,			"definition" : "Stream subclass: #MockSocketStream\r\tinstanceVariableNames: 'atEnd inStream outStream'\r\tclassVariableNames: ''\r\tpackage: 'Network-Tests-Kernel'",			"comment" : [				"A test mock for socket streams"			],			"category" : "Network-Tests-Kernel"		},		"RBSelectorEnvironment" : {			"hash" : 3136768,			"definition" : "RBBrowserEnvironmentWrapper subclass: #RBSelectorEnvironment\r\tinstanceVariableNames: 'classSelectors metaClassSelectors'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Environment'",			"comment" : [				"I am a RBBrowserEnvironment for a set of selectors. ",				"Usually I am constructed as a result of a query on another environment:",				"env referencesTo:#aselector -> a RBSelectorEnvironments."			],			"category" : "Refactoring-Environment"		},		"SDL2ScanCodeConstants class" : {			"hash" : 4065536,			"definition" : "SDL2ScanCodeConstants class\r\tinstanceVariableNames: ''",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "OSWindow-SDL2-Bindings"		},		"AthensBackgroundChange" : {			"hash" : 1559552,			"definition" : "AthensTextDisplayCommand subclass: #AthensBackgroundChange\r\tinstanceVariableNames: 'color start width'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Text'",			"comment" : [				"Text display command for changing the background color"			],			"category" : "Athens-Text"		},		"ListDialogWindow" : {			"hash" : 1942784,			"definition" : "MessageDialogWindow subclass: #ListDialogWindow\r\tinstanceVariableNames: 'pattern list searchMorph listMorph listIndex answer listBlock listCreationProcess displayBlock browseBlock acceptNewEntry'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Windows'",			"comment" : [				"A ListDialogWindow is a dialog window used to search an element into a list.",				"A text field is provided to on the fly reduce the field or search"			],			"category" : "Polymorph-Widgets-Windows"		},		"LucidaGrandeRegular class" : {			"hash" : 726016,			"definition" : "LucidaGrandeRegular class\r\tinstanceVariableNames: ''",			"comment" : [				"I'm a stub to load Lucida Grande font in system. ",				"As is, it works just for macs, but the idea is to use it for showing shortcut symbols... which has sense just un mac :)"			],			"category" : "EmbeddedFreeType-Fonts"		},		"Archive" : {			"hash" : 1338368,			"definition" : "Object subclass: #Archive\r\tinstanceVariableNames: 'members'\r\tclassVariableNames: ''\r\tpackage: 'Compression-Archives'",			"comment" : [				"This is the abstract superclass for file archives. Archives can be read from or written to files, and contain members that represent files and directories."			],			"category" : "Compression-Archives"		},		"CommandLineHandler" : {			"hash" : 865536,			"definition" : "Object subclass: #CommandLineHandler\r\tinstanceVariableNames: 'commandLine session stdout stderr'\r\tclassVariableNames: ''\r\tpackage: 'System-BasicCommandLineHandler-Base'",			"comment" : [				"A CommandLineHandler is activated by the CommandLine. ",				"",				"The responsible handler with the highest priority is selected and its instance-side method #activate is invoked.",				"",				"By default the handlers are selected by their class name. In the following shell invocation the FooHandler is chosen:",				"",				"\tpharo Pharo.image FooHandler",				"",				"A handler may provide a short name with the class-side #commandName method. If the FooHandler defined #commandName returning 'foo' it would be activated with the following shell invocation:",				"\t",				"\tpharo Pharo.image foo",				"\t",				"For more sophisticated handler selection the CommandLineHandler should implement the #isResponsibleFor: class-side method. An instance of the current command line options is passed to this method which should then return a boolean.",				"",				"Between all the responsible handlers the one with the highest #priority is chosen. To change the priority overwrite the class-side accessor."			],			"category" : "System-BasicCommandLineHandler-Base"		},		"RBRefactoring class" : {			"hash" : 3142656,			"definition" : "RBRefactoring class\r\tuses: RBTRefactoringBuilder classTrait\r\tinstanceVariableNames: ''",			"comment" : [				"I am the abstract base class for refactoring operations. ",				"",				"I define the common workflow for a refactoring:",				"check precondition, ",				"primitive execute - a dry run collecting the changes without applying them,",				"and execute - run and apply changes.",				"",				"I provide many utility methods used by my subclasses. ",				"Every  concrete subclass implements a single refactoring. They have to implement the methods",				"preconditions and transform.",				"",				"",				"Instance Variables",				"",				"options:",				"Some refactorings may need user interactions or some extra data for performing",				"the operation, the code for requesting this data is stored in a block associated with a \"refacotring option\"",				"(see RBRefactoring>>#setOption:toUse:  and RBRefactoring class>>#initializeRefactoringOptions).",				"",				"model:",				"My model - a RBNamespace - defines the environment in which my refactoring is applied and collects all changes (RBRefactoryChange).",				"",				"A RBRefactoringManager  is used to collect the executed refactorings and provides an undo and redo facility."			],			"category" : "Refactoring-Core-Refactorings"		},		"SourceFileArray class" : {			"hash" : 1140736,			"definition" : "SourceFileArray class\r\tinstanceVariableNames: ''",			"comment" : [				"This is a variation on StandardSourceFileArray that provides a larger maximum changes file size.",				"",				"The available address space for source pointers in a traditional CompiledMethod is 16r1000000 through 16r4FFFFFF. StandardSourceFileArray maps positions in the sources file to address range 16r1000000 through 16r1FFFFFF and 16r3000000 through 16r3FFFFFF, and positions in the changes file to address range 16r2000000 through 16r2FFFFFF and 16r4000000 through 16r4FFFFFF. This permits a maximum file size of 16r2000000 (32MB) for both the sources file and the changes file.",				"",				"This implementation extends the source pointer address space using bit 25 of the source pointer to identify the external sources and changes files, with the remaining high order bits treated as address extension. This limits the number of external file references to two (the traditional sources and changes files). If additional external file references are needed in the future, some higher order bits in the source pointer address space should be allocated for that purpose.",				"",				"The use of bit 25 of the source pointer for file references permits backward compatibility with StandardSourceFileArray, with essentially unlimited address space expansion for the sources and changes files."			],			"category" : "System-Sources-Sources"		},		"SmallInteger class" : {			"hash" : 788480,			"definition" : "SmallInteger class\r\tinstanceVariableNames: 'minVal maxVal'",			"comment" : [				"My instances are 31-bit numbers or 63-bit numbers depending on the image architecture, stored in twos complement form. The allowable range is approximately +- 1 billion (31 bits), 1 quintillion (63 bits)  (see SmallInteger minVal, maxVal)."			],			"category" : "Kernel-Numbers"		},		"RBParseTreeSearcher" : {			"hash" : 1156864,			"definition" : "RBProgramNodeVisitor subclass: #RBParseTreeSearcher\r\tinstanceVariableNames: 'searches answer argumentSearches context messages'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Matching'",			"comment" : [				"ParseTreeSearcher walks over a normal source code parse tree using the visitor pattern and then matches these nodes against the meta-nodes using the match:inContext: methods defined for the meta-nodes.",				"",				"Instance Variables:",				"\tanswer\t<Object>\tthe \"answer\" that is propagated between matches",				"\targumentSearches\t<Collection of: (Association key: RBProgramNode value: BlockClosure)>\targument searches (search for the RBProgramNode and perform the BlockClosure when its found)",				"\tcontext\t<RBSmallDictionary>\ta dictionary that contains what each meta-node matches against. This could be a normal Dictionary that is created for each search but is created once and reused (efficiency).",				"\tmessages\t<Collection>\tthe sent messages in our searches",				"\tsearches\t<Collection of: (Association key: RBProgramNode value: BlockClosure)>\tnon-argument searches (search for the RBProgramNode and perform the BlockClosure when its found)"			],			"category" : "AST-Core-Matching"		},		"GrowlMorph" : {			"hash" : 1964800,			"definition" : "TextMorph subclass: #GrowlMorph\r\tinstanceVariableNames: 'dismissHandle vanishTime alpha actionBlock vanishDelay labelAttr contentsAttr labelColor contentsColor'\r\tclassVariableNames: 'Position Type'\r\tpackage: 'Growl-Base'",			"comment" : [				"A GrowlMorph is a little Morph to announce event happening. Freely inspired from the MIT Snarl developed by  Tony Garnock-Jones. ",				"",				"GrowlMorph new openInWorld.",				"",				"10 timesRepeat: [",				"\t(GrowlMorph openWithLabel: 'The time' contents: DateAndTime now)",				"\"\t\tvanishDelay: 1000;",				"\t\tresetVanishTimer\".",				"\tWorld doOneCycle ].",				"",				"(GrowlMorph openWithLabel: 'The time' contents: DateAndTime now) ",				"\tactionBlock: [Transcript open]."			],			"category" : "Growl-Base"		},		"IdentifierChooserMorph" : {			"hash" : 1917184,			"definition" : "BorderedMorph subclass: #IdentifierChooserMorph\r\tinstanceVariableNames: 'requestor labels choiceMenus chooseBlock maxLines choicesMorph scrollPaneWidth baseColor'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Base'",			"comment" : [				"An IdentifierChooserMorph is a menu builder which takes a list of labels as input and build/popup  a menu for them. The morph could be made of one menu in one column for all labels of of several menus in a scrollabe row. The action which is performed when a menu item is selected is also parametrized (see examples below).",				"The morph can take the keyboard focus and then, up, down, left and right arrows can be used to choose a menu item.",				"It is the responsibility of the user of this morph to decide when and how the keyboard focus is token.",				"The design is widely inpired from PopupChoiceDialogWindow.",				"",				"example 1",				"A very simple example with three label. The nil value will be represented as a menu line in the resulting morph.",				"(IdentifierChooserMorph ",				"\t\tlabels: {'aaaaaa'. 'bbbbbbb'. nil. 'cccccccc'}",				"\t\tchooseBlock: [ :chosen | UIManager default inform: (chosen, (' has been chosen' translated))])",				"\t\t\topen",				"\t\t\t",				"example 2",				"The same except that a color is specified\t\t",				"(IdentifierChooserMorph ",				"\t\tlabels: {'aaaaaa'. 'bbbbbbb'. nil. 'cccccccc'}",				"\t\tchooseBlock: [ :chosen | UIManager default inform: (chosen, (' has been chosen' translated))])",				"\t\t\tbaseColor: Color white;",				"\t\t\topen",				"",				"example 3",				"Allows the presentation of one menu (one column) vith two fixed labels followed by the list of all classes.",				"(IdentifierChooserMorph ",				"\t\tlabels: ({'aaaaaa'. 'bbbbbbb'}, { nil }, (Object allSubclasses collect: [:c | c theNonMetaClass  name]) asSet asArray sort)",				"\t\tchooseBlock: [ :chosen | (Smalltalk globals at: chosen asSymbol) ifNotNil: [:c | c browse] ]) ",				"\t\t\toneMenuOfWidth: 300;",				"\t\t\tbaseColor: Color white;",				"\t\t\topen",				"",				"Instance Variables",				"\tbaseColor:\t\t<Color>",				"\tchoiceMenus:\t\t<Array>",				"\tchoicesMorph:\t\t<AlignmentMorph>",				"\tchooseBlock:\t\t<Block>",				"\tlabels:\t\t<Array>",				"\tmaxLines:\t\t<Integer>",				"\trequestor:\t\t<Morph>",				"\tscrollPaneWidth:\t\t<Integer>",				"",				"baseColor",				"\t- The color used for the menu items and the receiver",				"",				"choiceMenus",				"\t- The array of EmbeddedMenuMorph",				"",				"choicesMorph",				"\t- The AlignmentMorph which contains all menus",				"",				"chooseBlock",				"\t- A block with one argument which is evaluated when a menu item is selected. The argument takes the chosen label as argument",				"",				"labels",				"\t- The array of labels ",				"",				"maxLines",				"\t- If not nil, gives the maximum number of lines for one menu",				"",				"requestor",				"\t- if not nil, a Morph from which the receiver is built",				"",				"scrollPaneWidth",				"\t- The maximum width of the scrollPane, this contraints the width of the receiver."			],			"category" : "Polymorph-Widgets-Base"		},		"RxParser class" : {			"hash" : 1441792,			"definition" : "RxParser class\r\tinstanceVariableNames: ''",			"comment" : [				"-- Regular Expression Matcher v 1.1 (C) 1996, 1999 Vassili Bykov",				"--",				"The regular expression parser. Translates a regular expression read from a stream into a parse tree. ('accessing' protocol). The tree can later be passed to a matcher initialization method.  All other classes in this category implement the tree. Refer to their comments for any details.",				"",				"Instance variables:",				"\tinput\t\t<Stream> A stream with the regular expression being parsed.",				"\tlookahead\t<Character>"			],			"category" : "Regex-Core-Base"		},		"MetaLink" : {			"hash" : 3026176,			"definition" : "Object subclass: #MetaLink\r\tinstanceVariableNames: 'arguments condition conditionArguments control level metaObject nodes selector options'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Core'",			"comment" : [				"Metalinks are used to annotate AST nodes. An annotated AST is expanded, compiled and executed on the fly thanks to the ReflectiveMethod/CompiledMethod twin. ",				"",				"For a given node, metalinks can be put at different positions:",				"",				"- before: The metalink is executed before the execution of the node.  ",				"- instead: The metalink is executed insted the node.",				"- after: The metalink is executed after the execution of the node.",				"(... later: onError,  Do we have an #around instead of #instead?)",				"",				"Not all the nodes provide all the position. For example, literals don't provide onError and onSuccess positions.",				"",				"Public API:",				"",				"- metaObject: The target object to call",				"- selector: send this selector",				"- condition:  turn link on/off ",				"- level: Meta Level at which the link is active",				"",				"------ Examples -----",				"",				"MetaLink new ",				"\tmetaObject: Halt;",				"\tselector: #now.",				"\t",				"MetaLink new ",				"\tmetaObject: [ self halt ];",				"\tselector: #value."			],			"category" : "Reflectivity-Core"		},		"ThreadSafeTranscript" : {			"hash" : 696576,			"definition" : "Model subclass: #ThreadSafeTranscript\r\tinstanceVariableNames: 'stream accessSemaphore deferredClear deferredEndEntry stepContents'\r\tclassVariableNames: ''\r\tpackage: 'Transcript-Core-Base'",			"comment" : [				"I'm an output device.",				"    Transcript show: 'hello'.",				"",				"I implement TTranscript.",				"",				"While ThreadSafeTranscript is threadsafe wrt stream access, the morphic code invoked by #changed: is not. So #changed: should not be sent from multiple threads (at random times) since this causes a morph's #update: method to conflict with the UI-thread running the morph's #drawOn: method in parallel. Whereas Morphic seems to assume that #update: and #drawOn: are run sequentially from the same thread.",				"",				"The #step method is assumed to be invoked only from the main UI thread, so from here it is safe to send #changed: and consequently #update:. Methods #clear and #endEntry are invoked from multiple threads, so these signal to #step to call #changed: with the required parameter (#clearText and #appendEntry respectively.)",				"",				"Method #contents should not directly return ==stream contents==, since even with a mutex around that, multiple calls from Morphic may unexpectedly get different results and fail.  #contents needs to return a value that is static between each #step (which is ==stepContents== that is only udpated in #step).",				"",				"The ==stream reset== is left to occur from #clear being invoked from multiple threads. ",				"",				"The ==stream resetContents== is moved to #step so this occurs directly after ==stepContents== is set from ==stream contents==.",				"",				"",				""			],			"category" : "Transcript-Core-Base"		},		"IceTipCommitInfoPresenter" : {			"hash" : 6285056,			"definition" : "SpPresenter subclass: #IceTipCommitInfoPresenter\r\tinstanceVariableNames: 'model selectedModel headTabContainer ancestorTabContainer notebookPanel infoPage headPage ancestorPage'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-View-Branch'",			"comment" : [				"I'm a panel to show the history of a commitish (usually a branch or a tag). I display infos on it and diffs.",				"",				"I'm usually used as part of an IceTipHistoryBrowser."			],			"category" : "Iceberg-TipUI-View-Branch"		},		"ReDetectIfNoneRule" : {			"hash" : 3934720,			"definition" : "ReNodeRewriteRule subclass: #ReDetectIfNoneRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Replaces detect:ifNone: and contains: when used with the semantics of anySatisfy: by anySatisfy:.",				"",				"For example, ",				"",				"[[[ ",				"collection detect: [:each | .... ] ifNone: [nil]) notNil\t",				"]]]",				"is transformed into ",				"",				"[[[ ",				"collection anySatisfy: [ :each | .... ])",				"]]]"			],			"category" : "GeneralRules-Migrated"		},		"NSSymLogScale" : {			"hash" : 5627648,			"definition" : "NSLinearScale subclass: #NSSymLogScale\r\tinstanceVariableNames: 'constant linear'\r\tclassVariableNames: ''\r\tpackage: 'NumericInterpolator-Scales'",			"comment" : [				"I order to have a generic log scale for positive and negative log scales ",				"",				"Inspired from https://github.com/d3/d3-scale/blob/master/src/symlog.js"			],			"category" : "NumericInterpolator-Scales"		},		"ShiftClassInstaller" : {			"hash" : 817408,			"definition" : "Object subclass: #ShiftClassInstaller\r\tinstanceVariableNames: 'oldClass builder installingEnvironment'\r\tclassVariableNames: ''\r\tpackage: 'Shift-ClassInstaller-Base'",			"comment" : [				"I am the responsible of installing a class in the system.",				"",				"I interact with the ShiftClassBuilder to generate the classes.",				"You can use me as in:",				"",				"Smalltalk classInstaller make: [ :aBuilder |",				"\t\taBuilder",				"\t\t\tsuperclass: Object;",				"\t\t\tname: #MyClass;",				"\t\t\tslots: #(varA varB);",				"\t\t\tcategory: 'My-Category' ].",				"\t\t",				"See that I should never be referenced directly, only through the accessor ",				"in Smalltalk or in any class in the system. ",				"",				"The block passed is used to configure the builder. Check ShiftClassBuilder to see the available messages.",				"",				"I have a subclass to anonymous generate classes, without registering in the environment. "			],			"category" : "Shift-ClassInstaller-Base"		},		"RSSelectionPresentationInteraction" : {			"hash" : 5794816,			"definition" : "RSInteraction subclass: #RSSelectionPresentationInteraction\r\tinstanceVariableNames: 'presentation shadowColor padding'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Inspector-Interactions'",			"comment" : [				"Define the interaction used by the inspector to highlight a selected shape. This is very convenient in the inspector for example. Normally, it should not be invoked directly.",				"",				"Here is an example:",				"",				"```Smalltalk",				"c := RSCanvas new.",				"shapes := (1 to: 100) collect: [ :v | RSBox new model: v ] as: RSGroup.",				"c addAll: shapes.",				"RSNormalizer size shapes: shapes; normalize: #yourself.",				"RSFlowLayout on: shapes.",				"shapes @ RSSelectionPresentation.",				"c @ RSCanvasController.",				"c open",				"```"			],			"category" : "Roassal3-Inspector-Interactions"		},		"ReCollectionAtCollectionSizeRule" : {			"hash" : 3944960,			"definition" : "ReNodeMatchRule subclass: #ReCollectionAtCollectionSizeRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for code using  \"collection at: collection size\" instead of \"collection last\"."			],			"category" : "GeneralRules-Migrated"		},		"ReBetweenAndRule" : {			"hash" : 3932672,			"definition" : "ReNodeRewriteRule subclass: #ReBetweenAndRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Replaces \"a >= b and: [a <= c]\" by \"a between: b and: c."			],			"category" : "GeneralRules-Migrated"		},		"SpCompositeTableColumn" : {			"hash" : 2192128,			"definition" : "SpTableColumn subclass: #SpCompositeTableColumn\r\tinstanceVariableNames: 'columns'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Widgets-Table'",			"comment" : [				"A composite column (a column that joins other colums to form a single cell view).",				"A `SpCompositeTableColumn` contain other column definitions to compose a single type of column. ",				"Typically, it will compose images and texts (or checkbox and text, as for do a cherry pick).",				"",				"The user does not needs to set an evaluation block for this column (as its value is taken in the composed columns).",				"",				"",				"## Example",				"```",				"SpCompositeTableColumn new ",				"\ttitle: 'My string';",				"\taddColumn: (SpCompositeTableColumn new",				"\t\t\ttitle: 'Classes';",				"\t\t\taddColumn: (SpImageTableColumn new",				"\t\t\t\twidth: 20;",				"\t\t\t\tevaluated: [ :aClass | aClass systemIcon ];",				"\t\t\t\tyourself);",				"\t\t\taddColumn: (SpStringTableColumn new",				"\t\t\t\tevaluated: [ :aClass | aClass name ];",				"\t\t\t\tyourself);",				"\t\t\tyourself);",				"\tyourself",				"```"			],			"category" : "Spec2-Core-Widgets-Table"		},		"SpRadioButtonPresenter" : {			"hash" : 2208512,			"definition" : "SpAbstractFormButtonPresenter subclass: #SpRadioButtonPresenter\r\tinstanceVariableNames: 'associatedRadioButtons initialStateSet'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Widgets'",			"comment" : [				"A presenter for Radio Buttons."			],			"category" : "Spec2-Core-Widgets"		},		"CircleMorph" : {			"hash" : 1913600,			"definition" : "EllipseMorph subclass: #CircleMorph\r\tinstanceVariableNames: 'referencePosition originalCenter originalAngle'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Basic'",			"comment" : [				"I am a specialization of EllipseMorph that knows enough to remain circular."			],			"category" : "Morphic-Base-Basic"		},		"MCGitBasedNetworkRepository class" : {			"hash" : 340992,			"definition" : "MCGitBasedNetworkRepository class\r\tinstanceVariableNames: 'repoCacheDirectory repoDownloadCache siteUsername sitePassword'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\trepoCacheDirectory:\t\t<Object>",				"\trepoDownloadCache:\t\t<Object>",				"\tsitePassword:\t\t<Object>",				"\tsiteUsername:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Metacello-GitBasedRepository"		},		"RGEnvironmentBackend" : {			"hash" : 5248512,			"definition" : "Object subclass: #RGEnvironmentBackend\r\tinstanceVariableNames: 'environment providedDefinitions'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Environment'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tenvironment:\t\t<Object>",				"\tprovidedDefinitions:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Environment"		},		"SpPanedLayout" : {			"hash" : 2147072,			"definition" : "SpDirectionableLayout subclass: #SpPanedLayout\r\tinstanceVariableNames: 'childrenByPosition positionOfSlider'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Layout-Paned'",			"comment" : [				"I'm a Paned Layout as if you would not how to read my name. I manage two and only two children, a first and a second one.",				"",				"From that perspective, a paned layout is like a `SpBoxLayout`: it places childen in vertical or horizontal fashion, but it will add a splitter in between, that user can drag to resize the panel.",				"",				"Nice methods to consider are:",				"- `SpPanedLayout>>#addFirst:` and `SpPanedLayout>>#addFirst:` to add my two children.",				"- `SpPanedLayout>>#positionOfSlider:`. It controls the position of the slider. ",				"-- `aNumber` can be a fixed number indicating the exact position where the slider will be placed in the pane.",				"-- `aFloat or percent` can also be a fraction or a percentage, indicating the percentage position ",				"\t of the slider. e.g. `30 percent` or (0.3) indicates the slider will be place at 1/3 of the ",				"\t panel.\""			],			"category" : "Spec2-Layout-Paned"		},		"OSWindowMorphicEventHandler class" : {			"hash" : 4055296,			"definition" : "OSWindowMorphicEventHandler class\r\tinstanceVariableNames: ''",			"comment" : [				"I can be used to convert OSWindow-level events to Morphic events.",				"",				"So, that installing my instance as event handler for specific window would allow running Morphic World in it.",				"",				"Later, the Morphic can be integrated with OSWindow API to avoid unnecessary conversion and thus eliminating the need in having this class."			],			"category" : "OSWindow-Core-Morphic"		},		"RSBackInterpolator" : {			"hash" : 5710080,			"definition" : "RSEasingInterpolator subclass: #RSBackInterpolator\r\tinstanceVariableNames: 'overshoot'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Animation-Easing'",			"comment" : [				"TSEasing backIn",				"Anticipatory easing, like a dancer bending his knees before jumping off the floor. The degree of overshoot is configurable; if not specified, it defaults to 1.70158.",				"",				"TSEasing backOut ",				"Reverse anticipatory easing; equivalent to 1 - (backIn value: 1 - t).",				"",				"TSEasing back ",				"TSEasing backInOut",				"Symmetric anticipatory easing; scales backIn for t in [0, 0.5] and backOut for t in [0.5, 1]."			],			"category" : "Roassal3-Animation-Easing"		},		"TreeNodePresenter" : {			"hash" : 911360,			"definition" : "AbstractWidgetPresenter subclass: #TreeNodePresenter\r\tinstanceVariableNames: 'children content icon container matchTokenFilter contents parentNode childNodeClass selected lastClicked mouseDownAction hasContentToShow isExpanded hasChildren'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"I represent a node in a tree widget.",				"I hold an item, an icon and the list of my children.",				"",				"In addition, I have a filtering mechanism"			],			"category" : "Spec-Core-Widgets"		},		"ReRefactoringCritique" : {			"hash" : 1711360,			"definition" : "ReAbstractCritique subclass: #ReRefactoringCritique\r\tinstanceVariableNames: 'refactoring alreadyExecuted'\r\tclassVariableNames: ''\r\tpackage: 'Renraku-Critiques'",			"comment" : [				"A critique which has a refactoring needed to solve the issue"			],			"category" : "Renraku-Critiques"		},		"MCMczWriter" : {			"hash" : 300800,			"definition" : "MCWriter subclass: #MCMczWriter\r\tinstanceVariableNames: 'zip infoWriter'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Storing'",			"comment" : [				"Writing MCZ format"			],			"category" : "Monticello-Storing"		},		"SpClassStyle" : {			"hash" : 2555904,			"definition" : "SpStyle subclass: #SpClassStyle\r\tinstanceVariableNames: 'parent name styles'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-StyleSheet'",			"comment" : [				"! Style classes (==SpStyleClass==)",				"",				"A style class define a set of properties grouped by a common name. You can think a style class of morphic a little bit as a style class of CSS, but it has several differences.",				" ",				"!! Style classes can be nested",				"You can nest classes to refine some properties. For example, if you have this definition: ",				"",				"[[[",				".application [",				"\t.button [",				"\t\tGeometry { #height: 25, #width: 100 }",				"\t\t.smallButton {",				"\t\t\tGeometry { #width: 150 }",				"\t\t}",				"\t]\t",				"]",				"]]]",				"",				"the result style for a button with \"smallButton\" style will have a Geometry with the form: ==Geometry { #width: 150, #height: 25 }==, which is the result of the merge of all properties, with the deepest nested property taking precedence.",				"",				"!! Style classes are composable",				"You can compose class styles (stacking them to form a new style). This is an useful practice to add your own styles to the default definition.  ",				"",				"[[[language=Smalltalk  ",				"myStyle := SpStyle defaultStyleSheet, myOwnStyleDefinition\t\t\t",				"]]]"			],			"category" : "Spec2-Adapters-Morphic-StyleSheet"		},		"FBDExamples" : {			"hash" : 3433216,			"definition" : "Object subclass: #FBDExamples\r\tinstanceVariableNames: 'iVar collection'\r\tclassVariableNames: 'CVar'\r\tpackage: 'Flashback-Decompiler-Tests-Examples'",			"comment" : [				"The method of this class in the protocols named examples are supposed to represent all the possible smalltalk semantics in the point of view of the Decompiler"			],			"category" : "Flashback-Decompiler-Tests-Examples"		},		"MessageTally" : {			"hash" : 3216640,			"definition" : "Magnitude subclass: #MessageTally\r\tinstanceVariableNames: 'class method process tally receivers senders time gcStats maxClassNameSize maxClassPlusSelectorSize maxTabs reportOtherProcesses'\r\tclassVariableNames: 'DefaultPollPeriod Timer'\r\tpackage: 'Tool-Profilers-Messages'",			"comment" : [				"My instances observe and report the amount of time spent in methods.",				"",				"NOTE: a higher-level user interface (combining the MessageTally result tree with a method browser) is available from TimeProfileBrowser. Note that TimeProfileBrowser was not fancy with the different setting possibilities.",				"",				"\tTimeProfileBrowser spyOn:  [20 timesRepeat: ",				"\t\t\t[Transcript show: 100 factorial printString]]",				"\t",				"",				"Strategies",				"-----------",				"MessageTally provides two different strategies available for profiling:",				"",				"* spyOn: and friends use a high-priority Process to interrupt the block or process being spied on at periodic intervals. The interrupted call stack is then examined for caller information. See below for an example showing different settings",				"",				"* tallySends: and friends use the interpreter simulator to run the block, recording every method call.",				"",				"The two give you different results:",				"",				"\t* spyOn: gives you a view of where the time is being spent in your program, at least on a rough statistical level (assuming you've run the \tblock for long enough and have a high enough poll rate). If you're trying to optimize your code, start here and optimize the methods where \tmost of the time is being spent first.",				"",				"\t* tallySends: gives you accurate counts of how many times methods get called, and by exactly which route. If you're debugging, or trying to \tfigure out if a given method is getting called too many times, this is your tool.",				"",				"Q: How do you interpret MessageTally>>tallySends",				"A: The methods #tallySends and #spyOn: measure two very different quantities, but broken down in the same who-called-who format.  #spyOn: is approximate, but more indicative of real time spent, whereas #tallySends is exact and a precise record of how many times each method got executed.",				"",				"Examples",				"----------",				"",				"Here you can see all the processes computation time",				"\t",				"\t\t[1000 timesRepeat: [3.14159 printString. Processor yield]] fork.",				"\t\t[1000 timesRepeat: [30 factorial. Processor yield]] fork.",				"\t\t[1000 timesRepeat: [30 factorial. Processor yield]] fork.",				"\t\tMessageTally spyAllOn: [ (Delay forMilliseconds: 100) wait] ",				"",				"",				"Settings",				"---------",				"You can change the printing format (that is, the whitespace and string compression) by using these instance methods: ",				"\tmaxClassNameSize:",				"\tmaxClassPlusSelectorSize:",				"\tmaxTabs:",				"",				"You can change the default polling period (initially set to 1) by calling",				"\tMessageTally defaultPollPeriod: numberOfMilliseconds",				"",				"",				"To understand the difference",				"----------------------------------",				"Here we see all the processes",				"\t[1000 timesRepeat: [",				"\t\t100 timesRepeat: [120 factorial].",				"\t\t(Delay forMilliseconds: 10) wait",				"\t\t]] forkAt: 45 named: '45'.",				"\tMessageTally spyAllOn: [10000 timesRepeat: [1.23 printString]]",				"\t",				"\t",				"Here we only see the execution of the expression [10000 timesRepeat: [1.23 printString]",				"\t[1000 timesRepeat: [",				"\t\t100 timesRepeat: [120 factorial].",				"\t\t(Delay forMilliseconds: 10) wait",				"\t\t]] forkAt: 45 named: '45'.",				"\tMessageTally spyOn: [10000 timesRepeat: [1.23 printString]]",				"\t",				"Here we only check the exact message sends: this is not a pc-sampling approach",				"\t[1000 timesRepeat: [",				"\t\t100 timesRepeat: [120 factorial].",				"\t\t(Delay forMilliseconds: 10) wait",				"\t\t]] forkAt: 45 named: '45'.",				"\tMessageTally tallySends: [10000 timesRepeat: [1.23 printString]]",				"\t",				"",				""			],			"category" : "Tool-Profilers-Messages"		},		"SpProgressingProgressBarState" : {			"hash" : 2190080,			"definition" : "SpProgressBarState subclass: #SpProgressingProgressBarState\r\tinstanceVariableNames: 'refreshDelay progression currentValue'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Utils'",			"comment" : [				"Description",				"--------------------",				"",				"I am a state of a ProgressBarPresenter managing the behavior of a progress bar which value can progress.",				"",				"I will have a block that should return a number between 0 and 1 to get the current progress and a delay defining the refresh rate of the progress bar.",				"",				"Examples",				"--------------------",				"",				"\tProgressBarProgressing progression: [ model computationStep ] every: 0.2 seconds",				" ",				"Internal Representation and Key Implementation Points.",				"--------------------",				"",				"    Instance Variables",				"\tcurrentValueHolder:\t\t<aValueHolder>\t\tStore the current value of the progress bar. We need it to be able to notify the user when it changes so that the user can register to the change.",				"\tprogression:\t\t\t\t\t<aValuable>\t\t\tA block returning a number between 0 and 1 defining the progress of the bar.",				"\trefreshDelay:\t\t\t\t<aDelay>\t\t\t\tA delay defining the refresh rate of the bar."			],			"category" : "Spec2-Core-Utils"		},		"EdgeGripMorph" : {			"hash" : 566528,			"definition" : "AbstractResizerMorph subclass: #EdgeGripMorph\r\tinstanceVariableNames: 'target edgeName fitTargetOwner'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Windows-Resizing'",			"comment" : [				"Similar to a ProportionalSplitterMorph but designed to attach to an edge of a single morph only."			],			"category" : "Morphic-Widgets-Windows-Resizing"		},		"EpMonitor class" : {			"hash" : 4205568,			"definition" : "EpMonitor class\r\tinstanceVariableNames: 'current'",			"comment" : [				"I am a system monitor.",				"",				"I subscribe to the system announcer to translate announcements to Epicea events (ie. subclasses of EpEvent), and record them into a log."			],			"category" : "Epicea-Monitor"		},		"TFWorker" : {			"hash" : 2022912,			"definition" : "TFRunner subclass: #TFWorker\r\tinstanceVariableNames: 'name semaphorePoolHolder'\r\tclassVariableNames: 'Default'\r\tpackage: 'ThreadedFFI-Worker'",			"comment" : [				"I'm a threaded ffi worker. ",				"A worker handles callouts/callbacks in a real thread of the system.",				"",				"Creating a worker has several consquences both in image and in VM: ",				"",				"Image side, it creates a process responsible to handle all callback requests from vm.",				"VM side, it creates a thread and installs a worker there, responsible to collect callouts and callbacks.",				""			],			"category" : "ThreadedFFI-Worker"		},		"RBSimpleFormatter class" : {			"hash" : 1104640,			"definition" : "RBSimpleFormatter class\r\tinstanceVariableNames: ''",			"comment" : [				"I'm a simple formatter that prints nodes (without using source code).",				"I'm useful when AST are programmatically assembled. ",				"",				"I could be improved, but the goal is to get the information is a more or less ok form."			],			"category" : "AST-Core-Formatter"		},		"RxMatcher class" : {			"hash" : 1441280,			"definition" : "RxMatcher class\r\tinstanceVariableNames: ''",			"comment" : [				"-- Regular Expression Matcher v 1.1 (C) 1996, 1999 Vassili Bykov",				"--",				"This is a recursive regex matcher. Not strikingly efficient, but simple. Also, keeps track of matched subexpressions.  The life cycle goes as follows:",				"",				"1. Initialization. Accepts a syntax tree (presumably produced by RxParser) and compiles it into a matcher built of other classes in this category.",				"",				"2. Matching. Accepts a stream or a string and returns a boolean indicating whether the whole stream or its prefix -- depending on the message sent -- matches the regex.",				"",				"3. Subexpression query. After a successful match, and before any other match, the matcher may be queried about the range of specific stream (string) positions that matched to certain parenthesized subexpressions of the original expression.",				"",				"Any number of queries may follow a successful match, and any number or matches may follow a successful initialization.",				"",				"Note that `matcher' is actually a sort of a misnomer. The actual matcher is a web of Rxm* instances built by RxMatcher during initialization. RxMatcher is just the interface facade of this network.  It is also a builder of it, and also provides a stream-like protocol to easily access the stream being matched.",				"",				"Instance variables:",				"\tmatcher\t\t\t\t<RxmLink> The entry point into the actual matcher.",				"\tstream\t\t\t\t<Stream> The stream currently being matched against.",				"\tmarkerPositions\t\t<Array of: Integer> Positions of markers' matches.",				"\tmarkerCount\t\t<Integer> Number of markers.",				"\tlastResult \t\t\t<Boolean> Whether the latest match attempt succeeded or not.",				"\tlastChar\t\t\t<Character | nil> character last seen in the matcher stream"			],			"category" : "Regex-Core-Base"		},		"ProcessBrowser class" : {			"hash" : 3214848,			"definition" : "ProcessBrowser class\r\tinstanceVariableNames: ''",			"comment" : [				"Change Set:\t\tProcessBrowser",				"Date:\t\t\t14 March 2000",				"Author:\t\t\tNed Konz",				"",				"email: ned@bike-nomad.com",				"",				"This is distributed under the Squeak License.",				"",				"Added 14 March:",				"\tCPUWatcher integration",				"\tautomatically start and stop CPUWatcher",				"\tadded CPUWatcher to process list menu",				"",				"Added 29 October:",				"\tMVC version",				"\t2.8, 2.7 compatibility",				"\trearranged menus",				"\tadded pointer inspection and chasing",				"\tadded suspend/resume",				"\trecognized more well-known processes",				"\tmisc. bug fixes",				"",				"Added 26 October: highlight pc in source code",				"Added 27 October: added 'signal semaphore'",				"added 'inspect receiver', 'explore receiver', 'message tally' to stack list menu",				"added 'find context', 'next context' to process list menu",				"added 'change priority' and 'debug' choices to process list menu",				"",				"27 October mods by Bob Arning:",				"",				"alters process display in Ned's ProcessBrowser to ",				"- show process priority",				"- drop 'a Process in' that appears on each line",				"- show in priority order",				"- prettier names for known processes",				"- fix to Utilities to forget update downloading process when it ends (1 less dead",				"process)",				"- correct stack dump for the active process"			],			"category" : "Tool-ProcessBrowser"		},		"SearchMorph" : {			"hash" : 1921792,			"definition" : "EditableDropListMorph subclass: #SearchMorph\r\tinstanceVariableNames: 'maxSize currentCompletionIndex updateSelector'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Base'",			"comment" : [				"I am a searchfield with a dropdown for the history. It is a minor extension to the EditableDropListMorph managing the search history directly in the morph. ",				"",				"Typical use-case:",				"",				"\t^ SearchMorph new",				"\t\tmodel: self;",				"\t\tsetIndexSelector: #classSearchAccept:; \"sends the search result to the model\"",				"\t\tsearchList: self class classSearchList; \"sent on creation to get the initial search list\"",				"\t\tyourself",				"\t",				"\t"			],			"category" : "Polymorph-Widgets-Base"		},		"FFICompilerPlugin class" : {			"hash" : 476672,			"definition" : "FFICompilerPlugin class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a FFICompilerPlugin - a compiler plugin for the OpalCompiler that makes the compiled method store the arguments names to be used for FFI when the sources are not loaded or unloaded.",				"I can be activated with the command ",				"",				"  FFICompilerPlugin install",				"",				"I am pragma-based to detect the methods where the arguments names should be remembered.",				"The pragma should be added in the FFI API methods, i.e., the methods that are called by the FFI methods where the arguments have to be remembered.",				"Example:",				"",				"This FFI method should remember the name of the argument named config:",				"",				"repository_config: config",				"\t^ self",				"\t\tcall: #(#LGitReturnCodeEnum #git_repository_config #(#LGitConfig #* #config #, #self))",				"\t\toptions: #()",				"",				"So, the FFI function should wear the pragma <ffiCalloutTranslator>:",				"",				"call: fnSpec options: options",				"\t<ffiCalloutTranslator>",				"\t^ (self safeFFICalloutIn: thisContext sender)",				"\t\tcdecl;",				"\t\toptions: options;",				"\t\tfunction: fnSpec module: self ffiLibraryName",				"",				"To remove to be able to remove the sources (.changes and .sources), you only have to activate the plugin, no recompilation is necessary. You can even import new FFI methods or change the FFI API.",				"",				"N.B: Users that redefine the FFI API (like TLGitCalloutTrait >> call:options:) also have to wear the pragma. See also FFIAdditionalFFIMethodState and FDBDecompiler>>createNArgs:"			],			"category" : "UnifiedFFI-Base"		},		"ArchiveMember" : {			"hash" : 1338880,			"definition" : "Object subclass: #ArchiveMember\r\tinstanceVariableNames: 'fileName isCorrupt'\r\tclassVariableNames: ''\r\tpackage: 'Compression-Archives'",			"comment" : [				"This is the abstract superclass for archive members, which are files or directories stored in archives."			],			"category" : "Compression-Archives"		},		"ProcessorScheduler class" : {			"hash" : 798720,			"definition" : "ProcessorScheduler class\r\tinstanceVariableNames: ''",			"comment" : [				"My single instance,  named Processor,  coordinates the use of the physical processor by all Processes requiring service.",				"",				"My instances variables are managed by the VM. The VM has for role to choose which process should be executed and when.",				"",				"NB: DelayBasicScheduler is THE HIGHEST priority code which is run in Pharo. See DelayBasicScheduler for additional comments."			],			"category" : "Kernel-Processes"		},		"StDebugger" : {			"hash" : 5527040,			"definition" : "StPresenter subclass: #StDebugger\r\tuses: TDebugger\r\tinstanceVariableNames: 'sessionHolder code toolbar stackTable inspector breakpointInspector stackHeader extensionTools extensionToolsNotebook toolbarCommandGroup debuggerActionModel unsavedCodeChanges programmaticallyClosed'\r\tclassVariableNames: 'ActivateDebuggerExtensions ErrorRecursion FastTDD UsingSpecSelector'\r\tpackage: 'NewTools-Debugger-View'",			"comment" : [				"The StDebugger is a presenter that provides Pharo debugging functionality by using a DebugSession.",				"",				"The debugging logic is in DebugSession and the corresponding debugging actions. ",				"",				"SpecDebugger only provides a graphical interface to access that functionality. ",				"To interact with the DebugSession, the debugger uses a StDebuggerActionModel, which has responsibility to perform actions to the execution context.",				"",				"",				"!!Structure of the Pharo debugger",				"",				"!!!Sub-presenters and layouts",				"The debugger is composed of default views and extension views.",				"Default views are the stack, the commands, the status line, the code pane and the inspector.",				"An extension view automatically appears if any debugging extension is present and if extensions are activated in the settings.",				"If not, extensions do not appear.",				"",				"Default and extension views are available in a vertical and an horizontal layout.",				"It is configureable in the settings under ==Tools >> Debugging >> Debugger layout==.",				"It is possible to fully customize the debugger layout, and therefore to add or remove any view.",				"The customized layout must then me selected in the aforementioned setting to be set as default.",				"To appear in that setting's list of possible values, the layout must be implemented in a method under the ==specs== protocol of the ==StDebugger== class side.",				"",				"\"\"The stack.\"\"",				"It shows the call stack of the current interrupted context.",				"Each element in the stack is a context representing a message send.",				"",				"The context menu (through right click) provides different interactions with the selected stack element: inspection, exploration, exportation, etc.",				"",				"By default, only a small part of the stack is shown.",				"More of the stack is observable by either clicking on the bottom context (the last in the stack) or through the context menu.",				"",				"\"\"Commands.\"\"",				"Commands are actions applicable to the current context",				"After each debugging action (''e.g.'', a step), the list of commands is being updated.",				"New commands may appear or disappear.",				"It depends if they are applicable or not to the current context and debugging session.",				"For instance, when a ==doesNotUnderstand== exception is raised (''i.e.'', a method does not exist), the command ''createMethod'' will appear.",				"In that case, it gives users the possibility to create the missing method and continue the execution.",				"",				"\"\"The status line.\"\"",				"This view provides information about the current context.",				"Non-critical information, such as the current instruction being stepped, are displayed in gray.",				"Critical information ,such as halts or breakpoints or DNU exceptions, are displayed in red.",				"",				"\"\"The code.\"\"",				"The code pane shows the source code of the interrupted context's method.",				"The source code is annotated with informations about the position of the interrupted execution.",				"This position corresponds to the next execution that will be executed if a step action is performed.",				"It is coloured in blue if that instruction is selected in the source code, or in orange and underlined if the selection is empty.",				"",				"A context menu (through right click) provides inspection, exploration, and stepping actions applicable to the context.",				"Such actions include, ''e.g.'', browse implementors of a selected message or skip execution of selected parts of the code.",				"",				"\"\"The inspector.\"\"",				"It provides views on the current context.",				"It contains tabs with different inspections or views on the current context or on the system.",				"",				"The raw inspection shows three items: ''Receiver'', ''Temps'' and ''Context''.",				"The receiver item shows information about the receiver of the message, or the object executing the method from the context.",				"The temps item shows the temporary variables of the current context.",				"Finally, the context item shows lower-level details, such as the interrupted context, the debug session or the debugger itself.",				"Double-clicking on an item will spawn a new view in the same inspector, with an inspection on the selected item.",				"",				"The breakpoints inspection shows all breakpoints installed for the current receiver.",				"Those breakpoints are either installed on the receiver's class (''e.g.'', halts) or on that specific receiver (''i.e.'', object-centric breakpoints or halts.)",				"Ticking or unticking a breakpoint in that list will activate or deactivate that breakpoint.",				"",				"The meta inspection shows methods of the receiver's class hierarchy.",				"Methods can be modified and saved in directly in that pane."			],			"category" : "NewTools-Debugger-View"		},		"StInspectionContext" : {			"hash" : 5403648,			"definition" : "Object subclass: #StInspectionContext\r\tinstanceVariableNames: 'inspectedObject active title order methodSelector evaluator'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Inspector-Model'",			"comment" : [				"An object to control the visibility and properties of inspections. ",				"It will be passed to the objects defining the inspections, in case they implement the method defined in `StInspectionContext>>#contextMethodSelector`.",				"",				"If I fail to create a presentation, I provide a debug presentation instead.",				"",				"## Example",				"If you define a method `Object>>#inspectionMeta`, you can define a context method `Object>>#inspectionMetaContext:`."			],			"category" : "NewTools-Inspector-Model"		},		"AthensCompositeStrokePaint" : {			"hash" : 3415808,			"definition" : "AthensPaint subclass: #AthensCompositeStrokePaint\r\tinstanceVariableNames: 'strokePaints withInset'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Morphic'",			"comment" : [				"I am used to convert `CompositeBorderStyle` into paint, used in Morphic. The \"withInset\" attribute defines whether each sub stroke  outlines a smaller rectangle. If not, all strokes draw the same rectangle (useful for multi-color-dashes)"			],			"category" : "Athens-Morphic"		},		"RubCharacterScanner class" : {			"hash" : 1856000,			"definition" : "RubCharacterScanner class\r\tinstanceVariableNames: ''",			"comment" : [				"I scan characters"			],			"category" : "Rubric-TextScanning"		},		"SpExecutableLayout" : {			"hash" : 2145536,			"definition" : "Object subclass: #SpExecutableLayout\r\tinstanceVariableNames: 'children selector adapter announcer'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Layout-Base'",			"comment" : [				"I'm the common root of layout. ",				"My subclasses are responsible to define the logic and the API developer will use.",				"Since the layouts require different specifications most of my code is more internal than to be used directly.",				"",				"From my methods, the ones that may interested Spec application developers are:",				"",				"- `add:withConstraints:` to add a presenter as subcomponents",				"- `remove` to remove an existing presenter from a layout.",				"",				"Note that adding and removing presenters are raising corresponding announcement `SpChildrenAdded` and `SpChildrenRemoved`. "			],			"category" : "Spec2-Layout-Base"		},		"ProgressBarMorph class" : {			"hash" : 1958912,			"definition" : "ProgressBarMorph class\r\tuses: TAbleToRotate classTrait\r\tinstanceVariableNames: ''",			"comment" : [				"Instances of this morph get used by SystemProgressMorph or a JobProgressBar to display a bar (i.e., the rectangular part of a progress bar).",				"",				"Here is an example of how to use it. ",				"",				"| p |",				"p := ProgressBarMorph from: 0 to: 200.",				"p extent: 200@20.",				"p openInWorld.",				"",				"[",				"\t(1 to: 200) do: [ :i | p value: i.  (Delay forMilliseconds: 10) wait ].",				"\tp delete ] fork",				"",				"",				"| p |",				"p := ProgressBarMorph from: 0 to: 200.",				"p extent: 600@7.",				"p openInWorld.",				"",				"[",				"\t(1 to: 200) do: [ :i | p value: i.  (Delay forMilliseconds: 5) wait ].",				"\tp delete ] fork"			],			"category" : "Morphic-Base-ProgressBar"		},		"ColorPresenterMorph" : {			"hash" : 1919232,			"definition" : "ModelMorph subclass: #ColorPresenterMorph\r\tinstanceVariableNames: 'contentMorph labelMorph solidLabelMorph getColorSelector'\r\tclassVariableNames: 'HatchForm'\r\tpackage: 'Morphic-Widgets-ColorPicker'",			"comment" : [				"Displays a colour with alpha against a white, hatched and black background."			],			"category" : "Morphic-Widgets-ColorPicker"		},		"HiSimpleRenderer" : {			"hash" : 4210688,			"definition" : "HiAbstractRenderer subclass: #HiSimpleRenderer\r\tinstanceVariableNames: 'linkDashes linkWidth nodeBorderWidth rowHeight linkCurveAngle arrowSize cellWidth nodeConnectionOffset nodeRadio colorStrategy'\r\tclassVariableNames: ''\r\tpackage: 'Hiedra-UI'",			"comment" : [				"I render a Hiedra visualization (HiRuler) in a Form using Athens. The nodes and links of the ruler will occupy the cells of an imaginary grid in the Athens canvas. ",				"",				"Decisions to render the ruler:",				"",				"* All nodes have the same appearance (radius, color, etc.).",				"* All links have the same appearance (width, color, etc.).",				"* All cells have same dimensions (width and height).",				"",				"The #accessing methods provide a way to customize the renderization.",				"",				"IMPORTANT: The #rowHeight is only rendering parameter that HAS NO DEFAULT VALUE and the user must set it with the pixel height of rows (an integer number)."			],			"category" : "Hiedra-UI"		},		"SpMorphicNotebookAdapter" : {			"hash" : 2609664,			"definition" : "SpAbstractMorphicAdapter subclass: #SpMorphicNotebookAdapter\r\tuses: SpTBackendUpdating\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Base'",			"comment" : [				"I'm an adapter to show a notebook (a tab manager)"			],			"category" : "Spec2-Adapters-Morphic-Base"		},		"OSWindowAttributes class" : {			"hash" : 4043008,			"definition" : "OSWindowAttributes class\r\tinstanceVariableNames: ''",			"comment" : [				"My instances hold a number of various attributes, used during initial window creation and its initialization:",				"",				"- initial bounds",				"- title",				"- icon",				"- screen id",				"- fullscreen or not",				"- etc...",				"",				"Please note, that depending on driver used, some attributes can be ignored by driver and will have no any effect.  ",				"",				"The preferableDriver attribute is special, that it allows user to bypass the default driver selection mechanism and tell directly, which driver shall be used for creating a window."			],			"category" : "OSWindow-Core-Base"		},		"MicStartStopMarkupBlock" : {			"hash" : 6546176,			"definition" : "MicAbstractBlock subclass: #MicStartStopMarkupBlock\r\tinstanceVariableNames: 'isClosed body firstLine'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Model'",			"comment" : [				"May be in the future we will be able to say that SameMarkup is the same as a StartStop with the same delimiter but for now we do not know. "			],			"category" : "Microdown-Model"		},		"EditorFindReplaceDialogWindow" : {			"hash" : 1939712,			"definition" : "DialogWindowMorph subclass: #EditorFindReplaceDialogWindow\r\tinstanceVariableNames: 'state textFieldMorph'\r\tclassVariableNames: 'Finds Replacements Singleton'\r\tpackage: 'Text-Edition-UI'",			"comment" : [				"A find/replace dialog window for editors"			],			"category" : "Text-Edition-UI"		},		"RSChannel" : {			"hash" : 2277376,			"definition" : "Object subclass: #RSChannel\r\tinstanceVariableNames: 'inputGroup outputGroup isClicked highlightable color isClickable marksGoUpward toggleOnCallback toggleOffCallback'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Mondrian-Connections'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcolor:\t\t<Object>",				"\thighlightable:\t\t<Object>",				"\tinputGroup:\t\t<Object>",				"\tisClickable:\t\t<Object>",				"\tisClicked:\t\t<Object>",				"\tmarksGoUpward:\t\t<Object>",				"\toutputGroup:\t\t<Object>",				"\ttoggleOffCallback:\t\t<Object>",				"\ttoggleOnCallback:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Roassal3-Mondrian-Connections"		},		"Breakpoint" : {			"hash" : 3023616,			"definition" : "Object << #Breakpoint\r\tslots: {\r\t\t\t #condition .\r\t\t\t #link .\r\t\t\t #node .\r\t\t\t #level .\r\t\t\t #options .\r\t\t\t #targetInstance => WeakSlot .\r\t\t\t #oneShot .\r\t\t\t #enabled };\r\tsharedVariables: { #AllBreakpoints };\r\ttag: 'Breakpoints';\r\tpackage: 'Reflectivity'",			"comment" : [				"A Breakpoint is an object used for stopping the execution of the program in a determined instruction, normally with debugging purposes. ",				"There are three types of breakpoints:",				"-halt once: These are triggered once, and then removed.",				"-halt always: Once installed, they have to be explicitly removed (by using #remove on the instance side, or #removeAll on class side)",				"-halt on condition: Before being installed prompts the user for a condition (a block with a boolean expression), and it is only triggered when that condition is met.",				"",				"Breakpoints are installed via SmartSuggestions menu (available for RBMethodNode, RBMessageNode and RBAssignmentNode), or programmatically:",				"",				"\"(Breakpoint inMethod: (Bar>>#foo2) inNode: ((Bar>>#foo2) ast allChildren at: 9) )",				"break: #when: withArguments: { [ RFCounter counter isZero ] }",				"\"",				""			],			"category" : "Reflectivity-Breakpoints"		},		"ExternalType class" : {			"hash" : 962304,			"definition" : "ExternalType class\r\tinstanceVariableNames: ''",			"comment" : [				"An external type represents the type of external objects.",				"",				"Instance variables:",				"\tcompiledSpec\t<WordArray>\t\tCompiled specification of the external type",				"\treferentClass\t<Behavior | nil>\tClass type of argument required",				"\treferencedType\t<ExternalType>\tAssociated (non)pointer type with the receiver",				"",				"Compiled Spec:",				"The compiled spec defines the type in terms which are understood by the VM. Each word is defined as:",				"\tbits 0...15 \t- byte size of the entity",				"\tbit 16\t\t- structure flag (FFIFlagStructure)",				"\t\t\t\t  This flag is set if the following words define a structure",				"\tbit 17\t\t- pointer flag (FFIFlagPointer)",				"\t\t\t\t  This flag is set if the entity represents a pointer to another object",				"\tbit 18\t\t- atomic flag (FFIFlagAtomic)",				"\t\t\t\t  This flag is set if the entity represents an atomic type.",				"\t\t\t\t  If the flag is set the atomic type bits are valid.",				"\tbits 19...23\t- unused",				"\tbits 24...27\t- atomic type (FFITypeVoid ... FFITypeDoubleFloat)",				"\tbits 28...31\t- unused",				"",				"Note that all combinations of the flags FFIFlagPointer, FFIFlagAtomic, and FFIFlagStructure are invalid, EXCEPT from the following:",				"",				"\tFFIFlagPointer + FFIFlagAtomic:",				"\t\tThis defines a pointer to an atomic type (e.g., 'char*', 'int*').",				"\t\tThe actual atomic type is represented in the atomic type bits.",				"",				"\tFFIFlagPointer + FFIFlagStructure:",				"\t\tThis defines a structure which is a typedef of a pointer type as in",				"\t\t\ttypedef void* VoidPointer;",				"\t\t\ttypedef Pixmap* PixmapPtr;",				"\t\tIt requires a byte size of four (e.g. a 32bit pointer) to work correctly.",				"",				"[Note: Other combinations may be allowed in the future]"			],			"category" : "FFI-Kernel"		},		"MetaLinkRegistry" : {			"hash" : 3028224,			"definition" : "Object subclass: #MetaLinkRegistry\r\tinstanceVariableNames: 'links permalinks permanentTargets slotSources'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Installer'",			"comment" : [				"I register specific kind of links that are instance specific and/or \"permanent\".",				"",				"I do not install links, i only know informations necessary to find helpful information for link installation (target instances, link count, nodes...).",				"",				"### Instance specific links",				"",				"These links are installed for a given object. ",				"",				"links <WeakKeyDictionary> I reference target objects (values) for which a link has been installed on (key)",				"",				"Note that instance specific links can be put on other nodes for other objects and/or classes. An instance specific link can also be a regular link active for all instances of an other classes, or even be put on an other node in the class of the object.",				"",				"### PermaLinks",				"",				"These links are installed on slots, temporary variables or class variables. I hold explicit specifications of all the kind of nodes the link should permanently be installed on.",				"",				"Specifications can be of kind for a given var: ",				"- #read install on all read nodes of var",				"- #write install on all assignment nodes of var ",				"- #all both read and write nodes of var",				"",				"Usecases:",				"",				"- A link is put on all reads of slot s of class C. If a new method reading s is added in C, i must hold necessary informations to find the new read nodes of s in the new method. I neither find the nodes nor install links on them myself.",				"",				"- A link is put on all assignments of slot s of class C. If a method with an assignement of s is modified in C, in must hold necessary informations to check if there is still any assignements nodes of s in this method, and update the link accordingly (i.e. reinstall it on these new nodes if they do exist)",				"",				"In both these usecases, i provide fast and convenient access to the needed informations."			],			"category" : "Reflectivity-Installer"		},		"MCOldDataStreamExtensions class" : {			"hash" : 3116032,			"definition" : "MCOldDataStreamExtensions class\r\tinstanceVariableNames: ''",			"comment" : [				"This is an extension class for the MCDataStream, it should only used if you need backward compatibility. But we have tested that is only needed because is \"copy-pasted\" code. MC is not using at all the defined types id. ",				"",				"This package is unloadeable."			],			"category" : "Monticello-OldDataStreamCompatibility-Base"		},		"TimeMeasuringTest" : {			"hash" : 3228928,			"definition" : "TestCase subclass: #TimeMeasuringTest\r\tinstanceVariableNames: 'realTime shouldProfile'\r\tclassVariableNames: ''\r\tpackage: 'Tests-Traits'",			"comment" : [				"This class contains tests"			],			"category" : "Tests-Traits"		},		"AlphaImageMorph" : {			"hash" : 580352,			"definition" : "ImageMorph subclass: #AlphaImageMorph\r\tinstanceVariableNames: 'alpha cachedForm layout scale enabled autoSize getImageSelector model'\r\tclassVariableNames: 'DefaultImage'\r\tpackage: 'Morphic-Base-Basic'",			"comment" : [				"Displays an image with the specified alpha value (translucency) and optional scale and layout (scaled, top-right etc.).",				"",				""			],			"category" : "Morphic-Base-Basic"		},		"StDebuggerTreeTablePresenter" : {			"hash" : 5528576,			"definition" : "SpTreeTablePresenter subclass: #StDebuggerTreeTablePresenter\r\tinstanceVariableNames: 'items filter counter'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Debugger-View'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcounter:\t\t<Object>",				"\tfilter:\t\t<Object>",				"\titems:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "NewTools-Debugger-View"		},		"JoinSection" : {			"hash" : 3352576,			"definition" : "Model subclass: #JoinSection\r\tinstanceVariableNames: 'src dst borderWidth borderColor type width shape additionHighlightColor removalHighlightColor'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Diff-Joins'",			"comment" : [				"A join section"			],			"category" : "Tool-Diff-Joins"		},		"SpTabLayout" : {			"hash" : 2149632,			"definition" : "SpExecutableLayout subclass: #SpTabLayout\r\tinstanceVariableNames: 'initialPageIndex'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Layout-Tab'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tinitialPageIndex:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Layout-Tab"		},		"MCMockClassA class" : {			"hash" : 4287488,			"definition" : "MCMockClassA class\r\tinstanceVariableNames: ''",			"comment" : [				"This is a mock class. The Monticello tests manipulated it to simulate a developer modifying code in the image."			],			"category" : "MonticelloMocks"		},		"StQuery" : {			"hash" : 5483776,			"definition" : "Object subclass: #StQuery\r\tinstanceVariableNames: 'query spotterContext processor modifiers'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Spotter-Processors-Query'",			"comment" : [				"I am the reification of a Spotter query.",				"I know how to parse the search string and returns the categories selected (#Classes, #Implementors, etc) and the look up string.",				"I also handle how to return the results to spotter and how to update the searching morph when a category change.",				"",				"I am updated from a Spotter context (updateFromContext:), and I update the search bar with #updateSearchingMorph.",				"",				"The processors talk with me to add results to the query, and later show them (#addResult: #informAllResultAmount:).",				"",				"I am also configurable to filter classes, implementors or add another modified."			],			"category" : "NewTools-Spotter-Processors-Query"		},		"ReSuperSendsNewRule" : {			"hash" : 3952128,			"definition" : "ReNodeMatchRule subclass: #ReSuperSendsNewRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"This rule checks for method that wrongly initialize an object twice. Contrary to other Smalltalk implementations Pharo automatically calls #initiailize on object creation.",				"A warning is raised when the statement self new initialize is found in a method."			],			"category" : "GeneralRules-Migrated"		},		"TextAction class" : {			"hash" : 1631232,			"definition" : "TextAction class\r\tinstanceVariableNames: ''",			"comment" : [				"I attach a bloc of code to a portion of text. The bloc is executed when the user clic on this portion of text.",				"",				"---- exemple 1 -----",				"| stream |",				"stream := TextStream on: (Text new: 100).",				"stream ",				"\tnextPutAll:  'Start a ';",				"\twithAttributes: {TextEmphasis underlined. TextAction new actOnClickBlock: [Smalltalk tools browser open ]}",				"\tdo: [ stream nextPutAll: 'browser' ].",				"TextMorph new ",				"\tnewContents: stream contents;",				"\topenInWindow .",				"---- exemple 2 -----",				"| stream |",				"stream := TextStream on: (Text new: 100).",				"stream ",				"\twithAttributes: {TextAction new actOnClickBlock: [:attr :event :textMorph :parag :editor | \t\t",				"\t\ttextMorph owner color: Color white.",				"\t\tparag rightFlush.",				"\t\teditor flash]}",				"\tdo: [ stream nextPutAll: 'Change me' ].",				"TextMorph new ",				"\tnewContents: stream contents;",				"\topenInWindow ."			],			"category" : "Text-Core-Attributes"		},		"PasteUpMorph" : {			"hash" : 1652992,			"definition" : "BorderedMorph subclass: #PasteUpMorph\r\tinstanceVariableNames: 'backgroundMorph worldState griddingOn'\r\tclassVariableNames: 'ShouldShowWorldMenu ShouldSwapMenuOpenerButtons WindowEventHandler WorldAnnouncer'\r\tpackage: 'Morphic-Core-Worlds'",			"comment" : [				"A morph whose submorphs comprise a paste-up of rectangular subparts which \"show through\".  Anything called a 'Playfield' is a PasteUpMorph.",				"",				"Facilities commonly needed on pages of graphical presentations and on simulation playfields, such as the painting of new objects, turtle trails, gradient fills, background paintings, parts-bin behavior, collision-detection, etc., are (or will be) provided.",				"",				"",				"",				""			],			"category" : "Morphic-Core-Worlds"		},		"ReTrueFalseDuplicationRule" : {			"hash" : 3941888,			"definition" : "ReNodeRewriteRule subclass: #ReTrueFalseDuplicationRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for ifTrue:ifFalse: blocks that have the same code at the beginning or end. While you might not originally write such code, as it is modified, it is easier to create such code. Instead of having the same code in two places, you should move it outside the blocks.",				"",				"For example, ",				"test ",				"\tifTrue: [self foo. self bar ] ",				"\tifFalse: [ self foo. self baz ]",				" is equivalent to: ",				"",				"self foo.  ",				"test ",				"\tifTrue: [ self bar ] ",				"\tifFalse: [ self baz ]"			],			"category" : "GeneralRules-Migrated"		},		"TreeColumnPresenter" : {			"hash" : 909824,			"definition" : "AbstractWidgetPresenter subclass: #TreeColumnPresenter\r\tinstanceVariableNames: 'container displayBlock initialWidth resizable headerLabel headerFont headerIcon headerAction'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"I represent a tree column. I am used to specify how to render nodes, as well as the header title, icon , action on click and properties (resizable, initial width)"			],			"category" : "Spec-Core-Widgets"		},		"CDNode" : {			"hash" : 4662528,			"definition" : "Object subclass: #CDNode\r\tinstanceVariableNames: 'parent originalNode children tokens'\r\tclassVariableNames: ''\r\tpackage: 'ClassParser-Model'",			"comment" : [				"I'm the common superclass of all the class definition nodes.",				"A class definition is an object that is built out of the message sent to a class by the class definition parser.",				"",				"I keep a reference to the original method node (originalNode) I'm created from.",				"",				"Please note the vocabulary, we use the term class definition and class definition parser to refer to the class definition only and not the class with its methods."			],			"category" : "ClassParser-Model"		},		"ScrollBarMorph" : {			"hash" : 1933568,			"definition" : "SliderMorph subclass: #ScrollBarMorph\r\tinstanceVariableNames: 'upButton downButton pagingArea scrollDelta pageDelta interval timeOfMouseDown timeOfLastScroll nextPageDirection currentScrollDelay lastPaneColor'\r\tclassVariableNames: 'ArrowImagesCache BoxesImagesCache'\r\tpackage: 'Morphic-Widgets-Scrolling'",			"comment" : [				"Inspired by an oiginal design of Hans-Martin Mosner, this ScrollBar is intended to exercise the handling of input events in Morphic.  With sufficient flexibility in this area, all particular behavior can be concentrated in this single class with no need to specialize any other morphs to achieve button, slider and menu-button behavior.",				"",				"Once we have this working, put in logic for horizontal operation as well.",				"",				"CachedImages was added to reduce the number of forms created and thrown away. This will be helpful for Nebraska and others as well."			],			"category" : "Morphic-Widgets-Scrolling"		},		"Clipboard class" : {			"hash" : 1649664,			"definition" : "Clipboard class\r\tinstanceVariableNames: ''",			"comment" : [				"I implement the entry point of the clipboard to the system.",				"",				"One of my instance is used as a default null implementation, storing the copied values in an instance variable.",				"",				"A real OSWindowClipboard will replace me, but I am still in case something is using the clipboard when there is no real OSWindow."			],			"category" : "Morphic-Core"		},		"DelaySchedulerBackgroundWorkerMorph" : {			"hash" : 4349440,			"definition" : "Morph subclass: #DelaySchedulerBackgroundWorkerMorph\r\tinstanceVariableNames: 'work stringMorph morphDeleted'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Tests-Processes'",			"comment" : [				"I provide the support to test Pharo Case 13755. Not quite sure how to plug this into the testing framewok.  Currently just run this test manually like this...",				"    DelaySchedulerBackgroundWorkerMorph new openInWorld",				"",				"which will FREEZE THE UI when using the following...",				"  * DelayMillisecondScheduler",				"  * DelayMicrosecondScheduler",				"",				"but won't freeze when using  the following...",				"  * DelayExperimentalSemaphoreScheduler",				"  * DelayExperimentalSpinScheduler",				"  * DelayExperimentalCourageousScheduler",				"",				"Close my instance morphs via halos, or evaluate the following...",				"    DelaySchedulerBackgroundWorkerMorph allInstances do: #delete.",				""			],			"category" : "Morphic-Tests-Processes"		},		"CornerRounder class" : {			"hash" : 1613568,			"definition" : "CornerRounder class\r\tinstanceVariableNames: ''",			"comment" : [				"This class is a quick hack to support rounded corners in morphic.",				"",				"Rather than produce rounded rectangles, it tweaks the display of corners.",				"Rather than work for any radius, it only supports a radius of 6.",				"Rather than work for any border width, it only supports widths 0, 1 and 2.",				"The corners, while apparently transparent, still behave opaquely to mouse clicks.",				"",				"Worse than this, the approach relies on the ability to extract underlying bits from the canvas prior to display.  This ran afoul of top-down display, it seems, in SystemWindow spawnReframeHandle: (qv).  It will also make a postscript printer very unhappy.",				"",				"But, hey, it's cute."			],			"category" : "Graphics-Canvas-Canvases"		},		"TKTFuture" : {			"hash" : 411904,			"definition" : "Object subclass: #TKTFuture\r\tinstanceVariableNames: 'result valueSemaphore resultCallbacks exceptionCallbacks runner'\r\tclassVariableNames: ''\r\tpackage: 'TaskIt-Futures'",			"comment" : [				"! TKTFuture",				"",				"In TaskIT we differentiate two different kind of tasks: some tasks are just scheduled for execution, they produce some side-effect and no result, some other tasks will produce (generally) a side-effect free value. When the result of a task is important for us, TaskIT provides us with a future object. A future is no other thing than an object that represents the future value of the task's execution. We can schedule a task with a future by using the future message on a block closure, as follows.",				"",				"[[[language=smalltalk",				"aFuture := [ 2 + 2 ] future.",				"]]]",				"",				"One way to see futures is as placeholders. When the task is finished, it deploys its result into the corresponding future. A future then provides access to its value, but since we cannot know when this value will be available, we cannot access it right away. Instead, futures provide an asynchronous way to access it's value by using callbacks. A callback is an object that will be executed when the task execution is finished.",				"",				"In general terms, we do not want to force a future to retrieve his value in a synchronous way. By doing so, we would be going back to the synchronous world, blocking a process' execution, and not exploiting concurrency. Later sections will discuss about synchronous (blocking) retrieval of a future's value.",				"A future can provide two kind of results: either the task execution was a success or a failure. A success happens when the task completes in a normal way, while a failure happens when an uncatched exception is risen in the task. Because of these distinction, futures allow the subscription of two different callbacks using the methods onSuccessDo: and onFailureDo:.",				"",				"In the example below, we create a future and subscribe to it a success callback. As soon as the task finishes, the value gets deployed in the future and the callback is called with it.",				"",				"[[[language=smalltalk",				"aFuture := [ 2 + 2 ] future.",				"aFuture onSuccessDo: [ :result | result logCr ].",				"]]]",				"",				"We can also subscribe callbacks that handle a task's failure using the onFailureDo: message. If an exception occurs and the task cannot finish its execution as expected, the corresponding exception will be passed as argument to the failure callback, as in the following example.",				"",				"[[[language=smalltalk",				"aFuture := [ Error signal ] future.",				"aFuture onFailureDo: [ :error | error sender method selector logCr ].",				"]]]",				"",				"Futures accept more than one callback. When its associated task is finished, all its callbacks will be scheduled for execution. In other words, the only guarantee that callbacks give us is that they will be all eventually executed. However, the future itself cannot guarantee neither when will the callbacks be executed, nor in which order. The following example shows how we can subscribe several success callbacks for the same future.",				"",				"[[[language=smalltalk",				"future := [ 2 + 2 ] future.",				"future onSuccessDo: [ :v | FileStream stdout nextPutAll: v asString; cr ].",				"future onSuccessDo: [ :v | 'Finished' logCr ].",				"future onSuccessDo: [ :v | [ v factorial logCr ] schedule ].",				"future onFailureDo: [ :error | error logCr ].",				"]]]",				"",				"Callbacks work wether the task is still running or already finished. If the task is running, callbacks are registered and wait for the completion of the task. If the task is already finished, the callback will be immediately scheduled with the already deployed value. See below a code examples that illustrates this: we first create a future and subscribes a callback before it is finished, then we wait for its completion and subscribe a second callback afterwards. Both callbacks are scheduled for execution.",				"",				"[[[language=smalltalk",				"future := [ 1 second wait. 2 + 2 ] future.",				"future onSuccessDo: [ :v | v logCr ].",				"",				"2 seconds wait.",				"future onSuccessDo: [ :v | v logCr ].",				"]]]",				"",				"!! Combinators",				"",				"Futures are a nice asynchronous way to obtain the results of our eventually executed tasks. However, as we do not know when tasks will finish, processing that result will be another asynchronous task that needs to start as soon as the first one finishes. To simplify the task of future management, TaskIT futures come along with some combinators.",				"",				"!!! Value combinators",				"",				"- The collect: combinator",				"The collect: combinator does, as its name says, the same than the collection's API: it transforms a result using a transformation.",				"",				"[[[language=smalltalk",				"future := [ 2 + 3 ] future.",				"(future collect: [ :number | number factorial ])",				"    onSuccessDo: [ :result | result logCr ].",				"]]]",				"",				"The collect: combinator returns a new future whose value will be the result of transforming the first future's value.",				"",				"- The select: combinator",				"The select: combinator does, as its name says, the same than the collection's API: it filters a result satisfying a condition.",				"",				"[[[language=smalltalk",				"future := [ 2 + 3 ] future.",				"(future select: [ :number | number even ])",				"    onSuccessDo: [ :result | result logCr ];",				"    onFailureDo: [ :error | error logCr ].",				"]]]",				"",				"The select: combinator returns a new future whose result is the result of the first future if it satisfies the condition. Otherwise, its value will be a NotFound exception.",				"",				"- The flatCollect:combinator",				"The flatCollect: combinator is similar to the collect: combinator, as it transforms the result of the first future using the given transformation block. However, flatCollect: excepts as the result of its transformation block a future.",				"",				"[[[language=smalltalk",				"future := [ 2 + 3 ] future.",				"(future flatCollect: [ :number | [ number factorial ] future ])",				"    onSuccessDo: [ :result | result logCr ].",				"The flatCollect: combinator returns a new future whose value will be the result the value of the future yielded by the transformation.",				"]]]",				"",				"- The zip:combinator",				"The zip: combinator combines two futures into a single future that returns an array with both results.",				"",				"[[[language=smalltalk",				"future1 := [ 2 + 3 ] future.",				"future2 := [ 18 factorial ] future.",				"(future1 zip: future2)",				"    onSuccessDo: [ :result | result logCr ].",				"]]]",				"",				"zip: works only on success: the resulting future will be a failure if any of the futures is also a failure.",				"",				"- The on:do:combinator",				"The on:do: allows us to transform a future that fails with an exception into a future with a result.",				"",				"[[[language=smalltalk",				"future := [ Error signal ] future",				"    on: Error do: [ :error | 5 ].",				"future onSuccessDo: [ :result | result logCr ].",				"]]]",				"",				"!!! Synchronization Combinators",				"",				"- The fallbackTo: combinator",				"The fallbackTo: combinator combines two futures in a way such that if the first future fails, it is the second one that will be taken into account.",				"",				"[[[language=smalltalk",				"failFuture := [ Error signal ] future.",				"successFuture := [ 1 + 1 ] future.",				"(failFuture fallbackTo: successFuture)",				"    onSuccessDo: [ :result | result logCr ].",				"]]]",				"",				"In other words, fallbackTo: produces a new future whose value is the first's future value if success, or it is the second future's value otherwise.",				"",				"- The firstCompleteOf: combinator",				"The firstCompleteOf: combinator combines two futures resulting in a new future whose value is the value of the future that finishes first, wether it is a success or a failure.",				"",				"[[[language=smalltalk",				"failFuture := [ 1 second wait. Error signal ] future.",				"successFuture := [ 1 second wait. 1 + 1 ] future.",				"(failFuture firstCompleteOf: successFuture)",				"    onSuccessDo: [ :result | result logCr ];",				"    onFailureDo: [ :error | error logCr ].",				"]]]",				"",				"In other words, fallbackTo: produces a new future whose value is the first's future value if success, or it is the second future's value otherwise.",				"",				"- The andThen: combinator",				"The andThen: combinator allows to chain several futures to a single future's value. All futures chained using the andThen: combinator are guaranteed to be executed sequenceally (in contrast to normal callbacks), and all of them will receive as value the value of the first future (instead of the of of it's preceeding future).",				"",				"[[[language=smalltalk",				"[ 1 + 1 ] future",				"    andThen: [ :result | result logCr ];",				"    andThen: [ :result | FileStream stdout nextPutAll: result ]. ",				"]]]",				"",				"This combinator is meant to enforce the order of execution of several actions, and this it is mostly for side-effect purposes where we want to guarantee such order."			],			"category" : "TaskIt-Futures"		},		"Beacon" : {			"hash" : 385280,			"definition" : "Object subclass: #Beacon\r\tinstanceVariableNames: 'announcer'\r\tclassVariableNames: 'Instance'\r\tpackage: 'Beacon-Core-Beacon'",			"comment" : [				"This is the central and the dummiest class of the Beacon logging system.",				"",				"It's a singleton class that holds an announcer instance. Its goal is purely to serve as a central beacon through which all signals pass. It works together with `Announcement>>#emit`.",				"",				"By itself, it does not do anything useful. Other `SignalLogger`s are meant to register to its announcer and link the announcements to something useful."			],			"category" : "Beacon-Core-Beacon"		},		"RSAbstractBarPlot" : {			"hash" : 5806336,			"definition" : "RSAbstractPlot subclass: #RSAbstractBarPlot\r\tinstanceVariableNames: 'barSize bars gapRatio barOffset'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Core'",			"comment" : [				"The abstract class for bar plots"			],			"category" : "Roassal3-Chart-Core"		},		"ImagePreviewMorph" : {			"hash" : 582912,			"definition" : "Morph subclass: #ImagePreviewMorph\r\tinstanceVariableNames: 'imageMorph textMorph defaultImageForm'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Basic'",			"comment" : [				"Displays an image scaled to a fixed size along with a label describing the original dimensions."			],			"category" : "Morphic-Base-Basic"		},		"DAAbstractItemDiff" : {			"hash" : 1775360,			"definition" : "Object subclass: #DAAbstractItemDiff\r\tinstanceVariableNames: 'new underteminate content diff removed'\r\tclassVariableNames: ''\r\tpackage: 'Tool-DependencyAnalyser-Diff'",			"comment" : [				"A PDAbstractItemDiff is a object which represent an item who added/modified/removed from an old analysis."			],			"category" : "Tool-DependencyAnalyser-Diff"		},		"ReCodeCruftLeftInMethodsRule" : {			"hash" : 3933696,			"definition" : "ReNodeRewriteRule subclass: #ReCodeCruftLeftInMethodsRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"This smell arises when a breakpoint,  logging statement,  etc is found in a method. This debugging code should not be left in production code.  Here are messages currently checked: clearHaltOnce,  doOnlyOnce: ,  halt, halt:   onCount:  object2, haltOnCount: , haltOnce, hatIf: , inspectOnCount: , inspectOnce, inspectUntilCount: , rearmOneShot, setHaltOnce, flag: , isThisEverCalled, isThisEverCalled: , logEntry, logExecution, logExit, needsWork and Transcript  messages."			],			"category" : "GeneralRules-Migrated"		},		"PragmaCollector" : {			"hash" : 1457920,			"definition" : "Model subclass: #PragmaCollector\r\tinstanceVariableNames: 'collected filter announcing selectors'\r\tclassVariableNames: ''\r\tpackage: 'PragmaCollector-Base'",			"comment" : [				"Note: In most cases it is better to use the class side methods of Pragma instead.",				"",				"PragmaCollector is useful if a client needs to be notified if pragmas are added or removed.",				"If you do not store the PragmaCollector instance, you most likely can just use the API of Pragma directly.",				"",				"A PragmaCollector is used in order to collect some Pragma instances. A PragmaCollector makes use of SystemChangeNotifier event notifications in order to maintain its contents up-to-date according to its filter: when a method is added, removed or updated, if the method is defined with a pragma which is acceptable according to its filter, then the collector contents is updated. A PragmaCollector makes use of an announcer in order to notify all registered listeners when a pragma is added, removed or updated. A PragmaAnnouncement is announced when a Pragma is added, removed or updated. Corresponding announcement classes are, respectiveley, PragmaAdded, PragmaRemoved and PragmaUpdated. ",				"",				"The filter is applied to all Pragmas or (faster) pragmas with the selectors defined by #selectors:.",				"",				"Explore the result of the expression below. In the collected instance variable should be stored all pragmas of the system:",				"---------------------------",				"(PragmaCollector filter: [:pragma | true]) reset",				"---------------------------",				"",				"In the following example, collected pragma are thoses with the 'primitive:' selector (<primitive:>)",				"---------------------------",				"(PragmaCollector filter: [:prg | prg selector = 'primitive:']) reset.",				"---------------------------",				"",				"In this case it is faster to specify selectors via #selector, as this avoids to iterate over all Pragmas of the system:",				"",				"---------------------------",				"(PragmaCollector selectors: #(primitive:)) reset",				"---------------------------",				"",				"We can specify both the selectors and an additional filter, e.g. filter for all Pragmas named primitive: in methods that have one Argument:",				" ",				"---------------------------",				"(PragmaCollector ",				"\tselectors: #(primitive:) ",				"\tfilter: [:prg | prg methodSelector numArgs = 1] ) reset",				"---------------------------",				"",				"Instance Variables\t",				"\tannouncer:\t\t<Announcer>\t",				"\tcollected:\t\t<Collection>",				"\tfilter:\t\t\t<Block or MessageSend>",				"\tselector:      <Array of symbols>",				"\t\t\t\t",				"announcer",				"\tthe announcer which is used to announce the adding, the removing or the updating of a method with an acceptable pragma declaration",				"",				"collected\t\t",				"\tthe current collection of Pragma",				"\t",				"filter",				"\ta block or a message send which is used in order to filter the pragma. This is a one argument valuable. When evaluated, the candidate pragam is passed as argument and the result must be a boolean. ",				"\t"			],			"category" : "PragmaCollector-Base"		},		"RGOrganization" : {			"hash" : 1335296,			"definition" : "RGAbstractContainer subclass: #RGOrganization\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Ring-Definitions-Containers-Base'",			"comment" : [				"An organization with categories"			],			"category" : "Ring-Definitions-Containers-Base"		},		"RSPolygon" : {			"hash" : 5677312,			"definition" : "RSBoundingShape subclass: #RSPolygon\r\tinstanceVariableNames: 'points radius'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Bounding'",			"comment" : [				"Define a polygon shape, ready to be added to a Roassal canvas.",				"",				"For example:",				"```",				"c := RSCanvas new.",				"",				"polygon := RSPolygon new",				"\t\tpoints: { 0 @ -50 . 50 @ 0 . -50 @ 0 };",				"\t\tcolor: 'FFAE0B'.",				"polygon cornerRadii: 5.",				"\t\t",				"",				"polygon2 := RSPolygon new",				"\t\tpoints: { 0 @ -50 . 50 @ 0 . -50 @ 0 };",				"\t\tcolor: Color red translucent.",				"\t\t",				"polygon2 rotateByDegrees: 90.",				"polygon2 translateBy: 0 @ -50.",				"",				"c add: polygon.",				"c add: polygon2.",				"",				"c",				"```"			],			"category" : "Roassal3-Shapes-Bounding"		},		"SpMenuPresenter" : {			"hash" : 2219776,			"definition" : "SpAbstractWidgetPresenter << #SpMenuPresenter\r\tslots: {\r\t\t\t #groups .\r\t\t\t #title => ObservableSlot .\r\t\t\t #icon .\r\t\t\t #autoRefresh => ObservableSlot .\r\t\t\t #shortcutGroup .\r\t\t\t #defaultGroup };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter to describe a menu.",				"A menu presenter contains groups of menu items (having one unique group by default, to simplify building simple menus).",				"A menu presenter is included in presenters that implement the `#contextMenu:` (See below) method, but it can also be invoked by calling `SpMenuPresenter>>#openWithSpecAt:`"			],			"category" : "Spec2-Core-Widgets"		},		"OSMouseEvent" : {			"hash" : 4010496,			"definition" : "OSEvent subclass: #OSMouseEvent\r\tinstanceVariableNames: 'position delta modifiers'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Events'",			"comment" : [				"i am the root of various mouse events.",				"",				"Note, that my subclasses care to represent only the most basic events, not the synthethic ones, like click or double-click, which are result of interpreting the sequence of raw events."			],			"category" : "OSWindow-Core-Events"		},		"FLClusterization" : {			"hash" : 541952,			"definition" : "Object subclass: #FLClusterization\r\tinstanceVariableNames: 'baselevelBucket substitutionsBucket globalsBucket metalevelInstanceSideBucket metalevelClassSideBucket primitivesBucket postBaselevelBucket'\r\tclassVariableNames: ''\r\tpackage: 'Fuel-Core-Base'",			"comment" : [				"I manage the clusters collected during the analysis step of serialization."			],			"category" : "Fuel-Core-Base"		},		"ProtoObject" : {			"hash" : 801024,			"definition" : "ProtoObject subclass: #ProtoObject\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Objects'.\rProtoObject superclass: nil",			"comment" : [				"ProtoObject establishes minimal behavior required of any object in Pharo, even objects that should balk at normal object behavior. ",				"",				"Generally these are proxy objects designed to read themselves in from the disk, or to perform some wrapper behavior, before responding to a message. ",				"",				"ProtoObject has no instance variables, nor should any be added."			],			"category" : "Kernel-Objects"		},		"ClyAsyncQuery" : {			"hash" : 4851200,			"definition" : "ClyWrapperQuery subclass: #ClyAsyncQuery\r\tinstanceVariableNames: 'asyncResult'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-NavigationModel-Query'",			"comment" : [				"I run my subquery using background process.",				"I do not implement #buildResult: as other queries. ",				"Instead I return special ClyAsyncQueryResult instance to represent result of execution. ",				"Async result overrides building logic in the way that it forks actual query execution and updates itself when execution completes. For details look at this class.",				"So I only implement hook which triggers background execution of actual query.",				"",				"Any query can be converted to async query using:",				"",				"\taQuery async ",				"\t",				"It returns instance of me. And in case when I am receiver I just return myself.",				"",				"There is special mode to emulate sync execution of fast queries. To activate it use #semyAsync message instead of simple #async: ",				"",				"\taQuery semiAsync ",				"",				"It will return my instance configured with ClySemiAsyncQueryResult. So during execution it will be used instead of simple ClyAsyncQueryResult.",				"The idea of semi async execution is to wait half seconds until query will be executed. If this time is enough (which is true for fast queries) then for users it will look like normal syncronous execution. But otherwise it will be asyncronous execution and returned result will indicate progress.",				"",				"The concrete type of async result is holden in asyncResult variable.",				"",				"While I am executed users can check the execution state. A ClyAsyncQueryResult is returned from #execute method which can be checked for the status:",				"",				"\taQuery execute isBuilt",				"\t",				"It returns true only when execution is completed.",				"",				"For the empty test (#checkEmptyResult) I always return false when execution is still in progress. Idea that we do not know exactly if result would be empty or not. And for many scenarios it is convenient to get false in that case.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tasyncResult:\t\t<ClyAsyncQueryResult>"			],			"category" : "Calypso-NavigationModel-Query"		},		"ClyMethodTagsAndPackageEditorMorph" : {			"hash" : 5129216,			"definition" : "ClyStatusBarItemMorph subclass: #ClyMethodTagsAndPackageEditorMorph\r\tinstanceVariableNames: 'extensionCheckbox editButton label resetButton'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemTools-Core-Editors-Methods'",			"comment" : [				"I am status bar tool for method editors to select method tags or extending package for the editing method.",				"",				"While system only support tags when method is not extension I do not show both elements.",				"So I provide checkbox for extension status.",				"When it is active I should extending package in the label.",				"When it is not active I show method tag (protocol) in the label.",				"",				"When user toggle checkbox I request either package or protocol depending on requested mode of method.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\teditButton:\t\t<Morph>",				"\textensionCheckbox:\t\t<Morph>",				"\tlabel:\t\t<StringMorph>"			],			"category" : "Calypso-SystemTools-Core-Editors-Methods"		},		"MorphTreeTransformMorph" : {			"hash" : 614656,			"definition" : "TransformMorph subclass: #MorphTreeTransformMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Tree'",			"comment" : [				"A custom transform morph for a morphic based tree"			],			"category" : "Morphic-Widgets-Tree"		},		"SpNotebookPresenter" : {			"hash" : 2220800,			"definition" : "SpAbstractWidgetPresenter << #SpNotebookPresenter\r\tslots: {\r\t\t\t #pagesHolder .\r\t\t\t #selectedPage => ObservableSlot };\r\ttag: 'Widgets-Tab';\r\tpackage: 'Spec2-Core'",			"comment" : [				"I'm a presenter for a tabbed notebook container. ",				"This is a container whos children are pages (instances of `SpNotebookPage`), which have a title and a content."			],			"category" : "Spec2-Core-Widgets-Tab"		},		"RBClassEnvironment" : {			"hash" : 3132160,			"definition" : "RBBrowserEnvironmentWrapper subclass: #RBClassEnvironment\r\tinstanceVariableNames: 'classes metaClasses'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Environment'",			"comment" : [				"I am a RBBrowserEnvironment on a set of classes.",				"I containt all entities of this set.",				"",				"Example:",				"(RBBrowserEnvironment new) forClasses: Number withAllSubclasses."			],			"category" : "Refactoring-Environment"		},		"AbstractResizerMorph" : {			"hash" : 563456,			"definition" : "Morph subclass: #AbstractResizerMorph\r\tinstanceVariableNames: 'dotColor handleColor lastMouse'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Windows-Resizing'",			"comment" : [				"I am the superclass of a hierarchy of morph specialized in allowing the user to resize or rearrange windows and panes."			],			"category" : "Morphic-Widgets-Windows-Resizing"		},		"PharoChangesCondenser" : {			"hash" : 1205248,			"definition" : "Object subclass: #PharoChangesCondenser\r\tinstanceVariableNames: 'newChangesFile stream job remoteStringMap sourceStreams'\r\tclassVariableNames: ''\r\tpackage: 'System-SourcesCondenser'",			"comment" : [				"I create a new more compact changes files with a single version of each method in the image."			],			"category" : "System-SourcesCondenser"		},		"CDBehaviorDefinitionNode" : {			"hash" : 4668160,			"definition" : "CDNode subclass: #CDBehaviorDefinitionNode\r\tinstanceVariableNames: 'classNameNode slotNodes traitDefinition className layoutClass'\r\tclassVariableNames: ''\r\tpackage: 'ClassParser-Model'",			"comment" : [				"I contain the methods shared between class and meta class definition."			],			"category" : "ClassParser-Model"		},		"MD5NonPrimitive class" : {			"hash" : 1027072,			"definition" : "MD5NonPrimitive class\r\tinstanceVariableNames: ''",			"comment" : [				"This class implements the MD5 128-bit one-way hash function.  It relies on",				"the ThirtyTwoBitRegister class supplied as part of the \"Digital Signatures\"",				"functionality included in Squeak 2.7.  As of this date (1/20/2000), the",				"U.S. Government has lifted many of the previous restrictions on the export",				"of encryption software, but you should check before exporting anything",				"including this code.  MD5 is commonly used for some secure Internet",				"protocols, including authentication in HTTP, which is why I wrote it.",				"",				"Submitted by Duane Maxwell",				""			],			"category" : "System-Hashing-MD5"		},		"OSKeyboardEvent" : {			"hash" : 4008960,			"definition" : "OSEvent subclass: #OSKeyboardEvent\r\tinstanceVariableNames: 'scanCode symbol character modifiers position repeat handled'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Events'",			"comment" : [				"i am the root of keyboard events hierarchy.",				"",				"The scan code represents an unique number identifying a key and comes directly from OS.",				"Some keys can be directly translated to corresponding character(s) by OS and thus such events will carry character ~= nil.  Character translation is not reliable with this event because many characters are introduced by using multiples key strokes. For a reliable way for getting text input, it is better to listen for the OSTextInputEvent.",				"",				"character - An character representation of the key.",				"modifiers - Extra flags telling if special keys such as ctrl, alt, cmd, etc are being held.",				"position - The position of the mouse cursor when the key was pressed.",				"scanCode - Raw keyboard scan scode.",				"repeat - This value is non-zero if this event was originated by a repeated key stroke.",				"symbol - A virtual platform independent identifier for a keyboard key. Valid values are defined in the OSKeySymbols pool dictionary."			],			"category" : "OSWindow-Core-Events"		},		"GLMOSWindowWorldMorph" : {			"hash" : 4000256,			"definition" : "OSWindowWorldMorphWithModel subclass: #GLMOSWindowWorldMorph\r\tinstanceVariableNames: 'toolbarBox'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Morphic'",			"comment" : [				"I am an OSWindow world morph that is used by Glamour to display its content in a external OSWindow.",				"",				"Usage examples:",				"",				"GTInspector new openInExternalWindowOn: 3.",				"",				"3 inspectInExternalWindow."			],			"category" : "OSWindow-Core-Morphic"		},		"RSEvent" : {			"hash" : 5645056,			"definition" : "Announcement subclass: #RSEvent\r\tinstanceVariableNames: 'canvas morph shape timeStamp'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Event'",			"comment" : [				"<keyClass>",				"`RSEvent` is the root of all the events handled by Roassal. Events are expressed as an instance of a subclass of `RSEvent`. Some events describe the actions made by the users (e.g., `RSMouseDragEnd`), some other event describes some state change of a shape (e.g., `RSShapeAddedEvent`, `RSHighlightEvent`).",				"",				"*Responsibility*: model an event triggered either by a user action or a state change.",				"",				"*Collaborators*: events are emitted by `RSAthensMorph` or by some interaction (e.g., `RSHighlightable`)",				"",				"*Variables*:",				"- `canvas`: the `RSCanvas` ",				"- `morph`: the `RSAthensMorph` ",				"- `shape`: the shape related to the event",				"  "			],			"category" : "Roassal3-Event"		},		"RubSmalltalkEditor" : {			"hash" : 1871104,			"definition" : "RubTextEditor subclass: #RubSmalltalkEditor\r\tinstanceVariableNames: 'notificationStrategy completionEngine'\r\tclassVariableNames: 'CompletionEngineClass'\r\tpackage: 'Rubric-Editing-Code'",			"comment" : [				"I am the editor for smalltalk code, I allow to browse, execute etc"			],			"category" : "Rubric-Editing-Code"		},		"MemoryLogger" : {			"hash" : 386304,			"definition" : "SignalLogger subclass: #MemoryLogger\r\tinstanceVariableNames: 'recordings announcer mutex'\r\tclassVariableNames: 'WriteFilename WritePeriod WriteProcess'\r\tpackage: 'Beacon-Core-Loggers'",			"comment" : [				"This signal logger simply records the signals that it receives.",				"",				"###Example1: Instance usage",				"",				"```",				"\t(MemoryLogger new ",				"\t\trunDuring: [ ",				"\t\t\tStringSignal emit: 'This is a message' ]\t)",				"\t\t\t\tinspect.",				"```",				"",				"###Example 2: Global usage",				"",				"```",				"\tMemoryLogger reset.",				"\tMemoryLogger start.",				"\tStringSignal emit: 'This is a message' .",				"\tMemoryLogger instance recordings inspect.",				"\tMemoryLogger stop.",				"```"			],			"category" : "Beacon-Core-Loggers"		},		"Character class" : {			"hash" : 788992,			"definition" : "Character class\r\tinstanceVariableNames: ''",			"comment" : [				"I represent a character by storing its associated Unicode. The first 256 characters are created uniquely, so that all instances of latin1 characters ($R, for example) are identical.",				"",				"The code point is based on Unicode. Since Unicode is 21-bit wide character set, we have several bits available for other information.  As the Unicode Standard  states, a Unicode code point doesn't carry the language information.  This is going to be a problem with the languages so called CJK (Chinese, Japanese, Korean.  Or often CJKV including Vietnamese).  Since the characters of those languages are unified and given the same code point, it is impossible to display a bare Unicode code point in an inspector or such tools.  To utilize the extra available bits, we use them for identifying the languages.  Since the old implementation uses the bits to identify the character encoding, the bits are sometimes called \"encoding tag\" or neutrally \"leading char\", but the bits rigidly denotes the concept of languages.",				"",				"The other languages can have the language tag if you like.  This will help to break the large default font (font set) into separately loadable chunk of fonts.  However, it is open to the each native speakers and writers to decide how to define the character equality, since the same Unicode code point may have different language tag thus simple #= comparison may return false.",				"",				"I represent a character by storing its associated ASCII code (extended to 256 codes). My instances are created uniquely, so that all instances of a character ($R, for example) are identical."			],			"category" : "Kernel-BasicObjects"		},		"RSInterference" : {			"hash" : 2285568,			"definition" : "RSObject subclass: #RSInterference\r\tinstanceVariableNames: 'position mode radius'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-Force'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Experimental-Force"		},		"RBEnglobingErrorNode" : {			"hash" : 1185280,			"definition" : "RBParseErrorNode subclass: #RBEnglobingErrorNode\r\tinstanceVariableNames: 'content'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Nodes - ErrorNodes'",			"comment" : [				"I am a node representing a source code segment that parsed but never used in a node because of an unexpected error at the end. I am mainly used for source-code coloring and icon styling where all the code parsed should be colored normaly but underlined as part of the error.",				"This node also propose a reparation research.",				"",				"Parsing faulty code without raising a syntax error is done by ",				"RBParser parseFaultyExpression:",				"or",				"RBParser parseFaultyMethod: ",				"",				"Accessing to the parsed nodes contained inside the node is the method 'content'.",				""			],			"category" : "AST-Core-Nodes - ErrorNodes"		},		"RPackageOrganizer" : {			"hash" : 1100544,			"definition" : "Object subclass: #RPackageOrganizer\r\tinstanceVariableNames: 'classPackageMapping packages classExtendingPackagesMapping debuggingName packageNames'\r\tclassVariableNames: ''\r\tpackage: 'RPackage-Core-Base'",			"comment" : [				"A RPackageOrganizer is responsible for providing all the package currently defined in the system.",				"In addition it provides a back pointer from the class to its package.",				"",				"The classPackageMapping and the classExtendingPackageMapping should be moved in the future to the classes themselves. ",				"",				"",				"For tests or actions that could destroy the package organizer,  do not access directly the singleton of RPackageOrganizer.",				"Use instead ",				"\t\tRPackage withOrganizer: aNewOrganizer do: ablock",				"\t\t\tor via RPackage organizer",				"\t\t",				"\t",				"RPackageOrganizer fillUp will fill up the system from the current PackageOrganizer",				"\t\"self fillUp\"",				"\t",				"-----------------------------------------------------------------------------------------------------------------------------------------------\t",				"\t",				"\t",				"A rpackageOrganizer update itself when some changes are made in the system. It does that by registering to a systemAnnoucer, specifying an action when an annoucement is triggered.",				"Here is what I (Cyrille Delaunay) propose to do for each annocuement triggered:",				"",				"SystemCategoryAddedAnnouncement \t",				"\t=> I would just register a new RPackage (if it does not already exist) in the RPackageOrganizer",				"\t",				"SystemCategoryRemovedAnnouncement ",				"     => I would just unregister the RPackage concerned from the organizer",				"",				"SystemCategoryRenamedAnnouncement",				"     => I would update the RPackage concerned, by changing its name",				"     => I would update the 'packages' dictionary of the organizer, putting the new name as key",				"",				"SystemClassAddedAnnouncement ",				"    => Import the class in the RPackage concerned (RPackage >> importClass:)",				"    => Register the class in the 'classPackageMapping' dictionary of the organizer (RPackageOrganizer >> registerPackage:forClass)",				"    (=> maybe we should pay attention if both the class and the metaclass launch this kind of event ?)",				"",				"SystemClassRecategorizedAnnouncement",				"    => I would update the old RPackage concerned:",				"            => unregister the class",				"            => unregister all defined methods of the class",				"    => I would update the new RPackage:",				"            => Import the class in the RPackage (importClass:)",				"    => I would update the organizer:",				"            => update the 'classPackageDictionary' to point on the new RPackage",				"",				" ",				"SystemClassRemovedAnnouncement",				"    => I would update the RPackake concerned",				"             => unregister the class",				"             => unregister all defined methods of the class",				"    => I would update the organizer:",				"             => update the 'classPackageDictionary' to remove the class",				"",				"SystemClassRenamedAnnouncement",				"    => I would update the RPackage in which the class is defined:",				"             => update the 'classDefinedSelectors' dictionary (replace the old key by the new one)",				"             => update the 'metaclassDefinedSelectors' dictionary (replace the old key by the new one)",				"    => I would update all RPackages extending this class",				"             => update the 'classExtensionsSelectors' dictionary (replace the old key by the new one)",				"             => update the 'metaclassclassExtensionsSelectors' dictionary (replace the old key by the new one)",				"    => I would update the organizer",				"             => update the 'classPackageDictionary' to replace the key with the new class name",				"             => update the 'classExtendingPackagesMapping' to replace the key with the new class name",				"                          ",				"SystemClassReorganizedAnnouncement ",				"    (=> I guess we should check if extensions have not been added or removed ? ",				"      (to retrieve this information, the only thing I found is ClassDescription >> organization, and then check each category begining with '*' and compare with the organizer. seems to be painful, no?))",				"\t=> when an extension is removed, all methods inside are removed. Therefore, the MethodRemovedAnnounecement will do the job. Not sur this one still usefull",				"",				"SystemProtocolAddedAnnouncement",				"    => I don't see anything to do for this annoucement",				"",				"SystemProtocolRemovedAnnoucement",				"    => If the category is an extension from a package, I would move all the methods concerned, from the extending RPackage to the class RPackage",				"",				"SystemMethodAddedAnnouncement",				"       => I would check the category in which the method has been defined",				"               => if it correspond to an extending package -> add the method to the extending RPackage",				"               => if not, add the method to the class parentPackage",				"",				"SystemMethodModifiedAnnouncement",				"       this annoucement can correspond to several kind of modifications:",				"\t       *  a method has been renamed",				"                       => I would update the rPackage in which the method is defined to replace the old selector by the new one",				"\t\t* a method has been move to another category ",				"\t\t\t-maybe from a classic category to an extending package",				"                             => we should move the method from the  method class parentPackage to extendingPackage package",				"\t\t\t-maybe from an extending package to another extending package",				"                             => we should move the method from the  extendingPackage package to the other extendingPackage package",				"\t\t\t-maybe from an extending package to a classic category",				"                             =>  we should move the method from the  extendingPackage to the method class parentPackage",				"\t\t        -maybe from a classic category to another classic category",				"                             => we have nothing to do",				"\t\t\t",				"",				"SystemMethodRecategorizedAnnouncement",				"          same thing than above",				"",				"SystemMethodRemovedAnnouncement",				"       => I would simply remove the method from the RPackage in which it is register"			],			"category" : "RPackage-Core-Base"		},		"ClyMainItemCellMorph" : {			"hash" : 5100288,			"definition" : "ClyItemCellMorph subclass: #ClyMainItemCellMorph\r\tinstanceVariableNames: 'item definitionMorph extraToolMorphs itemDepth fullIndentation'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-Table'",			"comment" : [				"I represent main cell in table row. ",				"I responsible to show expansion icon, current depth indentation when tree structure is specified.",				"I allow to decorate me with",				"- definition morph which will be placed before label",				"\tcellMorph definitionMorph: aMorph",				"\tcellMorph definitionIcon: iconName",				"- extraToolMorphs which will be placed after label",				"\tcellMorph addExtraTool: aMorph",				"\tcellMorph addExtraIcon: iconName",				"- any kind of properties for my label",				"\tcellMorph label emphasis: TextEmphasis italic emphasisCode.",				"",				"I implement layout logic in method #build.",				"",				"My instances are created using:",				"\tClyMainItemCellMorph on: aDataSourceItem",				"",				"I provide two identation strategies which you can switch using fullIndentation variable.",				"In full identation mode children items are shifted together with collapsing button.",				"Otherwise collapsion button is always in same place but label and icons are shifted.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tdefinitionMorph:\t\t<Morph>",				"\textraToolMorphs:\t\t<OrderedCollection of<Morph>>",				"\titem:\t\t<ClyDataSourceItem>",				"\titemDepth:\t\t<Integer>",				"\tfullIndentation: <Boolean>"			],			"category" : "Calypso-Browser-Table"		},		"IceGitHubRemoveBranchesAction" : {			"hash" : 6462720,			"definition" : "IceGitHubAction subclass: #IceGitHubRemoveBranchesAction\r\tinstanceVariableNames: 'branches branchesByName'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Plugin-GitHub-Commands'",			"comment" : [				"I'm an action to remove branches from remotes."			],			"category" : "Iceberg-Plugin-GitHub-Commands"		},		"TKTQueueTaskScheduler" : {			"hash" : 417024,			"definition" : "Object subclass: #TKTQueueTaskScheduler\r\tuses: TTaskScheduler\r\tinstanceVariableNames: 'queue'\r\tclassVariableNames: ''\r\tpackage: 'TaskIt-Worker'",			"comment" : [				"I am an abstract task scheduler that schedules tasks inside a queue to be consumed afterwards"			],			"category" : "TaskIt-Worker"		},		"NECTestClass class" : {			"hash" : 4358912,			"definition" : "NECTestClass class\r\tinstanceVariableNames: ''",			"comment" : [				"I'm only for SUnit TestCases."			],			"category" : "NECompletion-Tests"		},		"ReAssertEqualSignIntoAssertEqualsRule" : {			"hash" : 4129536,			"definition" : "ReNodeRewriteRule subclass: #ReAssertEqualSignIntoAssertEqualsRule\r\tuses: ReTSUnitGroupedRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'SUnit-Rules-Base'",			"comment" : [				"Using assert:equals: produces better context on rule failure"			],			"category" : "SUnit-Rules-Base"		},		"KMStorage" : {			"hash" : 1835776,			"definition" : "Object subclass: #KMStorage\r\tinstanceVariableNames: 'namedRegistry anonymousRegistry'\r\tclassVariableNames: ''\r\tpackage: 'Keymapping-Core-Base'",			"comment" : [				"I am a storage of shortcuts. I store and provide facilities to access named and annonimous shortcuts."			],			"category" : "Keymapping-Core-Base"		},		"MCFileTreeFileSystemUtils class" : {			"hash" : 333312,			"definition" : "MCFileTreeFileSystemUtils class\r\tinstanceVariableNames: ''",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "MonticelloFileTree-FileSystem-Utilities"		},		"FLSerializer" : {			"hash" : 548608,			"definition" : "Object subclass: #FLSerializer\r\tinstanceVariableNames: 'analyzer serializationFactory signature version stream header'\r\tclassVariableNames: ''\r\tpackage: 'Fuel-Core-Base'",			"comment" : [				"I am a binary object serializer.",				"",				"An example of use:",				"",				"| sourceArray loadedArray |",				"sourceArray := ",				"\tArray ",				"\t\twith: 'a string' ",				"\t\twith: Transcript",				"\t\twith: [ Transcript show: 'a string' ].",				"",				"\"Store to the file\"",				"FLSerializer serialize: sourceArray toFileNamed: 'example.FL'. ",				"",				"\"Load from the file\"",				"loadedArray := FLMaterializer materializeFromFileNamed: 'example.FL'. ",				"",				"\"The arrays are not the same\"",				"[ sourceArray ~~ loadedArray ] assert.",				"",				"\"The strings are not the same\"",				"[ sourceArray first ~~ loadedArray first ] assert.",				"[ sourceArray first = loadedArray first ] assert.",				"",				"\"The global instance Transcript is the same\"",				"[ sourceArray second == loadedArray second ] assert.",				"",				"\"Appreciate in Transcript that the loaded block prints a string\"",				"loadedArray third value."			],			"category" : "Fuel-Core-Base"		},		"IceTipSpCommand" : {			"hash" : 6355200,			"definition" : "CmUICommand subclass: #IceTipSpCommand\r\tinstanceVariableNames: 'presenterBuildingStrategy'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-Spec2'",			"comment" : [				"I am a CmUICommand that is specialized for Iceberg UI. ",				"",				"In particular, I'm used to wrap instances of IceTipCommand in a IceTipBrowser."			],			"category" : "Iceberg-TipUI-Spec2"		},		"ClyMethodGroup" : {			"hash" : 4933120,			"definition" : "ClyItemGroup subclass: #ClyMethodGroup\r\tinstanceVariableNames: 'methodQuery subgroupsQuery'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemQueries-Domain'",			"comment" : [				"I am the root of the method group hierarchy.",				"",				" method group is created on a method query:",				"",				"\tClyMethodGroup named: 'some group' on: aMethodQuery",				"",				"A method query can also be a composite, and should return methods in any case.",				"",				"Also, a method group can be expanded into subgroups using subgroupsQuery, which you can specify using this other instance creation method: ",				"",				"\tClyMethodGroup named: 'some group' on: aMethodQuery withSubgroupsFrom: aQuery\t",				"",				"There are additional constructors to specify the group's priority:",				"",				"\tClyMethodGroup named: 'some group' priority: 20 on: aMethodQuery.",				"\tClyMethodGroup named: 'some group' priority: 20 on: aMethodQuery withSubgroupsFrom: aQuery",				"",				"In the browser, groups are sorted by descending priority and then by name.",				"",				"I provide several methods to implement various commands: ",				"",				"- importMethod: aMethod",				"It is supposed to modify aMethod, making it part of the group.",				"",				"- importMethods: methods ",				"Same as above, but for multiple methods",				"\t\t ",				"- removeWithMethods",				"It removes all methods and should ensure that groups will be removed too which is true for all virtual groups.",				"",				"And I provide #includesMethod:, which is used in the browser to highlight groups which contains selected method(s).",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tmethodQuery:\t\t<ClyMethodQuery>",				"\tsubgroupsQuery:\t\t<ClyQuery>"			],			"category" : "Calypso-SystemQueries-Domain"		},		"SpActionBarPresenterBuilder" : {			"hash" : 2396416,			"definition" : "CmVisitor subclass: #SpActionBarPresenterBuilder\r\tinstanceVariableNames: 'actionBarPresenter'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Commander2-Visitors'",			"comment" : [				"I build a ActionBarPresenter from a group of commands.",				"",				"To do that, I visit recursively groups of command breadth first and simple add each command encountered to the action bar."			],			"category" : "Spec2-Commander2-Visitors"		},		"VTermOutputStyle" : {			"hash" : 1171456,			"definition" : "Object subclass: #VTermOutputStyle\r\tinstanceVariableNames: 'font background styles'\r\tclassVariableNames: ''\r\tpackage: 'System-CommandLine-VTerm-Styling'",			"comment" : [				"I'm the style of a VTermOutputDriver.",				"I have a font, a background and a styles and I'm able to modify them to change the color of font (for example) or to add styles",				"I can't delete my styles, to get a basic VTermOutputStyle you must create a new one."			],			"category" : "System-CommandLine-VTerm-Styling"		},		"TextConstants class" : {			"hash" : 1640960,			"definition" : "TextConstants class\r\tinstanceVariableNames: ''",			"comment" : [				"A pool for Text constants for space, tab, espace, ..."			],			"category" : "Text-Core-Base"		},		"QuoRemComplementary" : {			"hash" : 2319360,			"definition" : "Magnitude subclass: #QuoRemComplementary\r\tinstanceVariableNames: 'a b ratio quo rem'\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Numbers'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\ta:\t\t<Object>",				"\tb:\t\t<Object>",				"\tquo:\t\t<Object>",				"\tratio:\t\t<Object>",				"\trem:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Containers-Essentials-Numbers"		},		"SpProgressDialog" : {			"hash" : 2335488,			"definition" : "SpDialogPresenter subclass: #SpProgressDialog\r\tinstanceVariableNames: 'title label progressBar maxValue openAction'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Dialogs'",			"comment" : [				"A dialog to show a message and a progress bar."			],			"category" : "Spec2-Dialogs"		},		"AbstractMethodReferenceConverter" : {			"hash" : 712960,			"definition" : "AbstractMethodConverter subclass: #AbstractMethodReferenceConverter\r\tinstanceVariableNames: 'referencesList'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Base-Converter'",			"comment" : [				"Abstract wrapper for method references"			],			"category" : "Tool-Base-Converter"		},		"TreeNavigationBarMorph" : {			"hash" : 1965824,			"definition" : "BorderedMorph subclass: #TreeNavigationBarMorph\r\tinstanceVariableNames: 'treeMorph pageSize computedHeight withSearch pageSearchText'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Tree-Pagination'",			"comment" : [				"I'm a pager control used to navigate in a MorphTreeMorph that has a lot of entries.",				"",				"You can see one of my subclass in action using:",				"\"May take a while to open\"",				"ClassListExample new open"			],			"category" : "Morphic-Widgets-Tree-Pagination"		},		"BrowseDebugAction" : {			"hash" : 2985728,			"definition" : "MessageSendDebugAction subclass: #BrowseDebugAction\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Debugger-Actions-Actions'",			"comment" : [				"A BrowseDebugAction is a debugging actions sending a unary message to the stack widget."			],			"category" : "Debugger-Actions-Actions"		},		"NSPowScale" : {			"hash" : 5627136,			"definition" : "NSLinearScale subclass: #NSPowScale\r\tinstanceVariableNames: 'linear exponent powp powb'\r\tclassVariableNames: ''\r\tpackage: 'NumericInterpolator-Scales'",			"comment" : [				"I scale using pow function"			],			"category" : "NumericInterpolator-Scales"		},		"ClapValidationReport" : {			"hash" : 402688,			"definition" : "Object subclass: #ClapValidationReport\r\tinstanceVariableNames: 'problems'\r\tclassVariableNames: ''\r\tpackage: 'Clap-Core-Validation'",			"comment" : [				"I aggregate multiple validation diagnostics together."			],			"category" : "Clap-Core-Validation"		},		"MarginBorderStyle" : {			"hash" : 657152,			"definition" : "SimpleBorderStyle subclass: #MarginBorderStyle\r\tinstanceVariableNames: 'margin'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Borders'",			"comment" : [				"Border with customisable inner margin."			],			"category" : "Morphic-Base-Borders"		},		"StSizeReporter" : {			"hash" : 5467136,			"definition" : "StReporter subclass: #StSizeReporter\r\tinstanceVariableNames: 'data'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-SystemReporter'",			"comment" : [				"I'm a reporter dedicated to size of the system.",				"",				"```",				"StSizeReporter new openWithSpec",				"```"			],			"category" : "NewTools-SystemReporter"		},		"RGTraitTransformation" : {			"hash" : 5266944,			"definition" : "RGObject subclass: #RGTraitTransformation\r\tinstanceVariableNames: 'subject'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tsubject:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"ZnBasicAuthenticator" : {			"hash" : 1404160,			"definition" : "Object subclass: #ZnBasicAuthenticator\r\tinstanceVariableNames: 'credentials realm'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Support'",			"comment" : [				"I am ZnBasicAuthenticator.",				"I help servers handle HTTP Basic Authentication.",				"I implement the required #authenticateRequest:do:",				"",				"I have a credentials dictionary with username->password associations.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Support"		},		"StTopicBuilderVisitor" : {			"hash" : 6586624,			"definition" : "MicrodownVisitor subclass: #StTopicBuilderVisitor\r\tinstanceVariableNames: 'helpTopics actualTopic'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-DocumentationReader'",			"comment" : [				"When I visit a header I create a `StNodeHelpTopic`.",				"When I visit anything node I add the node at the last `StNodeHelpTopic` create."			],			"category" : "NewTools-DocumentationReader"		},		"MalDominanceNode" : {			"hash" : 1768704,			"definition" : "MalDisjointSetNode subclass: #MalDominanceNode\r\tinstanceVariableNames: 'previousNodes uniqueSource'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tpreviousNodes:\t\t<Object>",				"\tuniqueSource:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Moose-Algos-Graph"		},		"ReUnoptimizedAndOrRule" : {			"hash" : 3954688,			"definition" : "ReNodeMatchRule subclass: #ReUnoptimizedAndOrRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for inefficient nesting of logical conditions."			],			"category" : "GeneralRules-Migrated"		},		"SpMenuItemPresenter" : {			"hash" : 2219264,			"definition" : "SpAbstractWidgetPresenter << #SpMenuItemPresenter\r\tslots: {\r\t\t\t #name => ObservableSlot .\r\t\t\t #icon => ObservableSlot .\r\t\t\t #description => ObservableSlot .\r\t\t\t #action .\r\t\t\t #shortcut .\r\t\t\t #subMenu .\r\t\t\t #state .\r\t\t\t #autoRefresh };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter to define a menu item. ",				"A menu item needs to be included into a group (See `SpMenuGroupPresenter`) and through it a context menu (See `SpMenuPresenter`), or a menu bar (See `SpMenuBarPresenter`).",				"",				"A menu item can have: an action (See `SpMenuItemPresenter>>#action:`) **OR** it can include a submenu (See `SpMenuItemPresenter>>#subMenu:`), but it cannot have both properties at a time.",				"",				"Tipically, you do not call directly `SpMenuItemPresenter`. Instead, you use the builder method provided when building a `SpMenuPresenter` (See example below)."			],			"category" : "Spec2-Core-Widgets"		},		"IconicButtonMorph class" : {			"hash" : 1960448,			"definition" : "IconicButtonMorph class\r\tinstanceVariableNames: ''",			"comment" : [				"A \"Simple Button\" in which the appearance is provided by a Form."			],			"category" : "Morphic-Widgets-Basic-Buttons"		},		"AthensWrapWorldMorph" : {			"hash" : 3412224,			"definition" : "AthensWrapMorph subclass: #AthensWrapWorldMorph\r\tinstanceVariableNames: 'worldmorph wrappedWorldDisplay'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Morphic'",			"comment" : [				"An AthensWrapWorldMorph is a AthensWrapMorph holding a specialized Athens WorldMorph. This Athens WorldMorph draws the submorphs with an AthensCanvas.",				"",				"Instance Variables",				"\tworldmorph:\t\tthe Athens WorldMorph",				"\twrappedWorldDisplay:\t\ta display wrapper"			],			"category" : "Athens-Morphic"		},		"ObjectStringConverter" : {			"hash" : 1852160,			"definition" : "Object subclass: #ObjectStringConverter\r\tinstanceVariableNames: 'objectClass regex stringTransformBlock objectTransformBlock'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Utilities'",			"comment" : [				"Generic object<->string converter for use with PluggableTextFieldMorph.",				"Optional regex matching for validation.",				"Optional transform blocks for each conversion direction."			],			"category" : "Polymorph-Widgets-Utilities"		},		"AbstractWorldRenderer class" : {			"hash" : 1648128,			"definition" : "AbstractWorldRenderer class\r\tinstanceVariableNames: ''",			"comment" : [				"I implement the logic to render a world.",				"I have different implementations to start the world."			],			"category" : "Morphic-Core-Worlds"		},		"ReSearchingLiteralRule" : {			"hash" : 3950592,			"definition" : "ReNodeMatchRule subclass: #ReSearchingLiteralRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for repeated literal equality tests that should rather be implemented as a search in a literal collection."			],			"category" : "GeneralRules-Migrated"		},		"RandomBinomial" : {			"hash" : 2321920,			"definition" : "RandomBernoulli subclass: #RandomBinomial\r\tinstanceVariableNames: 'n'\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Random'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tn:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Containers-Essentials-Random"		},		"EndianDetector class" : {			"hash" : 949248,			"definition" : "EndianDetector class\r\tinstanceVariableNames: ''",			"comment" : [				"I am EndianDetector, a class responsible of detecting the endianess in the current machine.",				"",				"I do so in my #calcEndianess method, which works as follows:",				"",				" - it creates a float object, whose endianess is managed automatically by the VM.",				" - copy the raw data of that float object into a bytes object (instance of my class)",				" - then, we can check in the raw copy if the data of the float is in the least or more significant word of the object.",				"",				"Internally, I do the raw data copy by changing the class of the float into me. To do that I have the following properties:",				"- I'm a compact class (required to change the class)",				"- I'm in the startup list to check this on every startup"			],			"category" : "System-Support-Utilities"		},		"NSPerlinNoise" : {			"hash" : 5630720,			"definition" : "Object subclass: #NSPerlinNoise\r\tinstanceVariableNames: 'grad3 perm'\r\tclassVariableNames: ''\r\tpackage: 'NumericNoise'",			"comment" : [				"Based on http://webstaff.itn.liu.se/~stegu/simplexnoise/simplexnoise.pdf"			],			"category" : "NumericNoise"		},		"RSCanvasController" : {			"hash" : 5725696,			"definition" : "RSAbstractCanvasInteraction subclass: #RSCanvasController\r\tinstanceVariableNames: 'interactions withLegend configuration'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Controls'",			"comment" : [				"I the main interaction that handles roassal3 general control about a view.",				"I interact with the Abstract class RSAbstractControlView. I creates instances of all subclasses of RSAbstractControlsView "			],			"category" : "Roassal3-Interaction-Controls"		},		"MeshGradientPaint" : {			"hash" : 3053824,			"definition" : "AthensAbstractPaint subclass: #MeshGradientPaint\r\tinstanceVariableNames: 'patches'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Core-Paints'",			"comment" : [				"I am a gradient that is defined by the composition of multiple patches."			],			"category" : "Athens-Core-Paints"		},		"ClyQuery" : {			"hash" : 4849152,			"definition" : "Object subclass: #ClyQuery\r\tinstanceVariableNames: 'requiredResult scope'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-NavigationModel-Query'",			"comment" : [				"I am a root of hierarchy of queries.",				"My subclasses implement specific logic how to retrieve particular objects from given environment scope. ",				"",				"Any query should be created with scope:",				"",				"\tquery := ClyAllMethods from: scope",				"\t",				"And to create scope instance you need some navigation environment. For example to query Smalltalk image there is global #currentImage environment: ",				"",				"\tscope := ClyClassScope of: Object in: ClyNavigationEnvironment currentImage.",				"\t",				"When query instance is created you can simply execute it: ",				"",				"\tresult := query execute.",				"\t",				"The result of any query is a kind of ClyQueryResult.",				"By default it is always ClyRawQueryResult which do not apply any formatting or transformation on retrieved items.",				"The required result is a parameter of any query, the variable #requiredResult. Responsibility of result is to format or transform items retrieved by query. ",				"For example there are ClySortedQueryResult which sort items using given sort funciton.",				"",				"The value of requiredResult variable is used as prototype to create actual result instances. During execution the query creates it using: ",				"",				"\tactualResult := requiredResult prepareNewFor: aQuery in: environment",				"\t",				"You can specify requird result when you create query instances. For example: ",				"",				"\tClyAllClassQuery from: packageScope as: ClySubclassHierarchy new asQueryResult.",				"\t",				"My subclasses provide various constructors to specify such parameters.",				"\t",				"Any query instance can be converted to query with new required result: ",				"",				"\taQuery withResult: ClySpecialQueryResult new",				"\t",				"There are other converting methods which are supported by any kind of queries: ",				"",				"- withScope: aScope, it returnes similar query but with different scope",				"- withScopeOf: newBasisObjects, it returns similar query with scope of different basis",				"- restrictedByScope: aScope, it returnes similar query with similar scope restricted by basis of given scope.",				"- filtereBy: anItemFilter, it returns wrapper query which filters original query result using given filter",				"",				"My subclasses must implement several methods: ",				"\t",				"- buildResult: aQueryResult ",				"It is the method where query retrieves items from the scope and fill given result with them. Look at implementors.",				"",				"- checkEmptyResult",				"It checks that result will be empty without full execution.",				"",				"-isResult: aQueryResult affectedBy: aSystemAnnouncement",				"Any query can be affected by system changes. Subclasses should decide what changes can affect them.",				"",				"- retrivesItem: anObject",				"Subclasses should check that given item can be retrieved. This check should not depends on query scope.",				"",				"- retrivesItemOfType: aClass",				"Subclasses should check what kind of items they retrieve.",				"",				"- executesQuery: aTypedQueryClass",				"Subclasses should check that they in fact executes given query class. For example composite query will ask subqueries for this question. But typed queries will use simple isKindOf: check.",				"",				"- withScope: aScope ",				"Subclasses should implement converting to the similar query from new given scope.",				"",				"- withScopeOf: newBasisObjects ",				"Subclasses should implement converting to the similar query from the similar scope of new given basis.",				" ",				"- #unionWith: typedQueries as: aQueryResult",				"Subclasses should implement converting to composite query union given collection of subqueries.",				"",				"- #, anotherQuery ",				"Subclasses should implement union with another query.",				"",				"-collectMetadataOf: aQueryResult by: anEnvironmentPlugin",				"Subclasses should dispatch metadata collection to the given environment plugin.",				"",				"Also there is special ClyUnionQuery class which requires additional method to be implemented: ",				"",				"- mergeOwnInstances: queries",				"It should merge similar query instances. Idea to reduce subqueries count in union query. Subclasses should produce single query with merged collection of parameters. The argument is always collection of receiver instances.",				"",				"Queries should define user friendly #description. I provide very general implementation based on class name. Look at implementors for examples.",				"",				"Navigation environment caches my instances and their results. It requires correct implementation of equality and hashing.",				"Some queries include various state which can be initialized at different time. It is important that instance will be not modified after execution because instead it can affect hash and equality functions which are used by cache. ",				"For this reason I implement special method #fixStateBeforeExecution which marks the instance and related state (the scope for example) as read only objects (#beReadOnlyObject). So after execution my instances became immutable.",				"",				"And according to this logic I provide special hook #prepareStateBeforeExecution to prepare complete state of query instance before execution. It allows initialize lazy variables before making instance immutable.",				"\t\t\t",				"The Calypso-Browser package provide UI widget to browse query results. For this purpose I provide helper method to open browser cursor:",				"",				"\taQuery openBrowserCursorFor: anItemObserver",				"",				"It is shortcut method to execute query and open cursor on result. So read details in ClyQueryResult comments.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\trequestedResult:\t\t<ClyQueryResult>",				"\tscope:\t\t<ClyScope>"			],			"category" : "Calypso-NavigationModel-Query"		},		"HelpTopic" : {			"hash" : 3011840,			"definition" : "Object subclass: #HelpTopic\r\tinstanceVariableNames: 'title key icon contents subtopics owner'\r\tclassVariableNames: ''\r\tpackage: 'HelpSystem-Core-Model'",			"comment" : [				"A HelpTopic provides content information that can be used as a help to the user.",				"It can be labeled with a title, identified using an (optional) unique key and marked ",				"with an (optional) icon.",				"",				"Help topics form a hierarchy since any topic is able to have zero or more",				"subtopics. ",				"",				"",				"Instance Variables",				"\tcontents:\t\t<Object>      The help topic contents",				"\ticon:\t\t\t<Form|nil>\t   An optional icon for the topic",				"\tkey:\t\t\t<String|nil>    An optional unique key",				"\tsubtopics:\t      <Collection>  A collection of subtopics",				"\ttitle:\t\t\t<String>        The title",				"",				"contents",				"\t- The help topic contents - typically containing the help topics information",				"",				"icon",				"\t- An optional icon for the topic",				"",				"key",				"\t- An optional unique key which can be used to identify the topic. ",				"",				"subtopics",				"\t- A collection of subtopics. ",				"\t  By default the subtopics are not sorted, so the insertion order is used. ",				"\t  If necessary it is possible to sort the subtopics by title.",				"",				"title",				"\t- A meaninful title for the help topic"			],			"category" : "HelpSystem-Core-Model"		},		"ObjectWithSettableHash" : {			"hash" : 3633408,			"definition" : "Object subclass: #ObjectWithSettableHash\r\tinstanceVariableNames: 'hash'\r\tclassVariableNames: ''\r\tpackage: 'Collections-Unordered-Tests-Dictionaries'",			"comment" : [				"Used to create intentional hash collisions in tests, to test that collision handling is done correctly."			],			"category" : "Collections-Unordered-Tests-Dictionaries"		},		"IceSortingStrategy" : {			"hash" : 6251776,			"definition" : "Object subclass: #IceSortingStrategy\r\tinstanceVariableNames: 'first last'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-View-WorkingCopy'",			"comment" : [				"I am a sorting strategy taking as parameter a collection and returning the collection sorted. The user can customize the sorting to get, for example, the modified entities first or last. ",				"",				"",				"Example",				"",				"",				"\tIceSortingStrategy new first: #modified; last: #notLoaded; sort: aCollection",				"",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tfirst:\t\t<aSymbol>\t\tRepresent the entities to display first.",				"\tlast:\t\t<aSymbol>\t\tRepresent the entities to display last."			],			"category" : "Iceberg-TipUI-View-WorkingCopy"		},		"ExceptionSetWithExclusions" : {			"hash" : 955648,			"definition" : "ExceptionSet subclass: #ExceptionSetWithExclusions\r\tinstanceVariableNames: 'exclusions'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Exceptions'",			"comment" : [				"I am ExceptionSetWithExclusions, an ExceptionSet that explicitely does not handle a number of exclusion Exceptions."			],			"category" : "Kernel-Exceptions"		},		"RSEasingInterpolator" : {			"hash" : 5709568,			"definition" : "NSInterpolator subclass: #RSEasingInterpolator\r\tinstanceVariableNames: 'useOut useIn'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Animation-Easing'",			"comment" : [				"Given the specified normalized time t, typically in the range [0,1], returns the “eased” time tʹ, also typically in [0,1]. 0 represents the start of the animation and 1 represents the end. A good implementation returns 0 if t = 0 and 1 if t = 1.",				"",				"I am highly inspired from d3js source code https://github.com/d3/d3-transition and from the base animation of Bloc https://github.com/pharo-graphics/Bloc"			],			"category" : "Roassal3-Animation-Easing"		},		"MorphicEventHandler" : {			"hash" : 1848576,			"definition" : "Object subclass: #MorphicEventHandler\r\tinstanceVariableNames: 'subscriptions'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Events'",			"comment" : [				"I'm the class in charge of handling the subscriptions to events such as clicks or key presses.",				"I'm a provisory solution while my clients are fixed and I can be replaced by announcements"			],			"category" : "Morphic-Base-Events"		},		"SpUIThemeDecorator" : {			"hash" : 2562560,			"definition" : "Object subclass: #SpUIThemeDecorator\r\tinstanceVariableNames: 'theme themeOverrideDict'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Support'",			"comment" : [				"I decorate a UITheme allowing to override desired properties.",				"",				"See #example on class side."			],			"category" : "Spec2-Adapters-Morphic-Support"		},		"Behavior class" : {			"hash" : 867072,			"definition" : "Behavior class\r\tinstanceVariableNames: ''",			"comment" : [				"My instances describe the behavior of other objects. I provide the minimum state necessary for compiling methods, and creating and running instances. Most objects are created as instances of the more fully supported subclass, Class, but I am a good starting point for providing instance-specific behavior (as in Metaclass)."			],			"category" : "Kernel-Classes"		},		"SpMorphicPanedAdapter" : {			"hash" : 2606080,			"definition" : "SpMorphicLayoutAdapter subclass: #SpMorphicPanedAdapter\r\tinstanceVariableNames: 'children'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Layout'",			"comment" : [				"I'm an adapter for Paned Layouts.",				"A paned layout will split (horizontally or vertically) a panel and allow its resize. "			],			"category" : "Spec2-Adapters-Morphic-Layout"		},		"HSVColorSelectorMorph" : {			"hash" : 578816,			"definition" : "Morph subclass: #HSVColorSelectorMorph\r\tinstanceVariableNames: 'svMorph hMorph'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-ColorPicker'",			"comment" : [				"Colour selector featuring a saturation/volume area and a hue selection strip."			],			"category" : "Morphic-Widgets-ColorPicker"		},		"RBRefactoryChangeManager" : {			"hash" : 3197696,			"definition" : "Object subclass: #RBRefactoryChangeManager\r\tinstanceVariableNames: 'undo redo undoPointers isPerformingRefactoring changeFactory'\r\tclassVariableNames: 'Counter Instance UndoSize'\r\tpackage: 'Refactoring-Changes-Base'",			"comment" : [				"I am a change manager keeping track of all changes applied by the refactory manager. Typically there is only a single",				"instance of me used in the system, so all changes can be globally added/inspected/ executed and undone/redone.",				"",				"The size of my undo list is configurable in the settings browser."			],			"category" : "Refactoring-Changes-Base"		},		"LessonView" : {			"hash" : 3115264,			"definition" : "Object subclass: #LessonView\r\tinstanceVariableNames: 'shoutMorph window sourceTextModel'\r\tclassVariableNames: ''\r\tpackage: 'ProfStef-Core'",			"comment" : [				"A LessonView displays a Lesson instance.",				"",				"LessonView new open"			],			"category" : "ProfStef-Core"		},		"IceRemoteDesynchronized" : {			"hash" : 6234880,			"definition" : "IceError subclass: #IceRemoteDesynchronized\r\tinstanceVariableNames: 'remote resumable'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Errors'",			"comment" : [				"I indicate when a remote is desyncronized. ",				"It means the version I have in the working copy (not the image) is different to the version I have in the remote (then I need to pull/branch/whatever before commiting)."			],			"category" : "Iceberg-Errors"		},		"KeyboardKey class" : {			"hash" : 1015552,			"definition" : "KeyboardKey class\r\tinstanceVariableNames: ''",			"comment" : [				"I represent a keyboard Key, I am independent from the text issued from myself.",				"That is, when you press e.g., the combination Alt + A, you get the Character å (as in \"an instance of Character\") in a text event, but in the KeyDown/Up events you get an instance of myself, the KeyboardKey A (see section Keys vs Characters below).",				"",				"# Implementation details",				"",				"I keep a flyweight of Keys that can be accessed by id or name.",				"",				"```",				"KeyboardKey value: anID.",				"KeyboardKey named: 'RETURN'.",				"```",				"",				"The ID of a key corresponds to the keycodes in Unix's X11 key mapping.",				"Such ID was chosen because Unix X11 is a super set of the keys supported in Win32 and Cocoa.",				"",				"Internally I also keep a mapping between Win32 and Cocoa keycodes to X11's keycodes.",				"See my class side:",				"```",				"valueForWindowsPlatform:",				"valueForUnixPlatform:",				"valueForMacOSXPlatform:",				"```",				"",				"# Keys vs Characters",				"",				"KeyboardKeys and characters do not have a 1 to 1 mapping. Be careful that keys and Characters do not represent the same thing, specially when we are outside of the english alphabet. In such cases, a Key like E could trigger a Character like e or € depending on the configured keyboard layout and key combinations done. This is specially trickier in asian alphabets.",				"",				"For backwards compatibility, I provide a helper method that tries to do a mapping in the direction Character -> key (see fromCharacter:) but should be used sparingly and it will be deprecated in the future."			],			"category" : "System-Platforms-Utilities"		},		"EDDebuggingAPI" : {			"hash" : 4123904,			"definition" : "Object subclass: #EDDebuggingAPI\r\tinstanceVariableNames: 'session debugger changesForMethods longStack'\r\tclassVariableNames: ''\r\tpackage: 'EmergencyDebugger-Core'",			"comment" : [				"I am the default ED Debugging interface.",				"I return a set of CmCommands exposing my interface."			],			"category" : "EmergencyDebugger-Core"		},		"AbstractFontSelectorDialogWindow" : {			"hash" : 2993408,			"definition" : "DialogWindowMorph subclass: #AbstractFontSelectorDialogWindow\r\tinstanceVariableNames: 'fontFamilies selectedFont textPreviewMorph fontFamilyIndex fontSizeIndex isBold isItalic isUnderlined isStruckOut previewText'\r\tclassVariableNames: ''\r\tpackage: 'Fonts-Chooser'",			"comment" : [				"Dialog based font chooser with preview."			],			"category" : "Fonts-Chooser"		},		"RSQuadTreeF" : {			"hash" : 5741824,			"definition" : "RSObject subclass: #RSQuadTreeF\r\tinstanceVariableNames: 'charge leaf soleChild northEastQuad northWestQuad southEastQuad southWestQuad centerOfCharge rectangle'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Util'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Layouts-Util"		},		"IceCritiquesVisitor" : {			"hash" : 6209280,			"definition" : "IceTreeVisitor subclass: #IceCritiquesVisitor\r\tinstanceVariableNames: 'critiques'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Changes'",			"comment" : [				"I am a tree visitor that returns a set of critics to the elements in the collection"			],			"category" : "Iceberg-Changes"		},		"MalCircuitSpanningEdges" : {			"hash" : 1760512,			"definition" : "MalSccExtractor subclass: #MalCircuitSpanningEdges\r\tinstanceVariableNames: 'dijkstra'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tdijkstra:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Moose-Algos-Graph"		},		"PreDebugAction" : {			"hash" : 2986240,			"definition" : "MessageSendDebugAction subclass: #PreDebugAction\r\tinstanceVariableNames: 'preDebugWindow'\r\tclassVariableNames: ''\r\tpackage: 'Debugger-Actions-Actions'",			"comment" : [				"A PreDebugAction is a debugging actions sending a unary message to the pre debug window."			],			"category" : "Debugger-Actions-Actions"		},		"FFICalloutMethodBuilder" : {			"hash" : 490240,			"definition" : "Object subclass: #FFICalloutMethodBuilder\r\tinstanceVariableNames: 'calloutAPI requestor sender signature functionResolutionStrategies library fixedArgumentCount'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-Callouts'",			"comment" : [				"I build FFI method bytecodes for a call. "			],			"category" : "UnifiedFFI-Callouts"		},		"GIFReadWriter class" : {			"hash" : 768512,			"definition" : "GIFReadWriter class\r\tinstanceVariableNames: ''",			"comment" : [				"I am GIFReadWriter.",				"I am a concrete ImageReadWriter.",				"",				"Updated implementation of a GIF file (byte-level) decoder.",				"",				"I implment a Stream-like behavior over a GIF image file, and can both read and write GIF files.",				"",				"Previously, two classes distinguished between \"still\" and \"animated\" GIFs. However, the standard specifies that any GIF can have \"frames\" and be animated. This reimplementation treats this as normal.",				"",				"See these links for more detailed information:",				" ",				" https://www.w3.org/Graphics/GIF/spec-gif89a.txt",				" https://en.wikipedia.org/wiki/GIF",				" http://www.matthewflickinger.com/lab/whatsinagif/bits_and_bytes.asp",				"",				"For writing GIF files, I take a collection of AnimatedImageFrame objects and write the appropriate headers, Graphics Control Extensions, and everything else needed for writing an animated GIF.",				"",				"For reading GIF files, I take a binary filestream and set my own `frames` variable to be a collection of AnimatedImageFrames, which themselves contain decoded Forms and instructions for disposal, delay, etc.",				"",				"NOTE: I make use of the LzwGifDecoder and LzwGifEncoder classes in order to encode/decode individual bitmap data for each image frame of the GIF.",				"",				"See `GIFReadWriter exampleAnim` for more information.  "			],			"category" : "Graphics-Files"		},		"MCPackageManager class" : {			"hash" : 262144,			"definition" : "MCPackageManager class\r\tinstanceVariableNames: 'registry'",			"comment" : [				"MCPackageManager is a kind of package wrapper knowing if the package is dirty or not.",				"The class side manages registered package managers.",				"",				"Instance Variables:",				"\tpackage\t<MCPackage>",				"\tmodified\t<Boolean>",				"",				"Class Instance Variables:",				"\tregistry\t<Dictionary>"			],			"category" : "Monticello-Versioning"		},		"StandardWindow" : {			"hash" : 1937664,			"definition" : "SystemWindow subclass: #StandardWindow\r\tuses: TEasilyThemed - {#theme}\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Windows-Widgets'",			"comment" : [				"Themed SystemWindow that avoids being picked up except via the title bar. Supports opening in \"fullscreen\" mode, taking docking bars into account.",				"Prevents yellow button menu.",				"Uses TEasilyThemed for easy theme access to subclasses."			],			"category" : "Morphic-Widgets-Windows-Widgets"		},		"SpecSplitterHorizontal" : {			"hash" : 964608,			"definition" : "SpecLayoutAdd subclass: #SpecSplitterHorizontal\r\tinstanceVariableNames: 'commands'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Layout-Actions'",			"comment" : [				"A SpecSplitterHorizontal is a description of the addition of a horizontal splitter"			],			"category" : "Spec-Layout-Actions"		},		"SpInitializeWindowExample" : {			"hash" : 2469120,			"definition" : "SpPresenter subclass: #SpInitializeWindowExample\r\tinstanceVariableNames: 'menu statusBar text count toolbar'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Examples-Standalone'",			"comment" : [				"I'm an example showing how to use the #prepareWindow: message to enhance the window in which your presenter will be shown. ",				"The example adds a menu, a toolbar and a statusbar. ",				"You can choose which one(s) you want to add.",				"",				"self show."			],			"category" : "Spec2-Examples-Standalone"		},		"WhereIsDebugAction" : {			"hash" : 2991872,			"definition" : "DebugAction subclass: #WhereIsDebugAction\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Debugger-Actions-Actions'",			"comment" : [				"A WhereIsDebugAction highlights in the code editor the current instruction."			],			"category" : "Debugger-Actions-Actions"		},		"UITheme" : {			"hash" : 697088,			"definition" : "Model subclass: #UITheme\r\tinstanceVariableNames: 'settings forms soundTheme focusIndicator windowActiveDropShadowStyle useScrollbarThumbShadow'\r\tclassVariableNames: 'Builder Current'\r\tpackage: 'Polymorph-Widgets-Themes'",			"comment" : [				"Common superclass for User Interface themes. Provides methods for creating new morphs in a standard way, various \"services\" like a file dialog, message dialogs etc. and also methods for customising aspects of the appearance of various morphs.",				"Though conceptually abstract, no code is \"missing\". Subclasses, therefore, should override the aspects they wish to change."			],			"category" : "Polymorph-Widgets-Themes"		},		"ScrollPane" : {			"hash" : 1924864,			"definition" : "ModelMorph subclass: #ScrollPane\r\tinstanceVariableNames: 'scrollBar scroller getMenuSelector getMenuTitleSelector hasFocus hScrollBar'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Scrolling'",			"comment" : [				"The scroller (a transform) of a scrollPane is driven by the scrollBar.  The scroll values vary from 0.0, meaning zero offset to 1.0 meaning sufficient offset such that the bottom of the scrollable material appears 3/4 of the way down the pane.  The total distance to achieve this range is called the totalScrollRange.",				"",				"Basic clue about utilization of the ScrollPane class is given in:",				"\tScrollPane example1.",				"\tScrollPane example2."			],			"category" : "Morphic-Widgets-Scrolling"		},		"AthensCairoSurface" : {			"hash" : 3076864,			"definition" : "AthensSurface subclass: #AthensCairoSurface\r\tuses: TCairoLibrary\r\tinstanceVariableNames: 'handle context builder id ftFontRenderer session'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'AthensCairoDefinitions'\r\tpackage: 'Athens-Cairo-Surface'",			"comment" : [				"I am a concrete implementation of Athens surface which using cairo graphics library for rendering.",				"",				"Cairo library, by itself can have multiple surface types.",				"This class uses image surface (a bitmap located in system memory) and maps to cairo_image_surface_t* C type.",				"",				"**NOTE**",				"As a workaround of a bug in bitblt, the Cairo surfaces are created internally with 1 extra pixel higher than requested. However, this is hidden for users."			],			"category" : "Athens-Cairo-Surface"		},		"RadioButtonPresenter" : {			"hash" : 881152,			"definition" : "AbstractFormButtonPresenter subclass: #RadioButtonPresenter\r\tinstanceVariableNames: 'canDeselectByClick'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"A RadioButtonPresenter is a spec presenter for RadioButton.",				"See AbstractFormButtonPresenter",				"",				"self example",				"",				"! The method privateSetState: is really private and should only be used by RadioButtonGroup or RadioButtonGroupPresenter !",				"",				"You can also have a look at RadioButtonGroupExample for a full example of how to use them with a group.",				"",				"I provide more accessors on my super class ValueHolder",				"- actionWhenActivatedHolder",				"- actionWhenDeactivatedHolder",				"- enabledHolder",				"- stateHolder",				"",				"I provide the variable canDeselectByClick and its accessors, it is a boolean representing if the radio can be deselect directly by the user using a click on it.",				"",				"I specialize state: to use the variable canDeselectByClick."			],			"category" : "Spec-Core-Widgets"		},		"FinderUI" : {			"hash" : 3333632,			"definition" : "MorphTreeModel subclass: #FinderUI\r\tinstanceVariableNames: 'finder forceSearch searchingTextArea sourceTextArea useRegExCheckbox searchedTextList sourceTextModel'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Finder-UI'",			"comment" : [				"A FinderUI is a UI used to render a Finder instance.",				"",				"This tool is used to look for selectors, class, source code or patterns through the system, or through a specified environment"			],			"category" : "Tool-Finder-UI"		},		"RGBehaviorDefinition" : {			"hash" : 1328384,			"definition" : "RGGlobalDefinition subclass: #RGBehaviorDefinition\r\tinstanceVariableNames: 'superclass methods protocols'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Definitions-Core-Base'",			"comment" : [				"An RGBehaviorDefinition is an abstract definition for class-alike entities (e.g. classes, traits)",				"",				"Instance Variables",				"\tmethods:\t\t<Collection>",				"\tprotocols:\t\t<Collection>",				"\tsuperclass:\t\t<Object>"			],			"category" : "Ring-Definitions-Core-Base"		},		"DialogItemsChooserUI" : {			"hash" : 3355648,			"definition" : "DialogWindowMorph subclass: #DialogItemsChooserUI\r\tinstanceVariableNames: 'dialogItemsChooser selectedItems unselectedItems unselectedItemsSearchingString selectedItemsSearchingString selectedSelectionIndex selectedSelectionList unselectedSelectionList unselectedSelectionIndex'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Finder-UI'",			"comment" : [				"unselectedItems is the original list to search in",				"",				"selectItems is the list of the selected items"			],			"category" : "Tool-Finder-UI"		},		"ZnCommonLogFormat" : {			"hash" : 1406208,			"definition" : "Object subclass: #ZnCommonLogFormat\r\tinstanceVariableNames: 'combined'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Logging'",			"comment" : [				"I am ZnCommonLogFormat, I can output ZnServerTransactionEvent objects using Apache Common Log Format (CLF).",				"",				"https://en.wikipedia.org/wiki/Common_Log_Format",				"https://httpd.apache.org/docs/trunk/logs.html#common",				"",				"| formatter |",				"formatter := ZnCommonLogFormat new.",				"ZnLogEvent announcer ",				"  when: ZnServerTransactionEvent ",				"  do: [ :event | ",				"    formatter format: event on: Transcript.",				"    Transcript cr; endEntry ]."			],			"category" : "Zinc-HTTP-Logging"		},		"SessionCategory" : {			"hash" : 811776,			"definition" : "Object subclass: #SessionCategory\r\tinstanceVariableNames: 'name priorityLists'\r\tclassVariableNames: ''\r\tpackage: 'System-SessionManager-Utilities'",			"comment" : [				"A session category allows to define many categories for a session (eg. System, Network, UI and user categories).",				"It allows session handlers (e.g. classes or packages handlers) to be registered into a category.",				"By default, the same default priority is assigned to handlers but a specific priority could be specified so that an handler will be activated before/after others."			],			"category" : "System-SessionManager-Utilities"		},		"DTFilterableListPresenter" : {			"hash" : 2948608,			"definition" : "SpPresenter subclass: #DTFilterableListPresenter\r\tinstanceVariableNames: 'listPresenter filterTextInput initialItems labelPresenter'\r\tclassVariableNames: ''\r\tpackage: 'DrTests-Spec'",			"comment" : [				"I am a list presenter that can be filtered.",				"",				"I also have a label."			],			"category" : "DrTests-Spec"		},		"RSLabelGenerator" : {			"hash" : 5802240,			"definition" : "RSObject subclass: #RSLabelGenerator\r\tinstanceVariableNames: 'nice loose n w epsilon'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Labeling'",			"comment" : [				"Reference:",				" \t[1] An Extension of Wilkinson's Algorithm for positioning Tick Labels on Axes  (Justin Talbot, Sharon Lin, Pat Hanrahan)"			],			"category" : "Roassal3-Chart-Labeling"		},		"ClyClassHierarchyScope" : {			"hash" : 4938240,			"definition" : "ClyAbstractClassScope subclass: #ClyClassHierarchyScope\r\tinstanceVariableNames: 'localScopeClass'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemQueries-Scopes'",			"comment" : [				"I am a root of scope classes which show objects accessible from the particular kind of class hierarchy. ",				"For example there is ClySuperclassScope with superclasses of basis classes and all their methods (inherited by basis).",				"And there is ClySubclassScope which shows all subclasses and their methods.",				"",				"I implement all abstract methods from superclass and introduce new method which should be defined by subclasses: ",				"",				"- classesRelatedTo: aClass do: aBlock",				"",				"In this method subclasses should evaluate given block with all other classes which are related to given aClass according to the logic of given class hierarchy.",				"",				"My varable localScopeClass specifies what part of class itself is visible. It can be instance side, class side or both with corresponsing variable values: ClyInstanceSideScope, ClyClassSideScope and ClyBothMetaLevelClassScope.",				"I use this variable to define methods required for scope query protocol. Look at overrides for details.",				"",				"To create instance I provide several new methods where you can specify local scope class:",				"",				"\tClySubclassScope of: Array localScope: ClyClassSideScope.",				"\tClySubclassScope of: Array in: ClyNavigationEnvironment currentImage localScope: ClyInstanceSideScope.",				"\tClySubclassScope ofAll: {Array. Point} localScope: ClyBothMetaLevelClassScope.",				"\tClySubclassScope ofAll: {Array. Point} in: ClyNavigationEnvironment currentImage  localScope: ClyClassScope.",				"\t",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tlocalScopeClass:\t\t<ClyLocalClassScope class>"			],			"category" : "Calypso-SystemQueries-Scopes"		},		"OSWindowDriver class" : {			"hash" : 4043520,			"definition" : "OSWindowDriver class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a basic (abstract) class, which represents an OS window driver.",				"The driver connects an OSWindow instances with underlaying operating system window(s) through managing OSWindowHandle(s). Driver provides an implemenation of all OSWindow functionality, starting from its creation, setting/retrieving its attributes, and finishing with event handling and/or rendering window's contents on screen.",				"",				"The driver connects OSWindow(s) with operating system windows by providing the handle (see OSWindowHandle). The way how various OSWindow features and API are implemented is up to the concrete driver and thus considered private.",				"",				"The driver(s) responsible for initial window creation , proper setup and and managing external resources. ",				"Again, most of driver's functionality is considered private and application-level code should not rely on any of its features. ",				"",				"Driver selection mechanism:",				"",				" - on session change, i scan all of my subclasses to pick a most suitable driver which will be used on current platform (see #current on my class side)"			],			"category" : "OSWindow-Core-Utilities"		},		"RubFloatingEditorBuilder" : {			"hash" : 1862400,			"definition" : "Object subclass: #RubFloatingEditorBuilder\r\tinstanceVariableNames: 'editor announcer acceptOnCR autoAccept initialContents font customizeValuable escapeBlock'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Core-Support'",			"comment" : [				"I provide the capability to open a floating editor to edit something on the fly.",				"The user is responsible for deciding on how to open the editor. See #exampleEditableStringMorph class side as an example on how to do it with #on:send:to.",				"",				"One opened:",				"- if the escape character is pressed or if the keyboard focus is lost or in case of a mouse down anywhere else than inside the editor then the editing is aborted.",				"- the Enter key or Cmd+s save the contents in the Morph, then an announcement of class RubMorphEdited is sent so that the user can take desired action (checking the input, definitively accept it or reject it).",				"",				"see #exampleEditableStringMorph class side ",				"",				"Internal Representation and Key Implementation Points.",				"",				"Instance Variables",				"\tannouncer:\t\t<Announcer>",				"\teditor:\t\t<RubScrolledTextMorph>",				"\tacceptOnCR:\t<Boolean>",				"\tinitialContents: <String>",				"\tfont: <LogicalFont>",				"\tcustomizeValuable: <Valuable>",				"",				"Implementation notes"			],			"category" : "Rubric-Editing-Core-Support"		},		"ClyClassHierarchy" : {			"hash" : 4895232,			"definition" : "Object subclass: #ClyClassHierarchy\r\tinstanceVariableNames: 'sortFunction inverse'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemQueries-Results'",			"comment" : [				"My subclasses provide model of different kind of class hierarchies.",				"They define concrete relationship between classes which are used to build hierarchies.",				"The result of build is an instance of ClyClassHierarchyMap which provides dictionary between parent classes and their children.",				"To build map instance use following message: ",				"",				"\tmap := ClySubclassHierarchy new buildFrom: { Object. Array }.",				"",				"or simply ask class for this:",				"",				"\tmap := ClySubclassHierarchy buildFrom: { Object. Array }.",				"",				"With hierarchy map you can iterate classes in hierarchical order: ",				"",				"\tmap doInOrder: [ :class | ].",				"\tmap doInOrderWithDepth: [ :class :depth | ].",				"",				"And you can ask map for children of class: ",				"",				"\tmap childrenOf: Object.",				"\t",				"Or you can also access the roots: ",				"",				"\tmap rootsDo: [ :class | ]",				"",				"The children are collected as sorted list which order is defined by #sortFunction.",				"So you can build hierarchies where children are sorted by different criterias. By default they are sorted by class name in ascending order.",				"To instantiate hierarchy with another sort function use following expression:",				"\t",				"\tClySubclassHierarchy sortedBy: aSortFunction ",				"\t",				"And you can build sorted hierarchy using short class side method:",				"",				"\tClySubclassHierarchy buildFrom: Smalltalk allClasses sortedBy: ClySortByNameFunction descending.",				"",				"It will sort children by class name in reversed order.",				"",				"And you can convert any hierarchy to new sorted version: ",				"",				"\tnewHierarchy := aHierarchy sortedBy: aSortFunction.",				"",				"So subclasses define relationship between classes. They should implement following method:",				"",				"- buildParentMap: aHierarchyMap for: aClass",				"",				"where they add every pair parent and aClass to the map. They should do it using following method: ",				"",				"\taHierarchyMap addChild: aClass to: eachParentClass",				"",				"Look at implementors of #buildParentMap:for: for examples.",				"",				"The relationship which defined by each subclass arranges kind of natural order of hierarchy. But it can be inverted.",				"For example natural order of ClySubclassHierarchy will put all common superclasses to the roots of hierarchy.",				"And inverse version will put all leaf subclasses to the roots.",				"",				"I encode flag inverse logic in the variable #inverse. You can create inverse hierarchies with following expression: ",				"",				"\tClySubclassHierarchy inverse.",				"",				"Or you can build inverse hierarchy with short class side methods: ",				"",				"\tClySubclassHierarchy buildInverseFrom: {Object. String}.",				"\tClySubclassHierarchy buildInverseFrom: {Object. String} sortedBy: aSortFunction.",				"",				"You can see in inspector that in first expression the root is String class.",				"",				"And you can convert any hierarchy to the inverted version: ",				"",				"\tnewHierarchy := aHierarchy inverted.",				"",				"Also I provide converting method to create query result which you can pass to the queries: ",				"",				"\tClyAllClasses as: ClySubclassHierarchy inverse asQueryResult ",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tinverse:\t\t<Boolean>",				"\tsortFunction:\t\t<SortFunction>"			],			"category" : "Calypso-SystemQueries-Results"		},		"RSPunchCardBuilder" : {			"hash" : 5665024,			"definition" : "RSAbstractContainerBuilder subclass: #RSPunchCardBuilder\r\tinstanceVariableNames: 'objects metrics size'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Builders-Example'",			"comment" : [				"I am an example"			],			"category" : "Roassal3-Builders-Example"		},		"RBTransformation" : {			"hash" : 4465664,			"definition" : "Object subclass: #RBTransformation\r\tuses: RBTRefactoringBuilder\r\tinstanceVariableNames: 'model options preconditionChecking'\r\tclassVariableNames: 'RefactoringOptions'\r\tpackage: 'Refactoring2-Transformations-Model'",			"comment" : [				"I represent an elementary code transformation.",				"My subinstances can be composed into composite transformations. ",				"",				"I'm not a refactoring since a transformation I do not pay attention to behavior preservation. ",				"However as a transformation, I will be used by refactorings. ",				"",				"My main API is ",				"\t- transform which is actually executing the transformation",				"\t- asRefactoring to optionally (false by default) check preconditions, if some apply"			],			"category" : "Refactoring2-Transformations-Model"		},		"StObjectBreakpointInspection" : {			"hash" : 5554176,			"definition" : "StInspection subclass: #StObjectBreakpointInspection\r\tinstanceVariableNames: 'methodsWithBreakpoints breakpointsInSourceCode breakpointController'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Debugger-Breakpoints-Tools-Presenters'",			"comment" : [				"I am an inspection for halts and breakpoints, my scope is the inspected object."			],			"category" : "NewTools-Debugger-Breakpoints-Tools-Presenters"		},		"Paragraph" : {			"hash" : 1853184,			"definition" : "Object subclass: #Paragraph\r\tinstanceVariableNames: 'text textStyle firstCharacterIndex container lines positionWhenComposed offsetToEnd maxRightX selectionStart selectionStop wantsColumnBreaks focused caretRect showCaret findReplaceSelectionRegex secondarySelection extraSelectionBlocks refreshExtraSelection composer'\r\tclassVariableNames: 'InsertionPointColor'\r\tpackage: 'Morphic-Base-Text Support'",			"comment" : [				"A Paragraph represents text that has been laid out, or composed, in some container.",				"I also display the different kinds of text selection (secondary, find-replace and selection bar).",				"",				"Class collaborations",				"   SelectionBlock instances are built by myself and stored in the extraSelectionBlocks instance variable in order to display supplementary selections",				"",				"Class main API",				"   no particular main API.",				"",				"Instance Variables",				"   extraSelectionBlocks: <Collection of SelectionBlock>",				"   findReplaceSelectionRegex: <RxMatcher>",				"   presentationLines: <Object>",				"   presentationText: <Object>",				"   refreshExtraSelection: <Boolean>",				"   secondarySelection: <String>",				"",				"extraSelectionBlocks",				"   - a collection of SelectionBlock for the drowing of the differents kind of text selection",				"",				"findReplaceSelectionRegex",				"   - the find/replace matcher that is set from the editor of by the FindReplaceService",				"",				"presentationLines",				"   - created for debugging purpose, should be removed ?",				"",				"presentationText",				"   - created for debugging purpose, should be removed ?",				"",				"refreshExtraSelection",				"   - a boolean that is set to tru when there is a need to refresh selections",				"",				"secondarySelection",				"   - the string of the secondary selection that is set from the editor when a portion of text is selected",				"",				"\ttext \t\tA Text with encoded per-character emphasis.",				"\ttextStyle\tA TextStyle with font set, line height and horizontal alignment.",				"\tfirstCharacterIndex    The starting index in text for this paragraph, allowing",				"\t\t\t\tcomposition of a long text into a number of containers.",				"\tcontainer\tA Rectangle or TextContainer that determines where text can go.",				"\tlines\t\tAn Array of TextLines comprising the final layout of the text",				"\t\t\t\tafter it has been composed within its container.",				"\tpositionWhenComposed   As its name implies.  Allows display at new locations",				"\t\t\t\twithout the need to recompose the text.",				"Lines are ordered vertically.  However, for a given y, there may be several lines in left to right order.  Lines must never be empty, even if text is empty.",				"",				"Notes on yet another hack - 5 Feb 2001",				"",				"We really need to clean up #composeLinesFrom:to:delta:into:priorLines:atY:!!!",				"",				"I added one more habdful of code to correct:",				"",				"This is an annoying bug that's been around for a couple of years, but I finally figured out how to duplicate the problem, so I figured I'd just report it now.  (It doesn't necessarily have to be fixed for 3.0 if it looks messy, but if it's a simple fix, it would be worth it.)",				"",				"In Morphic, if you have the following text in a workspace:",				"",				"This is line 1",				"This is line 2",				"",				"**and** you have a return character after line 2, you will normally be able to click the mouse two times below line 2 in order to select all the text.  If you edit line 2 (e.g. so that it reads \"line number 2\"), you can still select all the text by clicking below the second line.  However, if you edit line 1, you will not be able to select all the text from the bottom in the same way.  Things get messed up such that the last return character seems to be gone.  In this state, if you position the cursor immediately after the 2, and press the right arrow, the cursor jumps to the beginning of line 2... oof. (report by Doug Way)",				"",				"While I don't have a very deep understanding of the above mentioned method, I was able to determine that text ending in a CR worked better in the editor when the last entry in <lines> had a start of text size + 1 and a stop of text size. I have accordingly added code near the end to ensure this. It seems to have fixed the problem, but we do need to clean this baby up some day. - Bob",				"",				""			],			"category" : "Morphic-Base-Text Support"		},		"StartupPreferencesHandler" : {			"hash" : 1453312,			"definition" : "Object subclass: #StartupPreferencesHandler\r\tinstanceVariableNames: 'actions'\r\tclassVariableNames: ''\r\tpackage: 'StartupPreferences'",			"comment" : [				"I manage the links of the chain of responsibilities to retrieve the good preference file."			],			"category" : "StartupPreferences"		},		"ClyToolbarMorph" : {			"hash" : 5098240,			"definition" : "PanelMorph subclass: #ClyToolbarMorph\r\tinstanceVariableNames: 'browser'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-Toolbar'",			"comment" : [				"I implement toobar in the browser (middle panel).",				"I collect all commands annotated by ClyToolbarCommandActivation strategy and ask them to build toolbar items.",				"",				"This logic is implemented in method #updateItems. You can ask it anytime to update toolbar in the browser.",				"It is based on Commander menu:",				"",				"\tmenu := CmdMenu activatedBy: ClyToolbarCommandActivation.",				"",				"But in contrast to context menu all toolbar groups inline UI items into single toolbar panel.",				"So the menu groups in toolbar only allow to group several commands together to be close to each other. ",				"",				"My instances are created on the browser: ",				"",				"\tClyToolbar of: aBrowser",				"\t ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbrowser:\t\t<ClyBrowser>"			],			"category" : "Calypso-Browser-Toolbar"		},		"SpGridLayoutBuilder" : {			"hash" : 2150656,			"definition" : "Object subclass: #SpGridLayoutBuilder\r\tinstanceVariableNames: 'currentColumn currentRow layout'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Layout-Grid'",			"comment" : [				"I build Grid Layouts using a fluent API.",				"You do not need to give elements position on the grid but you rather add elements in order (raw by raw) and you tell me when I need to go to next raw.",				"",				"Example:",				"SpGridLayout build: [ :builder |",				"\tbuilder",				"\t\tadd: 'Name:';",				"\t\tadd: #nameTextInput;",				"\t\tnextRow;",				"\t\tadd: 'Surname:';",				"\t\tadd: #surnameTextInput;",				"\t\tnextRow ]"			],			"category" : "Spec2-Layout-Grid"		},		"CriticBrowser" : {			"hash" : 1702656,			"definition" : "ComposablePresenter subclass: #CriticBrowser\r\tinstanceVariableNames: 'criticModel rulesModel checker title rbEnvironment removeTestCase cache resetButton logButton updateButton'\r\tclassVariableNames: ''\r\tpackage: 'Tool-CriticBrowser-Base'",			"comment" : [				"I display code critics, the results obtained when running a lint rule.",				"",				"Example: ",				"",				"",				"| rule env |",				"rule :=  RBExcessiveArgumentsRule new.",				"env := (RBPackageEnvironment packageName: 'Manifest-Core').",				"",				"(CriticBrowser openOnRule: rule onEnvironment: env)."			],			"category" : "Tool-CriticBrowser-Base"		},		"OSStateModifiers" : {			"hash" : 4041216,			"definition" : "Object subclass: #OSStateModifiers\r\tinstanceVariableNames: 'leftShift rightShift leftAlt rightAlt leftCtrl rightCtrl leftCmd rightCmd capsLock numLock buttons'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Events'",			"comment" : [				"i holding a collection of various key/button modifier flags, usually carried by certain events and accessible through #modifiers message."			],			"category" : "OSWindow-Core-Events"		},		"SystemVersion" : {			"hash" : 1152000,			"definition" : "Object subclass: #SystemVersion\r\tinstanceVariableNames: 'date highestUpdate type major minor patch suffix build commitHash'\r\tclassVariableNames: 'Current'\r\tpackage: 'System-Support-Image'",			"comment" : [				"I am responsible for maintaining what version of Pharo and the VM is running.  I also track all of the update items that have been included in the image.",				"",				"I'm invoked at auto start to get the latest plugins, etc.",				"",				"Some queries are",				"\tSystemVersion current major",				"\tSystemVersion current minor",				"\tSystemVersion current suffix",				"\tSystemVersion current\thighestUpdate"			],			"category" : "System-Support-Image"		},		"FFITestEnumeration class" : {			"hash" : 1578752,			"definition" : "FFITestEnumeration class\r\tinstanceVariableNames: ''",			"comment" : [				"An enumeration for test purposes"			],			"category" : "UnifiedFFI-Tests-Test-Data"		},		"ByteTextConverter class" : {			"hash" : 2236672,			"definition" : "ByteTextConverter class\r\tinstanceVariableNames: 'byteToUnicode unicodeToByte'",			"comment" : [				"A ByteTextConverter is the abstract class for text converters on single byte encodings."			],			"category" : "Deprecated90"		},		"CTSlotDescriptorsVisitorCollect" : {			"hash" : 2860544,			"definition" : "CTSlotDescriptorsVisitor subclass: #CTSlotDescriptorsVisitorCollect\r\tinstanceVariableNames: 'blockClosure slotDescriptorsContext'\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Outliner'",			"comment" : [				"I am a variant that decorates a slot descriptors visitor by collecting the collection by a given block."			],			"category" : "Containers-Essentials-Outliner"		},		"SingleCodeCriticResultList" : {			"hash" : 1705728,			"definition" : "ComposablePresenter subclass: #SingleCodeCriticResultList\r\tinstanceVariableNames: 'rule criticsModel toolbarModel sourceCodeModel textInputFieldModel cache thread'\r\tclassVariableNames: ''\r\tpackage: 'Tool-CriticBrowser-Parts'",			"comment" : [				"I am a browser for the SmallLint Critics of a rule."			],			"category" : "Tool-CriticBrowser-Parts"		},		"StGenericGenerator" : {			"hash" : 5474048,			"definition" : "StIterator subclass: #StGenericGenerator\r\tinstanceVariableNames: 'generator'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Spotter-Processors-Iterators'",			"comment" : [				"I wrap a generator to provide the same API than the iterators.",				"My subclasses should implement #elementsDo: to iterate the collection or implement the values.",				"In this method, each of the generated values should be used with the valuable pased.",				"",				"",				"Ex:",				"elementsDo: aValuable",				"\t[ true ] whileTrue: [ aValuable value: 42  ].",				"\t",				"This example generates an infinite iterator always returning 42.",				"Using the generator will produce that the method is only executed on demand.",				"",				"This Iterator can also wrap collections, iterating one element at the time.",				"",				"Ex:",				"elementsDo: aValuable",				"\tSystemNavigation default allBehaviorsDo: aValuable"			],			"category" : "NewTools-Spotter-Processors-Iterators"		},		"IconicListItemMorph" : {			"hash" : 1916160,			"definition" : "BorderedMorph subclass: #IconicListItemMorph\r\tuses: TAbleToRotate\r\tinstanceVariableNames: 'icon morph originalObject'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Basic'",			"comment" : [				"I am a wrapper used to display a morph with ahead an icon.",				"",				"Here is the way to use me",				"",				"IconicListItemMorph new",				"\ticon: ThemeIcons current smallOkIcon asMorph;",				"\tmorph: 'Accept' asMorph;",				"\tyourself;",				"\topenInWorld"			],			"category" : "Morphic-Widgets-Basic"		},		"ReSmalllintChecker" : {			"hash" : 1715456,			"definition" : "SmalllintManifestChecker subclass: #ReSmalllintChecker\r\tinstanceVariableNames: 'methodRules nodeRules classRules packageRules critiques'\r\tclassVariableNames: ''\r\tpackage: 'Renraku-CriticBrowser'",			"comment" : [				"Same as SmalllintManifestChecker but with tweaks for Renraku model "			],			"category" : "Renraku-CriticBrowser"		},		"TFCallbackQueue" : {			"hash" : 2025984,			"definition" : "Object subclass: #TFCallbackQueue\r\tinstanceVariableNames: 'semaphore callbacksByAddress pendingQueue callbackProcess mutex'\r\tclassVariableNames: 'UniqueInstance'\r\tpackage: 'ThreadedFFI-Callbacks'",			"comment" : [				"I'm a callback queue associated to a worker.",				"I handle all callbacks defined in the context of a worker."			],			"category" : "ThreadedFFI-Callbacks"		},		"RBRemoveClassKeepingSubclassesRefactoring" : {			"hash" : 3173120,			"definition" : "RBRemoveClassRefactoring subclass: #RBRemoveClassKeepingSubclassesRefactoring\r\tinstanceVariableNames: 'refactorings'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Core-Refactorings'",			"comment" : [				"I am a refactoring for removing classes but keeping subclasses in a safe way. ",				"",				"My precondition verifies that the class name exists in this namespace and the class has no references, resp. users, if this is used to remove a trait.",				"",				"If this class is \"not empty\" (has methods and variables), any subclass is reparented to the superclass of this class, and all its methods and variables (instance and class) are push down in its subclasses.",				"",				"Example",				"--------",				"```",				"(RBRemoveClassKeepingSubclassesRefactoring classNames: { #RBTransformationRuleTestData1 }) execute. ",				"```"			],			"category" : "Refactoring-Core-Refactorings"		},		"IRSequence" : {			"hash" : 1245952,			"definition" : "Object subclass: #IRSequence\r\tinstanceVariableNames: 'sequence orderNumber method'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Core-IR-Nodes'",			"comment" : [				"A sequence is corresponds to a block in the control flow graph."			],			"category" : "OpalCompiler-Core-IR-Nodes"		},		"TMockWithComplexSlot" : {			"hash" : 3439360,			"definition" : "Trait << #TMockWithComplexSlot\r\tslots: { #complexSlot => ObservableSlot };\r\tpackage: 'TraitsV2-Tests'",			"comment" : [				"A trait mock with a complex slot to be used in tests"			],			"category" : "TraitsV2-Tests"		},		"TKTServiceManager" : {			"hash" : 419584,			"definition" : "Object subclass: #TKTServiceManager\r\tinstanceVariableNames: 'services'\r\tclassVariableNames: ''\r\tpackage: 'TaskIt-Services'",			"comment" : [				"The service manager keeps a list of the currently installed tests and their state."			],			"category" : "TaskIt-Services"		},		"ZnCrPortableWriteStream" : {			"hash" : 1207552,			"definition" : "WriteStream subclass: #ZnCrPortableWriteStream\r\tinstanceVariableNames: 'stream cr lf previous'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-Character-Encoding-Core'",			"comment" : [				"I am a write stream wrapping a second stream. Whenever they ask me to write a cr, a lf, or a crlf I'll instead print a portable new line depending on the platform I'm on.",				"",				"stream := '' writeStream.",				"converter := ZnCrPortableWriteStream on: stream.",				"converter cr; cr; lf; nextPut: $a.",				"stream contents"			],			"category" : "Zinc-Character-Encoding-Core"		},		"MorphExtension" : {			"hash" : 1655552,			"definition" : "Object subclass: #MorphExtension\r\tinstanceVariableNames: 'locked visible sticky balloonText externalName eventHandler otherProperties fillStyle layoutPolicy layoutFrame layoutProperties borderStyle cornerStyle actionMap clipSubmorphs'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Core-Kernel'",			"comment" : [				"MorphExtension provides access to extra instance state that is not required in most simple morphs.  This allows simple morphs to remain relatively lightweight while still admitting more complex structures as necessary.  The otherProperties field takes this policy to the extreme of allowing any number of additional named attributes, albeit at a certain cost in speed and space."			],			"category" : "Morphic-Core-Kernel"		},		"ClySortFunction" : {			"hash" : 4861440,			"definition" : "Object subclass: #ClySortFunction\r\tinstanceVariableNames: 'direction'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-NavigationModel-Model'",			"comment" : [				"I implement first class function to be used instead of block in sorted collection.",				"There is system SortFunction. I am introduced to be safely used in caches.",				"Now in Pharo 7 SortFunction is improved and can completally replace and can be used instead of me.",				"But for Pharo 6 compatibility am still here and use by other Calypso based packages.",				"",				"So for general overview read system SortFunction comments.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tdirection:\t\t<Integer>"			],			"category" : "Calypso-NavigationModel-Model"		},		"MicRichTextCanvas" : {			"hash" : 6585600,			"definition" : "Object subclass: #MicRichTextCanvas\r\tinstanceVariableNames: 'out brushes nesting crAtEnd'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-MicrodownRichTextComposer'",			"comment" : [				"I am a Canvas in the Canvas-Brush pattern. I keep an output stream of type `Text`.",				"As texts can have multiple annotations, I have a stack of brushes to paint a text with. ",				"My only method for adding text to my stream is `<<`."			],			"category" : "Microdown-MicrodownRichTextComposer"		},		"PluggableToggleButtonMorph" : {			"hash" : 1911552,			"definition" : "PluggableButtonMorph subclass: #PluggableToggleButtonMorph\r\tinstanceVariableNames: 'pressed'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Basic-Buttons'",			"comment" : [				"I'm a pluggable togglable button. ",				"I extend a pluggable button in a very simple way:  I keep two states, PRESSED, and UNPRESSED (in fact, is just a boolean).",				"",				"I override a couple of methods, like #getModelState because in my context it does not have sense. ",				"",				"See PluggableToggleButtonMorphExample to have some usage hints. ",				"",				"Example:",				"========",				"(This is very simple and probably you want to use as is shown in the examples)",				"",				"PluggableToggleButtonMorph new ",				"\ticon: Smalltalk ui icons smallOkIcon;",				"\tlabel: 'Test';",				"\tactionBlock: [ :pressed | self inform: 'Status: ', (pressed asString) ];",				"\topenInWindow",				"\t"			],			"category" : "Morphic-Widgets-Basic-Buttons"		},		"SpecTableLayoutAddSpacer" : {			"hash" : 970240,			"definition" : "SpecTableLayoutAdd subclass: #SpecTableLayoutAddSpacer\r\tinstanceVariableNames: 'spaceFillWeight size orientation'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Layout-Actions'",			"comment" : [				"A SpecTableLayoutAddSpring class is a description of the addition of a spacer to a table layout.",				"",				"Can be either:",				"- flexible (fills available space; default) ",				"- of a fixed size",				"",				"Note that flexible spacers do not work with wrapDirection other than #none."			],			"category" : "Spec-Layout-Actions"		},		"Unit class" : {			"hash" : 2304768,			"definition" : "Unit class\r\tinstanceVariableNames: ''",			"comment" : [				"Class Unit is the superclass for all other unit classes.",				"Instances represent units which are attached to numbers; for example",				"'meters' (a BaseUnit), 'meters per second' (a CompoundUnit),",				"'joule seconds per liter' (a ComplexUnit), 'degrees Kelvin' (a TemperatureBaseUnit),",				"'degrees Celsius' (a TemperatureUnit), 'kilohertz' (a PrefixedUnit),",				"and 'moles of hydrogen' (a ModifiedUnit).",				"",				"A number of methods on the class side of Unit provide for easy access to built-in units.",				"",				"The basic unit 'kilogram' is special given that it is basic and has a 'kilo' prefix, see",				"also http://www.bipm.org/en/si/si_brochure/chapter3/3-2.html"			],			"category" : "Units-Core"		},		"RSAbstractMarkerDecoration" : {			"hash" : 5816576,			"definition" : "RSChartDecoration subclass: #RSAbstractMarkerDecoration\r\tinstanceVariableNames: 'markerColor getRelevantValueBlock line'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Decoration'",			"comment" : [				"Set a marker in the chart. For example:",				"",				"=-=-=-==-=-=-==-=-=-=",				"x := (-3.14 to: 3.14 by: 0.01).",				"c := RSChart new.",				"",				"p := RSLinePlot new.",				"p x: x y: x sin * 0.22.",				"c addPlot: p.",				"",				"p := RSLinePlot new.",				"p x: x y: x cos * 0.18.",				"c addPlot: p.",				"",				"c addDecoration: RSHorizontalTick new.",				"c addDecoration: (RSVerticalTick new asFloat).",				"c addDecoration: (RSYMarkerDecoration new ).",				"c ",				"=-=-=-==-=-=-==-=-=-="			],			"category" : "Roassal3-Chart-Decoration"		},		"FastInflateStream class" : {			"hash" : 1336320,			"definition" : "FastInflateStream class\r\tinstanceVariableNames: ''",			"comment" : [				"This class adds the following optimizations to the basic Inflate decompression:",				"",				"a) Bit reversed access",				"If we want to fetch the bits efficiently then we have them in the wrong bit order (e.g., when we should fetch 2r100 we would get 2r001). But since the huffman tree lookup determines the efficiency of the decompression, reversing the bits before traversal is expensive. Therefore the entries in each table are stored in REVERSE BIT ORDER. This is achieved by a reverse increment of the current table index in the huffman table construction phase (see method increment:bits:). According to my measures this speeds up the implementation by about 30-40%.",				"",				"b) Inplace storage of code meanings and extra bits",				"Rather than looking up the meaning for each code during decompression of blocks we store the appropriate values directly in the huffman tables, using a pre-defined mapping. Even though this does not make a big difference in speed, it cleans up the code and allows easier translation into primitive code (which is clearly one goal of this implementation).",				"",				"c) Precomputed huffman tables for fixed blocks",				"So we don't have to compute the huffman tables from scratch. The precomputed tables are not in our superclass to avoid double storage (and my superclass is more intended for documentation anyways)."			],			"category" : "Compression-Streams"		},		"StPharoApplication class" : {			"hash" : 5383936,			"definition" : "StPharoApplication class\r\tinstanceVariableNames: ''",			"comment" : [				"The application for the Pharo IDE."			],			"category" : "NewTools-Core-Application"		},		"WideCharacterSet" : {			"hash" : 1187328,			"definition" : "Collection subclass: #WideCharacterSet\r\tinstanceVariableNames: 'map byteArrayMap'\r\tclassVariableNames: ''\r\tpackage: 'Collections-Support-CharacterSets'",			"comment" : [				"WideCharacterSet is used to store a Set of WideCharacter with fast access and inclusion test.",				"",				"Implementation should be efficient in memory if sets are sufficently sparse.",				"",				"Wide Characters are at most 32bits.",				"We split them into 16 highBits and 16 lowBits.",				"",				"map is a dictionary key: 16 highBits value: map of 16 lowBits.",				"",				"Maps of lowBits  are stored as arrays of bits in a ByteArray.",				"If a bit is set to 1, this indicate that corresponding character is present.",				"8192 bytes are necessary in each lowmap.",				"Empty lowmap are removed from the map Dictionary.",				"",				"A byteArrayMap is maintained in parallel with map for fast handling of ByteString.",				"(byteArrayMap at: i+1) = 0 means that character of asciiValue i is absent, = 1 means present."			],			"category" : "Collections-Support-CharacterSets"		},		"AthensTextLine" : {			"hash" : 1568256,			"definition" : "Object subclass: #AthensTextLine\r\tinstanceVariableNames: 'text startIndex endIndex height maxAscent maxDescent width top commands tail'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Text'",			"comment" : [				"I representing a single line of text"			],			"category" : "Athens-Text"		},		"ClyExpandedDataSource" : {			"hash" : 5088512,			"definition" : "ClyDataSource subclass: #ClyExpandedDataSource\r\tinstanceVariableNames: 'collapsedItems'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-DataSource'",			"comment" : [				"I am table data source which items are all initially expanded.",				"I maintain list of collapsed items and compute items position according to it (row indexes in full table).",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcollapsedItems:\t\t<SortedCollection of: ClyDataSourceItem>\tsorted by item position"			],			"category" : "Calypso-Browser-DataSource"		},		"OverflowRowMorph" : {			"hash" : 1954048,			"definition" : "PanelMorph subclass: #OverflowRowMorph\r\tinstanceVariableNames: 'baseMorphs moreButton moreMorph'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Base'",			"comment" : [				"Instances of this class accept, via #baseMorph:, a morph that is expected to be row-like containing submorphs.",				"Based on the receiver's layout, the base morphs that are able to fit within the receiver (subject to minExtents) are layed out along with, if necessary, a button to pop-up a column of any remaining, unfittable, base morphs.",				"Handy for button bars etc.",				"",				"Example:",				"",				"(OverflowRowMorph new",				"\tbaseMorph: (UITheme builder newRow: ((1 to: 6) collect: [:i | |label|",				"\t\tlabel := 'Button ', i asString.",				"\t\t(UITheme builder",				"\t\t\tnewButtonFor: Transcript",				"\t\t\tgetState: nil",				"\t\t\taction: #show:",				"\t\t\targuments: {label}",				"\t\t\tgetEnabled: nil",				"\t\t\tlabel: label",				"\t\t\thelp: nil)",				"\t\t\thResizing: #spaceFill]))) openInWindow",				"\t\t",				"\t"			],			"category" : "Polymorph-Widgets-Base"		},		"OCOptimizedBlockScope" : {			"hash" : 1259008,			"definition" : "OCBlockScope subclass: #OCOptimizedBlockScope\r\tinstanceVariableNames: 'isInlinedLoop'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Core-Semantics'",			"comment" : [				"In Smalltalk, methods like ifTrue: are inlined an there is no Block for the arguments of these message sends.",				"To be consistent, these blocks need nevertheless a scope.",				""			],			"category" : "OpalCompiler-Core-Semantics"		},		"DAPackageRelationGraphDiff" : {			"hash" : 1788672,			"definition" : "Object subclass: #DAPackageRelationGraphDiff\r\tinstanceVariableNames: 'oldRelationGraph newRelationGraph packagesDiff dependentPackagesDiff'\r\tclassVariableNames: ''\r\tpackage: 'Tool-DependencyAnalyser-Diff'",			"comment" : [				"A PDPackageRelationGraphDiff do the diff between two PDPackageRelationGraph (an older and a newer) to detect :",				"",				" - which packages added/removed : packagesDiff.",				" - which dependent packages added/removed from a package : dependentPackagesDiff.",				" - which dependencies added/removed from a dependent package."			],			"category" : "Tool-DependencyAnalyser-Diff"		},		"RGObject" : {			"hash" : 5250560,			"definition" : "Object subclass: #RGObject\r\tinstanceVariableNames: 'properties name parent'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"I am the root class of the Ring meta-model definitions.",				"A Ring definition has a name, properties and knows its environment"			],			"category" : "Ring-Core-Kernel"		},		"RBDeprecateClassRefactoring" : {			"hash" : 3146496,			"definition" : "RBClassRefactoring subclass: #RBDeprecateClassRefactoring\r\tinstanceVariableNames: 'newName deprecatedClass shouldCopyExtensions shouldRemoveExtensions shouldFixSubclasses'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Core-Refactorings'",			"comment" : [				"I am a refactoring operation for removing of usages of a deprecated class, that was renamed to another name.",				"",				" I'm doing following operations:",				" - all subclasses of the deprecated class will use the new class as superclass (optional)",				" - convert new class to superclass of deprecatedclass, remove methods of deprecated class and add class method #isDeprecated (optional)",				" - rename all references in the code",				" - move extensions of the deprecated class owned by other packages to the new class (optional)",				" - remove the extensions (optional)"			],			"category" : "Refactoring-Core-Refactorings"		},		"FluidClassBuilder" : {			"hash" : 2243072,			"definition" : "FluidBuilder subclass: #FluidClassBuilder\r\tinstanceVariableNames: 'superclassToBuild layout sharedVariables sharedPools'\r\tclassVariableNames: ''\r\tpackage: 'FluidClassBuilder-Base'",			"comment" : [				"I'm a builder to create class definition using a fluid interface. For now I'm just wrapping a shiftClassBuilder.  In the future I should be removed and a shiftClassBuilder should be used instead.",				"",				"I'm created by the message `<<` as in ",				"",				"```",				"Object << #Point",				"```",				"",				"My build process happens when I resolve the message `package:` as in ",				"",				"```",				"Object << #Point ",				"\tslots: { #x . #y };",				"\ttag: 'Basics';",				"\tpackage: 'Kernel'",				"```\t",				"",				"Now this is not totally true. This expression creates a `ShiftClassBuilder`.",				"And we should send `build` to the fluidclassbuilder to actually kick the building.",				" ",				"The mandatory information (name, superclass, package) are systematically passed to the builder.",				"Others are checked first and when available passed. \t",				"\t",				"### To install a class",				"",				"```",				"ShiftClassInstaller new makeWithBuilder: (Object << #Point33 ",				" slots: { #x . #y };",				" tag: 'Basics';",				" package: 'Kernel') shiftClassBuilder\t",				"```"			],			"category" : "FluidClassBuilder-Base"		},		"SpDropListPresenter" : {			"hash" : 2217728,			"definition" : "SpAbstractWidgetPresenter << #SpDropListPresenter\r\tslots: {\r\t\t\t #model => ObservableSlot .\r\t\t\t #startsWithSelection .\r\t\t\t #selection .\r\t\t\t #displayBlock => ObservableSlot .\r\t\t\t #iconBlock => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter to display dropdown lists.",				"",				"_NOTE: I assume there is a little problem on an empty list, but frankly, who creates an empty drop list?_"			],			"category" : "Spec2-Core-Widgets"		},		"LabelMorph" : {			"hash" : 606464,			"definition" : "StringMorph subclass: #LabelMorph\r\tinstanceVariableNames: 'getEnabledSelector getTextSelector enabled model disabledStyle'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Basic'",			"comment" : [				"String morph with enablement support. When disabled the text will appear inset."			],			"category" : "Morphic-Widgets-Basic"		},		"OmFuelEntryReader" : {			"hash" : 4172544,			"definition" : "OmEntryReader subclass: #OmFuelEntryReader\r\tinstanceVariableNames: 'materializer'\r\tclassVariableNames: ''\r\tpackage: 'Ombu-Persistence'",			"comment" : [				"I implement how to read entries from a stream using Fuel serializer."			],			"category" : "Ombu-Persistence"		},		"SpButtonPresenter" : {			"hash" : 2206464,			"definition" : "SpAbstractButtonPresenter << #SpButtonPresenter\r\ttraits: {SpTContextMenu};\r\tslots: {\r\t\t\t #action => ObservableSlot .\r\t\t\t #actionPerformed => ObservableSlot .\r\t\t\t #askBeforeChanging => ObservableSlot .\r\t\t\t #font => ObservableSlot .\r\t\t\t #shortcut => ObservableSlot .\r\t\t\t #state => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A button who executes an action when pressed."			],			"category" : "Spec2-Core-Widgets"		},		"BasicCommandLineHandler" : {			"hash" : 865024,			"definition" : "CommandLineHandler subclass: #BasicCommandLineHandler\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'System-BasicCommandLineHandler-Base'",			"comment" : [				"I'm a command line handler who is not aware of any UI or Tools present in the system.",				"I'm used as base handler for loading executing stripped images (kernel images, for example). ",				"",				"My usage is the same as PharoCommandLineHandler, see his comment as better explanation.",				"",				"I also implement a way to password-protect command lines. ",				"",				"The password will not be saved as in clear. It will be hash using pepper and iterations.",				"",				"The pepper of a hash is a fix string happened to a password to increase the difficulty of finding the password. Also, we hash multiple times (iterations) to increase the strength of the protection.",				"",				"If you wish to define \"application\" command lines who do not need a password protection, implement the method #requirePasswordInDeployment on the class side to return false.",				"",				"Examples of password protection",				"----------------",				"",				"\"Enable password protection\"",				"CommandLinePasswordManager protectCommandLinesByPasswordWith: 'PharoPassword'",				"",				"\"You can also customize the pepper and number of iterations for the hashing of the password.\"",				"CommandLinePasswordManager protectCommandLinesByPasswordWith: 'PharoPassword' pepper: 'SomePepper' numberOfHashIterations: 10",				"",				"\"Remove password protection\"",				"CommandLinePasswordManager removePasswordProtection",				"",				"How to specify the password",				"----------------",				"",				"Command line without password:",				"\tPharo.exe Pharo.image eval \"1+1\"",				"",				"Command line with password:",				"\tPharo.exe Pharo.image eval \"1+1\" --deploymentPassword=Test"			],			"category" : "System-BasicCommandLineHandler-Base"		},		"OCOpalExamples" : {			"hash" : 3746816,			"definition" : "Object subclass: #OCOpalExamples\r\tinstanceVariableNames: 'iVar collection result'\r\tclassVariableNames: 'ExampleClassVariable'\r\tpackage: 'OpalCompiler-Tests-Data'",			"comment" : [				"I am the central place for example code used in tests"			],			"category" : "OpalCompiler-Tests-Data"		},		"MicAbstractBlock" : {			"hash" : 6537472,			"definition" : "MicElement subclass: #MicAbstractBlock\r\tinstanceVariableNames: 'children parser'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Model'",			"comment" : [				"I am the abstract node of the block objects generated by `MicroDownParser`.",				"",				"The root of the parsetree is an instance of `MicRootBlock`.",				"I have a set of children, and an uplink to my parent.",				"",				"See the comment of `MicroDownParser` for an overview of the algorithm used in building such parse tree."			],			"category" : "Microdown-Model"		},		"IceCredentialsProvider" : {			"hash" : 6177536,			"definition" : "Object subclass: #IceCredentialsProvider\r\tinstanceVariableNames: 'tries remote'\r\tclassVariableNames: 'ProviderType UseCustomSsh'\r\tpackage: 'Iceberg-Security'",			"comment" : [				"I am in charge of remembering credentials information, configuration and providing it as required by the different backend implementations.",				"",				"I have a counter to avoid for trying for ever with the same credentials."			],			"category" : "Iceberg-Security"		},		"RBNamespace" : {			"hash" : 3141888,			"definition" : "RBEntity subclass: #RBNamespace\r\tinstanceVariableNames: 'changes environment newClasses removedClasses changedClasses rootClasses implementorsCache sendersCache newPackages changedPackages removedPackages'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Core-Model'",			"comment" : [				"I am a namespace for refactoring operations.",				"I collect changes during refactoring and provide an environment for resolving named entities like",				"classes, method senders or implementors. ",				"",				"The default environment for a namespace contains all classes in the system, but you can create ",				"an instance of me with a scoped environment to apply the refactoring operations only on entities in ",				"that environment.",				"",				"Resolving named entities includes classes and methods changed or added during refactoring, before",				"actually applying this changes to the system. For this, I create model classes - RBClass and RBMetaclass - modeling real classes.",				"",				"The changes that will be applied to the system are collected as refactoring changes (RBRefactoryChange).",				"",				"Example: ",				"This creates a new namespace on the default environment (all system classes):",				" model := RBNamespace onEnvironment: RBBrowserEnvironment new.",				"",				"This creates a Refactoring operation for adding a class, with me as the namespace model:",				"    refactoring := RBAddClassRefactoring",				"        model: model",				"        addClass: #SomeClass",				"        superclass: #Object",				"        subclasses: {}",				"        category: #Category.",				"",				"This will do a \"dry run\", only collect the changes of this refactoring:",				"    refactoring primitiveExecute.",				"",				"Now can ask me for this list of changes:",				"   model changes.",				"this acutally gives a composite refactory change that holds a list of all single refacoring changes.",				"",				"Note, some of my methods for querying method senders and implementors don't work well for Trait methods, because we don't have yet modeling classes for Traits and some refactoring operations don't support refactorings on trait methods."			],			"category" : "Refactoring-Core-Model"		},		"ZnClient" : {			"hash" : 1405696,			"definition" : "Object subclass: #ZnClient\r\tinstanceVariableNames: 'request response connection lastUsed options session logLevel'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Client-Server'",			"comment" : [				"I am ZnClient, an object to build, execute and process HTTP client requests.",				"",				"I have a rich protocol to construct requests and to access responses.",				"I have various error handling options.",				"I can reuse an existing connection to a specific host:port.",				"I handle sessions, cookies, redirects and authentication.",				"I have many options (settings) with sensible defaults.",				"",				"Simplest possible invocation:",				"",				"\tZnClient new",				"\t\tget: 'http://zn.stfx.eu/zn/numbers.txt'.",				"\t",				"Using some features to make a better HTTP request:",				"",				"\tZnClient new",				"\t\tsystemPolicy;",				"\t\taccept: ZnMimeType textPlain;",				"\t\thttp;",				"\t\thost: 'zn.stfx.eu';",				"\t\tpath: 'zn/numbers.txt';",				"\t\tcontentReader: [ :entity | entity contents lines collect: [ :each | each asNumber ] ];",				"\t\tifFail: [ :exception | self inform: 'I am sorry: ', exception printString ];",				"\t\tget.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Client-Server"		},		"ClyUnknownQueryResult" : {			"hash" : 4856832,			"definition" : "ClyQueryResult subclass: #ClyUnknownQueryResult\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Calypso-NavigationModel-Result'",			"comment" : [				"I implement null pattern for query result.",				"",				"Users should use my singleton #instance on class side: ",				"",				"\tClyUnknownQueryResult instance"			],			"category" : "Calypso-NavigationModel-Result"		},		"QuoRemMinimal" : {			"hash" : 2320896,			"definition" : "QuoRemStandard subclass: #QuoRemMinimal\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Numbers'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "Containers-Essentials-Numbers"		},		"AthensCairoPatternPaint" : {			"hash" : 3080960,			"definition" : "FFIExternalObject subclass: #AthensCairoPatternPaint\r\tuses: TCairoLibrary\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpoolDictionaries: 'AthensCairoDefinitions'\r\tpackage: 'Athens-Cairo-Paints'",			"comment" : [				"i am abstract class for different kinds of paints in cairo backend."			],			"category" : "Athens-Cairo-Paints"		},		"RSScrollBarsCanvasInteraction" : {			"hash" : 5723136,			"definition" : "RSAbstractControlCanvasInteraction subclass: #RSScrollBarsCanvasInteraction\r\tinstanceVariableNames: 'barShape vertical horizontal animation hideAnimation'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Controls'",			"comment" : [				"I put a scrool shapes to the view when the view moves"			],			"category" : "Roassal3-Interaction-Controls"		},		"ClyToolbarSeparatorMorph" : {			"hash" : 5094656,			"definition" : "Morph subclass: #ClyToolbarSeparatorMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-Toolbar'",			"comment" : [				"I am a vertical line which is used to separate toolbar elements which belongs to different menu groups.",				"",				"I am used by CmdMenuGroup to build toolbar items: ",				"",				"\tmenuGroup buildBrowserToolbar: aToolbar"			],			"category" : "Calypso-Browser-Toolbar"		},		"MenuMorph" : {			"hash" : 1907456,			"definition" : "AlignmentMorph subclass: #MenuMorph\r\tinstanceVariableNames: 'defaultTarget selectedItem stayUp popUpOwner activeSubMenu titleMorph selection'\r\tclassVariableNames: 'CloseBoxImage PushPinImage'\r\tpackage: 'Morphic-Base-Menus'",			"comment" : [				"Instance variables:",				"\tdefaultTarget \t<Object>\t\t\t\tThe default target for creating menu items",				"\tselectedItem\t\t<MenuItemMorph> \tThe currently selected item in the receiver",				"\tstayUp \t\t\t<Boolean>\t\t\tTrue if the receiver should stay up after clicks",				"\tpopUpOwner \t<MenuItemMorph>\tThe menu item that automatically invoked the receiver, if any.",				"\tactiveSubMenu \t<MenuMorph>\t\tThe currently active submenu."			],			"category" : "Morphic-Base-Menus"		},		"FFIExternalValueHolder" : {			"hash" : 512768,			"definition" : "Object subclass: #FFIExternalValueHolder\r\tinstanceVariableNames: 'data'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-Objects'",			"comment" : [				"I am a generic meta class for creating a subclasses, which instances will hold a single value of specified C type.",				"To create a new class for some concrete C type you need to declare an anonnymous class and indicate the type you want to use:",				"",				"[ [ [ ",				"floatHolderClass := FFIExternalValueHolder ofType: 'float'",				" ] ] ]",				"",				"Then you can use  given class(es) as a value holders for type you specified:",				"",				"[ [ [ ",				" float := floatHolderClass new.",				"",				"float value:  1.5",				"float value",				" ] ] ]",				"",				"By combining this with class/pool variables we have a convenient way of defining a values, which are passed by pointer to a function.",				"",				"For instance, imagine that we need to create a binding to a function:",				"",				"[ [ [ ",				"void getFoo( SomeType * value) ",				" ] ] ]",				"",				"which is not an unusual situation, when C function using pointer arguments for storing it's output there.",				"",				"And this is what ==FFIExternalValueHolder== is done for. To define a binding to this function you can declare a subclass named SomeType",				" ",				"and then use it in function signature:",				"",				"[ [ [ ",				"getFoo: value",				"  ^ self ffiCall: #(void getFoo ( SomeType *  value ))",				"] ] ]",				"",				"and call it like: ",				"",				"[ [ [ ",				"var := SomeType new.",				"self getFoo: var.",				"",				"var value  \"will read the value\" ",				"]]]"			],			"category" : "UnifiedFFI-Objects"		},		"CompiledMethod class" : {			"hash" : 793600,			"definition" : "CompiledMethod class\r\tinstanceVariableNames: ''",			"comment" : [				"Specific version of compiled code for method's.",				"",				"CompiledMethod instances can be in two forms:",				"- up until Pharo 6, they encode both the method and the inner closures bytecodes and literals.",				"- since Pharo 6, they encode only the method's bytecodes and literals.",				"",				"In addition the execution mechanics, a compiled method have two extra optional literals. The last literal, optional if there are no super sends, is the class in which the method is installed. The last but one literal is either the method's selector or an AdditionalMethodState instance. AdditionalMethodState instances are used to encode additional state to a method, as for example the pragmas.",				"",				"The bytecode encodes the trailer at the end, in most cases it has 4 bytes encoding the sourcer pointer (see CompiledMethodTrailer).",				"Thus endPC of a compiled method is not the size of the bytecode, but the size minus the length of the trailer."			],			"category" : "Kernel-Methods"		},		"RSBorderAttachPoint" : {			"hash" : 5683456,			"definition" : "RSOffsetAttachPoint subclass: #RSBorderAttachPoint\r\tinstanceVariableNames: 'offset'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-AttachPoint'",			"comment" : [				"I am an attach point that will end the line on the border of the end shapes.",				"",				"Unline ContinuousAttachPoint & co. you don't need to care about what the end shape is, as long as it is one of the basic shapes.",				"",				"Indirect way to use it:",				"-=-=-=-=",				"c := RSCanvas new.",				"",				"shapes := (30 to: 50) collect: [ :nb |",				"\tRSEllipse new size: nb; model: nb; yourself.",				"\t ] as: RSGroup.",				"",				"c addAll: shapes.",				"",				"RSEdgeBuilder line",				"\tcanvas: c;",				"\twithBorderAttachPoint;",				"\tconnectFrom: 30 toAll: (31 to: 50).",				"",				"",				"RSGridLayout on: shapes. ",				"RSLocation new",				"\tabove;",				"\tmove: shapes first on: shapes allButFirst.",				"shapes @ RSDraggable.",				"",				"c @ RSCanvasController",				"-=-=-=-=",				"",				"",				"Manual way to set an attach point:",				"-=-=-=-=",				"c := RSCanvas new.",				"",				"shapes := (30 to: 50) collect: [ :nb |",				"\tRSEllipse new size: nb; model: nb; yourself.",				"\t ] as: RSGroup.",				"",				"c addAll: shapes.",				"",				"lines := RSEdgeBuilder line",				"\tcanvas: c;",				"\tconnectFrom: 30 toAll: (31 to: 50).",				"",				"lines do: [ :l | l attachPoint: (RSBorderAttachPoint new) ].",				"",				"RSGridLayout on: shapes. ",				"RSLocation new",				"\tabove;",				"\tmove: shapes first on: shapes allButFirst.",				"shapes @ RSDraggable.",				"",				"c @ RSCanvasController",				"-=-=-=-="			],			"category" : "Roassal3-Shapes-AttachPoint"		},		"AnnotationUserExample" : {			"hash" : 2077952,			"definition" : "BaseAnnotationUserExample subclass: #AnnotationUserExample\r\tinstanceVariableNames: 'isSimulatedActiveAnnotation'\r\tclassVariableNames: ''\r\tpackage: 'ClassAnnotation-Tests-Examples-Annotation contexts'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tisSimulatedActiveAnnotation:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "ClassAnnotation-Tests-Examples-Annotation contexts"		},		"RBReturnNode" : {			"hash" : 1164800,			"definition" : "RBProgramNode subclass: #RBReturnNode\r\tinstanceVariableNames: 'return value'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Nodes'",			"comment" : [				"RBReturnNode is an AST node that represents a return expression.",				"",				"Instance Variables:",				"\treturn\t<Integer>\tthe position of the ^ character",				"\tvalue\t<RBValueNode>\tthe value that is being returned",				""			],			"category" : "AST-Core-Nodes"		},		"SpLayoutFrame" : {			"hash" : 2155776,			"definition" : "Object subclass: #SpLayoutFrame\r\tinstanceVariableNames: 'bottomFraction bottomOffset leftFraction leftOffset rightFraction rightOffset topFraction topOffset owner'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Layout-Support'",			"comment" : [				"I am a wrapper for the layout of widget.",				"",				"Each framework can then adapt me as it wants in its adapters"			],			"category" : "Spec2-Layout-Support"		},		"MCVersionSorter" : {			"hash" : 299520,			"definition" : "Object subclass: #MCVersionSorter\r\tinstanceVariableNames: 'layers depthIndex depths stepparents roots'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Versioning'",			"comment" : [				"Sort versions"			],			"category" : "Monticello-Versioning"		},		"ClapContext" : {			"hash" : 393472,			"definition" : "ClapExpression subclass: #ClapContext\r\tinstanceVariableNames: 'arguments obeyingExits stdio match leftovers session exitException'\r\tclassVariableNames: ''\r\tpackage: 'Clap-Core-Activation'",			"comment" : [				"I represent the (stateful) context in which command parsing & execution are happening.",				"My specification is the root command or parameter that will be matched against the the sequence of arguments I receive.",				"To enable dependency injection, all command code should ask me for any external resource (e.g. exiting, error handling, I/O streams).",				"",				"For example, the command invocation \"eval '1 + 2' \" is represented by this:",				"\tClapContext on: #('eval' '1 + 2')"			],			"category" : "Clap-Core-Activation"		},		"ReCollectionMessagesToExternalObjectRule" : {			"hash" : 3945472,			"definition" : "ReNodeMatchRule subclass: #ReCollectionMessagesToExternalObjectRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for methods that appear to be modifying a collection that is owned by another object. Such modifications can cause problems especially if other variables are modified when the collection is modified. For example, CompositePart must set the containers of all its parts when adding a new component."			],			"category" : "GeneralRules-Migrated"		},		"DashedBorderStyle" : {			"hash" : 654080,			"definition" : "SimpleBorderStyle subclass: #DashedBorderStyle\r\tinstanceVariableNames: 'dashColors dashLengths'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Borders'",			"comment" : [				"Border style supporting dashed lines of configurable patterns and colours."			],			"category" : "Morphic-Base-Borders"		},		"RSBoundingShape" : {			"hash" : 5672704,			"definition" : "RSShape subclass: #RSBoundingShape\r\tuses: RSTPositionable\r\tinstanceVariableNames: 'baseRectangle matrix connectedLines shouldUpdateLines'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Bounding'",			"comment" : [				"My subclasses has an extent and a transformation matrix"			],			"category" : "Roassal3-Shapes-Bounding"		},		"RSForceBuilder" : {			"hash" : 2288128,			"definition" : "RSAbstractContainerBuilder subclass: #RSForceBuilder\r\tinstanceVariableNames: 'interferences particles force particlesSize interferencesSize interferencesRadius particlesRadius random colorGenerator'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-Force'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Experimental-Force"		},		"CharacterScanner" : {			"hash" : 721664,			"definition" : "Object subclass: #CharacterScanner\r\tinstanceVariableNames: 'destX lastIndex xTable map destY stopConditions text textStyle alignment leftMargin rightMargin font line runStopIndex spaceCount spaceWidth emphasisCode kern indentationLevel pendingKernX'\r\tclassVariableNames: 'ColumnBreakStopConditions CompositionStopConditions DefaultStopConditions MeasuringStopConditions PaddedSpaceCondition'\r\tpoolDictionaries: 'TextConstants'\r\tpackage: 'Text-Scanning'",			"comment" : [				"A CharacterScanner holds the state associated with scanning text. Subclasses scan characters for specified purposes, such as computing a CharacterBlock or placing characters into Forms.",				"",				"Instance Variables",				"\talignment:\t\t<Integer>",				"\tdestX:\t\t<Number>",				"\tdestY:\t\t<Number>",				"\temphasisCode:\t\t<Object>",				"\tfont:\t\t<AbstractFont>",				"\tindentationLevel:\t\t<Integer>",				"\tkern:\t\t<Number>",				"\tlastIndex:\t\t<Integer>",				"\tleftMargin:\t\t<Number>",				"\tline:\t\t<TextLine>",				"\tmap:\t\t<Array>",				"\tpendingKernX:\t\t<Number>",				"\trightMargin:\t\t<Number>",				"\trunStopIndex:\t\t<Integer>",				"\tspaceCount:\t\t<Integer>",				"\tspaceWidth:\t\t<Number>",				"\tstopConditions:\t\t<Array>",				"\ttext:\t\t<Text>",				"\ttextStyle:\t\t<TextStyle>",				"\twantsColumnBreaks:\t\t<Boolean>",				"\txTable:\t\t<Array>",				"",				"alignment",				"\t- an Integer encoding the alignment of text",				"",				"destX",				"\t- horizontal position for next character (distance from left of composition area)",				"",				"destY",				"\t- vertical position for next character (distance from top of composition area)",				"",				"emphasisCode",				"\t- an Integer encoding the current text emphasis to use (bold, italic, ...)",				"",				"font",				"\t- the current font used for measuring/composing/displaying characters",				"",				"indentationLevel",				"\t- an Integer specifying a number of leading tabs to be inserted at beginning of new lines",				"",				"kern",				"\t- a Number specifying additional horizontal spacing to place between characters (spacing is reduced when kern is negative)",				"",				"lastIndex",				"\t- the Integer index of next character to be processed in the text",				"",				"leftMargin",				"\t- a Number specifying the distance between left of composition zone and left of first character in the line.",				"",				"line",				"\t- an object holding information about the line currently being displayed (like first and last index in text).",				"\tNote: this is either a TextLine in Morphic, or TextLineInterval for ST80 compatibility",				"",				"map",				"\t- an array mapping character code to glyph position.",				"\tThis is used by primitive 103 only, in case of ByteString.",				"",				"pendingKernX",				"\t- a Number to be added to horizontal spacing of next char if ever it is in the same font than previous one.",				"\tThe inner scan loop is interrupted by a change of text run.",				"\tBut some changes won't change the font, so the kerning must be remembered and applied later.",				"",				"rightMargin",				"\t- a Number specifying the distance between right of composition zone and right of last character in the line.",				"",				"runStopIndex",				"\t- the Integer index of last character in current text run.",				"",				"spaceCount",				"\t- the number of spaces encoutered so far in current line. This is useful for adjusting the spacing in cas of Justified alignment.",				"",				"spaceWidth",				"\t- the width of space character in current font.",				"",				"stopConditions",				"\t- an Array mapping a table of characters codes for which special actions are to be taken.",				"\tThese are typically control characters like carriage return or horizontal tab.",				"",				"text",				"\t- the text to be measured/composed/displayed",				"",				"textStyle",				"\t- an object holding a context for the text style (which set of font to use, which margins, etc...)",				"",				"wantsColumnBreaks",				"\t- a Boolean indicating whether some special handling for multiple columns is requested.",				"\tTHIS ONLY MAKES SENSE IN CompositionScanner AND SHOULD BE MOVED TO THE SUBCLASS",				"\t",				"xTable",				"\t- an array mapping character code to glyph x coordinate in form.",				"\tThis is used by primitive 103 only, in case of ByteString.",				"\t",				"Implementation note: accelerated Character scanning with primitive 103 requires following order for 5 first instance variables, please don't alter:",				"destX lastIndex xTable map destY"			],			"category" : "Text-Scanning"		},		"QuoRemStandard" : {			"hash" : 2320384,			"definition" : "QuoRemComplementary subclass: #QuoRemStandard\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Numbers'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "Containers-Essentials-Numbers"		},		"RBLiteralNode" : {			"hash" : 1177600,			"definition" : "RBValueNode subclass: #RBLiteralNode\r\tinstanceVariableNames: 'start stop'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Nodes'",			"comment" : [				"RBLiteralNode is an AST node that represents literals.",				"",				"Instance Variables",				"\tstart: <Integer | nil> source position for the literal's beginning",				"\tstop: <Integer | nil> source position for the literal's end"			],			"category" : "AST-Core-Nodes"		},		"ZnBase64Encoder class" : {			"hash" : 1195776,			"definition" : "ZnBase64Encoder class\r\tinstanceVariableNames: ''",			"comment" : [				"I am ZnBase64Encoder.",				"",				"Base64 encoding is a technique to encode binary data as a string of characters that can be safely transported over various protocols. Basically, every 3 bytes are encoded using 4 characters from an alphabet of 64. Each encoded character represents 6 bits.",				"",				"The most commonly used alphabet is 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'. One or two equal signs (= or ==) are used for padding.",				"",				"  ZnBase64Encoder new encode: #[0 1 2 3 4 5].",				"  ZnBase64Encoder new encode: #[10 20]",				"  ZnBase64Encoder new decode: 'BQQDAgEA'.",				"  ZnBase64Encoder new decode: 'FAo='.",				"",				"The encoded data can optionally be broken into lines. Characters not part of the alphabet are considered as white space and are ignored when inbetween groups of 4 characters.",				"",				"My #encode: method works from ByteArray to String, while my #decode: method works from String to ByteArray.",				"",				"Note that to encode a String as Base64, you first have to encode the characters as bytes using a character encoder.",				"",				"See also http://en.wikipedia.org/wiki/Base64",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-Character-Encoding-Core"		},		"CommandLineUIManager" : {			"hash" : 911872,			"definition" : "UIManager subclass: #CommandLineUIManager\r\tinstanceVariableNames: 'doNotQuitOnRestart uiManager'\r\tclassVariableNames: 'SnapshotErrorImage'\r\tpackage: 'UIManager-Base'",			"comment" : [				"I am UI manager for a headless setup.",				"I block all UI manager API that uses Morphs and will trow an error instead."			],			"category" : "UIManager-Base"		},		"RubTextSegmentIconDisplayer" : {			"hash" : 597248,			"definition" : "RubScrolledTextSideRuler subclass: #RubTextSegmentIconDisplayer\r\tinstanceVariableNames: 'previouslyIn'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Widgets'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tpreviouslyIn:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Rubric-Editing-Widgets"		},		"TextEditor class" : {			"hash" : 1893376,			"definition" : "TextEditor class\r\tinstanceVariableNames: 'cmdActions shiftCmdActions defaultFindReplaceServiceClass'",			"comment" : [				"My instances edit Text, this is, they support multiple lines and TextAttributes.",				"They have no specific facilities for editing Smalltalk code. Those are found in RubSmalltalkEditor."			],			"category" : "Text-Edition-Editor"		},		"IceGitIndex" : {			"hash" : 6505984,			"definition" : "IceIndex subclass: #IceGitIndex\r\tinstanceVariableNames: 'modifiedFilePaths'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Libgit-Core'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tmodifiedFilePaths:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Iceberg-Libgit-Core"		},		"RBRemoveClassChange" : {			"hash" : 3194112,			"definition" : "RBRefactoryClassChange subclass: #RBRemoveClassChange\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Changes-Changes-Classes'",			"comment" : [				"I am a class refactoring change for removing a class. On execution, my class will be removed from the system (all globals)."			],			"category" : "Refactoring-Changes-Changes-Classes"		},		"RSDraggableCanvasInteraction" : {			"hash" : 5722112,			"definition" : "RSAbstractControlCanvasInteraction subclass: #RSDraggableCanvasInteraction\r\tinstanceVariableNames: 'mouseEvent isMoving lastStep'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Controls'",			"comment" : [				"I set the drag event for view, I use a basic bars to do that.",				"",				"Use example:",				"```Smalltalk",				"c := RSCanvas new.",				"c add: (RSBox new size: 30).",				"c @ RSDraggableCanvas",				"```"			],			"category" : "Roassal3-Interaction-Controls"		},		"RSDelaunayExample" : {			"hash" : 2284544,			"definition" : "RSObject subclass: #RSDelaunayExample\r\tinstanceVariableNames: 'allParticles canvas useFill'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-Delaunay'",			"comment" : [				"https://es.wikipedia.org/wiki/Triangulaci%C3%B3n_de_Delaunay"			],			"category" : "Roassal3-Experimental-Delaunay"		},		"RGClassStrategy" : {			"hash" : 5244416,			"definition" : "RGClassDescriptionStrategy subclass: #RGClassStrategy\r\tinstanceVariableNames: 'comment classVariables package sharedPools'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tclassVariables:\t\t<Object>",				"\tcomment:\t\t<Object>",				"\tpackage:\t\t<Object>",				"\tsharedPools:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"SimpleBalloonMorph" : {			"hash" : 1958144,			"definition" : "BalloonMorph subclass: #SimpleBalloonMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Widgets'",			"comment" : [				"A simple ballon morph with straight segments"			],			"category" : "Morphic-Base-Widgets"		},		"FileSystemGuide" : {			"hash" : 1280768,			"definition" : "Object subclass: #FileSystemGuide\r\tinstanceVariableNames: 'visitor work selectChildren'\r\tclassVariableNames: ''\r\tpackage: 'FileSystem-Core-Base-Guide'",			"comment" : [				"I am an abstract superclass for objects that fulfill the Guide role in the Guide/Visitor pattern. My subclasses know how to traverse a filesystem in a specific order, \"showing\" the files and directories they encounter to a visitor.",				"",				"visitor",				"\tAn object that fulfills the Visitor role and implements the visitor protocol.",				"\t",				"work",				"\tAn OrderedCollection, used to keep track of filesystem nodes that have not yet been visited"			],			"category" : "FileSystem-Core-Base-Guide"		},		"OSTouchGestureNeedingThresholdDetector class" : {			"hash" : 4048640,			"definition" : "OSTouchGestureNeedingThresholdDetector class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a gesture detector for gestures who has to travel a certain distance before being detected"			],			"category" : "OSWindow-Core-Gestures"		},		"OSWindowWorldMorph" : {			"hash" : 3999232,			"definition" : "WorldMorph subclass: #OSWindowWorldMorph\r\tinstanceVariableNames: 'closeCallback isResizeable'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Morphic'",			"comment" : [				"I am a morphic world that uses OSWindow.",				"",				"For opening a World in a external window, the following script can be used:",				"",				"world := OSWindowWorldMorph new.",				"world open."			],			"category" : "OSWindow-Core-Morphic"		},		"TFCallbackQueue class" : {			"hash" : 2025728,			"definition" : "TFCallbackQueue class\r\tinstanceVariableNames: ''",			"comment" : [				"I'm a callback queue associated to a worker.",				"I handle all callbacks defined in the context of a worker."			],			"category" : "ThreadedFFI-Callbacks"		},		"RSPopup" : {			"hash" : 5728256,			"definition" : "RSAbstractPopupInteraction subclass: #RSPopup\r\tinstanceVariableNames: 'shapeBuilder modelBlock'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Popup'",			"comment" : [				"I can add a popup on an element when a move over event occurs.",				"",				"Here is an example:",				"```",				"c := RSCanvas new.",				"",				"classes := RSObject withAllSubclasses.",				"",				"scale := NSScale linear",				"domain: { (classes collect: #numberOfMethods) min . (classes collect: #numberOfMethods) max};",				"range: { 'red'. 'blue' }.",				"",				"classes do: [ :cls |",				"| b |",				"b := RSEllipse new.",				"b size: cls numberOfMethods.",				"b color: (scale scale: cls numberOfMethods).",				"b model: cls.",				"b @ RSPopup.",				"c add: b ].",				"",				"RSFlowLayout on: c shapes.",				"",				"c @ RSCanvasController",				"```",				"",				"Per default, `RSPopup` gives a label as a popup. However, it may be easily customized by using `shapeBuilder:`, which takes a one-argument-block and must return a shape or a composite shape. Consider: ",				"",				"```",				"canvas := RSCanvas new.",				"",				"shapes := RSLabel models: (1 to: 10).",				"canvas addAll: shapes.",				"RSGridLayout on: shapes.",				"",				"popup := RSPopup new.",				"popup shapeBuilder: [ :aNumber |",				"\t| g |",				"\tg := RSGroup new.",				"\tg addAll: (RSCircle models: (1 to: aNumber)).",				"\tRSGridLayout on: g.",				"\tg asShape ",				"\t\tcolor: Color white darker darker;",				"\t\tpadding: 5.",				"].",				"shapes @ popup.",				"",				"canvas zoomToFit.",				"```",				"",				"Anoter example, more complex:",				"",				"```",				"packages := RPackageOrganizer default packages select: [ :rPak | rPak packageName beginsWith: 'Roassal3' ].",				"",				"canvas := RSCanvas new.",				"shapes := RSBox models: packages.",				"canvas addAll: shapes.",				"",				"shapes @ RSDraggable.",				"",				"RSNormalizer size",				"\tshapes: shapes;",				"\tfrom: 5; to: 20;",				"\tnormalize: [ :rPackage | rPackage definedClasses size ].",				"",				"lb := RSLineBuilder line.",				"lb shape color: Color gray translucent.",				"lb moveBehind.",				"lb shapes: shapes.",				"lb connectToAll: #dependentPackages.",				"",				"popup := RSPopup new.",				"popup shapeBuilder: [ :package |",				"\t| g nodes lbl |",				"\tg := RSGroup new.",				"\tnodes := RSBox models: package definedClasses.",				"\tnodes color: Color blue.",				"\tg addAll: nodes.",				"\ttlb := RSLineBuilder orthoVertical.",				"\ttlb canvas: g.",				"\ttlb shapes: nodes.",				"\ttlb connectFrom: #superclass.",				"\tRSTreeLayout on: nodes.",				"\tlbl := RSLabel text: package packageName.",				"\tg add: lbl.",				"\tRSLocation move: lbl above: nodes.",				"\tg asShape ",				"\t\tcolor: Color white darker translucent; ",				"\t\tborderColor: #black;",				"\t\tpadding: 3.",				"].",				"shapes @ popup.",				"",				"shapes @ RSHighlightable red withOutgoingLines.",				"shapes @ RSHighlightable green incomingLines.",				"",				"RSForceBasedLayout new charge: -800; on: shapes.",				"canvas @ RSCanvasController.",				"```"			],			"category" : "Roassal3-Interaction-Popup"		},		"SpKMCategoryBuilder" : {			"hash" : 2396928,			"definition" : "CmVisitor subclass: #SpKMCategoryBuilder\r\tinstanceVariableNames: 'kmCategory'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Commander2-Visitors'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tkmCategory:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Commander2-Visitors"		},		"RGNamespace" : {			"hash" : 1333760,			"definition" : "RGContainer subclass: #RGNamespace\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Ring-Definitions-Containers-Base'",			"comment" : [				"A namespace is a container that in addition to managing classes and methods, it also knows how to treat pools and global variables"			],			"category" : "Ring-Definitions-Containers-Base"		},		"SpDiffPresenter" : {			"hash" : 2217216,			"definition" : "SpAbstractWidgetPresenter << #SpDiffPresenter\r\tslots: {\r\t\t\t #showOptions => ObservableSlot .\r\t\t\t #showOnlyDestination => ObservableSlot .\r\t\t\t #showOnlySource => ObservableSlot .\r\t\t\t #contextClass => ObservableSlot .\r\t\t\t #leftLabel => ObservableSlot .\r\t\t\t #leftText => ObservableSlot .\r\t\t\t #rightLabel => ObservableSlot .\r\t\t\t #rightText => ObservableSlot .\r\t\t\t #beWrapped => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"I am a Spec widget useful for visualising differences between two strings.",				"",				"When a classContext: is setted, the strings are highlighted using such contextual information.",				"",				"Examples:",				"",				"self exampleWithoutOptions.",				"self exampleWithOptions."			],			"category" : "Spec2-Core-Widgets"		},		"ClyQueryResult" : {			"hash" : 4853760,			"definition" : "Object subclass: #ClyQueryResult\r\tinstanceVariableNames: 'environment buildingQuery metadata items accessGuard announcer needsRebuild'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-NavigationModel-Result'",			"comment" : [				"I represent collection of items retrieved by query from environment. ",				"My subclasses implement specific format or transformation of items. They should implement method:",				"",				"- fillWith: items ",				"",				"Any query has special parameter #requiredResult which specifies what kind of result should represent retrieved items. It is an instance of result which is used as prototype to create actual result instances. ",				"",				"When query is executed at first time the navigation environment prepares new instance of required result:",				"\t",				"\tactualResult := aQuery prepareNewResult.",				"",				"where query asks #requiredResult for: ",				"",				"\tactualResult := requiredResult prepareNewFor: aQuery in: environment",				"",				"Then actualResult is cached using query as a key. And subsequent query execution just returns existing value.",				"",				"Thus my instances describe required result and they can be implemented using composition of other objects. So different instances of same result class can lead to different result of query.",				"For example there is ClySortedQueryResult with #sortFunction variable. It allows to sort retrieved items using different criteria and different direction (ascending or descending).",				"",				"Since requiredResult is part of query it is used in query comparison and hashing logic. And therefore my subclasses should correctly implement equality and hash operations when they introduce new parameters.",				"Also instances which are used as required result should be immutable because instead modification of result can corrupt cache of queries. ",				"To ensure this property #requiredResult is marked as readOnlyObject when it is assigned to the query.",				"",				"Actual query execution is initiated by me using method #rebuildIfNeeded. Navigation environment calls it before returning result to the user.",				"",				"I maintain special flag #needsRebuild to detect that existing items are dirty or are not built yet. So at first time #rebuildIfNeeded will lead to actual query execution (result building). But then it will do nothing until update will be not requested again.",				"",				"So #rebuildIfNeeded will call #rebuild which will ask #buildingQuery to build result: ",				"",				"\taQuery buildResult: self ",				"",				"At the end aQuery fills result instance with items retrieved from the scope of environment.",				"",				"Notice that #rebuild itself is private method. Users should use #rebuildIfNeeded. In fact users do not need it too because it is lazely evaluated when my items are accessed. But in case when query is executed it is evaluated explicitly by navigation environment. So callers always receive fresh result.",				"",				"In the case when you want force items update there are two methods: ",				"",				"- forceRebuild ",				"It set flag #needsRebuild to true and notify observers about changes (observers will be explained below).",				"",				"- forceLazyRebuild ",				"It silently set flag #needsRebuild to true without any notification to observers.",				"",				"In first case observers can handle notification by requesting new items from the result instance.",				"For example if UI widget observes result items and shows them to the user the #forceRebuild message will update shown items immediately. ",				"But #forceLazyRebuild will not update items until user request it manually.",				"In addition both methods reset items to nil.",				"",				"There is extra helper method #cancelRebuild which reset rebuild flag and reset items to the empty collection.",				"",				"My instances are safe to be used from multiple processes. Building and updating of items are protected by my #accessGuard mutex.",				"",				"I provide several methods to access built items: ",				"",				"- itemsStartingAt: startIndex count: size",				"",				"- itemsStartingWhere: conditionBlock count: size",				"It finds first item where condition is true and then it returns \"size\" items starting from the found position",				"",				"- itemsWhere: conditionBlock",				"It collects all items where conditionBlock is true",				"",				"- allItems",				"",				"- size",				"",				"- isEmpty",				"",				"These methods are safe to be used at any time: when user calls them I first ensure that items are ready and if not I rebuild them. ",				"Also I protect these methods by #accessGuard mutex. So it is safe to access items from multiple processes.",				"To ensure this logic I use helper method #protectItemsWhile:.",				"",				"So I am cached by navigation environment. And this cache requires updates when underlying system is changed.",				"For this purpose navigation environment subscribes on system changes. And when any change happens the environment asks every result in cache to handle given event object:",				"",				"\taQueryResult handleSystemChange: aSystemAnnouncement",				" ",				"To handle system change I ask my #buildingQuery if it is affected by given event. And if it is affected I force rebuild using #itemsChanged method where I announce that I was changed.",				"I allow my users to be notified when my items are changed. Users should subscribe to me using #subscribe: method:",				"\t",				"\taQueryResult subscribe: anObserver ",				"\t",				"Underhood I subscribe anObserver for ClyEnvironmentChanged to my #announcer. And it will be notified using #itemsChanged message. So observers should implement this method.",				"Also observers must #unsubscribe: when they are not interested anymore. ",				"",				"For the UI support I provide special stream kind access in the form of ClyBrowserQueryCursor instance which returns items as ClyBrowserItem instances.",				"ClyBrowserItem is a wrapper over actual result item which provides UI specific information like position in the result, depth in the hierarchy and extendable set of properties related to the underlying object.",				"To get cursor instance you should open it for concrete observer:",				"",				"\tcursor := aQueryResult openBrowserCursorFor: anObserver",				"",				"anObserver will be subscribed on my changes and new cursor instance will be returned to the caller.",				"When cursor is not needed anymore it should be closed. It will unsubscribe observer in addition:",				"",				"\tcursor close",				"",				"With cursor you are able access items as ClyBrowserItem instances. For example: ",				"",				"\tcursor currentItem.",				"\tcursor moveToNext.",				"\tcursor findItemsWhere: conditionBlock ",				"\t",				"The important responsibility of cursor is to organize cache of retrieved browser items. It is especially important for remote scenario where cache represents loaded remote items. But also it caches all extended properties collected for items by environment plugins.  ",				"",				"So cursor expects instances of ClyBrowserItem from inderlying query result. ",				"Some my subclasses build them directly from retrieved raw items. They are subclasses of ClyBrowseQueryResult. They provide extra query methods to lookup browser items.",				"When cursor is requested for such result it is just created over receiver instance.",				"But other result classes can't be used directly in cursor because they have no knowledge about browser items. For example ClyRawQueryResult just returns raw objects which were retrieved by query.",				"For such cases I provide special adapter ClyQueryResultBrowserAdapter: by default cursor instance is always created over adapter which wraps actual result instance.",				"Adapter converts actual items to the ClyBrowserItem instances and implements same query methods as ClyBrowserQueryResult.",				"This logic is implemented in method #adoptForBrowser which is overridden by ClyBrowserQueryResult with self return.",				"",				"For more details about cursor look at ClyBrowserQueryCursor comments. And read comments of ClyBrowserItem.",				"",				"The last feature which I provide for my subclasses is metadata. I compute it lazily on demand and keed it in the #metadata variable. Metadata is updated together with items. So when items are changed the metadata is reset and subsequent call for it will recompute it again.",				"The metadata is an instance of ClyQueryResultMetadata which represents extended properties of result in general. For example the result of class query can include the count of success tests as metadata property.",				"Properties are represented by first class objects, a kind of ClyProperty.",				"The metadata is collected using environment plugins. So it is extended by them. ",				"Plugins collect information of concrete type of result items. For example: ",				"\t",				"\t\tplugin collectMetadataOfClasses: aQueryResult",				"\t\tplugin collectMetadataOfMethods: aQueryResult",				"\t\t",				"The decision what method to use is responsibility of #buildingQuery which knows what kind of items it retrieves:",				"",				"\tmetadata := ClyQueryResultMetadata new.",				"\tenvironment pluginsDo: [:each | ",				"\t\tbuildingQuery collectMetadataOf: self by: each\t]",				"",				"So every query class should implement the method #collectMetadataOf:by:.",				"",				"To access metadata there are several methods:",				"",				"- addMetaProperty: aProperty",				"- getMetaProperty: aPropertyClass",				"- hasMetaProperty: aPropertyClass\t",				"- metadata",				"",				"Same protocol is also implemented in ClyBrowserQueryCursor. So with cursor instance you are also able to access metadata of query result.",				"",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tannouncer:\t\t<Announcer>",				"\tbuildingQuery:\t\t<ClyQuery>",				"\tenvironment:\t\t<ClyNavigationEnvironment>",				"\titems:\t\t<SequenceableCollection of<ClyBrowserItem>>",				"\tmetadata:\t<ClyQueryResultMetadata>",				"\taccessGuard:\t<Mutex>",				"\tneedsRebuild:\tBoolean"			],			"category" : "Calypso-NavigationModel-Result"		},		"TabManagerMorph" : {			"hash" : 1956608,			"definition" : "PanelMorph subclass: #TabManagerMorph\r\tinstanceVariableNames: 'toolbar container contentsWrapper processes model'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Tabs-Morphs'",			"comment" : [				"I am the entry point for tabs.",				"",				"I am composed of a TabBar and a Morph used as a canvas to render the morph represented by the selected tab.",				"",				"I am very stupid (as you can see only four methods). I just listen to selected tab, and render it"			],			"category" : "Morphic-Widgets-Tabs-Morphs"		},		"ChunkFileFormatParser" : {			"hash" : 1265152,			"definition" : "Object subclass: #ChunkFileFormatParser\r\tinstanceVariableNames: 'readStream parsedDeclarations classSelector classTraitSelector commentStampSelector methodsForSelector reorganizeSelector'\r\tclassVariableNames: ''\r\tpackage: 'CodeImport-Utilities'",			"comment" : [				"I represent the chunk file format.  Right now I know how to parse chunks from a readStream, but not how to write them."			],			"category" : "CodeImport-Utilities"		},		"OSSDL2BackendWindow" : {			"hash" : 4071936,			"definition" : "OSBackendWindow subclass: #OSSDL2BackendWindow\r\tinstanceVariableNames: 'currentCursor iconSurface sdl2Window screenScaleFactor horizontalDPI verticalDPI diagonalDPI'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'SDL2Constants'\r\tpackage: 'OSWindow-SDL2-Base'",			"comment" : [				"I am the OSWindowHandle interface implemented using SDL2 library",				"",				"my handle is an SDL_Window"			],			"category" : "OSWindow-SDL2-Base"		},		"ReAnySatisfyRule" : {			"hash" : 3942912,			"definition" : "ReNodeMatchRule subclass: #ReAnySatisfyRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for the common code fragment: \"(aCollection detect: [:each | ''some condition''] ifNone: [nil]) ~= nil\". contains: can simplify this code to \"aCollection anySatisfy: [:each | ''some condition'']\". Not only is the anySatisfy: variant shorter, it better signifies what the code is doing."			],			"category" : "GeneralRules-Migrated"		},		"ProgressBarMorph" : {			"hash" : 1959168,			"definition" : "BorderedMorph subclass: #ProgressBarMorph\r\tuses: TAbleToRotate\r\tinstanceVariableNames: 'start end value height width cachedWidth'\r\tclassVariableNames: 'DefaultHeight DefaultWidth'\r\tpackage: 'Morphic-Base-ProgressBar'",			"comment" : [				"Instances of this morph get used by SystemProgressMorph or a JobProgressBar to display a bar (i.e., the rectangular part of a progress bar).",				"",				"Here is an example of how to use it. ",				"",				"| p |",				"p := ProgressBarMorph from: 0 to: 200.",				"p extent: 200@20.",				"p openInWorld.",				"",				"[",				"\t(1 to: 200) do: [ :i | p value: i.  (Delay forMilliseconds: 10) wait ].",				"\tp delete ] fork",				"",				"",				"| p |",				"p := ProgressBarMorph from: 0 to: 200.",				"p extent: 600@7.",				"p openInWorld.",				"",				"[",				"\t(1 to: 200) do: [ :i | p value: i.  (Delay forMilliseconds: 5) wait ].",				"\tp delete ] fork"			],			"category" : "Morphic-Base-ProgressBar"		},		"StPlaygroundPage" : {			"hash" : 5453312,			"definition" : "Object subclass: #StPlaygroundPage\r\tinstanceVariableNames: 'creationTime fileName mutex flushContents flushProcess contentReceived timeToWait baseDirectory versionLog'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Playground-Model'",			"comment" : [				"! Playground pages (StPlaygroundPage)",				"",				"A playground page keeps in sync what is being typed into a playground and the disk cache.",				"Pages are stored (by default) at ==StPlayground cacheDirectory== and have a timestamp as name.",				"",				"@@TODO complete"			],			"category" : "NewTools-Playground-Model"		},		"SDL2TouchStateMachine" : {			"hash" : 4119296,			"definition" : "Object subclass: #SDL2TouchStateMachine\r\tinstanceVariableNames: 'first finish move color'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-SDL2-Examples-Touch'",			"comment" : [				"my role is to record the movements of a finger and associate a color to this movement"			],			"category" : "OSWindow-SDL2-Examples-Touch"		},		"SpLocationIconProvider" : {			"hash" : 2183424,			"definition" : "SpIconProvider subclass: #SpLocationIconProvider\r\tinstanceVariableNames: 'icons locations'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-IconProvider'",			"comment" : [				"I provide access to icons in png from the file system. ",				"It receive locations (directory references) where to find them.",				"",				"Alternatively, it can also look for gtk theme icons (stored by name in the gtk theme)."			],			"category" : "Spec2-Core-IconProvider"		},		"OSTouchOneFingerDoubleTapDetector" : {			"hash" : 4047872,			"definition" : "OSTouchPunctualGestureDetector subclass: #OSTouchOneFingerDoubleTapDetector\r\tinstanceVariableNames: 'doubleTouchSpeed maxDistanceBetweenEachTouch position timestamp previousPosition previousTimestamp'\r\tclassVariableNames: 'DoubleTouchSpeed MaxDistance'\r\tpackage: 'OSWindow-Core-Gestures'",			"comment" : [				"I am the detector of a finger which double tapped.",				"I send these event back to my handler: ",				"\t- OSTouchOneFingerDoubleTapEvent"			],			"category" : "OSWindow-Core-Gestures"		},		"CTSlotDescriptorsVisitor" : {			"hash" : 2859520,			"definition" : "Object subclass: #CTSlotDescriptorsVisitor\r\tinstanceVariableNames: 'rootDescriptor'\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Outliner'",			"comment" : [				"I am a visitor of more common objects in order to return a collection of slot descriptors",				"corresponding to their classes, respectively."			],			"category" : "Containers-Essentials-Outliner"		},		"MCPatchOperation" : {			"hash" : 283136,			"definition" : "Object subclass: #MCPatchOperation\r\tinstanceVariableNames: 'isApplicable isConflict'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Patching'",			"comment" : [				"I'm an abstract class that represent an single delta element between two packages: removal, addition or modification."			],			"category" : "Monticello-Patching"		},		"FFICallbackArgumentReader" : {			"hash" : 486656,			"definition" : "Object subclass: #FFICallbackArgumentReader\r\tinstanceVariableNames: 'callback callbackContext currentStackOffset extractedArguments returnValueHolder nextArgumentIndex'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-Callbacks'",			"comment" : [				"I am an abstract class that is responsible for extracting the arguments of a callback.",				"The callbacks provides the arguments in different forms depending of the architecture.",				"Each of my subclasses implements special behavior for the given architectures.",				"I have the common behavior for all the architectures.",				"",				"Basically, I am a stateful object that is used during the process of extraction.",				"I am created with a callback and a callback context.",				"A new instance of myself is created in each callback invocation, and it should not be reused.",				"",				"From the callback I extract the type of return of the callback and the type of the parameters.",				"",				"I am used in the method FFICallback >> #argumentsFor: stackPointer context: callbackContext.",				"Each of the architectures is able to create the correct subclass of me.",				"",				"My users just use the #extractArguments method and then access teh arguments through #arguments.",				"",				"In the extractArguments, I take the arguments from the FFICallback and send my message extractNext: with the type of the arguments.",				"",				"The #extractNext: method checks if the type represents a pointer or a value type. ",				"If it is a pointer the message #extractPointerOfType: is used. If it is a value,",				"there is a double dispatch with the type. The message #extractFromCallbackOn: is sent to the type.",				"",				"Then the type use one of the following methods to indicate its type: ",				"",				"#extractCharacterType",				"#extractDouble",				"#extractFloat",				"#extractIntegerType ",				"#extractExternalString: ",				"#extractStructType:",				"",				"Each of this methods calculates the base address and the correct offset to extract the value or the pointer. For this calculation the messages #nextBaseAddressFor: aType and #nextBaseAddressForStructure: aStructType are used.",				"",				"My base implementation extracts all the parameters from the stack. So the base address is always the stack pointer and the offset is updated according to the type.",				"",				"Once the base address is opteined, the type objects is used with the message #handle:at: to get the value from the stack.",				"",				"These methods all modify the collection of extracted elements.",				"",				"Note: ",				"",				"When a callback should return a struct by copy, the caller function allocates the returning struct. ",				"The pointer to this struct is stored in a new first parameter to the callback. This hidden parameter is extracted in the #initialize if it is required.",				"The callback can access to the pointer through the returnValueHolder instance variable."			],			"category" : "UnifiedFFI-Callbacks"		},		"RSClusteringLayout" : {			"hash" : 5756160,			"definition" : "RSLayout subclass: #RSClusteringLayout\r\tinstanceVariableNames: 'clustersLayout forEachLayout'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"```",				"m := RSMondrian new.",				"m nodes: Collection allSubclasses.",				"m line connectFrom: #superclass.",				"m normalizeSize: #numberOfLinesOfCode.",				"m build.",				"",				"nodes := m canvas nodes.",				"",				"RSConditionalLayout new",				"\tifNotConnectedThen: RSGridLayout new;",				"\telse: (RSClusteringLayout new ",				"\t\t\t\tclustersLayout: RSFlowLayout new;",				"\t\t\t\tforEachLayout: RSTreeLayout new);",				"\ton: nodes.",				"",				"",				"m canvas.",				"```",				"",				"Another example:",				"",				"```",				"m := RSMondrian new.",				"m nodes: (10 to: 50).",				"m line connectFrom: [ :nb | nb // 2 ].",				"m build.",				"",				"nodes := m canvas nodes.",				"",				"RSConditionalLayout new",				"\tifNotConnectedThen: RSGridLayout new;",				"\telse: (RSClusteringLayout new ",				"\t\t\t\tclustersLayout: RSFlowLayout new;",				"\t\t\t\tforEachLayout: RSTreeLayout new);",				"\ton: nodes.",				"",				"",				"",				"m canvas.",				"```"			],			"category" : "Roassal3-Layouts-Core"		},		"RSSimplePopupBuilder" : {			"hash" : 5735424,			"definition" : "RSObject subclass: #RSSimplePopupBuilder\r\tinstanceVariableNames: 'labelBuilder'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Popup'",			"comment" : [				"I create a popup from an object"			],			"category" : "Roassal3-Interaction-Popup"		},		"ClyFilteringCritiqueQuery" : {			"hash" : 5008128,			"definition" : "ClyCritiqueQuery subclass: #ClyFilteringCritiqueQuery\r\tinstanceVariableNames: 'baseCritiqueQuery'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemPlugins-Critic-Queries'",			"comment" : [				"I am abstract critique query which subclasses wrap another critique query and filter result critiques according to their logic.",				"",				"To create my instances use following expression: ",				"",				"\tClyFilteringCritiqueQuery filter: aCritiqueQuery from: aScope",				"\t",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbaseCritiqueQuery:\t\t<ClyCritiqueQuery>"			],			"category" : "Calypso-SystemPlugins-Critic-Queries"		},		"UUIDGenerator" : {			"hash" : 1159680,			"definition" : "Object subclass: #UUIDGenerator\r\tinstanceVariableNames: 'node random counter lock'\r\tclassVariableNames: 'Default'\r\tpackage: 'Network-UUID-Base'",			"comment" : [				"I am UUIDGenerator, I generate UUIDs.",				"",				"An RFC4122 Universally Unique Identifier (UUID) is an opaque 128-bit number that can be used for identification purposes. Concretely, a UUID is a 16 element byte array.",				"",				"The intent of UUIDs is to enable distributed systems to uniquely identify information without significant central coordination. In this context the word unique should be taken to mean \"practically unique\" rather than \"guaranteed unique\".",				" ",				"I generate UUIDs similar, in spirit, to those defined in RFC4122, though I use version 0 to indicate that I follow none of the defined versions. This does not matter much, if at all, in practice.",				"",				"I try to conform to the following aspects:",				" - each 'node' (machine, image, instance) should generate unique UUIDs",				" - even when generating UUIDs at a very fast rate, they should remain unique",				" - be fast and efficient",				"",				"To achieve this goal, I",				"- take several aspects into account to generate a unique node ID",				"- combine a clock, a counter and some random bits",				"- hold a state, protected for multi user access",				"",				"I can generate about 500K UUIDs per second.",				"",				"Implementation:",				"",				"Although a UUID should be seen as totally opaque, here is the concrete way I generate one:",				"- the first 8 bytes are the microsecond clock value with the smallest quantity first; this means that the later of these 8 bytes will be identical when generated with small(er) timespans; within the same clock resolution interval, the full first 8 bytes will be identical",				"- the next 2 bytes represent a counter with safe overflow, held as protected state inside me; after 2*16 this value will repeat; the counter initalizes with a random value",				"- the next 2 bytes are simply random, based on the system PRNG, Random",				"- the final 4 bytes represent the node ID; the node ID is unique per instance of me, across OS environments where the image might run; the node ID is the MD5 hash of a string that is the concatenation of several elements (see #computeNodeIdentifier)",				" ",				"Some bits are set to some predefined value, to indicate the variant and version (see #setVariantAndVersion:)",				"",				"Usage:",				"",				"  UUIDGenerator next.",				"  UUIDGenerator current next.",				"  UUIDGenerator new next.",				"",				"Sharing an instance is more efficient and correct.",				"Instances should be reset whenever the image comes up.",				"",				"See also:",				"",				"  http://en.wikipedia.org/wiki/UUID",				"  https://tools.ietf.org/html/rfc4122"			],			"category" : "Network-UUID-Base"		},		"SystemSettingsPersistence class" : {			"hash" : 1885184,			"definition" : "SystemSettingsPersistence class\r\tinstanceVariableNames: 'lastSettingsComputerID'",			"comment" : [				"I am a singleton responsible for storing and loading settings on a disk. I can handle a collection of settings or one setting in particular. I know where settings are stored.",				"",				"External Collaborators (those that use me): SettingNode, SettingBrowser.",				"",				"Internal Collaborators (those I use): SettingsStonReader, SettingsStonWriter, StoredSettingsFactory, StoredSettingsMerger",				"",				"Public API and Key Messages",				"",				"- updateSettingNodes:",				"- storeSettingNodes:",				"- storedValueForSettingNode:",				"- accessing instance: SystemSettingsPersistence default",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tfileReference:\t\t<FileReference>",				"\tsettingTree:\t\t<SettingTree>"			],			"category" : "System-Settings-Core-Persistence-Ston-Core"		},		"DiffMorph" : {			"hash" : 3342848,			"definition" : "ComposableMorph subclass: #DiffMorph\r\tinstanceVariableNames: 'prettyPrint contextClass srcMorph dstMorph scrollbarMorph mapMorph joinMorph difference joinMappings optionsPanel showOnlyDestination showOptions showOnlySource sourceTextModel destTextModel leftCaption rightCaption beWrapped'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Diff-Morphs'",			"comment" : [				"I am a morph useful for visualising differences between two strings.",				"",				"When a classContext: is setted, the strings are highlighted using such contextual information."			],			"category" : "Tool-Diff-Morphs"		},		"SDL2AthensDrawingExample" : {			"hash" : 4116736,			"definition" : "SDL2AthensExample subclass: #SDL2AthensDrawingExample\r\tinstanceVariableNames: 'strokes currentStroke'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-SDL2-Examples-Basic'",			"comment" : [				"I am a basic example to show how we can handle an event and draw something with this event.",				"",				"Left mouse button = draw lines ",				"Other mouse buttons = clear sketch",				"",				"To launch the example:",				"self new open"			],			"category" : "OSWindow-SDL2-Examples-Basic"		},		"DatePresenter" : {			"hash" : 2098944,			"definition" : "ComposablePresenter subclass: #DatePresenter\r\tinstanceVariableNames: 'displayBlockHolder chooseDateButton dateModel date'\r\tclassVariableNames: ''\r\tpackage: 'Spec-PolyWidgets-Widgets'",			"comment" : [				"A DatePresenter is a widget for choosing dates. It consists of:",				"- A text box, into which you can type any string which can be converted into a Smalltalk date",				"- A button, which displays a calendar, from which you can select a date",				"",				"Usage:",				"- the simplest way is to add a DatePresenter in your UI, and send #date when you want its value.",				"- or, register to be notified when the date changes:",				"\tDatePresenter new",				"\t\tdate: self date;",				"\t\twhenDateChanged: [ :newDate | self date: newDate ].",				"",				"As it is Spec-based, it can be easily adapted and composed into a larger UI."			],			"category" : "Spec-PolyWidgets-Widgets"		},		"ZnUTF8Encoder class" : {			"hash" : 1218048,			"definition" : "ZnUTF8Encoder class\r\tinstanceVariableNames: ''",			"comment" : [				"I am ZnUTF8Encoder, a concrete subclass of ZnCharacterEncoder.",				"I implement the variable length UTF-8 encoding and decoding of Unicode according to RFC 3629.",				"",				"Wikipedia reference http://en.wikipedia.org/wiki/UTF-8",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-Character-Encoding-Core"		},		"RBRefactoryChangeManager class" : {			"hash" : 3197440,			"definition" : "RBRefactoryChangeManager class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a change manager keeping track of all changes applied by the refactory manager. Typically there is only a single",				"instance of me used in the system, so all changes can be globally added/inspected/ executed and undone/redone.",				"",				"The size of my undo list is configurable in the settings browser."			],			"category" : "Refactoring-Changes-Base"		},		"VariableBreakpoint" : {			"hash" : 3024128,			"definition" : "Breakpoint subclass: #VariableBreakpoint\r\tinstanceVariableNames: 'targetVariableNames accessStrategy isInstalled targetClassOrMethod'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Breakpoints'",			"comment" : [				"I am a breakpoint installed on one or more instance variables of a class or of an object."			],			"category" : "Reflectivity-Breakpoints"		},		"StDebuggerCommand" : {			"hash" : 5423616,			"definition" : "CmCommand subclass: #StDebuggerCommand\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Debugger-Commands'",			"comment" : [				"I command actions that can be requested from a debugger"			],			"category" : "NewTools-Debugger-Commands"		},		"RSAthensMorph" : {			"hash" : 5643008,			"definition" : "Morph subclass: #RSAthensMorph\r\tinstanceVariableNames: 'renderer session surface isDrawing eventBeginingDragging shapeBeingPointed lastMousePosition roassalCanvas'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Morph'",			"comment" : [				"A RSAthensMorph is at the interface between Morphic and Roassal. ",				"I am directly referenced by RSCanvas"			],			"category" : "Roassal3-Morph"		},		"ReSmalltalkGlobalsRule" : {			"hash" : 3940352,			"definition" : "ReNodeRewriteRule subclass: #ReSmalltalkGlobalsRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Do not send requests to \"Smalltalk\" (which models the whole image)  that are related to the envionment of defines classes and globals"			],			"category" : "GeneralRules-Migrated"		},		"MalGraphReducer" : {			"hash" : 1756928,			"definition" : "MalGraphAlgorithm subclass: #MalGraphReducer\r\tinstanceVariableNames: 'circuits circuitNodes'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"The reduced graph of G is the graph G where each strongly connected components was merged into one vertice / node.",				"",				"circuitsNodes instance variable will collect all nodes created by merging nodes in a circuit."			],			"category" : "Moose-Algos-Graph"		},		"SelectEntity" : {			"hash" : 2107648,			"definition" : "ComposablePresenter subclass: #SelectEntity\r\tinstanceVariableNames: 'entity selectEntity possibleEntities displaySymbol entityText ghostText selectDialog'\r\tclassVariableNames: ''\r\tpackage: 'Spec-PolyWidgets-Widgets'",			"comment" : [				"A to-1 relationship field with keyboard selection with entry completion and a separate dialog for detailed searching (and creating new entities).",				"",				"See my class side for an example",				""			],			"category" : "Spec-PolyWidgets-Widgets"		},		"OSWindowAttributes" : {			"hash" : 4043264,			"definition" : "Object subclass: #OSWindowAttributes\r\tinstanceVariableNames: 'position extent title fullscreen screenId preferableDriver icon glAttributes windowCentered borderless resizable maximized minimized visible'\r\tclassVariableNames: 'DefaultBorderless DefaultExtent DefaultFullscreen DefaultMaximized DefaultMinimized DefaultPosition DefaultResizable DefaultTitle DefaultVisible DefaultWindowCentered'\r\tpackage: 'OSWindow-Core-Base'",			"comment" : [				"My instances hold a number of various attributes, used during initial window creation and its initialization:",				"",				"- initial bounds",				"- title",				"- icon",				"- screen id",				"- fullscreen or not",				"- etc...",				"",				"Please note, that depending on driver used, some attributes can be ignored by driver and will have no any effect.  ",				"",				"The preferableDriver attribute is special, that it allows user to bypass the default driver selection mechanism and tell directly, which driver shall be used for creating a window."			],			"category" : "OSWindow-Core-Base"		},		"HelpBuilder" : {			"hash" : 3008256,			"definition" : "Model subclass: #HelpBuilder\r\tinstanceVariableNames: 'topicToBuild rootToBuildFrom'\r\tclassVariableNames: ''\r\tpackage: 'HelpSystem-Core-Builders'",			"comment" : [				"This is an utility class that builds the books for a help system.",				"",				"Instance Variables",				"\trootTopics:\t\t<OrderedCollection>",				"",				"rootTopics",				"\t- a collection of books "			],			"category" : "HelpSystem-Core-Builders"		},		"ReservedVariable" : {			"hash" : 1111296,			"definition" : "Variable subclass: #ReservedVariable\r\tinstanceVariableNames: 'environment'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Variables'",			"comment" : [				"I model self, thisContext and super"			],			"category" : "Kernel-Variables"		},		"Bitmap class" : {			"hash" : 468480,			"definition" : "Bitmap class\r\tinstanceVariableNames: ''",			"comment" : [				"My instances provide contiguous storage of bits, primarily to hold the graphical data of Forms. Forms and their subclasses provide the additional structural information as to how the bits should be interpreted in two dimensions."			],			"category" : "Graphics-Primitives-Base"		},		"RSHorizontalFlowLayout" : {			"hash" : 5752064,			"definition" : "RSAbstractFlowLayout subclass: #RSHorizontalFlowLayout\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"A RTHorizontalFlowLayout is a FlowLayout horizontaly arranged, right queued at default."			],			"category" : "Roassal3-Layouts-Core"		},		"CacheWeight" : {			"hash" : 1609728,			"definition" : "Object subclass: #CacheWeight\r\tinstanceVariableNames: 'total maximum compute'\r\tclassVariableNames: ''\r\tpackage: 'System-Caching'",			"comment" : [				"I  am CacheWeight.",				"I keep track of the weight of a cache.",				"",				"The weight of a cache is the sum of the weight of all values currently present. The simplest and default weight calculation returns a constant 1 for each value, effectively counting the number of values.",				"",				"The default maximum is 16.",				"",				"Using compute, a selector or block, applied to a value, different calculation can be made. Consider for example #sizeInMemory."			],			"category" : "System-Caching"		},		"MWHandlerObjectCentric" : {			"hash" : 3380992,			"definition" : "MWHandlerDecorating subclass: #MWHandlerObjectCentric\r\tinstanceVariableNames: 'predicate'\r\tclassVariableNames: ''\r\tpackage: 'MethodWrappers'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tpredicate:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "MethodWrappers"		},		"FileLocator class" : {			"hash" : 1274112,			"definition" : "FileLocator class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a late-bound reference. I refer to a file or directory in relation to a well-known location on the filesystem, called an origin. When asked to perform a concrete operation, I look up the current location of my origin, and resolve my path against it. To add your own origin(s), see FileSystemResolver.",				"",				"Usage",				"----------",				"FileLocator vmDirectory parent pathString",				"\t> '/Applications'",				"",				"",				"FileLocator desktop.",				"FileLocator desktop basename.",				"",				"FileLocator home basename.",				"FileLocator image.",				"FileLocator vmBinary asAbsolute pathString ",				"\t>  '/Applications/CogVM.app/Contents/MacOS/CogVM'",				"FileLocator vmBinary pathString ",				"\t> '/Applications/CogVM.app/Contents/MacOS/CogVM'",				"\t\t",				"",				"",				"",				"",				"Implementation",				"------------------------",				"origin ",				"\tA symbolic name for base reference I use to resolve myself.",				"",				"path",				"\tA relative path that is resolved against my origin\"",				"\t",				"\t"			],			"category" : "FileSystem-Core-Public"		},		"NewHandleMorph" : {			"hash" : 1914624,			"definition" : "HandleMorph subclass: #NewHandleMorph\r\tinstanceVariableNames: 'hand waitingForClickInside'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Widgets'",			"comment" : [				"A more recent implementation of a handle morph"			],			"category" : "Morphic-Base-Widgets"		},		"SignalLogger" : {			"hash" : 385792,			"definition" : "Object subclass: #SignalLogger\r\tinstanceVariableNames: 'beacon name'\r\tclassVariableNames: ''\r\tpackage: 'Beacon-Core-Loggers'",			"comment" : [				"It represents the abstract class of a `SignalLogger` that takes the signals going through the `Beacon` and actually does something useful.",				"",				"The subclasses provide concrete implementations. Each of these sublasses can be used both by directly instantiating the class, or by using the `instance` class variable which holds a global instance of that class.",				"The global instance of a signal logger is useful to provide a simple means to start and stop without worrying about the instance.",				"",				"For example, consider:",				"",				"```",				"   TranscriptLogger start.",				"   StringSignal emit: 'test'.",				"   ...",				"   TranscriptLogger stop.",				"```\t",				"Passing stop, unsubscribes the global instance of `TranscriptLogger` from the central `Beacon` instance without having to remember the `TranscriptLogger` object.",				"",				"One can get signals go to a given logger during the execution of a block with:",				"",				"```",				"   (MemoryLogger named: 'loggerA')",				"       runDuring: [ ",				"         'Hello' asBeaconSignal emit.",				"         42 asBeaconSignal emit.",				"         ContextStackSignal emit.",				"         ];",				"       recordings.",				"```\t\t",				"This can be done for a specific set of signals with:",				"",				"```",				"   (MemoryLogger named: 'loggerA')",				"      runFor: StringSignal, WrapperSignal ",				"      during: [ ",				"         'Hello' asBeaconSignal emit.",				"         42 asBeaconSignal emit.",				"         StringSignal emit: 'let me pass'",				"         ];",				"      recordings.",				"```",				"\t\t",				"It is possible to have signals go to several loggers by nesting `#runDuring:` blocks.",				"Now this is not replacing a composite logger."			],			"category" : "Beacon-Core-Loggers"		},		"ToolRegistry" : {			"hash" : 1628416,			"definition" : "Object subclass: #ToolRegistry\r\tinstanceVariableNames: 'tools announcer'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Registry'",			"comment" : [				"I am serving as a system-wide hub for various tools.",				"Instead of using direct class names for tools, which is not always nice because can introduce inter-package",				"dependencies, i provide a uniform way for accessing tools, via Smalltalk global:",				"",				"Smalltalk tools someToolName,",				"",				"where 'someToolName' is a name of the tool , under which some tool are registered.",				"",				"Tools are adding themselves to registry by implementing #registerToolsOn: message at class side, for example:",				"",				"MyClass>>registerToolsOn: registry",				"   registry register: self as: #myTool",				"",				"Registers a MyClass as a tool under name #myTool, and can be accessed via:",				"",				"Smalltalk tools myTool ",				"",				"and avoid putting 'MyClass' reference into code.",				"",				"You can add  ' self registerToolsOn: Smalltalk tools ' in class #initialize,",				"so your new tool(s) can be registered during package loading.",				"",				"To reset tool registry to defaults , use: ",				"Smalltalk resetTools.",				"",				"Also registry storing a map of inspector types. ",				"This is to replace an old scheme which using #inspectorClass , and introducing dependencies.",				"Now, an inspecting class dont needs to have any knowledge about its specialized inspector.",				"Instead, a specialized inspector could tell registry that it is available for inspecting instances of given class (see #registerInspector:for:  senders).",				"This allows to avoid dependency from instance class to its inspector class or using extension methods.",				"",				"WARNING: The point of the tools registry is NOT to be a facade full of protocols but to be a registration for tools that get loaded. So, the tools registry should NOT hold specific tool's protocol.  the tool's client should invoke the correct methods of the tool.",				"",				"----------- ",				"The category 'menu' is for backward compatibility with ToolSet. We should remove it.",				""			],			"category" : "Tool-Registry"		},		"ZnSimplifiedClientTransactionEvent" : {			"hash" : 1386752,			"definition" : "ZnClientLogEvent subclass: #ZnSimplifiedClientTransactionEvent\r\tinstanceVariableNames: 'method url response size duration'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Logging'",			"comment" : [				"ZnSimplifiedClientTransactionEvent is a ZnClientLogEvent that notes the completion of a client side HTTP transaction (request/response). Only a limited number of simpler data is held. ZnClientTransactionEvent contains much more detailed data.",				"",				"Instance Variables",				"\tmethod: HTTP verb",				"\turl: ZnUrl requested",				"\tresponse:\tnumeric response code",				"\tsize: number of bytes in response",				"\tduration: milliseconds",				"",				"ZnSimplifiedClientTransactionEvent is ideal for classic HTTP logging with little overhead through its default string representation."			],			"category" : "Zinc-HTTP-Logging"		},		"WindowPresenter" : {			"hash" : 913920,			"definition" : "AbstractWidgetPresenter subclass: #WindowPresenter\r\tinstanceVariableNames: 'model initialExtent title isClosedHolder isResizeable'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Support'",			"comment" : [				"A WindowPresenter is a spec presenter for a Window"			],			"category" : "Spec-Core-Support"		},		"DialogWindowMorph" : {			"hash" : 1938176,			"definition" : "StandardWindow subclass: #DialogWindowMorph\r\tinstanceVariableNames: 'cancelled'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Windows-Widgets'",			"comment" : [				"Dialog style window with no window controls (expand, collapse etc). Usually opened modally (the morph that is used to modally open determines the modal scope, use of World implies \"system modal\").",				"Designed to be subclassed with content.",				"Supports Escape key for cancel and Enter key for default button."			],			"category" : "Morphic-Widgets-Windows-Widgets"		},		"ZnApplicationFormUrlEncodedEntity" : {			"hash" : 1411840,			"definition" : "ZnEntity subclass: #ZnApplicationFormUrlEncodedEntity\r\tinstanceVariableNames: 'fields representation'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Core'",			"comment" : [				"I am ZnApplicationFormUrlEncodedEntity, a concrete HTTP Entity ",				"holding a set of fields (key value pairs) that is form URL encoded.",				"I am a ZnEntity.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Core"		},		"FT2Types class" : {			"hash" : 1899520,			"definition" : "FT2Types class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a shared pool with all the mapping to the types used from the FreeType library."			],			"category" : "FreeType-Bindings"		},		"Random" : {			"hash" : 1105152,			"definition" : "Object subclass: #Random\r\tinstanceVariableNames: 'seed a m q r'\r\tclassVariableNames: ''\r\tpackage: 'Random-Core-Base'",			"comment" : [				"This Random Number Generator graciously contributed by David N. Smith.  It is an adaptation of the Park-Miller RNG [1] which uses Floats to avoid the need for LargeInteger arithmetic.",				"",				"If you just want a quick random integer, use:",				"\t\t10 atRandom",				"Every integer interval can give a random number:",				"\t\t(6 to: 12) atRandom",				"SequenceableCollections can give randomly selected elements:",				"\t\t'pick one of these letters randomly' atRandom",				"SequenceableCollections also respond to shuffled, as in:",				"\t\t($A to: $Z) shuffled",				"",				"The correct way to use class Random is to store one in an instance or class variable:",				"\t\tmyGenerator := Random new.",				"Then use it every time you need another number between 0.0 and 1.0 (excluding)",				"\t\tmyGenerator next",				"You can also generate a positive integer",				"\t\tmyGenerator nextInt: 10",				"\t\t",				"[1] 'Random Number Generators:  Good Ones Are Hard to Find' ",				"by Stephen K. Park and Keith W. Miller ",				"(Comm. Asso. Comp. Mach., 31(10):1192--1201, 1988). http://www.firstpr.com.au/dsp/rand31/p1192-park.pdf"			],			"category" : "Random-Core-Base"		},		"TFExternalSemaphore" : {			"hash" : 2031104,			"definition" : "Object subclass: #TFExternalSemaphore\r\tinstanceVariableNames: 'semaphore index'\r\tclassVariableNames: ''\r\tpackage: 'ThreadedFFI-Base'",			"comment" : [				"I am container for a semaphore which will be automatically registered as external on initialization.",				"This is to be used as part of the external semaphores pool.",				"Inside me you can find: ",				"",				"- semaphore ",				"- index ",				"",				"index is the external semaphore index to be used on primitive calls."			],			"category" : "ThreadedFFI-Base"		},		"Author" : {			"hash" : 861952,			"definition" : "Object subclass: #Author\r\tinstanceVariableNames: 'fullName'\r\tclassVariableNames: ''\r\tpackage: 'System-Support-Authoring'",			"comment" : [				"I am responsible for the full name used to identify the current code author."			],			"category" : "System-Support-Authoring"		},		"OSTouchScrollDetector class" : {			"hash" : 4050176,			"definition" : "OSTouchScrollDetector class\r\tinstanceVariableNames: ''",			"comment" : [				"I am the abstract class for all the Scroll gesture detectors"			],			"category" : "OSWindow-Core-Gestures"		},		"CTDfsWalker" : {			"hash" : 2857472,			"definition" : "Object subclass: #CTDfsWalker\r\tinstanceVariableNames: 'toShapes fromShapes maxLevel dfsClock sccShapeStack sccs rootObject levels quotedShapes slotDescriptorsContext oneToManyShapes shapeBuilder'\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Outliner'",			"comment" : [				"I walk a graph of objects according to the Depth-First Search strategy;",				"additionally, I also take care of Strongly Connected Components (also see ",				"Tarjan, R. E. (1972), \"Depth-first search and linear graph algorithms\", ",				"SIAM Journal on Computing, 1 (2): 146–160)."			],			"category" : "Containers-Essentials-Outliner"		},		"ShClassSlotChangeDetector" : {			"hash" : 825088,			"definition" : "ShAbstractClassChangeDetector subclass: #ShClassSlotChangeDetector\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Shift-Changes'",			"comment" : [				"I know how to detect a change in the collection of slots of the metaclass."			],			"category" : "Shift-Changes"		},		"EpLostChangesDetector class" : {			"hash" : 4232192,			"definition" : "EpLostChangesDetector class\r\tinstanceVariableNames: 'enabled'",			"comment" : [				"I check on image startup that there is lost logs for current image and I open browser on it to show changes to user.",				"I super usefull for recovering lost changes after image crash"			],			"category" : "EpiceaBrowsers-Integration"		},		"TextMethodLink" : {			"hash" : 1634560,			"definition" : "TextLink subclass: #TextMethodLink\r\tinstanceVariableNames: 'selector browseSenders sourceNode'\r\tclassVariableNames: ''\r\tpackage: 'Text-Core-Attributes'",			"comment" : [				"An active link in a text linking to a method"			],			"category" : "Text-Core-Attributes"		},		"RBTransformation class" : {			"hash" : 4465408,			"definition" : "RBTransformation class\r\tuses: RBTRefactoringBuilder classTrait\r\tinstanceVariableNames: ''",			"comment" : [				"I represent an elementary code transformation.",				"My subinstances can be composed into composite transformations. ",				"",				"I'm not a refactoring since a transformation I do not pay attention to behavior preservation. ",				"However as a transformation, I will be used by refactorings. ",				"",				"My main API is ",				"\t- transform which is actually executing the transformation",				"\t- asRefactoring to optionally (false by default) check preconditions, if some apply"			],			"category" : "Refactoring2-Transformations-Model"		},		"DisplayScanner" : {			"hash" : 723200,			"definition" : "CharacterScanner subclass: #DisplayScanner\r\tinstanceVariableNames: 'lineY foregroundColor backgroundColor defaultTextColor morphicOffset ignoreColorChanges lastDisplayableIndex stopConditionsMustBeReset'\r\tclassVariableNames: ''\r\tpackage: 'Text-Scanning-Base'",			"comment" : [				"A DisplayScanner is an abstract class for displaying characters.",				"It is splitting text into elementary chunks of displayable String/Font pairs (see scanning protocol).",				"Subclasses responsibility is to handle the effective rendering of these chunks on various backends.",				"",				"Instance Variables",				"\tbackgroundColor:\t\t<Color>",				"\tdefaultTextColor:\t\t<Color>",				"\tforegroundColor:\t\t<Color>",				"\tignoreColorChanges:\t\t<Boolean>",				"\tlastDisplayableIndex:\t\t<Integer>",				"\tlineY:\t\t<Number>",				"\tmorphicOffset:\t\t<Point>",				"\tstopConditionsMustBeReset:\t\t<Boolean>",				"",				"backgroundColor",				"\t- the background color for displaying next chunk of text.",				"\tNote that this can be set to Color transparent, in which case no background is displayed.",				"",				"defaultTextColor",				"\t- the default foreground color for displaying text in absence of other text attributes specification ",				"",				"foregroundColor",				"\t- the foreground color for displaying next chunk of text",				"",				"ignoreColorChanges",				"\t- indicates that any change of color specified in text attributes shall be ignored.",				"\tThis is used for displaying text in a shadow mode, when dragging text for example.",				"",				"lastDisplayableIndex",				"\t- the index of last character to be displayed.",				"\tA different index than lastIndex is required in order to avoid display of control characters.",				"\tThis variable must be updated by the stop condition at each inner scan loop.",				"",				"lineY",				"\t- the distance between destination form top and current line top",				"",				"morphicOffset",				"\t- an offset for positionning the embedded morphs.",				"\tTHE EXACT SPECIFICATION YET REMAINS TO BE WRITTEN",				"",				"stopConditionsMustBeReset",				"\t- indicates that it's necessary to call setStopConditions in next scan loop.",				"",				"Notes:",				"In order to correctly set the lastDisplayableIndex, the display scanner performs the stopCondition BEFORE displaying the string being scanned.",				"This explains why the stopCondition must not reset the font immediately, but differ this reset AFTER the display, thanks to stopConditionsMustBeReset."			],			"category" : "Text-Scanning-Base"		},		"OSSDL2FormRenderer" : {			"hash" : 4068352,			"definition" : "OSWindowFormRenderer subclass: #OSSDL2FormRenderer\r\tinstanceVariableNames: 'texture renderer extent deferUpdates mutex'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'SDL2Constants'\r\tpackage: 'OSWindow-SDL2-Rendering'",			"comment" : [				"My instances implement OSWindowFormRenderer interface using SDL2 library"			],			"category" : "OSWindow-SDL2-Rendering"		},		"MicrodownBackSlasher" : {			"hash" : 6564608,			"definition" : "Object subclass: #MicrodownBackSlasher\r\tinstanceVariableNames: 'stream allDelimiters keys'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Parser'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tallDelimiters:\t\t<Object>",				"\tkeys:\t\t<Object>",				"\tstream:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Microdown-Parser"		},		"MethodsTemperaturesPresenter" : {			"hash" : 3393536,			"definition" : "SpPresenter subclass: #MethodsTemperaturesPresenter\r\tinstanceVariableNames: 'select heatmap temperature do toolbar barChart wrappers classesSorter selectorsSorter barChartSorter process measuringInProgress wrappersHaveBeenInstalledAlready table methodsByClassDict updateInProgress checkbox packagesList packageNameText selectedPackages allPackages checkboxInstallOnAllMethods configuration callsLog checkboxShowMessageSendsArgs checkboxSkipTestPackages confLabel clearPackagesButton'\r\tclassVariableNames: ''\r\tpackage: 'MethodWrappers-Temperature-UI'",			"comment" : [				"I am a presenter for measuring temperatures of compiled methods with respect to the number of times a message is sent."			],			"category" : "MethodWrappers-Temperature-UI"		},		"AlignmentMorph" : {			"hash" : 1905408,			"definition" : "BorderedMorph subclass: #AlignmentMorph\r\tuses: TAbleToRotate\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Basic'",			"comment" : [				"Used for layout.",				"Since all morphs now support layoutPolicy the main use of this class is no longer needed.",				"Kept around for compability. ",				"Supports a few methods not found elsewhere that can be convenient, eg. newRow"			],			"category" : "Morphic-Base-Basic"		},		"MalGraphAlgorithm" : {			"hash" : 1754368,			"definition" : "Object subclass: #MalGraphAlgorithm\r\tinstanceVariableNames: 'nodes edges nodeSortBlock'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"I'm the common superclass for all graphs related algorithms.",				"I store edges and nodes and provides convenience methods to add, access and find nodes or edges.",				"",				"Once configured, send the run message to execute the algorithm."			],			"category" : "Moose-Algos-Graph"		},		"FTTableRowMorph" : {			"hash" : 572160,			"definition" : "FTSelectableMorph subclass: #FTTableRowMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Base'",			"comment" : [				"I'm a row for a table.",				"All my work is to keep cells."			],			"category" : "Morphic-Widgets-FastTable-Base"		},		"GradientFillStyle class" : {			"hash" : 1616128,			"definition" : "GradientFillStyle class\r\tinstanceVariableNames: ''",			"comment" : [				"A gradient fill style is a fill which interpolates smoothly between any number of colors.",				"",				"Instance variables:",				"\tcolorRamp\t<Array of: Association> Contains the colors and their relative positions along the fill, which is a number between zero and one.",				"\tpixelRamp\t<Bitmap>\t\tA cached version of the colorRamp to avoid needless recomputations.",				"\tradial\t\t<Boolean>\tIf true, this fill describes a radial gradient. If false, it is a linear gradient.",				"\tisTranslucent\t<Boolean>\tA (cached) flag determining if there are any translucent colors involved.",				"",				"Class variables:",				"\tPixelRampCache <LRUCache>\tRecently used pixelRamps. They tend to have high temporal locality and this saves space and time."			],			"category" : "Graphics-Canvas-Fills"		},		"SourceFileArray" : {			"hash" : 1140992,			"definition" : "Object subclass: #SourceFileArray\r\tinstanceVariableNames: 'files readOnlyQueue flushChanges'\r\tclassVariableNames: ''\r\tpackage: 'System-Sources-Sources'",			"comment" : [				"This is a variation on StandardSourceFileArray that provides a larger maximum changes file size.",				"",				"The available address space for source pointers in a traditional CompiledMethod is 16r1000000 through 16r4FFFFFF. StandardSourceFileArray maps positions in the sources file to address range 16r1000000 through 16r1FFFFFF and 16r3000000 through 16r3FFFFFF, and positions in the changes file to address range 16r2000000 through 16r2FFFFFF and 16r4000000 through 16r4FFFFFF. This permits a maximum file size of 16r2000000 (32MB) for both the sources file and the changes file.",				"",				"This implementation extends the source pointer address space using bit 25 of the source pointer to identify the external sources and changes files, with the remaining high order bits treated as address extension. This limits the number of external file references to two (the traditional sources and changes files). If additional external file references are needed in the future, some higher order bits in the source pointer address space should be allocated for that purpose.",				"",				"The use of bit 25 of the source pointer for file references permits backward compatibility with StandardSourceFileArray, with essentially unlimited address space expansion for the sources and changes files."			],			"category" : "System-Sources-Sources"		},		"Socket class" : {			"hash" : 1365504,			"definition" : "Socket class\r\tinstanceVariableNames: ''",			"comment" : [				"A Socket represents a network connection point. Current sockets are designed to support the TCP/IP and UDP protocols. Sockets are the lowest level of networking object in Pharo and are not normally used directly. SocketStream is a higher level object wrapping a Socket in a stream like protocol.",				"",				"ProtocolClient and subclasses are in turn wrappers around a SocketStream to provide support for specific network protocols such as POP, NNTP, HTTP, and FTP."			],			"category" : "Network-Kernel-Base"		},		"NECTestSuperClass class" : {			"hash" : 4358400,			"definition" : "NECTestSuperClass class\r\tinstanceVariableNames: ''",			"comment" : [				"I'm only for SUnit TestCases."			],			"category" : "NECompletion-Tests"		},		"FFIBackend class" : {			"hash" : 963840,			"definition" : "FFIBackend class\r\tinstanceVariableNames: ''",			"comment" : [				"I am an strategy to implement different backends for FFI."			],			"category" : "FFI-Kernel"		},		"WeakAnnouncementSubscription class" : {			"hash" : 1175296,			"definition" : "WeakAnnouncementSubscription class\r\tinstanceVariableNames: ''",			"comment" : [				"A WeakAnnouncementSubscription is a subscription which is removed automatically when the subscriber is unreferenced.",				"",				"No support for ephemerons currently prevents this from working for Block actions (blocks hold their receiver, which is the default subscriber strongly). ",				"",				"To switch between subscription types, use makeStrong/makeWeak on the subscription returned when initially registering with announcer.",				"",				"",				"Note, that list and next must be first instance variables."			],			"category" : "Announcements-Core-Subscription"		},		"ClyBrowserMock" : {			"hash" : 5234688,			"definition" : "Object subclass: #ClyBrowserMock\r\tinstanceVariableNames: 'hasSpawned elements'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemTools-QueryBrowser-Tests-Commands-Classes'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\telements:\t\t<Object>",				"\thasSpawned:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Calypso-SystemTools-QueryBrowser-Tests-Commands-Classes"		},		"ClyStatusBarMorph" : {			"hash" : 5097728,			"definition" : "PanelMorph subclass: #ClyStatusBarMorph\r\tinstanceVariableNames: 'contextBar commandBar'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-UI'",			"comment" : [				"I represent browser tab status bar.",				"I provide two panels where items can be added: ",				"",				"- commandBar",				"- contextBar ",				"",				"It should be redone because it is completely strange names and separation of these panels.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcommandBar:\t\t<Morph>",				"\tcontextBar:\t\t<Morph>"			],			"category" : "Calypso-Browser-UI"		},		"SpDemoTablePresenter" : {			"hash" : 2466560,			"definition" : "SpPresenter subclass: #SpDemoTablePresenter\r\tinstanceVariableNames: 'table1 label selectedClasses'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Examples-Demo-Tables'",			"comment" : [				"Description",				"--------------------",				"",				"I show demos of tables"			],			"category" : "Spec2-Examples-Demo-Tables"		},		"LRUCache" : {			"hash" : 1608192,			"definition" : "AbstractCache subclass: #LRUCache\r\tinstanceVariableNames: 'lruList keyIndex'\r\tclassVariableNames: ''\r\tpackage: 'System-Caching'",			"comment" : [				"I am LRUCache.",				"I am a Cache.",				"",				"I am a limited cache that evicts the least recently used entries. My implementation is properly O(1).",				"",				"Implementation Notes",				"",				"The key/value pairs in the cache are held as Associations in a DoubleLinkedList, lruList, ordered from least to most recently used.",				"",				"The keyIndex Dictionary maps from each key to the actual DoubleLink inside lruList holding the matching key/value pair.",				"",				"New pairs are added at the end of the list.",				"",				"In case of a hit, a pair gets promoted to the end of the list (most recently used).",				"",				"In case of a full cache, the first pair of the list gets evicted (least recently used).",				"",				"See #validateInvariantWith: where the relationship between the 2 datastructures is checked.",				"",				"",				"Example 1",				"",				"Suppose we have to compute the prime factors of some numbers, ",				"and that this is a slow operation. If we repeatedly do the same",				"computation, we could speed this up with a cache.",				"",				"To get a reasonable hit rate, we generate 50 random numbers below 100.\"",				"",				"\tprimeFactorsCache := LRUCache new.",				"\t",				"\t50 timesRepeat: [",				"\t\t| n |",				"\t\tn := 100 atRandom.",				"\t\tprimeFactorsCache",				"\t\t\tat: n ifAbsentPut: [ n primeFactors ] ].",				"\t",				"\tprimeFactorsCache hitRatio asFloat.",				"",				"Example 2",				"",				"Fibonacci numbers are defined as follows:",				"",				" F(0)=0",				" F(1)=1",				" F(n)=F(n-1)+F(n-2)",				"",				"This is a relatively slow recursive process, especially",				"since the same number is computed more than once,",				"a cache can help. Let's find out the hit rate.",				"",				"Setting a factory block is an alternative way to define",				"a cache's functionality in one single place.\"\t",				"",				"\tfibCache := LRUCache new.",				"",				"\tfibCache ",				"\t\tmaximumWeight: 32;",				"\t\tfactory: [ :key |",				"\t\t\tkey < 2",				"\t\t\t\tifTrue: [ key ]",				"\t\t\t\tifFalse: [ (fibCache at: key - 1) + (fibCache at: key - 2) ] ].",				"",				"\tfibCache at: 40. \"102334155\"",				"",				"\tfibCache hitRatio asFloat."			],			"category" : "System-Caching"		},		"SpPaginatorEdgeGripMorph" : {			"hash" : 2574848,			"definition" : "EdgeGripMorph subclass: #SpPaginatorEdgeGripMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Paginator'",			"comment" : [				"A morph to grab borders of a `SpPaginatorSelectionMorph` and enlarge or contract its selection area.",				"Since it is designed to be contained in a specific morph (`SpPaginatorSelectionMorph`) and its morph it self is a part of a `SpPaginatorMorph`, it has some important assumptions: ",				"",				"- the `SpPaginatorEdgeGripMorph>>#containerTarget` will be the owner of the target, and it limits  displacement of the selection morph.",				"- the target of the edge is the selection area always, and it can move (at least for the moment) just left or right."			],			"category" : "Spec2-Adapters-Morphic-Paginator"		},		"MicOutputStream" : {			"hash" : 6561024,			"definition" : "Object subclass: #MicOutputStream\r\tinstanceVariableNames: 'stream configuration'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Utils'",			"comment" : [				"I'm a little wrapper on stream to provide a nicer API. In particular I help not hardcoding line ending everywhere."			],			"category" : "Microdown-Utils"		},		"FFISystemV64CallbackArgumentReader" : {			"hash" : 487680,			"definition" : "FFIAbstract64BitsArgumentReader subclass: #FFISystemV64CallbackArgumentReader\r\tinstanceVariableNames: 'currentFloatRegisterIndex'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-Callbacks'",			"comment" : [				"I represent the parsing of arguments in the SystemV 64 bits calling convention.",				"In this convention the passing of the parameters is done in the registers for the first 6 integers and the first 6 floats.",				"The count of the register used is indepent of the type. Ex: ",				"",				"int f(int a, int b, float x, float y, int c)",				"",				"a -> 1st int register.",				"b -> 2nd int register.",				"x -> 1st float register.",				"y -> 2nd float register.",				"c -> 3rd int register.",				"",				"If there are more that 6 parameters of a given type, the seventh goes in the stack.",				"",				"The structs in this calling convention are passed in the stack or in the registers.",				"If a struct occupies #maxStructureSizeToPassInRegisters bytes or less it is passed in the registers. Using the two next registers available.",				"If there are no available registers or the struct is bigger, the stack is used. ",				"",				"All the integer types are promoted to Int64 or UInt64."			],			"category" : "UnifiedFFI-Callbacks"		},		"PreDebugResumeDebugAction" : {			"hash" : 2988288,			"definition" : "ResumeDebugAction subclass: #PreDebugResumeDebugAction\r\tinstanceVariableNames: 'preDebugWindow'\r\tclassVariableNames: ''\r\tpackage: 'Debugger-Actions-Actions'",			"comment" : [				"A PreDebugResumeDebugAction adds the ResumeDebugAction to the pre debug window.",				"",				"Instance Variables",				"\tpreDebugWindow:\t\t<Object>",				"",				"preDebugWindow",				"\t- xxxxx"			],			"category" : "Debugger-Actions-Actions"		},		"FreeTypeFontFamily" : {			"hash" : 708864,			"definition" : "AbstractFontFamily subclass: #FreeTypeFontFamily\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'FreeType-FontManager'",			"comment" : [				"FreeType font family"			],			"category" : "FreeType-FontManager"		},		"MD5" : {			"hash" : 1026560,			"definition" : "HashFunction subclass: #MD5\r\tinstanceVariableNames: 'state'\r\tclassVariableNames: ''\r\tpackage: 'System-Hashing-MD5'",			"comment" : [				"This class implements the MD5 128-bit one-way hash function. It uses the MD5Plugin for better performance. Some methods are taken from the original version of MD5NonPrimitive."			],			"category" : "System-Hashing-MD5"		},		"RBSmalllintContext" : {			"hash" : 1698048,			"definition" : "Object subclass: #RBSmalllintContext\r\tinstanceVariableNames: 'class selector parseTree literals literalSemaphore literalProcess selectors compiledMethod'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Critics'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tclass:\t\t<Object>",				"\tcompiledMethod:\t\t<Object>",				"\tliteralProcess:\t\t<Object>",				"\tliteralSemaphore:\t\t<Object>",				"\tliterals:\t\t<Object>",				"\tparseTree:\t\t<Object>",				"\tselector:\t\t<Object>",				"\tselectors:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Refactoring-Critics"		},		"RSUserInputEvent" : {			"hash" : 5650688,			"definition" : "RSShapeEvent subclass: #RSUserInputEvent\r\tinstanceVariableNames: 'commandKeyPressed controlKeyPressed shiftKeyPressed optionKeyPressed'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Event'",			"comment" : [				"for user input events"			],			"category" : "Roassal3-Event"		},		"IRBuilder" : {			"hash" : 1241344,			"definition" : "Object subclass: #IRBuilder\r\tinstanceVariableNames: 'ir currentScope jumpBackTargetStacks jumpAheadStacks currentSequence sourceMapNodes sourceMapByteIndex'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Core-IR-Manipulation'",			"comment" : [				"I provide a simple interface for constructing an IRMethod.  For example, to create an ir method that compares first instVar to first arg and returns 'yes' or 'no' (same example as in BytecodeGenerator), do:",				"",				"\tIRBuilder new",				"\t\tnumArgs: 1;",				"\t\taddTemps: #(a z);",				"\t\tpushReceiver;",				"\t\tpushInstVar: 1;",				"\t\tpushTemp: #a;",				"\t\tsend: #>;",				"\t\tjumpAheadTo: #else if: false;",				"\t\tpushLiteral: 'yes';",				"\t\treturnTop;",				"\t\tjumpAheadTarget: #else;",				"\t\tpushLiteral: 'no';",				"\t\treturnTop;",				"\t\tir",				"",				"Sending #compiledMethod to an ir method will generate its compiledMethod.  Sending #methodNode to it will decompile to its parse tree."			],			"category" : "OpalCompiler-Core-IR-Manipulation"		},		"LGitLibrary class" : {			"hash" : 6096896,			"definition" : "LGitLibrary class\r\tinstanceVariableNames: ''",			"comment" : [				"Libgit2 library"			],			"category" : "LibGit-Core-FFI-Handling"		},		"ClyNotebookPageMorph" : {			"hash" : 5100800,			"definition" : "SpNotebookPageMorph subclass: #ClyNotebookPageMorph\r\tinstanceVariableNames: 'icon labelPresenter label actions closeable'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-Tabs'",			"comment" : [				"I am a page on a calypso notebook.",				"I define a different kind of header (icon, label, close) plus some actions on it."			],			"category" : "Calypso-Browser-Tabs"		},		"CollectionElement class" : {			"hash" : 907008,			"definition" : "CollectionElement class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a helper class for handling the contents of some collections that need a special handling of nil values.",				"",				"My main purpose is to allow a Set or WeakValueDictionary to contain nil.",				"",				"Since nil represents an empty slot in those collections, it cannot be stored directly in the array of values. Instead, my instances are used as a wrapper. See implementors and senders of #asCollectionElement for wrapping, and #enclosedElement for unwrapping."			],			"category" : "Collections-Support-Utilities"		},		"ClyCompositeTestResultProperty" : {			"hash" : 5050112,			"definition" : "ClyTestResultProperty subclass: #ClyCompositeTestResultProperty\r\tinstanceVariableNames: 'testCaseResults'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemPlugins-SUnit-Queries'",			"comment" : [				"I compose test result information from all classes which inherit tests from decorated method or class.",				"My counts variables provide summary on all of them. And the map testCaseResults include information for each of them.",				"",				"I am used to correctly run inherited tests when they are visible in the browser from subclasses.",				"And I allow to run all tests of abstract class including all subclasses.",				"   ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\ttestCaseResults:\t\t<Dictionary of<TestCase class, ClyTestResultProperty>>"			],			"category" : "Calypso-SystemPlugins-SUnit-Queries"		},		"ClyScopeCompoBoxMorph" : {			"hash" : 5192960,			"definition" : "ClyBrowserToolbarItemMorph subclass: #ClyScopeCompoBoxMorph\r\tinstanceVariableNames: 'dropList browser'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemTools-QueryBrowser-UI'",			"comment" : [				"I am a tool to switch query browser to new choosen scope.",				"I use compobox to allow user choose it.",				"",				"I am shown as first item in the browser toolbar.",				"",				"By instances should be created on browser: ",				"",				"\tClyScopeCompoBox for: ClyQueryBrowser.",				"\t",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbrowser:\t\t<ClyQueryBrowser>",				"\tdropList:\t\t<Object>"			],			"category" : "Calypso-SystemTools-QueryBrowser-UI"		},		"TFUFFIIncrementCallback" : {			"hash" : 2043136,			"definition" : "TFUFFIAbstractCallback subclass: #TFUFFIIncrementCallback\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'ThreadedFFI-UFFI-Tests'",			"comment" : [				"I am a simple callback used by the tests"			],			"category" : "ThreadedFFI-UFFI-Tests"		},		"MCPackageCache" : {			"hash" : 280064,			"definition" : "Object subclass: #MCPackageCache\r\tinstanceVariableNames: 'sorter fileNames'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Repositories'",			"comment" : [				"I'm a kind of cache for versions and filenames of packages."			],			"category" : "Monticello-Repositories"		},		"KMMetaModifier" : {			"hash" : 781056,			"definition" : "KMModifier subclass: #KMMetaModifier\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Keymapping-KeyCombinations'",			"comment" : [				"I represent the Meta or Command key modifier. Look at my superclass for a more detailed explanaition."			],			"category" : "Keymapping-KeyCombinations"		},		"SpTextInputFieldPresenter" : {			"hash" : 2212096,			"definition" : "SpAbstractTextPresenter << #SpTextInputFieldPresenter\r\tslots: {\r\t\t\t #entryCompletion => ObservableSlot .\r\t\t\t #isPassword => ObservableSlot .\r\t\t\t #editable => ObservableSlot .\r\t\t\t #maxLength => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter to handle a single line of text."			],			"category" : "Spec2-Core-Widgets"		},		"RSDelaunay class" : {			"hash" : 2283776,			"definition" : "RSDelaunay class\r\tinstanceVariableNames: 'epsilon'",			"comment" : [				"based on https://cdn.rawgit.com/ironwallaby/delaunay/master/delaunay.js"			],			"category" : "Roassal3-Experimental-Delaunay"		},		"RSForceLayoutSteppingInteraction" : {			"hash" : 5768960,			"definition" : "RSAbstractCanvasInteraction subclass: #RSForceLayoutSteppingInteraction\r\tinstanceVariableNames: 'layout animation hasDraggable'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Interactions'",			"comment" : [				"Hi!, I can control the RSForceBaseLayout step method, in order to use it only when it needs"			],			"category" : "Roassal3-Layouts-Interactions"		},		"NewValueHolder" : {			"hash" : 685312,			"definition" : "Model subclass: #NewValueHolder\r\tinstanceVariableNames: 'lock value'\r\tclassVariableNames: ''\r\tpackage: 'NewValueHolder-Core-Base'",			"comment" : [				"I am a class holding any object inside its unique instance variable. ",				"Each time the instance variable value changes, an announcement is emitted. ",				"",				"The instance variable is accessed through `value` and `value:` while the registration is done by `whenChangedDo: aBlock`. ",				"",				"In addition, infinite loops of propagation are prevented. ",				"Use case: you have two lists A, and B, and you want to keep their selection synchronised. ",				"So when A selection changes, you set B selection. ",				"But since B selection changes, you set A selection, and so on… ",				"",				"This case is prevented by the use of a `lock` variable."			],			"category" : "NewValueHolder-Core-Base"		},		"SpPopoverPresenter" : {			"hash" : 2221312,			"definition" : "SpAbstractWidgetPresenter << #SpPopoverPresenter\r\tslots: {\r\t\t\t #presenter => ObservableSlot .\r\t\t\t #position .\r\t\t\t #relativeTo };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter to display a popover. ",				"`SpPopoverPresenter` will be relative to its owner, but Iitcan be shown pointing to a particular place (see `SpPopoverPresenter>>#popup`, and `SpPopoverPresenter>>#popupPointingTo:`)",				"Also, it can be show at the top, left, bottom or right of the owner or rectangle to point.",				"",				"The presenter placed on a popover needs to extend `SpPopoverContentPresenter` (or implement its API) to gain all properties."			],			"category" : "Spec2-Core-Widgets"		},		"CTHeapQ" : {			"hash" : 2366976,			"definition" : "Object subclass: #CTHeapQ\r\tinstanceVariableNames: 'heap indexes tally'\r\tclassVariableNames: ''\r\tpackage: 'Containers-HeapQ'",			"comment" : [				"I am a binary heap and mimic the one found in the Python standard library.",				"! Heapify",				"Consider the following shuffled array of 63 elements:",				"${example:name=CTHeapQTest>>#test100ShuffledInterval|previewShow=#gtBoxesFor:|noCode=}$",				"that can be heapified as ${example:name=CTHeapQTest>>#test100ShuffledIntervalRawHeapSlot|previewShow=#gtBoxesFor:|noCode=}$",				"and visualized as a tree",				"${example:name=CTHeapQTest>>#test100ShuffledIntervalHeapified|noCode=|previewShow=#gtLiveFor:|previewHeight=800}$",				"and the same heap can also be visualized as \"bubbles\" in order to emphasize the __heap invariant__:",				"${example:name=CTHeapQTest>>#test100ShuffledIntervalHeapified|noCode=|previewShow=#gtBubblesLiveFor:|previewHeight=800}$",				""			],			"category" : "Containers-HeapQ"		},		"GoferWorking" : {			"hash" : 1464576,			"definition" : "GoferOperation subclass: #GoferWorking\r\tinstanceVariableNames: 'workingCopies'\r\tclassVariableNames: ''\r\tpackage: 'Gofer-Core-Operations'",			"comment" : [				"Common superclass for workin copies in Gofer"			],			"category" : "Gofer-Core-Operations"		},		"MicMicrodownTextualBuilder" : {			"hash" : 6535936,			"definition" : "MicAbstractMicrodownTextualBuilder subclass: #MicMicrodownTextualBuilder\r\tinstanceVariableNames: 'prefixStack currentLevel'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Parser'",			"comment" : [				"I'm a textual builder for Microdown: Using my API clients can generate text in Microdown format.",				"",				"",				"I have two kinds of clients.",				"- some to generate using high level Microdown blocks and text.",				"  for example using `paragraph: aBlock` I will generate a block and do not force the user to think about newline.",				"- some to generate pieces of text. For example the Pillar writer will invoke the raw version. For example `rawParagraph: aBlock` just issue a paragraph without taken care about new line.",				"",				"",				"#### Known limits ",				"Nested lists are probably not well managed.",				"In particular since ordered and unordered do not have the same indentation length ",				"we would have to know all the nested path and not just the level."			],			"category" : "Microdown-Parser"		},		"MicAnnotationBlock" : {			"hash" : 6551808,			"definition" : "MicInlineElement subclass: #MicAnnotationBlock\r\tinstanceVariableNames: 'name arguments'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-ModelInline'",			"comment" : [				"I represent an annotation delimted by `<?` and '?>`: a tag with parameters.",				"",				"The following is a citation annotation with as parameters the name variable bound to the string 'Duca99a'.",				"",				"```",				"?{citation|name=Duca99a}?",				"```",				"",				"```",				"MicroDownParser parse: '?{citation|name=Duca99a}?'",				"",				"```"			],			"category" : "Microdown-ModelInline"		},		"RSPopupDecoration" : {			"hash" : 5818624,			"definition" : "RSChartDecoration subclass: #RSPopupDecoration\r\tinstanceVariableNames: 'popup'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Popup'",			"comment" : [				"I am a popup decoration for instances of line Plots in RSChart by default but you can customize this popup decoration with differents shapebuilders, or popups"			],			"category" : "Roassal3-Chart-Popup"		},		"StSpotterProcessor" : {			"hash" : 5486848,			"definition" : "Object subclass: #StSpotterProcessor\r\tinstanceVariableNames: 'order filter results query running textFilteringIterators'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Spotter-Processors-Processors'",			"comment" : [				"I am a extensible spotter processor. ",				"I perform the integration with Spotter, but also I handle the lifecycle of the query, creating it from the spotter context; storing the results and the filter. ",				"",				"The filter is divided in two instance variables. The #filter contains the whole iterator that will be used. As some of the parts of the decorator requires to be notified when the filtering text is changed there is a collection of filters that require this.",				"",				"My subclasses should implement #newTextFilteringSource to return the filtering iterator to use or newSource if the iterator building is more complex (see StUnifiedProcessor).",				"",				"My subclasses can override #installKeymappingsOn: to install keybindings in Spotter.",				"Also, there is #configureFilter to extend the configuration of the source when there is a change in the query.",				"",				"I also handled the notifications when the query finish, so Spotter UI can show it correctly."			],			"category" : "NewTools-Spotter-Processors-Processors"		},		"ClyTextEditorToolMorph" : {			"hash" : 5084416,			"definition" : "ClyBrowserToolMorph subclass: #ClyTextEditorToolMorph\r\tinstanceVariableNames: 'textModel textMorph changesCancelRequested applyingChanges'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-TextEditors'",			"comment" : [				"I am a root for browser tools which requires text editor.",				"I install hooks into standard text morph to intercept all navigation requests and evaluated by Calypso logic.",				"Also I provide support for smart suggestions.",				"",				"My subclasses should implement two methods: ",				"",				"- editingText ",				"The text which is actually edited ",				"",				"- applyChanges ",				"The operation to accept editing text changes ",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tapplyingChanges:\t\t<Boolean>",				"\tchangesCancelRequested:\t\t<Boolean>",				"\ttextModel:\t\t<RubScrolledTextModel>",				"\ttextMorph:\t\t<RubScrolledTextMorph>"			],			"category" : "Calypso-Browser-TextEditors"		},		"OSKeySymbols class" : {			"hash" : 4000512,			"definition" : "OSKeySymbols class\r\tinstanceVariableNames: ''",			"comment" : [				"This pool contains all the platform independent key symbols. They are the same used by SDL2 to avoid having to perform any kind of translation.",				"",				"The symbolic constants and their mapping to named KeyboardKey\tfor Morphic consumption are defined in the data method. Some SDL2 constants are omitted because they are rare and they do not have a corresponding mapping in KeyboardKey. One requirement in the initialize method is that all of the named constan have a corresponding mapping in KeyboardKey."			],			"category" : "OSWindow-Core-Events"		},		"WeakAnnouncementSubscription" : {			"hash" : 1175552,			"definition" : "Object weakSubclass: #WeakAnnouncementSubscription\r\tinstanceVariableNames: 'list next announcer announcementClass action'\r\tclassVariableNames: 'FinalizationList'\r\tpackage: 'Announcements-Core-Subscription'",			"comment" : [				"A WeakAnnouncementSubscription is a subscription which is removed automatically when the subscriber is unreferenced.",				"",				"No support for ephemerons currently prevents this from working for Block actions (blocks hold their receiver, which is the default subscriber strongly). ",				"",				"To switch between subscription types, use makeStrong/makeWeak on the subscription returned when initially registering with announcer.",				"",				"",				"Note, that list and next must be first instance variables."			],			"category" : "Announcements-Core-Subscription"		},		"AthensCairoPath" : {			"hash" : 3080448,			"definition" : "FFIExternalObject subclass: #AthensCairoPath\r\tuses: TCairoLibrary\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Athens-Cairo-Paths'",			"comment" : [				"i used to hold shapes built by path builder in cairo backend"			],			"category" : "Athens-Cairo-Paths"		},		"ClyCriticEnvironmentPlugin" : {			"hash" : 5012224,			"definition" : "ClySystemEnvironmentPlugin subclass: #ClyCriticEnvironmentPlugin\r\tinstanceVariableNames: 'providesMethodGroup'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemPlugins-Critic-Queries'",			"comment" : [				"I plug environment with information about critiques:",				"",				"1) I decorate critiques with various properties ",				"2) I provide \"critiques\" method group",				" ",				"I allow disable method group using class side methods: ",				"",				"- ClyCriticEnvironmentPlugin disableMethodGroup.",				"- ClyCriticEnvironmentPlugin enableMethodGroup.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tprovidesMethodGroup:\t\t<Boolean>"			],			"category" : "Calypso-SystemPlugins-Critic-Queries"		},		"ClyQueryBrowserMorph" : {			"hash" : 5195008,			"definition" : "ClyBrowserMorph subclass: #ClyQueryBrowserMorph\r\tinstanceVariableNames: 'resultView systemQuery queryScopes activeScope expectedFlatQueryResult'\r\tclassVariableNames: 'DefaultQueryResult'\r\tpackage: 'Calypso-SystemTools-QueryBrowser-UI'",			"comment" : [				"I am a query browser.",				"I show in one table result of any system query.",				"",				"To show query use following method: ",				"",				"\tClyQueryBrowser openOn: (ClyMessageSenders of: #do:)",				"",				"I implement more simple API on class side: ",				"",				"\tClyQueryBrowser browseSendersOf: #do:.",				"\tClyQueryBrowser browseImplementorsOf: #do:.",				"\tClyQueryBrowser browseMethods: {Point>>#x. Point>>#y}.",				"",				"Last method is suitable to show given list of methods. But normally users should use first class queries.",				"",				"I provide scoping mechanizm: user can filter query result using scopes from the compobox in toolbar.",				"",				"When I spawned from the browser I receive all its navigation scopes.",				"For full browser I receive current selection package and class scopes.",				"For query browser I inherit all scopes which it has.",				"Also I add extra scopes to my scope list which is based on my current selection.",				"For example selected method will bring extra class and package scopes of this method.  ",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tactiveScope:\t\t<ClyScope>",				"\tqueryScopes:\t\t<OrderedCollection of<ClyScope>>",				"\tresultView:\t\t<ClyQueryView>",				"\tsystemQuery:\t\t<ClyQuery>"			],			"category" : "Calypso-SystemTools-QueryBrowser-UI"		},		"TestSharedPool class" : {			"hash" : 3466240,			"definition" : "TestSharedPool class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a shared pool used for testing."			],			"category" : "Slot-Tests-Data"		},		"ShLayoutChangeDetector" : {			"hash" : 824064,			"definition" : "ShAbstractInstanceSideClassChangeDetector subclass: #ShLayoutChangeDetector\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Shift-Changes'",			"comment" : [				"I know how to detect a change in the layout of a class."			],			"category" : "Shift-Changes"		},		"ClyClassHierarchyMap" : {			"hash" : 4896768,			"definition" : "Object subclass: #ClyClassHierarchyMap\r\tinstanceVariableNames: 'hierarchy classes roots parentMap'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemQueries-Results'",			"comment" : [				"I represent the actual relationship between classes using simple map between parents and children.",				"Concrete type of hierarchy build my instances where it defines what classes should be parent and what should be children:",				"",				"\taHierarchyMap addChild: childClass to: parentClass.",				"",				"My instances are created by hierarchies using following method: ",				"",				"\tmap := ClyClassHierarchyMap for: aHierarchy of: classes.",				"",				"And my method #build initiates actual map building. ",				"",				"Users do not need to create map directly. Instead they ask concrete hierarchy to build from classes: ",				"",				"\tmap := ClySubclassHierarchy buildFrom: classes.",				"",				"During building I collect roots which are used as a starting point to access classes in hierarchical order:",				"",				"\tmap doInOrder: [ :class |  ]",				"\tmap doInOrderWithDepth: [ :class :depth | ]",				"",				"You can also iterate roots: ",				"",				"\tmap rootsDo: [ :class |  ]",				"",				"Childen of every class are sorted according to the sort function of the hierarchy.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tclasses:\t\t<IdentitySet<Class>>",				"\thierarchy:\t\t<ClyClassHierarchy>",				"\tparentMap:\t\t<Dictionary<Class, SortedCollection<Class>>>",				"\troots:\t\t<IdentitySet<Class>>"			],			"category" : "Calypso-SystemQueries-Results"		},		"AthensCairoText" : {			"hash" : 3085056,			"definition" : "Object subclass: #AthensCairoText\r\tuses: TCairoLibrary\r\tinstanceVariableNames: 'text fontFamily fontSlant fontWeight fontSize'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'AthensCairoDefinitions'\r\tpackage: 'Athens-Cairo-Text'",			"comment" : [				"do not use this class. this is subject of change or removal"			],			"category" : "Athens-Cairo-Text"		},		"SpAbstractTreePresenter" : {			"hash" : 2214144,			"definition" : "SpAbstractWidgetPresenter << #SpAbstractTreePresenter\r\ttraits: {SpTHaveWrappingScrollBars + SpTContextMenu + SpTSearchable};\r\tslots: {\r\t\t\t #roots => ObservableSlot .\r\t\t\t #childrenBlock .\r\t\t\t #activateOnSingleClick .\r\t\t\t #activationBlock .\r\t\t\t #selectionMode .\r\t\t\t #verticalAlignment };\r\ttag: 'Widgets-Tree';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A base for tree presenters, it defines basic functionality common to all trees."			],			"category" : "Spec2-Core-Widgets-Tree"		},		"RSAbstractGraphLayout" : {			"hash" : 5757696,			"definition" : "RSLineDrivenLayout subclass: #RSAbstractGraphLayout\r\tinstanceVariableNames: 'verticalGap horizontalGap cachedChildren cachedParents cachedParentsWithHighestNestings shouldValidateCycles'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Layouts-Core"		},		"KMCommandModifier" : {			"hash" : 779520,			"definition" : "KMModifier subclass: #KMCommandModifier\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Keymapping-KeyCombinations'",			"comment" : [				"I represent the default modifier key for the current platform, late bound to Meta or Ctrl key modifier depending on the platform."			],			"category" : "Keymapping-KeyCombinations"		},		"RBFindAndReplaceRefactoring" : {			"hash" : 3157760,			"definition" : "RBMethodRefactoring subclass: #RBFindAndReplaceRefactoring\r\tinstanceVariableNames: 'method selector replacesAllHierarchy matchNodes occurrences'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Core-Refactorings'",			"comment" : [				"I am a refactoring for find occurrences of a method in owner class and in the whole hierarchy if apply.",				"",				"My precondition verifies that the method exists in specified class, and if occurrences are found in hierarchy this method should not overwritten in hierarchy.",				"",				"Example script",				"----------------",				"",				"```",				"(RBFindAndReplaceRefactoring ",				"find: #methodWithArg:andArg: ",				"of: MyClassA ",				"inWholeHierarchy: true) execute.",				"```",				"Before refactoring:",				"```",				"Object subclass: #MyClassA",				"\tinstanceVariableNames: ''",				"\tclassVariableNames: ''",				"\tcategory: 'Testing'",				"",				"MyClassA >> methodWithArg: anArg1 andArg: anArg2",				"\t^ (anArg1 > anArg2) not\t",				"",				"MyClassA subclass: #MyClassB",				"\tinstanceVariableNames: ''",				"\tclassVariableNames: ''",				"\tcategory: 'Testing'",				"\t",				"MyClassB >> someMethod",				"\t^  3",				"\t",				"MyClassB >> dummyMethod",				"\t(3 > self someMethod) not",				"```",				"",				"After refactoring:",				"",				"```",				"MyClassB >> dummyMethod ",				"\tself methodWithArg: 3 andArg: self someMethod",				"```"			],			"category" : "Refactoring-Core-Refactorings"		},		"ClyBrowserToolMorph" : {			"hash" : 5083904,			"definition" : "BorderedMorph subclass: #ClyBrowserToolMorph\r\tinstanceVariableNames: 'browser context decorators containerTab isDirty isManagedByUser statusBar'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-UI'",			"comment" : [				"I am a root of browser tabs hierarchy.",				"My subclasses should implement single method #build where they should create and add required widgets.",				"",				"The build is always executed in background due to the TabManagerMorph logic.",				"",				"Tab manager collects all subclasses which should be opened for current browser state.",				"It lookups tools annotated with ClyTabActivationStrategy for current browser context.",				"",				"So to enable any tool in the browser you should annotated it with еру strategy for appropriate context where tool should be opened.",				"For example:",				"",				"\tClyMethodCodeEditorTool class>>methodTabActivation",				"\t\t<classAnnotation>",				"\t\t^ClyTabActivationStrategy for: ClyMethod asCalypsoItemContext",				"",				"It will open method editor when method is selected in the browser.\t",				"",				"Subclasses can define extra condition to check that they can be opened in particular browser context instance.",				"They should override class side method: ",				"",				"- shouldBeActivatedInContext: aBrowserContext",				"",				"It returns true by default.",				"",				"Also abstract subclasses are never opened in the browser. By default the tool is abstract if it has subclasses.",				"The class side method #isAbstact should be overridden if this default condition is not valid.",				"",				"Tab instances are created with browser context ",				"",				"\tClyBrowserTool for: aBrowser inContext: aBrowserContext",				"\t",				"Subclasses should implement initialization methods to retrieve required state from the given context:",				"",				"- setUpModelFromContext",				"- setUpParametersFromModel",				"",				"Last method is also used to update tool when model is changed.",				"",				"Subclasses should override method #isSimilarTo: to compare with another tool which has same parameters.",				"For example ClyMethodCodeEditorTool checks that other method editor is based on same method.",				"#isSimilarTo: method is used by ClyTabManager to update existing tabs in new browser state. If similar tool is already opened in browser then it will be not replaced by new instance.",				"Look ClyTabManager comments for details.",				"",				"Tab manager never close dirty tabs when browser selection is changed. Instead if ask the tool to indicate different browser context.",				"To support this logic tools should implement following methods: ",				"",				"- belongsToCurrentBrowserContext",				"For example method editor checks that browser still selects editing method.",				"",				"- warnUserAboutMyContext",				"Here the tool is supposed to reset any indication of different context. It happens when user move selection back where dirty tab should be opened again. ",				"",				"- warnUserAboutDifferentContext",				"Here the tool can indicate that it is now is untouched from the current browser state. For example when user selects new method while dirty method is still opened. ",				"",				"- warnUserAboutChangedContext",				"It just merges previous two methods by testing for #belongsToCurrentBrowserContext.",				"",				"To support dirty state subclasses should implement method #hasUnacceptedEdits. It is false by default.",				"And indication of dirtiness can be overridden in the method #updateDirtyState. By default it just adds * to the tab title. ",				"",				"- hasUnacceptedEdits (false by default)",				"- updateDirtyState",				"",				"So tabs are based on some models. For example method editor model is a method. ",				"When tool model is removed from system (method is removed) the tab should be automatically closed.",				"Tab manager detects such conditions using following method which tools should implement:",				"",				"- belongsToRemovedBrowserContext",				"",				"For example method editor checks that editing method was removed from system.",				"",				"So the model of the tool can be modified and therefore the tool should implement update logic using following methods:",				"",				"- attachToSystem",				"It should subscribe the tool for model changes.",				"",				"- detachFromSystem",				"It should unsubscribe the tool from the model.",				"",				"In addition I provide method #update which subclasses should reuse in the update logic of the method changes.",				"#update refreshes basic visual properties of tool retrieved from the model and it rebuilds status bar.",				"",				"TabManager orders retrieved tools using method #tabOrder.",				"Also manager chooses what tab should be selected first. It selects the tool with highest #activationPriority which is equal to #tabOrder by default.",				"In general tab selection logic is more complex. Look at ClyTabManager comments for details.",				"",				"To specify tab title and icon subclasses can implement following methods: ",				"",				"- defaultIconName",				"- defaultIcon (to be able create dynamic icon instance when simple icon name is not enough)",				"- defaultTitle (by default it is the name of current selected item in the browser or just a tool class name if nothing selected)",				"",				"I provide status bar. And subclasses can add items to it in the method: ",				"",				"- fillStatusBar",				"",				"Any tool can be decorated by browser plugins which can inject other widgets or modify general style of the tool.",				"Plugins add decorators using following method: ",				"\t",				"\taBrowserTool addDecorator: aBrowserToolDecorator",				"",				"And at the end of building process I apply all configured decorators:",				"",				"\tself applyDecorations",				"\t",				"Notice that full tab building logic is implemented in the method: ",				"",				"- buildAndDecorate",				"",				"To remove the tool from browser just call #removeFromBrowser method.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbrowser:\t\t<ClyBrowser>",				"\tcontainerTab:\t\t<TabMorph>",				"\tcontext:\t\t<ClyBrowserContext>",				"\tdecorators:\t\t<OrderedCollection of<ClyBrowserToolDecorator>>",				"\tisDirty:\t\t<Boolean>",				"\tisManagedByUser:\t\t<Boolean>",				"\tstatusBar:\t\t<ClyStatusBar>"			],			"category" : "Calypso-Browser-UI"		},		"RecursionStopper" : {			"hash" : 1108992,			"definition" : "Object subclass: #RecursionStopper\r\tinstanceVariableNames: 'activeMethods'\r\tclassVariableNames: 'Default'\r\tpackage: 'Kernel-Processes'",			"comment" : [				"The RecursionStopper provides an easy way to check if we are in a recursion and execute code just once in a recursion.",				"",				"RecursionStopper during:  aBlock.",				"",				"executes a block just once in a recursion.",				"",				"A RecursionStopper object contains a collection of active methods which are currently called from within RecrusionStopper>>#during: this means that Recursion stopper can be used multiple places without one blocking the other, but multiple stoppers cannot be nested in the same method."			],			"category" : "Kernel-Processes"		},		"SharedQueue" : {			"hash" : 1128960,			"definition" : "Stream subclass: #SharedQueue\r\tinstanceVariableNames: 'monitor items'\r\tclassVariableNames: ''\r\tpackage: 'Collections-Sequenceable-Base'",			"comment" : [				"An implementation of a shared queue based on class Monitor.  Clients may may place items on the queue using nextPut: or remove them using methods like next or nextOrNil.  Items are removed in first-in first-out (FIFO) order.  It is safe for multiple threads to access the same shared queue, which is why this is a \"shared\" queue.",				"",				"[monitor] is used to synchronize access from multiple threads.",				"",				"[items] is an ordered collection holding the items that are in the queue.  New items are added  at the end, and old items are removed from the beginning.",				"",				"All methods must hold the monitor while they run."			],			"category" : "Collections-Sequenceable-Base"		},		"MessageDialogWindow" : {			"hash" : 1940224,			"definition" : "DialogWindowMorph subclass: #MessageDialogWindow\r\tinstanceVariableNames: 'textMorph textFont iconMorph'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Windows'",			"comment" : [				"Dialog window displaying a message with a single OK button. Escape/return will close. Icon is a themed information icon."			],			"category" : "Polymorph-Widgets-Windows"		},		"ReNodeMatchRule" : {			"hash" : 1723648,			"definition" : "RePatternCodeRule subclass: #ReNodeMatchRule\r\tinstanceVariableNames: 'matchers'\r\tclassVariableNames: ''\r\tpackage: 'Renraku-Rules-Rewrite'",			"comment" : [				"The base rule for smalltalk code pattern matching (relies on rewrite expressions). The rule operates on AST nodes.",				"",				"Use the following methods in the initialization to setup your subclass:",				"",				"- matches:",				"- addMatchingExpression:",				"\tadd a string of rewrite expression to be matched by rule",				"",				"- matchesAny:",				"\tsame as previous but takes a collection of strings to match",				"\t",				"- addMatchingMethod:",				"\tadd a string of rewrite expression which should be parsed as a method",				"\t",				"you may use #afterCheck:mappings: to do a post-matching validation of a matched node and mapping of wildcards."			],			"category" : "Renraku-Rules-Rewrite"		},		"ZipArchiveMember" : {			"hash" : 1342720,			"definition" : "ArchiveMember subclass: #ZipArchiveMember\r\tinstanceVariableNames: 'lastModFileDateTime fileAttributeFormat versionMadeBy versionNeededToExtract bitFlag compressionMethod desiredCompressionMethod desiredCompressionLevel internalFileAttributes externalFileAttributes cdExtraField localExtraField fileComment crc32 compressedSize uncompressedSize readDataRemaining headerStartPosition'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'ZipFileConstants'\r\tpackage: 'Compression-Archives'",			"comment" : [				"Subinstances of me are members in a ZipArchive.",				"",				"They represent different data sources:",				"* ZipDirectoryMember -- a directory to be added to a zip file",				"* ZipFileMember -- a file or directory that is already in a zip file",				"* ZipNewFilemember -- a file that is to be added to a zip file",				"* ZipStringMember -- a string that is to be added to a zip file",				"",				"They can write their data to another stream either copying, compressing,",				"or decompressing as desired."			],			"category" : "Compression-Archives"		},		"SpAbstractTreeSelectionMode" : {			"hash" : 2168064,			"definition" : "Object << #SpAbstractTreeSelectionMode\r\ttraits: {TObservable};\r\tslots: {\r\t\t\t #selection => ObservableSlot .\r\t\t\t #presenter };\r\ttag: 'Widgets-Tree';\r\tpackage: 'Spec2-Core'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tpresenter:\t\t<Object>",				"\tselection:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Core-Widgets-Tree"		},		"MalSccEdgeDecomposition" : {			"hash" : 1761024,			"definition" : "MalSccExtractor subclass: #MalSccEdgeDecomposition\r\tuses: MalTNormalize\r\tinstanceVariableNames: 'bfsp'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbfsp:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Moose-Algos-Graph"		},		"ImageFillStyle" : {			"hash" : 1617920,			"definition" : "OrientedFillStyle subclass: #ImageFillStyle\r\tinstanceVariableNames: 'form extent offset'\r\tclassVariableNames: ''\r\tpackage: 'Graphics-Canvas-Fills'",			"comment" : [				"Simple fillstyle that draws a (potentially translucent) form at the specified origin. Direction and normal are unused."			],			"category" : "Graphics-Canvas-Fills"		},		"SDL_RendererInfo class" : {			"hash" : 4100352,			"definition" : "SDL_RendererInfo class\r\tinstanceVariableNames: ''",			"comment" : [				"A structure that contains information on the capabilities of a render driver or the current render context.",				"",				"https://wiki.libsdl.org/SDL_RendererInfo"			],			"category" : "OSWindow-SDL2-Bindings"		},		"SpValueHolder" : {			"hash" : 2139904,			"definition" : "Object subclass: #SpValueHolder\r\tinstanceVariableNames: 'subscriptions lock value'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-ObservableSlot'",			"comment" : [				"I am a class holding any object inside its unique instance variable. ",				"Each time the instance variable value changes, an announcement is emitted. ",				"",				"The instance variable is accessed through `value` and `value:` while the registration is done by `whenChangedDo: aBlock`. ",				"",				"In addition, infinite loops of propagation are prevented. ",				"Use case: you have two lists A, and B, and you want to keep their selection synchronised. ",				"So when A selection changes, you set B selection. ",				"But since B selection changes, you set A selection, and so on… ",				"",				"This case is prevented by the use of a `lock` variable."			],			"category" : "Spec2-ObservableSlot"		},		"CoMockClass" : {			"hash" : 5343488,			"definition" : "Object subclass: #CoMockClass\r\tinstanceVariableNames: 'instanceVariables classVariables superclass methodDictionary sharedPools'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Tests-Core'",			"comment" : [				"I am a mock class used in the tests to get the information."			],			"category" : "HeuristicCompletion-Tests-Core"		},		"TKTTaskExecution" : {			"hash" : 421120,			"definition" : "Object subclass: #TKTTaskExecution\r\tinstanceVariableNames: 'runner task executionProcess state'\r\tclassVariableNames: ''\r\tpackage: 'TaskIt-Kernel'",			"comment" : [				"I represent the execution of a given task. I know if the task is finished or not and I can cancel it while it is being executed."			],			"category" : "TaskIt-Kernel"		},		"MetacelloLoaderPolicy" : {			"hash" : 330496,			"definition" : "Object subclass: #MetacelloLoaderPolicy\r\tinstanceVariableNames: 'overrideRepositories repositoryMap ensuredMap cacheRepository cacheGofer ignoreImage loadData loadDirective silently'\r\tclassVariableNames: ''\r\tpackage: 'Metacello-MC-Loaders'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcacheGofer:\t\t<Object>",				"\tcacheRepository:\t\t<Object>",				"\tensuredMap:\t\t<Object>",				"\tignoreImage:\t\t<Object>",				"\tloadData:\t\t<Object>",				"\tloadDirective:\t\t<Object>",				"\toverrideRepositories:\t\t<Object>",				"\trepositoryMap:\t\t<Object>",				"\tsilently:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Metacello-MC-Loaders"		},		"TransformMorph" : {			"hash" : 1654528,			"definition" : "Morph subclass: #TransformMorph\r\tinstanceVariableNames: 'transform smoothing localBounds'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Core-Support'",			"comment" : [				"A TransformMorph introduces a 2-D transformation between its (global) coordinates and the (local) coordinates of its submorphs, while also clipping all display to its bounds.  Specifically, with no offset, angle or scaling, a submorph with coordinates (0@0) will appear exactly at the topLeft of the windowMorph (its position).  Rotation and scaling are relative to the local origin, (0@0).",				"",				"instance var\ttype\t\t\t\tdescription",				" transform\t\tMorphicTransform\tThe coordinate transform between my coordinates and the",				"\t\t\t\t\t\t\t\t\tlocal coordinates of my submorphs.",				" smoothing\t\tanInteger in 1..3\tPerform smoothing of my contents during drawing",				"\t\t\t\t\t\t\t\t\t\t1 No smoothing (#smoothingOff)",				"\t\t\t\t\t\t\t\t\t\t2 Smoothing w/ edge adjacent pixels (#smoothingOn)",				"\t\t\t\t\t\t\t\t\t\t3 Smoothing w/ edge and corner adj pixels",				"\t\t\t",				" localBounds\tRectangle or nil\t\tcaches the value of #localSubmorphBounds for performance",				"",				"TransformMorphs operate with two different display strategies, depending on whether the transformation is a pure translation or not.  If so, then they simply use a clipping canvas and display their submorphs with the appropriate offset.  If the transformation includes scaling or rotation, then a caching canvas is used, whose active area covers the fullBounds of the submorphs intersected with the source quadrilateral corresponding to the window bounds."			],			"category" : "Morphic-Core-Support"		},		"SpIndeterminatedProgressBarMorph" : {			"hash" : 2585600,			"definition" : "ProgressBarMorph subclass: #SpIndeterminatedProgressBarMorph\r\tinstanceVariableNames: 'oddPassage'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Support'",			"comment" : [				"Description",				"--------------------",				"",				"I am a Progress bar with an indeterminated advance. I'll just show a bar going back and forth.",				"",				"Examples",				"--------------------",				"",				"IndeterminatedProgressBarMorph new",				"\textent: 200@6;",				"\topenInWorld.\t",				" ",				"Internal Representation and Key Implementation Points.",				"--------------------",				"",				"    Instance Variables",				"\toddPassage:\t\t<aBoolean>\t\tFor design purpose, one passage of the loading is faster that the other. This boolean is used to know if the current passage should be fast or slow."			],			"category" : "Spec2-Adapters-Morphic-Support"		},		"SpMorphicBoxLayout" : {			"hash" : 2573312,			"definition" : "SpMorphicBaseBoxLayout subclass: #SpMorphicBoxLayout\r\tinstanceVariableNames: 'calculating'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Layout'",			"comment" : [				"I am the layout to be applied to the morph that represents a \"Box Layout\" (See `SpMorphicBoxAdapter`). ",				"",				"If layout is homogeneous, it does a first pass to distribute size homogeneously (but it respects `minWidth`/`minHeight`).",				"To calculate the size, it relies in one of the `SpMorphicBoxLayoutCalculator` children, which are refacctored versions of what was found in the original `TableLayout`.",				"**NOTE:** The refactor is \"ongoing\", since I do not have time to do it properly. I just started to understand what is made there and I have no much time to spend on it right now. ",				"",				"To improve performance, it prevents recursive calls on it while it is still calculating. "			],			"category" : "Spec2-Adapters-Morphic-Layout"		},		"SpMillerColumnPresenter" : {			"hash" : 2231040,			"definition" : "SpPresenter << #SpMillerColumnPresenter\r\tslots: {\r\t\t\t #newPresenterBlock .\r\t\t\t #columnsWillChangeBlock .\r\t\t\t #horizontalScrollBar => ObservableSlot .\r\t\t\t #columnsChangedBlock };\r\ttag: 'Miller';\r\tpackage: 'Spec2-Core'",			"comment" : [				"I am a miller columns widget, a.k.a. cascading lists.",				"I am composed of presenters flowing to the right.",				"Every time that one of my inner presenters is activated, I \"dive in\" that element, showing a new presenter for the activated element to the right of the current selection.",				"",				"You have to set me:",				"- `presenterBlock:` aBlock that receives a model as argument and returns a `SpMillerPresenter` or compatible (read below)",				"- a first presenter using either",				"  - `setModel:` with a model  that calculates the initial presenter using the presenter block if already available.",				"  - `setPresenter:` with a `SpMillerPresenter` or compatible (read below)",				"",				"`SpMillerColumnPresenter` works on `SpMillerPresenter` or compatible objects.",				"All presenters inside this one should be polymorphic, defining: `whenActivatedDo:`, an event that will invoke a valuable with a selection object (understanding the message `selectedObject`)."			],			"category" : "Spec2-Core-Miller"		},		"HiColumnController" : {			"hash" : 4211712,			"definition" : "Object subclass: #HiColumnController\r\tinstanceVariableNames: 'renderer formByPageIndex pageSize cellMorphByRowIndex session'\r\tclassVariableNames: ''\r\tpackage: 'Hiedra-UI'",			"comment" : [				"I am a column controller. My responsability is to provide a convenient API to Hiedra users, either in Spec (TreePresenter) or Morph (FastTable). Basically, a table widget that shows a Hiedra visualization in a column will obtain the \"cell morphs\" that correspond to each row of the table. ",				"",				"I implement a pagination mechanism to split the rendering of a HiRuler in pages of a fixed size on demand.",				"",				"My most important collaborator is a Hiedra renderer (subclass of HiAbstractRenderer) that the user can personalize with appearance settings, and that my instances use to render the pages forms on demand."			],			"category" : "Hiedra-UI"		},		"ShSharedVariablesChangeDetector" : {			"hash" : 823040,			"definition" : "ShAbstractClassChangeDetector subclass: #ShSharedVariablesChangeDetector\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Shift-Changes'",			"comment" : [				"I know how to detect a change in the collection of the shared variables (class variables)."			],			"category" : "Shift-Changes"		},		"IRReconstructor" : {			"hash" : 1251584,			"definition" : "IRBuilder subclass: #IRReconstructor\r\tinstanceVariableNames: 'temps remoteTemps closureCopiedValues'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Core-Bytecode'",			"comment" : [				"I am a specialized IRBuilder for the decompiler"			],			"category" : "OpalCompiler-Core-Bytecode"		},		"ClyHierarchicallySortedClassesResult" : {			"hash" : 4929024,			"definition" : "ClyBrowserQueryResult subclass: #ClyHierarchicallySortedClassesResult\r\tinstanceVariableNames: 'hierarchy'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemQueries-Results'",			"comment" : [				"I am a class query result which represent retrieved classes as hierarchically sorted list.",				"",				"I do not implement hierarchy building logic by myself. Instead I delegate it to the hierarchy variable, a kind of ClyClassHierarchy.",				"And I use built map to enumerate classes in hierarchical order and convert them to ClyBrowserItem instances.",				"",				"You can create my instances directly from hierarchy: ",				"",				"\tClySubcalssHierarchy new asQueryResult",				"\t",				"Or use explicit class side method: ",				"\t",				"\tClyHierarchicallySortedClasses with: ClySubcalssHierarchy new.",				"\t",				"I also provide converting methods to get inverse hierarchy result or sorted by another function: ",				"",				"\taQueryResult withInverseHierarchy.",				"\taQueryResult sortedBy: aSortFunction."			],			"category" : "Calypso-SystemQueries-Results"		},		"RGTraitComposition" : {			"hash" : 5266432,			"definition" : "RGObject subclass: #RGTraitComposition\r\tinstanceVariableNames: 'transformations'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\ttransformations:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"UIManagerSessionHandler class" : {			"hash" : 1157120,			"definition" : "UIManagerSessionHandler class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a session handler that will initialize the UIManager during startup.",				"",				"This session handler makes the assumption that the current UIManager is a startup UI manager when its #startup: method gets called. Then, during startup he will install a Morphic UI manager.",				"",				"During shutdown we put back a startup ui manager, so we can handle startup actions during next startup without depending in the UI. (However, we shouldn't need a UI manager during the first startup actions)."			],			"category" : "System-SessionManager-Handlers"		},		"MCDirectoryRepository" : {			"hash" : 290048,			"definition" : "MCFileBasedRepository subclass: #MCDirectoryRepository\r\tinstanceVariableNames: 'directory'\r\tclassVariableNames: 'DefaultDirectoryName'\r\tpackage: 'Monticello-Repositories'",			"comment" : [				"A metacello repository in a directory "			],			"category" : "Monticello-Repositories"		},		"EFContext" : {			"hash" : 3105024,			"definition" : "Object subclass: #EFContext\r\tinstanceVariableNames: 'formatCommentWithStatements indentsForKeywords keepBlockInMessage lineUpBlockBrackets maxLineLength methodSignatureOnMultipleLines minimumNewLinesBetweenStatements multiLineMessages newLineAfterCascade newLineBeforeFirstCascade newLineBeforeFirstKeyword newLinesAfterTemporaries numberOfArgumentsForMultiLine oneLineMessages retainBlankLinesBetweenStatements retainBlankLinesBeforeComments selectorAndArgumentCombinedMaxSize useBasicCommentFormat numberOfSpacesInsideBlock numberOfSpacesInsideParentheses numberOfSpacesAfterCaretSymbolInReturn numberOfSpacesInIndent spacesAfterCaretSymbolInReturn spacesInsideBlocks indentStyle indentString spacesInsideParentheses indentExtraSpaces spacesInsideArray numberOfSpacesInsideArray numberOfSpacesBeforeDotInDynamicArray spacesBeforeDotInDynamicArray numberOfNewLinesAfterMethodComment newLinesAfterMethodSignature periodAtEndOfMethod periodAtEndOfBlock'\r\tclassVariableNames: ''\r\tpackage: 'EnlumineurFormatter-Core'",			"comment" : [				"I represent all the parameters that can modify a pretty printer. ",				"",				"The goal is to make sure that we can have a better prettyprinter and replace the Basic pretty printer (configurationFormatter)"			],			"category" : "EnlumineurFormatter-Core"		},		"RSComposite" : {			"hash" : 5675776,			"definition" : "RSBoundingShape subclass: #RSComposite\r\tuses: RSTContainer\r\tinstanceVariableNames: 'nodes edges children'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Bounding'",			"comment" : [				"I am a composite shapes. I can therefore contain other shapes.",				"",				"Here is a simple example:",				"```",				"c := RSCanvas new.",				"",				"box := RSBox new width: 40; height: 10; color: Color blue.",				"label := RSLabel new text: 'Hello Roassal3'.",				"RSLocation new above; move: box on: label.",				"composite := RSComposite new.",				"composite shapes: { label . box }.",				"composite @ RSDraggable.",				"",				"c add: composite.",				"c open",				"```",				"",				"A composite can also have a background color. Simply use #color: for this:",				"```",				"c := RSCanvas new.",				"",				"box := RSBox new width: 40; height: 10; color: Color blue.",				"label := RSLabel new color: Color black; text: 'Hello Roassal3'.",				"RSLocation new above; move: box on: label.",				"composite := RSComposite new.",				"composite color: Color gray.",				"composite shapes: { label . box }.",				"composite @ RSDraggable.",				"",				"c add: composite.",				"c open",				"```",				"",				"A padding describes a space between the border of the composite element and the inner shapes. It can be adjusted using the message #padding:",				"",				"```",				"c := RSCanvas new.",				"",				"box := RSBox new width: 40; height: 10; color: Color blue.",				"label := RSLabel new color: Color black; text: 'Hello Roassal3'.",				"RSLocation new above; move: box on: label.",				"composite := RSComposite new.",				"composite color: Color gray.",				"composite shapes: { label . box }.",				"composite @ RSDraggable.",				"composite padding: 10.",				"",				"c add: composite.",				"c open",				"```",				"",				"Inner nodes can be layouted:",				"```",				"classes := RSObject withAllSubclasses.",				"",				"c := RSCanvas new.",				"",				"classes do: [ :cls |",				"\tlabel := RSLabel new text: cls name.",				"\tmethods := ",				"\t\tcls methods collect: [ :m |",				"\t\t\tRSBox new model: m; size: m sourceCode size sqrt; color: Color blue ] as: RSGroup.",				"\tRSGridLayout on: methods.",				"\tmethods @ RSPopup.",				"\tRSLocation new above; move: label on: methods.",				"\tcomposite := RSComposite new.",				"\tcomposite color: Color gray.",				"\tcomposite shapes: { label }, methods.",				"\tcomposite @ RSDraggable.",				"\tcomposite padding: 10.",				"\tc add: composite.",				"].",				"",				"RSFlowLayout on: c shapes.",				"",				"c @ RSCanvasController.",				"c open",				"```",				"",				"Lines can be added between composite. Here is an example:",				"```",				"classes := RSObject withAllSubclasses.",				"",				"c := RSCanvas new.",				"",				"classes do: [ :cls |",				"\tlabel := RSLabel new text: cls name.",				"\tmethods := ",				"\t\tcls methods collect: [ :m |",				"\t\t\tRSBox new model: m; size: m sourceCode size sqrt; color: Color blue ] as: RSGroup.",				"\tRSGridLayout on: methods.",				"\tmethods @ RSPopup.",				"\tRSLocation new above; move: label on: methods.",				"\tcomposite := RSComposite new.",				"\tcomposite model: cls.",				"\tcomposite color: Color gray.",				"\tcomposite shapes: { label }, methods.",				"\tcomposite @ RSDraggable.",				"\tcomposite padding: 10.",				"\tc add: composite.",				"].",				"",				"RSEdgeBuilder orthoVertical",				"\tcanvas: c;",				"\twithVerticalAttachPoint;",				"\tconnectFrom: #superclass.",				"",				"RSTreeLayout on: c nodes.",				"",				"c @ RSCanvasController.",				"c open.",				"```"			],			"category" : "Roassal3-Shapes-Bounding"		},		"KMCtrlModifier" : {			"hash" : 780544,			"definition" : "KMModifier subclass: #KMCtrlModifier\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Keymapping-KeyCombinations'",			"comment" : [				"I represent the Ctrl key modifier. Look at my superclass for a more detailed explanaition."			],			"category" : "Keymapping-KeyCombinations"		},		"SpMorphicBaseTextAdapter" : {			"hash" : 2595840,			"definition" : "SpAbstractMorphicAdapter subclass: #SpMorphicBaseTextAdapter\r\tuses: TViewModel\r\tinstanceVariableNames: 'selection updating'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Base'",			"comment" : [				"I'm an abstract superclass for Morphic text adapters"			],			"category" : "Spec2-Adapters-Morphic-Base"		},		"ReIfNotNilDoRule" : {			"hash" : 3936768,			"definition" : "ReNodeRewriteRule subclass: #ReIfNotNilDoRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"ifNotNilDo: should not be used as ifNotNil: works for blocks with arguments, too."			],			"category" : "GeneralRules-Migrated"		},		"RSCairoCachedMetricsProvider" : {			"hash" : 5689600,			"definition" : "RSCairoMetricsProvider subclass: #RSCairoCachedMetricsProvider\r\tinstanceVariableNames: 'cache'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Text'",			"comment" : [				"I am a basic example of how to provide a text cache for roassal3 RSLabel text extent. But the idea is to use RSCairoMetricsProvider or RSCairoFitMetricsProvider. Only if you want speed for your labels",				"",				"I use a Dictionary for each font, then for each font there is a new Dictionary where key is a char and value is the width of that char with that value.",				"",				"This class allows us to use a cache and improve the speed of text calculation.",				"",				"But it is not precise. There are some issues but in our benchmarks it shows a speed improvement.",				"",				"Here an example",				"",				"```Smalltalk",				"| c words mp can |",				"c := RSCanvas new.",				"words := String loremIpsum splitOn: ' '.",				"mp := RSCairoCachedMetricsProvider new.",				"\"words ,\" #(",				"offic culp PŘÍLIŠ ŽLUŤOUČKÝ KŮN ÚPĚL ĎÁBELSKÉ ÓDY",				"ca caff Šca Šcaff Žca Žcaff Sca Scaff Zca Zcaff w . Ů) do: [ :word | ",				"\tc add: (RSLabel new",				"\t\t\"fontName: 'Viner Hand ITC';\"",				"\t\tmetricsProvider: mp;",				"\t\ttext: word;",				"\t\tyourself)].",				"RSFlowLayout on: c nodes.",				"c showEncompassingRectangles.",				"can := RSCanvasController new.",				"can configuration maxScale: 40.",				"c @ can.",				"c",				"```"			],			"category" : "Roassal3-Shapes-Text"		},		"SpTransferMorph" : {			"hash" : 2618880,			"definition" : "TransferMorph subclass: #SpTransferMorph\r\tinstanceVariableNames: 'model'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Support'",			"comment" : [				"I am a Spec specific subclass of TransferMorph used to initialize the trasnfer morph state correctly with the Spec constraints"			],			"category" : "Spec2-Adapters-Morphic-Support"		},		"CmFakeCommand" : {			"hash" : 873728,			"definition" : "CmCommand subclass: #CmFakeCommand\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Commander2-Tests'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "Commander2-Tests"		},		"File class" : {			"hash" : 964864,			"definition" : "File class\r\tinstanceVariableNames: ''",			"comment" : [				"I represent a sequential binary File and provide primitives for various file operations.",				"I am also the entry point of the FilePlugin primitives.",				"",				"### Examples of usage:",				"",				"```",				"\"Creating a file\"",				"file := File named: 'asd.txt' asFileReference fullName.",				"",				"\"Opening / closing it\"",				"file open.",				"file openForAppend.",				"file close.",				"",				"\"Accessing the file properties\"",				"file size.",				"file position.",				"file position: 0.",				"file seekAbsolute: 10.",				"file seekRelative: 10.",				"file atEnd.",				"",				"\"Writing\"",				"file nextPutAll: 'sdd'.",				"",				"\"Reading\"",				"file next: 2.",				"",				"\"Buffered write\"",				"file next: 2 putAll: 'abc' startingAt: 2.",				"",				"\"Buffered read\"",				"buffer := ByteArray new: 5.",				"file readInto: buffer startingAt: 1 count: 5.",				"buffer asString.",				"```",				"",				"# How to Migrate from FileStream",				"",				"The following migration instructions were moved here from the `FileStream` class comment in Pharo 8.",				"",				"Since the version 5, Pharo provides a new file streams API that makes the old one based on classes like FileStream or MultiByteBinaryOrTextStream deprecated. ",				"Pharo 7 makes the next important steps and removes usages of the old API from the kernel.",				"",				"What you should remember:",				"",				"- use file references as entry points to file streams ",				"- DO NOT USE FileStream class",				"- 'file.txt' asFileReference readStream and similar methods now return an instance of ZnCharacterReadStream instead of MultiByteFileStream",				"- 'file.txt' asFileReference writeStream and similar methods now return an instance of ZnCharacterWriteStream instead of MultiByteFileStream",				"- the new API has a clearer separation between binary and text files",				"",				"## 1. Basic Files",				"By default files are binary. Not buffered.",				"",				"Read UTF-8 text from an existing file",				"",				"**Obsolete code:**",				"",				"```",				"FileStream readOnlyFileNamed: '1.txt' do: [ :stream | ",				"    stream upToEnd ].",				"```",				"",				"**New code:**",				"",				"```",				"(File named: 'name') readStream.",				"(File named: 'name') readStreamDo: [ :stream | … ].",				"'1.txt' asFileReference readStreamDo: [ :stream | ",				"    stream upToEnd ].",				"```",				"",				"## 2. Encoding",				"To add encoding, wrap a stream with a corresponding ZnCharacterRead/WriteStream.",				"",				"**Reading:**",				"",				"```",				"utf8Encoded := ZnCharacterReadStream on: aBinaryStream encoding: 'utf8'.",				"utf16Encoded := ZnCharacterReadStream on: aBinaryStream encoding: 'utf16'.",				"```",				"",				"**Writing:**",				"",				"```",				"utf8Encoded := ZnCharacterWriteStream on: aBinaryStream encoding: 'utf8'.",				"utf16Encoded := ZnCharacterWriteStream on: aBinaryStream encoding: 'utf16'.",				"```",				"",				"Force creation of a new file and write a UTF-8 text",				"",				"**Obsolete code:**",				"",				"```",				"FileStream forceNewFileNamed: '1.txt' do: [ :stream | stream nextPutAll: 'a ≠ b' ].",				"```",				"",				"**New code:**",				"",				"```",				"(File named: 'name') writeStream.",				"(File named: 'name') writeStreamDo: [ :stream | ... ].",				"'1.txt' asFileReference ensureDelete; ",				"    writeStreamDo: [ :stream | stream nextPutAll: 'a ≠ b' ].",				"```",				"",				"Get all content of existing UTF-8 file",				"",				"**Obsolete code:**",				"",				"```",				"(FileStream readOnlyFileNamed: '1.txt') contentsOfEntireFile.",				"```",				"",				"**New code:**",				"",				"```",				"'1.txt' asFileReference readStream upToEnd.",				"```",				"",				"## 3. Buffering",				"To add buffering, wrap a stream with a corresponding ZnBufferedRead/WriteStream.",				"",				"```",				"bufferedReadStream := ZnBufferedReadStream on: aStream.",				"bufferedWriteStream := ZnBufferedWriteStream on: aStream.",				"```",				"",				"It is in general better to buffer the reading on the binary file and apply the encoding on the buffer in memory than the other way around. See",				"",				"```",				"[file := Smalltalk sourcesFile fullName.",				"(File named: file) readStreamDo: [ :binaryFile |",				"(ZnCharacterReadStream on: (ZnBufferedReadStream on: binaryFile) encoding: 'utf8') upToEnd",				"]] timeToRun. \"0:00:00:09.288\"",				"```",				"",				"```",				"[file := Smalltalk sourcesFile fullName.",				"(File named: file) readStreamDo: [ :binaryFile |",				"(ZnBufferedReadStream on: (ZnCharacterReadStream on: binaryFile encoding: 'utf8')) upToEnd",				"]] timeToRun. \"0:00:00:14.189\"",				"```",				"",				"The MultiByteFileStream was buffered. If you create a stream using the expression",				"",				"```",				"'file.txt' asFileReference readStream.",				"```",				"",				"then the ZnCharacterReadStream is not created directly on top of the stream but on top of a buffered stream that uses the file stream internally.",				"",				"If you create a ZnCharacterReadStream directly on the file stream, then the characters from the file are read one by one which may be about ten times slower!",				"",				"```",				"ZnCharacterReadStream on: (File openForReadFileNamed: 'file.txt').",				"```",				"",				"## 4. File System",				"By default, file system files are buffered and utf8 encoded to keep backwards compatibility.",				"",				"```",				"'name' asFileReference readStreamDo: [ :bufferedUtf8Stream | ... ].",				"'name' asFileReference writeStreamDo: [ :bufferedUtf8Stream | ... ].",				"```",				"",				"FileStream also provides access to plain binary files using the #binaryRead/WriteStream messages. Binary streams are buffered by default too.",				"",				"```",				"'name' asFileReference binaryReadStreamDo: [ :bufferedBinaryStream | ... ].",				"'name' asFileReference binaryWriteStreamDo: [ :bufferedBinaryStream | ... ].",				"```",				"",				"If you want a file with another encoding (to come in the [PR #1134](https://github.com/pharo-project/pharo/pull/1134)), you can specify it while obtaining the stream:",				"",				"```",				"'name' asFileReference",				"    readStreamEncoded: 'utf16'",				"    do: [ :bufferedUtf16Stream | ... ].",				"'name' asFileReference",				"    writeStreamEncoded: 'utf8'",				"    do: [ :bufferedUtf16Stream | ... ].",				"```",				"",				"Force creation of a new file and write binary data into it",				"",				"**Obsolete code:**",				"",				"```",				"(FileStream forceNewFileNamed: '1.bin') ",				"    binary;",				"    nextPutAll: #[1 2 3].",				"```",				"",				"**New code:**",				"",				"```",				"'1.bin' asFileReference ensureDelete; ",				"    binaryWriteStreamDo: [ :stream | stream nextPutAll: #[1 2 3] ].",				"```",				"",				"Read binary data from an existing file",				"",				"**Obsolete code:**",				"",				"```",				"(FileStream readOnlyFileNamed: '1.bin') binary; contentsOfEntireFile.",				"```",				"",				"**New code:**",				"",				"```",				"'1.bin' asFileReference binaryReadStream upToEnd.",				"```",				"",				"Force creation of a new file with a different encoding",				"",				"**Obsolete code:**",				"",				"```",				"FileStream forceNewFileNamed: '2.txt' do: [ :stream | ",				"    stream converter: (TextConverter newForEncoding: 'cp-1250').",				"    stream nextPutAll: 'Příliš žluťoučký kůň úpěl ďábelské ódy.' ].",				"```",				"",				"**New code:**",				"",				"```",				"('2.txt' asFileReference) ensureDelete;",				"    writeStreamEncoded: 'cp-1250' do: [ :stream |",				"        stream nextPutAll: 'Příliš žluťoučký kůň úpěl ďábelské ódy.' ].",				"```",				"",				"Read encoded text from an existing file",				"",				"**Obsolete code:**",				"",				"```",				"FileStream readOnlyFileNamed: '2.txt' do: [ :stream | ",				"    stream converter: (TextConverter newForEncoding: 'cp-1250').",				"    stream upToEnd ].",				"```",				"",				"**New code:**",				"",				"```",				"('2.txt' asFileReference)",				"    readStreamEncoded: 'cp-1250' do: [ :stream |",				"        stream upToEnd ].",				"```",				"",				"Write a UTF-8 text to STDOUT",				"",				"**Obsolete code:**",				"",				"```",				"FileStream stdout nextPutAll: 'a ≠ b'; lf.",				"```",				"",				"**New code:**",				"",				"```",				"(ZnCharacterWriteStream on: Stdio stdout)",				"    nextPutAll: 'a ≠ b'; lf;",				"    flush.",				"```",				"",				"Write CP-1250 encoded text to STDOUT",				"",				"**Obsolete code:**",				"",				"```",				"FileStream stdout ",				"    converter: (TextConverter newForEncoding: 'cp-1250');",				"    nextPutAll: 'Příliš žluťoučký kůň úpěl ďábelské ódy.'; lf.",				"```",				"",				"**New code:**",				"",				"```",				"(ZnCharacterWriteStream on: Stdio stdout encoding: 'cp1250')",				"    nextPutAll: 'Příliš žluťoučký kůň úpěl ďábelské ódy.'; lf;",				"    flush.",				"```",				"",				"Read a UTF-8 text from STDIN",				"**CAUTION:** Following code will stop your VM until an input on STDIN will be provided!",				"",				"**Obsolete code:**",				"",				"```",				"FileStream stdin upTo: Character lf.",				"```",				"",				"**New code:**",				"",				"```",				"(ZnCharacterReadStream on: Stdio stdin) upTo: Character lf.",				"```",				"",				"Write binary data to STDOUT",				"",				"**Obsolete code:**",				"",				"```",				"FileStream stdout ",				"    binary",				"    nextPutAll: #[80 104 97 114 111 10 ].",				"```",				"",				"**New code:**",				"",				"```",				"Stdio stdout ",				"    nextPutAll: #[80 104 97 114 111 10 ].",				"```",				"",				"Read binary data from STDIN",				"**CAUTION:** Following code will stop your VM until an input on STDIN will be provided!",				"",				"**Obsolete code:**",				"",				"```",				"FileStream stdin binary upTo: 10.",				"```",				"",				"**New code:**",				"",				"```",				"Stdio stdin upTo: 10.",				"```",				"",				"### Positionable streams",				"The message #position: always works on the binary level, not on the character level.",				"",				"```",				"'1.txt' asFileReference readStreamDo: [ :stream | ",				"    stream position: 4.",				"    stream upToEnd ].",				"```",				"",				"This will lead to an error _(ZnInvalidUTF8: Illegal leading byte for UTF-8 encoding)_ in case of the file created above because we set the position into the middle of a UTF-8 encoded character. To be safe, you need to read the file from the beginning.",				"",				"```",				"'1.txt' asFileReference readStreamDo: [ :stream |",				"    3 timesRepeat: [ stream next ].",				"    stream upToEnd.].",				"```",				"",				"## 5. Line Ending Conventions",				"",				"If you want to write files following a specific line ending convention, use the ZnNewLineWriterStream.",				"This stream decorator will transform any line ending (cr, lf, crlf) into a defined line ending.",				"By default, it chooses the platform line ending convention.",				"",				"```",				"lineWriter := ZnNewLineWriterStream on: aStream.",				"```",				"",				"If you want to choose another line ending convention you can do:",				"",				"```",				"lineWriter forCr.",				"lineWriter forLf.",				"lineWriter forCrLf.",				"lineWriter forPlatformLineEnding.",				"```"			],			"category" : "Files-Core"		},		"PlainGroupboxMorph" : {			"hash" : 1954560,			"definition" : "PanelMorph subclass: #PlainGroupboxMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Base'",			"comment" : [				"Groupbox without title with a vertical layout. Appears in a lighter colour than the owner's pane colour."			],			"category" : "Polymorph-Widgets-Base"		},		"CTOrderPreservingTree" : {			"hash" : 3392256,			"definition" : "Object subclass: #CTOrderPreservingTree\r\tinstanceVariableNames: 'parent'\r\tclassVariableNames: ''\r\tpackage: 'Containers-OrderPreservingTree'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tparent:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Containers-OrderPreservingTree"		},		"SpScrollSyncExample" : {			"hash" : 1572096,			"definition" : "SpPresenter subclass: #SpScrollSyncExample\r\tinstanceVariableNames: 'text sideRuler currentVerticalScrollPosition'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Morphic-Examples'",			"comment" : [				"I am an example that exposes to the world how to use a ScrollPane announcement to have a nice morph being in sync with the current vertical scrollbar position.",				"",				"self example"			],			"category" : "Spec2-Morphic-Examples"		},		"ReUnconditionalRecursionRule" : {			"hash" : 3954176,			"definition" : "ReNodeMatchRule subclass: #ReUnconditionalRecursionRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for unconditional recursion that might cause the image to hang when executed."			],			"category" : "GeneralRules-Migrated"		},		"RGAbstractContainer" : {			"hash" : 1332736,			"definition" : "RGDefinition subclass: #RGAbstractContainer\r\tinstanceVariableNames: 'elements'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Definitions-Containers-Base'",			"comment" : [				"This is the abstract class for container-based elements.",				"Elements are separated in groups by kind (e.g classes, methods, pools, etc.)",				"Subclasses have to define the kind of collection for a particular group of entities.",				"For a container the use of a dictionary or another collection (e.g. SortedCollection) to store group of elements is independent.",				""			],			"category" : "Ring-Definitions-Containers-Base"		},		"FTBasicItem" : {			"hash" : 756480,			"definition" : "FTTreeItem subclass: #FTBasicItem\r\tinstanceVariableNames: 'isExpanded data depth recentlyChanged'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Tree'",			"comment" : [				"I am an Item of a tree that keep a data and know how to calculate the children of this data for a Fast Tree.",				"",				"Description",				"-------------------------------------------------",				"",				"I am created by a FTTreeDataSource or a FTItem and I hold a data. I can use a childrenBlock from my dataSource to generate the children of my data.",				"Myself I use some FTBasicItems to creale my children.",				"I also know how to generate a button for a FTTreeDataSource if needed. This button can be use to extand or unextand me.",				"",				"Public API and Key Messages",				"-------------------------------------------------",				"",				"- #expand/#unexpand",				"        Allow to expand me or unexpand me and update the Tree.. ",				"   ",				"- #depth",				"        Return my depth in the tree.",				"",				"Create me as as my superclass with an object as data.",				"",				"Example",				"-------------------------------------------------",				"",				"(FTBasicItem data: Object from: (FTTreeDataSource roots: {} children: [ :item | item subclasses ]))",				"\t\tdepth: 2;",				"\t\tyourself",				" ",				"Internal Representation and Key Implementation Points.",				"-------------------------------------------------",				"",				"    Instance Variables",				"\tdata:\t\tI am an object hold by the item.",				"\tdepth:\t\tI am the depth of the Item on the tree.",				"\tisExpanded:\t\tI am a Boolean that remember if I am expanded or not.",				"\trecentlyChanged: \t\tI am a boolean that return true fi the item was really recently collapsed/expanded. Don't play with me, I am use to update the selection when we collapse/expand an item.",				"\t\t\t",				"I calculate my children with a block that is inside my dataSource. I execute this block with my data, the roots items of the dataSource and my level as arguments."			],			"category" : "Morphic-Widgets-FastTable-Tree"		},		"IRBytecodeGenerator" : {			"hash" : 1240064,			"definition" : "Object subclass: #IRBytecodeGenerator\r\tinstanceVariableNames: 'encoder seqOrder orderSeq seqBytes jumps literals lastLiteral currentSeqId currentSeqNum bytes lastSpecialReturn primitiveBytes instrMaps instrMap stacks stack numArgs properties numberOfTemps additionalLiterals forceLongForm primNumber encoderClass inBlock compilationContext'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Core-Bytecode'",			"comment" : [				"Handles the byte code generation of jumps, literals and similar things. Byte code independent. The encoder is bytecode dependent.",				"",				"I generate bytecodes in response to 'instructions' messages being sent to me.  I rewrite jumps at the end so their jump offsets are correct (see #bytecodes).  For example, to create a compiled method that compares first instVar to first arg and returns 'yes' or 'no' (same example as in IRBuilder), do:",				"",				"\tBytecodeGenerator new",				"\t\tnumArgs: 1;",				"\t\tpushInstVar: 1;",				"\t\tpushTemp: 1;",				"\t\tsend: #>;",				"\t\tif: false goto: #else;",				"\t\tpushLiteral: 'yes';",				"\t\treturnTop;",				"\t\tlabel: #else;",				"\t\tpushLiteral: 'no';",				"\t\treturnTop;",				"\t\tcompiledMethod",				"",				"You can send #ir to the compiledMethod to decompile to its IRMethod, and you can send #methodNode to either to decompile to its parse tree.",				"",				"",				"Instance Variables",				"\tadditionalLiterals:\t\t<OCLiteralSet> Those are literals evaluated for effect and optimized control flow messages selectors used in the method in order to be able to do sendersOf: on these literals with success.",				"\tbytes:\t\t<OrderedCollection of bytes> current sequence of bytecodes being written ",				"\tencoder:\t\t<BytecodeEncoder> Set the one you need depending on which bytecode set you want to use.",				"\tforceLongForm:\t\t<Boolean> true if instance variable access requires a long form (typically, Context access)",				"\t\t",				"\tFollowing inst vars are used to map bytecode pc to IR instruction\t",				"\tinstrMap:\t\t<OrderedCollection>",				"\tinstrMaps:\t\t<IdentityDictionary of OrderedCollection>",				"\t\t\t",				"\tlastLiteral:\t\t<Behavior> Basically in the case you would compile without annotating the method with its class and its selector, this literal is used to enforce the method class to be a literal to allow super sends.",				"\tlastSpecialReturn:\t\t<Message> used to generate quick returns",				"\tliterals:\t\t<OCLiteralList> literals of the methods",				"\tnumArgs:\t\t<Smi> number of arguments of the method",				"\tnumberOfTemps:\t\t<Smi> number of temps of the method",				"\tprimNumber:\t\t<Smi> primitive number (or 0)",				"\tproperties:\t\t<AdditionalMethodState | nil> used to hold the additional method state (pragmas for examples)",				"\t\t\t",				"\tFollowing inst vars are used to correctly map the jumps (See #initialize for extra information)",				"\torderSeq:\t\t<OrderedCollection> Reverse map of seq order",				"\tseqBytes:\t\t<IdentityDictionary>",				"\tseqOrder:\t\t<IdentityDictionary>",				"\tjumps:\t\t<IdentityDictionary>",				"\tcurrentSeqId:\t\t<Object>",				"\tcurrentSeqNum:\t\t<Smi>",				"\t\t\t",				"\tstack:\t\t<Stack> simulated stack. Only simulates the depth of the stack. Store its maximum value in stacks instance variable.",				"\tstacks:\t\t<IdentityDictionary (seqId -> stackCount)> used to find out the maximum depth of the method and therefore set the largeFrameBit"			],			"category" : "OpalCompiler-Core-Bytecode"		},		"Termcap" : {			"hash" : 1153536,			"definition" : "Object subclass: #Termcap\r\tinstanceVariableNames: 'cache'\r\tclassVariableNames: ''\r\tpackage: 'System-CommandLine-Utilities'",			"comment" : [				"I provide a simple mapping from high-level commands to low-level terminal character sequences."			],			"category" : "System-CommandLine-Utilities"		},		"RingChunkImporter" : {			"hash" : 1313536,			"definition" : "Object subclass: #RingChunkImporter\r\tinstanceVariableNames: 'package doIts'\r\tclassVariableNames: ''\r\tpackage: 'Ring-OldChunkImporter-Base'",			"comment" : [				"I'm an object holding the result of loading a file containing Pharo code definitions in chunk format.",				"I create ring definitions for the elements inside the chunk stream.",				"Heavily inspired from FilePackage.",				"",				"see example method class side "			],			"category" : "Ring-OldChunkImporter-Base"		},		"ReEmptyExceptionHandlerRule" : {			"hash" : 3947008,			"definition" : "ReNodeMatchRule subclass: #ReEmptyExceptionHandlerRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Empty exception handler blocks hide potential bugs. The situation should be handled in a more robust way.",				"",				"[  .... ]",				"\ton: Error",				"\tdo: [  ]",				"\t",				"having an empty block is a bad idea because the program silently fails."			],			"category" : "GeneralRules-Migrated"		},		"IndentingListItemMorph" : {			"hash" : 605952,			"definition" : "StringMorph subclass: #IndentingListItemMorph\r\tinstanceVariableNames: 'indentLevel isExpanded complexContents firstChild container nextSibling icon'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-List'",			"comment" : [				"An IndentingListItemMorph is a StringMorph that draws itself with an optional toggle at its left, as part of the display of the SimpleHierarchicalListMorph.",				"",				"It will also display lines around the toggle depending on UITheme settings",				"",				"Instance variables:",				"",				"indentLevel <SmallInteger> \tthe indent level, from 0 at the root and increasing by 1 at each level of the hierarchy.",				"",				"isExpanded <Boolean>\t\ttrue if this item is expanded (showing its children)",				"",				"complexContents <ListItemWrapper>\tan adapter wrapping my represented item that can answer its children, etc.",				"\t",				"firstChild <IndentingListItemMorph|nil>\tmy first child, or nil if none",				"\t",				"container <SimpleHierarchicalListMorph>\tmy container",				"\t",				"nextSibling <IndentingListItemMorph|nil>\tthe next item in the linked list of siblings, or nil if none.",				"",				"Contributed by Bob Arning as part of the ObjectExplorer package.",				"Don't blame him if it's not perfect.  We wanted to get it out for people to play with."			],			"category" : "Morphic-Widgets-List"		},		"FTBasicTreeListItem" : {			"hash" : 734464,			"definition" : "Object subclass: #FTBasicTreeListItem\r\tinstanceVariableNames: 'expanded depth item children dataSource'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Tree-Basic'",			"comment" : [				"FTBasicTreeListItem holds the state of a element in FTBasicTreeListDataSource.",				"",				"Instance variables: ",				"",				"|< expanded >|< Private  >|< aBoolean >[ ",				"\tremembers if this it is currently expanded or not.",				"}.",				"",				"|< depth >|< Private  >|< aNumber >[",				"\tThe depth of this item from the root.",				" ].",				"",				"< item > [  anyObject. ",				"\tThe raw item which is wrapped by this class.\t",				"].",				"",				"< children > [ aCollection.",				"\tcache for holding currently expaned children",				" ].",				"",				"< dataSource > [ aFBasicTreeListDataSource",				"\treference to the datasource",				" ]."			],			"category" : "Morphic-Widgets-FastTable-Tree-Basic"		},		"JPEGReadStream class" : {			"hash" : 562176,			"definition" : "JPEGReadStream class\r\tinstanceVariableNames: ''",			"comment" : [				"Encapsulates huffman encoded access to JPEG data.",				"",				"The following layout is fixed for the JPEG primitives to work:",				"",				"\tcollection\t<ByteArray | String>",				"\tposition\t\t<SmallInteger>",				"\treadLimit\t<SmallInteger>",				"\tbitBuffer\t<SmallInteger>",				"\tbitsInBuffer\t<SmallInteger>"			],			"category" : "Graphics-Files"		},		"MockObject" : {			"hash" : 463104,			"definition" : "Object subclass: #MockObject\r\tinstanceVariableNames: 'messages failed'\r\tclassVariableNames: ''\r\tpackage: 'SUnit-MockObjects'",			"comment" : [				"I am a test double object that can be used as a stub, a fake, or a mock.",				"",				"I provide a simple protocol so that the user can teach me what messages to expect, and how to behave or respond to these messages.",				"",				"# Usage",				"A new object can be created with ```MockObject new```, or using the utility methods on the class side _instance creation_ protocol.",				"",				"The main message to teach a MockObject is ```#on:withArguments:verify:```; the other methods in the _teaching_ protocol all send this message.",				"This message takes a selector symbol, a collection of arguments, and a block. By sending this message, the mock object is trained to evaluate the block when receiving a message matching the selector and the arguments.",				"Other variations of this message have more specialized behaviour: ```#on:withArguments:respond:``` will simply return its third argument when the mock receives a matching message; likewise ```:#on:withArguments:``` will return the mock itself.",				"The other methods in the _teaching_ protocol provide an ergonomic API for this behaviour.",				"",				"A mock object will expect to receive only the messages it has been trained on, in the same order and number as it was trained. If it receives an unknown message, or a known message but in the wrong order, it will simply return itself.",				"",				"",				"# Stubs, Fakes, and Mocks",				"A MockObject can be used as a stub by not using the ```verify:``` variants of the _teaching_ protocol.",				"",				"It can also be used as a fake by using the ```verify:``` variants with a non-trivial block.",				"",				"To use the MockObject as a real mock, the user needs to verify its use. This is done by means of the ```TestCase>>verify:``` message. Verification needs to be triggered by the user - it's not automatic.",				"",				"The ```#verify:``` message will assert 1) that the mock has received all the messages it has been trained on 2) that it has not received only those messages 3) that it has received the messages it has been trained on."			],			"category" : "SUnit-MockObjects"		},		"RSMondrian" : {			"hash" : 2279936,			"definition" : "Object subclass: #RSMondrian\r\tinstanceVariableNames: 'canvas layoutBuilder shapeBuilder nodesForLayout lineBuilder depth'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Mondrian-Core'",			"comment" : [				"```",				"m := RSMondrian new.",				"m shape label color: Color blue translucent.",				"m nodes: Collection withAllSubclasses.",				"m line connectToAll: #dependentClasses.",				"m normalizeFontSize: #numberOfMethods.",				"m layout force.",				"m  ",				"```",				"",				"Another example with inner boxes:",				"```",				"m := RSMondrian new.",				"m shape box labeled.",				"m nodes: #(1 2 3 4) forEach: [ :nb | ",				"\tm shape box labeled; size: 20; color: Color blue.",				"\tm nodes: #(10 20) forEach: [ :nb2 | ",				"\t\tm nodes: #(100 200) ] ].",				"m line connectTo: [ :nb | nb + 1 ].",				"m",				"```"			],			"category" : "Roassal3-Mondrian-Core"		},		"CmCommandAborted" : {			"hash" : 843008,			"definition" : "CmCommandError subclass: #CmCommandAborted\r\tinstanceVariableNames: 'reason'\r\tclassVariableNames: ''\r\tpackage: 'Commander2-Errors'",			"comment" : [				"I am raised when the execution of a command has been aborted."			],			"category" : "Commander2-Errors"		},		"CustomQuestionDialogWindow" : {			"hash" : 1945344,			"definition" : "QuestionDialogWindow subclass: #CustomQuestionDialogWindow\r\tinstanceVariableNames: 'yesButton noButton cancelButton'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Windows'",			"comment" : [				"QuestionDialog supporting custom text/buttons for yes/no choices."			],			"category" : "Polymorph-Widgets-Windows"		},		"IceMetacelloLoadSession" : {			"hash" : 6241536,			"definition" : "Object subclass: #IceMetacelloLoadSession\r\tinstanceVariableNames: 'choices'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Metacello-Integration-Session'",			"comment" : [				"I'm a metacello execution sesssion. ",				"I will be active during the context of a \"metacello load\" command, and it will be shared between all dependent baselines/configurations to be traversed in that execution.",				"",				"Tipically, I will be used to keep some state needed during the full execution, like a choice of what whas selected when conflicting or upgraded versions acts.  "			],			"category" : "Iceberg-Metacello-Integration-Session"		},		"SpTSearchable" : {			"hash" : 2164992,			"definition" : "Trait << #SpTSearchable\r\tslots: {\r\t\t\t #searchEnabled => ObservableSlot .\r\t\t\t #searchBlock };\r\ttag: 'Widgets-Table';\r\tpackage: 'Spec2-Core'",			"comment" : [				"I add search capability to lists/tables and trees. ",				"I implement basic common API but real implementation (as always) needs to be done in the backend adapters. "			],			"category" : "Spec2-Core-Widgets-Table"		},		"SpTokenTreeFilter" : {			"hash" : 2167552,			"definition" : "SpAbstractTreeFilter subclass: #SpTokenTreeFilter\r\tinstanceVariableNames: 'token'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Support'",			"comment" : [				"I am a filter for a token.",				"",				"If a node item contains my token I accept it"			],			"category" : "Spec2-Core-Support"		},		"AthensFlakeDemo" : {			"hash" : 3424000,			"definition" : "Morph subclass: #AthensFlakeDemo\r\tinstanceVariableNames: 'surface circle frame spike'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Examples-Morphic'",			"comment" : [				"AthensFlakeDemo new openInWindow"			],			"category" : "Athens-Examples-Morphic"		},		"FTIndentedCellMorph" : {			"hash" : 571648,			"definition" : "FTCellMorph subclass: #FTIndentedCellMorph\r\tinstanceVariableNames: 'indentation'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Base'",			"comment" : [				"FTCell with adjustable indentation in the X axis that can be configured so that children will be laid out from indentation to #right.",				""			],			"category" : "Morphic-Widgets-FastTable-Base"		},		"ClyDesiredSelection" : {			"hash" : 5106432,			"definition" : "ClyDataSourceSelection subclass: #ClyDesiredSelection\r\tinstanceVariableNames: 'isSameAsCurrent'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-DataSource'",			"comment" : [				"I represent desired selection which should be restored on different data sources.",				"For example when in the browser user selects particular method and switches to another class then similar method (with same name) should be selected in new class automatically. ",				"I am created by ClyNavigationView when user manually selects new table items. When new data source is set to view I responsible to restore previous selection of table:",				"\tdesiredSelection restoreCurrentSelection: aDataSourceSelection ",				"Inside this method I ask given selection to find similar items as mine to set them as a new selection:",				"\taDataSourceSelection restoreDesiredSelectionWith: newItems silently: selectionIsSame.",				"Last argument indicates that items from new data source are same as selected before. So table should not trigger selection changed event because in fact selection is still same.",				"To achieve this logic I keep flag that I am the same as current selection from which I was created.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tisSameAsCurrent:\t\t<Boolean>"			],			"category" : "Calypso-Browser-DataSource"		},		"String class" : {			"hash" : 806400,			"definition" : "String class\r\tinstanceVariableNames: ''",			"comment" : [				"A String is an indexed collection of Characters. Class String provides the abstract super class for ByteString (that represents an array of 8-bit Characters) and WideString (that represents an array of  32-bit characters).  In the similar manner of LargeInteger and SmallInteger, those subclasses are chosen accordingly for a string; namely as long as the system can figure out so, the String is used to represent the given string.",				"",				"Strings support a vast array of useful methods, which can best be learned by browsing and trying out examples as you find them in the code.",				"",				"## Substrings and slicing",				"",				"A number of selectors can be used to get substrings. `String>>#lines` will return a colection containing substrings separated by `\\\\n`, `\\\\r`, or `\\\\r\\\\n`; `String>>#trim` will return a substring with whitespace removed from the beginning and end. ",				"",				"Obtaining parts of a string can also be achieved using numbered indices, also known as slicing. There are shortcut methods for some common operations that are often inherited from `SequenceableCollection` inclusing `allButFirst`, `allButLast`, `first`, or `last`.",				"",				"```",				"s := 'abcdefg'.",				"",				"s first. \"$a\"",				"s allButFirst.  \"bcdefg\"",				"",				"s last.  \"$g\"",				"s allButLast.  \"abcdef\"",				"",				"\"pass a number argument to change the number of characters removed/kept\"",				"",				"s first: 2.  \"ab\"  ",				"s allButFirst: 2.  \"cdefg\"",				"",				"s last: 2.  \"fg\"",				"s allButLast: 2.  \"abcde\"",				"```",				"",				"To get the middle of a string use `SequenceableCollection>>#copyFrom:to:`",				"",				"```",				"s := 'abcdefg'.",				"s copyFrom: 2 to: 6. \"bcdef\"",				"```",				"",				"To count back from the end of the string use the `size` selector",				"```",				"s := 'abcdefg'",				"s copyFrom: 2 to: s size - 1 ",				"```",				"",				"## Formatting",				"",				"Strings have a `String>>#format:` selector that can be used for interpolating other objects.",				"The \"string template\" can either have numbers between curly bracket characters (`{` and `}`)",				"where the argument to format is a collection where values are indexed by number. Or pass in",				"a `HashedCollection` where the placeholders are the keys of the collection",				"```",				"'ab {1} ef {2}' format: {'cd'. 'gh'}.  \"ab cd ef gh\"",				"",				"'ab {one} ef {two}' format: ",				"    (Dictionary with: #one -> 'cd' with: #two -> 'gh').",				"```",				"",				"`String>>#contractTo:` is also useful for shortening strings to a particular length by replacing ",				"middle characters.",				"",				"## Copying and Streaming",				"As well as the `format:` selector it is possible to build up a string using contatenation with",				"`SequenceableCollection>>#,` ",				"",				"```",				"a := 'abc'.",				"b := ' easy as '.",				"c := '123'.",				"a , b , c.  \"abc easy as 123\"",				"```",				"Or alternatively, construct a string from a stream using `SequenceableCollection class>>#streamContents:`.",				"",				"```",				"s := String streamContents: [ :stream |",				"\t  stream nextPutAll: 'abcdefg';",				"\t  space;",				"\t  nextPutAll: '123456';",				"\t  space.",				"\t  '7890' putOn: stream. ].  \"abcdefg 123456 7890\"",				"```",				"",				"## Finding/Searching",				"",				"Simple reqular expression type searching can be performed using `String>>#match:`, which has similar",				"symantics as \"globbing\" in a shell. The reciever is a template string where the `#` character matches any single character and the `*` character matches any number of characters. A `Boolean` object is returned. ",				"```",				"'#abb*cdch' match: '4abbadskfakjdfadiadfnvcdch'  \"true\"",				"```",				"",				"For more complex matching use `String>>#matchesRegex:` which is an extension method implmented by `RxMatcher`. See the help documentation on regular expressions `HelpBrowser openOn: RegexHelp.`"			],			"category" : "Collections-Strings-Base"		},		"RandomGaussian" : {			"hash" : 2323968,			"definition" : "Random subclass: #RandomGaussian\r\tinstanceVariableNames: 'mu sigma densityMultiplier magic'\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Random'",			"comment" : [				"Uses Kinderman and Monahan method. Reference: Kinderman, A.J. and Monahan, J.F., ",				"\"\"Computer generation of random variables using the ratio of uniform deviates\"\", ",				"ACM Trans Math Software, 3, (1977), pp257-260."			],			"category" : "Containers-Essentials-Random"		},		"TaskbarMorph class" : {			"hash" : 613376,			"definition" : "TaskbarMorph class\r\tinstanceVariableNames: ''",			"comment" : [				"Themed synchronous taskbar (not using #step to poll windows). The buttons provide visual feedback as to whether a window is active or minimised (collapsed) plus a popup menu with options to restore, minimise, maximise and close the associated window. Optional (via settings) preview of the window while mouse is over a taskbar button."			],			"category" : "Morphic-Widgets-Taskbar"		},		"ReRemoveAssignmentWithoutEffectRule" : {			"hash" : 3939328,			"definition" : "ReNodeRewriteRule subclass: #ReRemoveAssignmentWithoutEffectRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"See my #longDescription ."			],			"category" : "GeneralRules-Migrated"		},		"EDEmergencyDebugger" : {			"hash" : 4124928,			"definition" : "Object subclass: #EDEmergencyDebugger\r\tuses: TDebugger\r\tinstanceVariableNames: 'rawDisplay stackSelectionIndex methodVersionSelectionIndex methodText stackText titleText repl input result isRunning debugAPI actions actionsDescriptions shortStack shortStackIndex error errorText'\r\tclassVariableNames: 'DefaultDebugAPI'\r\tpackage: 'EmergencyDebugger-Core'",			"comment" : [				"I am a REPL debugger and I provide an access to the Sindarin debugging API.",				"I do not depend on morphic, and while I depend on Color, I can work without it.",				"",				"I use a `ReadWriteStream` to handle user input and output my results.",				"I use `Display` and `DisplayScreen` to show my results.",				"",				"To invoke me, use my class method `debugError: anError fromSession: aDebugSession`.",				"This method takes as input an error and a debug session.",				"The error is used to display information about what brought you to ED.",				"It is not mandatory, if you only have a debug session you can invoke me by doing:",				"`EDEmergencyDebugger new emergencyDebug: aDebugSession`.",				"The debug session contains all information necessary to debug.",				"",				"For example, execute the following as an example:",				"```",				"|context process session|",				"context := [ EDMockObjectForTests new m: 20 ] asContext.",				"\tprocess := Process",				"\t\tforContext: context",				"\t\tpriority: Processor userInterruptPriority.",				"\tsession := DebugSession",				"\t\tnamed: 'test session'",				"\t\ton: process",				"\t\tstartedAt: context.",				"\tsession stepThrough.",				"\tsession stepOver.",				"\tsession stepInto.",				"\tsession stepOver.",				"\tsession stepOver.",				"\tsession stepInto.",				"\tEDEmergencyDebugger new emergencyDebug: session.",				"```",				"\t",				"Navigate the stack with up/down arrows.",				"When you are on a method (in the stack), use left/right arrow to navigate the versions of that method.",				"To revert the selected method (in the stack) to the selected version (displayed in the middle text pane), type `revert` and press enter.",				"",				"Don't forget to read the help text, type `h` or `help` to display the help text."			],			"category" : "EmergencyDebugger-Core"		},		"IceTipCommitBrowser" : {			"hash" : 6291712,			"definition" : "IceTipBrowser subclass: #IceTipCommitBrowser\r\tinstanceVariableNames: 'diffPanel commentPanel saveAction'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-View-Commit'",			"comment" : [				"I'm a browser to commit changes to a repository.",				"",				"(self onRepository: IceRepository registry anyOne) openWithSpec"			],			"category" : "Iceberg-TipUI-View-Commit"		},		"SystemWindow" : {			"hash" : 1936640,			"definition" : "ModelMorph subclass: #SystemWindow\r\tinstanceVariableNames: 'labelString stripes label closeBox collapseBox paneMorphs collapsedFrame fullFrame isCollapsed menuBox mustNotClose labelWidgetAllowance updatablePanes labelArea expandBox embeddable isResizeable'\r\tclassVariableNames: 'CloseBoxImage CollapseBoxImage FullscreenMargin TopWindow'\r\tpackage: 'Morphic-Widgets-Windows-Widgets'",			"comment" : [				"SystemWindow is the Morphic equivalent of StandardSystemView -- a labelled container for rectangular views, with iconic facilities for close, collapse/expand, and resizing.",				"",				"The attribute onlyActiveOnTop, if set to true (and any call to activate will set this), determines that only the top member of a collection of such windows on the screen shall be active.  To be not active means that a mouse click in any region will only result in bringing the window to the top and then making it active."			],			"category" : "Morphic-Widgets-Windows-Widgets"		},		"CmUICommand" : {			"hash" : 853248,			"definition" : "CmCommandDecorator subclass: #CmUICommand\r\tinstanceVariableNames: 'iconProvider iconName shortcutKey displayStrategy positionStrategy'\r\tclassVariableNames: ''\r\tpackage: 'Commander2-UI-Core'",			"comment" : [				"I am a command decorator adding informations useful when for usage in context of user interface (UI).",				"",				"Basically, I add:",				"- an #icon (#blank by default)",				"- a #shortcutKey (optional)",				"- a #displayStrategy to handle how to show the command if it is not executable on a context (default is to be disabled)",				"- a #positionStrategy to handle on which side presenter with left and right side I should be (default is left)"			],			"category" : "Commander2-UI-Core"		},		"NullStream" : {			"hash" : 1075712,			"definition" : "Stream subclass: #NullStream\r\tinstanceVariableNames: 'binary position lastElement'\r\tclassVariableNames: ''\r\tpackage: 'Collections-Streams-Base'",			"comment" : [				"I am a stream that does nothing i.e. generates and consumes an infinite number of elements (NullObject pattern). I can be used as an equivalent of /dev/null (for example ",				"a logging in off mode) or for performance benchmarks."			],			"category" : "Collections-Streams-Base"		},		"NSLogScale" : {			"hash" : 5626624,			"definition" : "NSLinearScale subclass: #NSLogScale\r\tinstanceVariableNames: 'linear base positive'\r\tclassVariableNames: ''\r\tpackage: 'NumericInterpolator-Scales'",			"comment" : [				"for scale log, for positive domains or negative domains"			],			"category" : "NumericInterpolator-Scales"		},		"ZnBufferedReadStream" : {			"hash" : 1196800,			"definition" : "Object subclass: #ZnBufferedReadStream\r\tinstanceVariableNames: 'stream buffer position limit'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-Character-Encoding-Core'",			"comment" : [				"I am ZnBufferedReadStream.",				"",				"I wrap another ReadStream and add efficient buffering for the typical access pattern of parsers: sending lots of #next, #peek and #atEnd messages.",				"",				"By design I do not implement #position and #position: or anything based on that.",				"",				"I can wrap both binary or character streams and act accordingly.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-Character-Encoding-Core"		},		"RSAbstractGridLayout" : {			"hash" : 5752576,			"definition" : "RSLayout subclass: #RSAbstractGridLayout\r\tinstanceVariableNames: 'gapSize lineItemsCountBlock'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"A ROAbstractGridLayout is xxxxxxxxx.",				"",				"Instance Variables",				"\tgapSize:\t\t<Object>",				"\tlineItemsCountBlock:\t\t<Object>",				"",				"gapSize",				"\t- xxxxx",				"",				"lineItemsCountBlock",				"\t- xxxxx"			],			"category" : "Roassal3-Layouts-Core"		},		"ClyNavigationHistory" : {			"hash" : 5108480,			"definition" : "Object subclass: #ClyNavigationHistory\r\tinstanceVariableNames: 'undoList redoList undoExecuting redoExecuting waitingNewState'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-NavigationHistory'",			"comment" : [				"I implement navigation history.",				"I maintain two lists: ",				"- redoList ",				"- undoList ",				"They include collection of ClyBrowserState instances.",				"",				"To record new state send following message: ",				"",				"\tnavigationHistory recordState: aBrowserState ",				"",				"And to undo changes call: ",				"",				"\tnavigationHistory undoNavigationOf: aBrowser ",				"\t",				"To redo them call: ",				"",				"\tnavigationHistory redoNavigationOf: aBrowser",				"\t",				"When you undo last browser state it adds new item to the redo list. And otherwise: when you perform redo it adds new item to the undo list.",				"This logic is implemented using undoExecuting and redoExecuting flags.",				"",				"I allow to ignore navigation during given block: ",				"",				"\tnavigationHistory ignoreNavigationDuring: aBlock\t",				"",				"During given block execution the #recordState: method do nothing. It resets flag #waitingNewState to achive this.",				"",				"You can always check that history is empty: ",				"",				"\tnavigationHistory isEmpty",				"",				"Important detail:",				"I am implemented in the way to not keep reference to the browser and any of query results.",				"So long history do not prevent query results in environment cache to be garbage collected.",				" \t",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tredoExecuting:\t\t<Boolean>",				"\tredoList:\t\t<OrderedCollection of<ClyBrowserState>>",				"\tundoExecuting:\t\t<Boolean>",				"\tundoList:\t\t<OrderedCollection of<ClyBrowserState>>",				"\twaitingNewState:\t\t<Boolean>"			],			"category" : "Calypso-Browser-NavigationHistory"		},		"ImageMorph" : {			"hash" : 579840,			"definition" : "Morph subclass: #ImageMorph\r\tuses: TAbleToRotate\r\tinstanceVariableNames: 'image'\r\tclassVariableNames: 'DefaultForm'\r\tpackage: 'Morphic-Base-Basic'",			"comment" : [				"ImageMorph is a morph that displays a picture (Form). My extent is determined by the extent of my form.",				"",				"Use #image: to set my picture.",				"",				"Structure:",				" instance var\t\tType \t\tDescription",				" image\t\t\t\tForm\t\tThe Form to use when drawing",				"",				"Code examples:",				"\tImageMorph new openInWorld; grabFromScreen",				"",				"\t(Form fromFileNamed: 'myGraphicsFileName') asMorph openInWorld",				"",				"Relationship to SketchMorph: ImageMorph should be favored over SketchMorph, a parallel, legacy class -- see the Swiki FAQ for details ( http://minnow.cc.gatech.edu/squeak/1372 ). "			],			"category" : "Morphic-Base-Basic"		},		"OSTouchPinchDetector class" : {			"hash" : 4052736,			"definition" : "OSTouchPinchDetector class\r\tinstanceVariableNames: ''",			"comment" : [				"I am the abstract class for all the Pinch gesture detectors"			],			"category" : "OSWindow-Core-Gestures"		},		"RBSimpleFormatter" : {			"hash" : 1151232,			"definition" : "RBProgramNodeVisitor subclass: #RBSimpleFormatter\r\tinstanceVariableNames: 'codeStream indent lineStart'\r\tclassVariableNames: 'FormatAsYouReadPolicy'\r\tpackage: 'AST-Core-Formatter'",			"comment" : [				"I'm a simple formatter that prints nodes (without using source code).",				"I'm useful when AST are programmatically assembled. ",				"",				"I could be improved, but the goal is to get the information is a more or less ok form."			],			"category" : "AST-Core-Formatter"		},		"SHA1 class" : {			"hash" : 1112576,			"definition" : "SHA1 class\r\tinstanceVariableNames: ''",			"comment" : [				"This class implements the Secure Hash Algorithm (SHA) described in the U.S. government's Secure Hash Standard (SHS). This standard is described in FIPS PUB 180-1, \"SECURE HASH STANDARD\", April 17, 1995.",				"",				"The Secure Hash Algorithm is also described on p. 442 of 'Applied Cryptography: Protocols, Algorithms, and Source Code in C' by Bruce Schneier, Wiley, 1996.",				"",				"See the comment in class DigitalSignatureAlgorithm for details on its use.",				"",				"Implementation notes:",				"The secure hash standard was created with 32-bit hardware in mind. All arithmetic in the hash computation must be done modulo 2^32. This implementation uses ThirtyTwoBitRegister objects to simulate hardware registers; this implementation is about six times faster than using LargePositiveIntegers (measured on a Macintosh G3 Powerbook). Implementing a primitive to process each 64-byte buffer would probably speed up the computation by a factor of 20 or more."			],			"category" : "System-Hashing-SHA1"		},		"FuzzyMatcherExample" : {			"hash" : 1689856,			"definition" : "Object subclass: #FuzzyMatcherExample\r\tinstanceVariableNames: 'textModel dataSource elements matchedElements pattern stringMorph'\r\tclassVariableNames: ''\r\tpackage: 'FuzzyMatcher-Tests-Examples'",			"comment" : [				"FuzzyExample is a class used to showcase the FuzzyMatcher score matching. ",				"See the example on the class side."			],			"category" : "FuzzyMatcher-Tests-Examples"		},		"RSBezier" : {			"hash" : 5670144,			"definition" : "RSAbstractControlPointsLine subclass: #RSBezier\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Lines'",			"comment" : [				"RSBezier represents a bezier lines of one and 2 control points.",				"",				"Here is an example:",				"```Smalltalk",				"\tc := RSCanvas new.",				"\tc add: (RSBezier new",				"\t\tcolor: Color red;",				"\t\tcontrolPoints:",				"\t\t\t{(0 @ 0).",				"\t\t\t(100 @ 100).",				"\t\t\t(200 @ 0).",				"\t\t\t(300 @ 100)}).",				"\tc ",				"```",				"",				"Another example:",				"```Smalltalk",				"canvas := RSCanvas new.",				" ",				"box1 := RSBox new color: Color blue.",				"box2 := RSBox new color: Color red.",				"box2 translateTo: 100 @ -200.",				"",				"box1 @ RSDraggable.",				"box2 @ RSDraggable.",				"canvas add: box1; add: box2.",				" ",				"bezierLine := RSBezier new",				"\twithVerticalAttachPoint;",				"\tfrom: box1;",				"\tto: box2;",				"\tcontrolPointsController: (",				"\t\t\tRSBlockCPController new",				"\t\t\t\tblock: [ :aLine |",				"\t\t\t\t\t| mid |",				"   \t\t\t\t\tmid := (box1 position + box2 position) / 2.",				"\t\t\t\t\t{(box1 position) . ",				"\t\t\t\t\t(box1 position x @ mid y) .",				"\t\t\t\t\t(box2 position x @ mid y) .",				"\t\t\t\t\t(box2 position)} ];",				"\t\t\t\tyourself);",				"  yourself.",				"canvas add: bezierLine.",				"canvas zoomToFit.",				"canvas open",				"```",				"",				"Here is an example of a bezier line with a marker",				"```",				"b := RSCanvas  new.",				"b addAll: ((1 to: 3) collect: [:i |",				"\tRSEllipse new",				"\t\tmodel: i;",				"\t\tsize: 5]).",				"",				"b nodes @ RSDraggable.",				"",				"marker := RSPolygon new",				"\t\tpoints: { -5@5. 0@0. 5@5. 0@0 };",				"\t\textent: 2 @ 2;",				"\t\tcolor: Color red;",				"\t\twithBorder;",				"\t\tasMarker.",				"",				"RSEdgeBuilder verticalBezier",				"\tcolor: Color red translucent;",				"\tcanvas: b;",				"\twithVerticalAttachPoint;",				"\tnoRepetition;",				"\tmarkerEnd: marker;",				"\tuseAssociations: { 1 -> 2 . 2 -> 3 . 1 -> 2}.",				"\t",				"RSVerticalLineLayout on: b nodes.",				"",				"b @ RSCanvasController.",				"b open",				"```"			],			"category" : "Roassal3-Shapes-Lines"		},		"ZipFileConstants class" : {			"hash" : 1341696,			"definition" : "ZipFileConstants class\r\tinstanceVariableNames: ''",			"comment" : [				"This class defines magic numbers taken from the PKWARE ZIP Application ",				"Note [1] approved by ISO/IEC JTC 1/SC 34 N 1621 in July 2011 [2] to be ",				"the international normative reference for the zip file format.  A class ",				"imports these bindings as 'class variables' by including the following ",				"in its class definition: ",				"    poolDictionaries: 'ZipFileConstants' ",				"There is a single method on the class side to initialise the values. ",				"",				"[1] http://www.pkware.com/documents/casestudies/APPNOTE.TXT",				"[2] http://www.itscj.ipsj.or.jp/sc34/open/1621.pdf",				"",				"Following are pertinent extracts from the PKWARE ZIP Application Note.... ",				"All values are stored in little-endian byte order unless otherwise ",				"specified. ",				"A. local file header signature     4 bytes  (0x04034b50) ",				"C. Data descriptor: ",				"           crc-32                          4 bytes ",				"           compressed size                 4 bytes ",				"           uncompressed size               4 bytes ",				"F. central file header signature   4 bytes  (0x02014b50) ",				"I. end of central dir signature    4 bytes  (0x06054b50) ",				"J.  Explanation of fields: ",				"     * version made by (2 bytes) ",				"            0 - MS-DOS and OS/2 (FAT / VFAT / FAT32 file systems) ",				"            3 - UNIX ",				"            1,2,4-20 not implemented ",				"     * compression method: (2 bytes) ",				"            0 - The file is stored (no compression) ",				"            6 - The file is Imploded ",				"            8 - The file is Deflated ",				"            1-7,9-19,97,98 not implemented ",				"      * For Methods 8 and 9 - Deflating ",				"            Bit 2  Bit 1 ",				"              0      0    Normal (-en) compression option was used. ",				"             0      1    Maximum (-exx/-ex) compression option was used. ",				"              1      0    Fast (-ef) compression option was used. ",				"             1      1    Super Fast (-es) compression option was ",				"used.                               ",				"        * internal file attributes: (2 bytes) ",				"            Bits 1 and 2 are reserved for use by PKWARE. The lowest bit ",				"of this field indicates, if set, that the file is apparently an ASCII or ",				"text file.  If not set, that the file apparently contains binary data. ",				"",				"Note the following do not appear in the PKWARE ZIP Application Note.   ",				"Should they be defined elsewhere? ",				"\"Unix permission bits\" ",				"DefaultDirectoryPermissions    := 8r040755. ",				"DefaultFilePermissions        := 8r0100666. ",				"DirectoryAttrib         := 8r040000. ",				"FileAttrib             := 8r0100000. "			],			"category" : "Compression-Archives"		},		"RSCat" : {			"hash" : 2291712,			"definition" : "Object subclass: #RSCat\r\tinstanceVariableNames: 'canvas pixel rainbowColors tileColor'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-Animations'",			"comment" : [				"NyanCat"			],			"category" : "Roassal3-Experimental-Animations"		},		"ImmediateLayout" : {			"hash" : 815872,			"definition" : "ObjectLayout subclass: #ImmediateLayout\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Layout'",			"comment" : [				"I am the special layout for SmallIntegers.",				"",				"SmallIntegers are typically implemented as tagged pointers and thus require a special format."			],			"category" : "Kernel-Layout"		},		"SpToolbarMenuButtonPresenter" : {			"hash" : 2224384,			"definition" : "SpToolbarButtonPresenter subclass: #SpToolbarMenuButtonPresenter\r\tinstanceVariableNames: 'menu'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Widgets-Toolbar'",			"comment" : [				"A presenter to create a menu button (a button who exposes a menu instead having an action) in a `SpToolbarPresenter`."			],			"category" : "Spec2-Core-Widgets-Toolbar"		},		"AthensTigerPart" : {			"hash" : 3422464,			"definition" : "Object subclass: #AthensTigerPart\r\tinstanceVariableNames: 'path fillRule fill capStyle joinStyle miterLimit strokeWidth strokePaint fillPaint stroke'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Examples-Utilities'",			"comment" : [				"I'm a visual part of the AthensTiger."			],			"category" : "Athens-Examples-Utilities"		},		"OSTouchSwipeDetector" : {			"hash" : 4051968,			"definition" : "OSTouchOneDirectionGestureDetector subclass: #OSTouchSwipeDetector\r\tinstanceVariableNames: 'minDistToBorder'\r\tclassVariableNames: 'MinDistToBorder'\r\tpackage: 'OSWindow-Core-Gestures'",			"comment" : [				"I am the abstract class for all the Swipe gesture detectors"			],			"category" : "OSWindow-Core-Gestures"		},		"SDL2ConstantsHint class" : {			"hash" : 4065024,			"definition" : "SDL2ConstantsHint class\r\tinstanceVariableNames: ''",			"comment" : [				"I contain configure HINTS.",				"All HINTS can be seen here: https://wiki.libsdl.org/CategoryHints"			],			"category" : "OSWindow-SDL2-Bindings"		},		"VTermOutputDriver" : {			"hash" : 1169920,			"definition" : "Object subclass: #VTermOutputDriver\r\tinstanceVariableNames: 'termcap outStream currentBackground currentColor light blink'\r\tclassVariableNames: ''\r\tpackage: 'System-CommandLine-VTerm-Driver'",			"comment" : [				"I convert high-level terminal commands like moving the cursor or setting the color to characters sequences understood by the terminal.",				"",				"Furthermore I do some bookkeeping to reduce the number of characters sent to the terminal.",				"",				"Example of usage:",				"",				"\tout := VTermOutputDriver stdout.",				"\tout << 'normal text'.",				"\tout lf.",				"\t'red text' do: [ :c | out color256: Color red. out << c ].",				"\tout lf.",				"\t'bold text' do: [ :c | out bold. out << c ].",				"\tout clear.",				"\tout lf."			],			"category" : "System-CommandLine-VTerm-Driver"		},		"MWHandlerSuspendPlugging" : {			"hash" : 3382016,			"definition" : "MWHandlerDecorating subclass: #MWHandlerSuspendPlugging\r\tinstanceVariableNames: 'table preBlock postBlock'\r\tclassVariableNames: ''\r\tpackage: 'MethodWrappers'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tpostBlock:\t\t<Object>",				"\tpreBlock:\t\t<Object>",				"\ttable:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "MethodWrappers"		},		"MCAncestry" : {			"hash" : 264704,			"definition" : "Object subclass: #MCAncestry\r\tinstanceVariableNames: 'ancestors stepChildren'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Versioning'",			"comment" : [				"Abstract superclass of records of ancestry."			],			"category" : "Monticello-Versioning"		},		"Object class" : {			"hash" : 805376,			"definition" : "Object class\r\tinstanceVariableNames: ''",			"comment" : [				"`Object` is the root class for almost all of the other classes in the class hierarchy. The exceptions are ProtoObject (the superclass of Object) and its subclasses.",				"",				"Class `Object` provides default behavior common to all normal objects, such as access, copying, comparison, error handling, message sending, and reflection. Also utility messages that all objects should respond to are defined here.",				"",				"`Object` has no instance variables, nor should any be added. This is due to several classes of objects that inherit from Object that have special implementations (SmallInteger and UndefinedObject for example) or the VM knows about and depends on the structure and layout of certain standard classes.",				"",				"Class Variables:",				"\tDependentsFields\t\tan IdentityDictionary",				"\t\tProvides a virtual 'dependents' field so that any object may have one",				"\t\tor more dependent views, synchronized by the changed:/update: protocol.",				"\t\tNote that class Model has a real slot for its dependents, and overrides",				"\t\tthe associated protocol with more efficient implementations.",				"",				"Because `Object` is the root of the inheritance tree, methods are often defined in Object to give all objects special behaviors needed by certain subsystems or applications, or to respond to certain general test messages such as isMorph.",				"",				"",				"###Miscellanous Discussions",				"",				"About `at:` index accepting float and not only integers",				" ",				"This behavior is also free in the sense that the failure code is only invoked when the primitive fails and so adds nothing to the cost of successful accesses, which are the high dynamic frequency operation.  It will also show up under",				"profiling if one is concerned about efficiency, and so isn't a hidden cost.",				"",				"It is also in keeping with Pharo's mixed mode/arbitrary precision",				"implicit coercion number system that one *can* use fractions or floats as",				"indices.  Stripping out coercions like this will make the system more brittle.  So ",				"please do *not* remove this hack.  I think it's a feature and a useful one.",				"",				"Can you give me an example that demonstrates the usefulness of this feature?",				"",				"```",				"| a r |",				"a := Array new: 10 withAll: 0.",				"r := Random new.",				"100 timesRepeat: [| v | v := r next * 10 + 1. a at: v put: (a at: v) + 1].",				"a",				"```",				"",				"i.e. I didn't have to provide an explicit rounding step.  That's useful.  But in general anywhere ",				"where an index is derived by some calculation not having to provide the rounding step could be ",				"useful/helpful/more concise.  e.g. (n roundTo: 0.1) * 10 vs ((n roundTo: 0.1) * 10) asInteger.",				"",				"Some thought went into the original choice.  It is not a hack but there by intent.  The integers are ",				"simply a subset of the reals and forcing the programmer to use them is favouring the machine ",				"above the programmer.",				"",				"But I think you should justify getting rid of it rather than my having to justify keeping it.  Getting ",				"rid of it risks breaking code.  If it is there but does not harm then why get rid of it?",				"",				"best Eliot Miranda "			],			"category" : "Kernel-Objects"		},		"SpRequestDialog" : {			"hash" : 2336000,			"definition" : "SpDialogPresenter subclass: #SpRequestDialog\r\tinstanceVariableNames: 'label textInput title initialExtent acceptLabel cancelLabel validateBlock'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Dialogs'",			"comment" : [				"A simple dialog to request some information (a text)"			],			"category" : "Spec2-Dialogs"		},		"RubTextStopConditions" : {			"hash" : 1873152,			"definition" : "Object subclass: #RubTextStopConditions\r\tinstanceVariableNames: 'stops crossedX endOfRun'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-TextScanning'",			"comment" : [				"I represent the conditions to stop the scan"			],			"category" : "Rubric-TextScanning"		},		"SimpleBorderStyle" : {			"hash" : 650496,			"definition" : "BorderStyle subclass: #SimpleBorderStyle\r\tinstanceVariableNames: 'baseColor color width'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Borders'",			"comment" : [				"see BorderedMorph"			],			"category" : "Morphic-Base-Borders"		},		"SHPreferences class" : {			"hash" : 1683712,			"definition" : "SHPreferences class\r\tinstanceVariableNames: 'enabled'",			"comment" : [				"Preferences for Shout"			],			"category" : "Shout-Styling"		},		"RBScanner class" : {			"hash" : 1096192,			"definition" : "RBScanner class\r\tinstanceVariableNames: 'classificationTable'",			"comment" : [				"RBScanner is a stream that returns a sequence of tokens from the string. The tokens know where they came from in the source code and which comments were attached to them.",				"",				"Instance Variables:",				"\tbuffer\t<PositionableStream>\tAccumulates the text for the current token.",				"\tcharacterType\t<ByteSymbol>\tThe type of the next character. (e.g. #alphabetic, etc.)",				"\tclassificationTable\t<Array of: Symbol>\tMapping from Character values to their characterType.",				"\tcomments\t<Collection of: Interval>\tSource intervals of scanned comments that must be attached to the next token.",				"\tcurrentCharacter\t<Character>\tThe character currently being processed.",				"\terrorBlock\t<BlockClosure>\tThe block to execute on lexical errors.",				"\textendedLiterals\t<Boolean>\tTrue if IBM-type literals are allowed. In VW, this is false.",				"\tnameSpaceCharacter\t<Character>\tThe character used to separate namespaces.",				"\tnumberType\t<ByteSymbol>\tThe method to perform: to scan a number. ",				"\tseparatorsInLiterals\t<Boolean>\tTrue if separators are allowed within literals.",				"\tstream\t<PositionableStream>\tContains the text to be scanned.",				"\ttokenStart\t<Integer>\tThe source position of the beginning of the current token",				"",				"Class Instance Variables:",				"\tclassificationTable\t<Array>\t\tthe default classification table for all characters",				"",				"Shared Variables:",				"\tPatternVariableCharacter\t<Character>\tthe character that starts a pattern node"			],			"category" : "AST-Core-Parser"		},		"WorldState class" : {			"hash" : 1662976,			"definition" : "WorldState class\r\tinstanceVariableNames: ''",			"comment" : [				"The state of a Morphic world.  (This needs some serious commenting!!)",				"",				"",				"The MinCycleLapse variable holds the minimum amount of time that a morphic cycle is allowed to take.  If a cycle takes less than this, then interCyclePause: will wait until the full time has been used up."			],			"category" : "Morphic-Core-Worlds"		},		"EventManager class" : {			"hash" : 1604864,			"definition" : "EventManager class\r\tinstanceVariableNames: ''",			"comment" : [				"An EventManager is used to registers a 'observer' object's interest in in changes to an 'observed' object.  Then when the observed object is changed,  EventManager broadcasts an update message to all objects with a registered interest.  Finally, the EventManager can be used to remove an object from the list of observer object.",				"",				"An interested object is said to be a dependant on the target object.  Registering an interest in an event is called adding a dependant. Deregistering is called removing a dependant.  The EventManager's action map is a WeakIdentityDictionary that maps events (selectors) to dependants (objects & selectors) in a way that ensures the mapping is to specific objects (hence identity) and in a way that allows the object to be garbage collected if not other used (hence weak.)  EventManager class has ActionMaps which has one actionMap for each object.",				"",				"Classic uses of an EventManager are to implement the Observer Pattern, see ChangeNotification or the MorphicModel as examples."			],			"category" : "System-Object Events-Base"		},		"TabBuildingIconMorph" : {			"hash" : 611584,			"definition" : "Morph subclass: #TabBuildingIconMorph\r\tinstanceVariableNames: 'progressIconMorph progress'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Tabs-Morphs'",			"comment" : [				"I implement rotated icon to animate background tab building. ",				"I use stepping mechanizm for animation.",				"",				"Just create my instance with #new message to use in other morphs.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tprogress:\t\t<Integer>",				"\tprogressIconMorph:\t\t<ImageMorph>",				"",				"",				"    Implementation Points"			],			"category" : "Morphic-Widgets-Tabs-Morphs"		},		"GZipConstants class" : {			"hash" : 1340160,			"definition" : "GZipConstants class\r\tinstanceVariableNames: ''",			"comment" : [				"This class defines magic numbers taken from the RFC1952 GZIP file format ",				"specification version 4.3 (1996) [1].  A class imports these constants ",				"as 'class variables' by including the following in its class definition: ",				"   poolDictionaries: 'GZipConstants' ",				"A method on the class side initialises the values. ",				"",				"[1] http://www.ietf.org/rfc/rfc1952.txt  (Section 2.3.1 Member header ",				"and trailer) ",				"-------------8<----snip--------------- ",				"",				"As an aside the following in [GzipConstants class >> initialize] does ",				"not match the specification for bit 5 as \"reserved\". ",				"    GZipEncryptFlag := 16r20.    \"Archive is encrypted\" ",				"",				"I did find it defined here [2] & [3] however the FAQ [4] specifically ",				"says encryption is NOT part of the standard. ",				"",				"This constant is only used in [GzipReadStream >> on:from:to] as... ",				"    (flags anyMask: GZipEncryptFlag) ",				"        ifTrue:[^self error:'Cannot decompress encrypted stream']. ",				"",				"So perhaps its okay to leave but maybe some slight benefit from amending ",				"the text as follows.. ",				"    GZipEncryptFlag := 16r20.    \"Archive is encrypted.  Not supported. ",				"Not part of the standard.\" ",				"    ifTrue:[^self error:'Cannot decompress encrypted stream. Encryption ",				"is not part of RFC1952']. ",				"",				"It is a better presentation to a user if you can indicate that it is ",				"someone else's fault that their decompress failed, and not Pharo. ",				"",				"[2] http://www.onicos.com/staff/iz/formats/gzip.html",				"[3] http://research.cs.wisc.edu/wpis/examples/pcca/gzip/gzip.h",				"[3] http://www.gzip.org/#faq15"			],			"category" : "Compression-Streams"		},		"SpMorphicMillerAdapter" : {			"hash" : 2605056,			"definition" : "SpMorphicLayoutAdapter subclass: #SpMorphicMillerAdapter\r\tinstanceVariableNames: 'innerWidget lastExtent lastPageSize needRecalculatePages'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Layout'",			"comment" : [				"I'm an adapter for Miller Layouts.",				"A paned layout will split (horizontally or vertically) panels (in fixed yet proportional spaces), ",				"and it will scroll the panels that exceed SpMillerLayout>>#visiblePages property.  "			],			"category" : "Spec2-Adapters-Morphic-Layout"		},		"PluggableButtonMorph" : {			"hash" : 1910528,			"definition" : "AlignmentMorph subclass: #PluggableButtonMorph\r\tinstanceVariableNames: 'model label icon getIconSelector getStateSelector actionSelector font getLabelSelector getMenuSelector shortcutCharacter askBeforeChanging triggerOnMouseDown offColor onColor feedbackColor showSelectionFeedback allButtons arguments argumentsProvider argumentsSelector enabled actionBlock getColorSelector getEnabledSelector getFontSelector labelMorph iconMorph iconPosition lastState'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Basic-Buttons'",			"comment" : [				"A PluggableButtonMorph is a combination of an indicator for a boolean value stored in its model and an action button. The action of a button is often, but not always, to toggle the boolean value that it shows. Its pluggable selectors are:",				"",				"\t\tgetStateSelector\t\tfetch a boolean value from the model",				"\t\tactionSelector\t\tinvoke this button's action on the model",				"\t\tgetLabelSelector\t\tfetch this button's lable from the model",				"\t\tgetMenuSelector\t\tfetch a pop-up menu for this button from the model",				"",				"Any of the above selectors can be nil, meaning that the model does not supply behavior for the given action, and the default behavior should be used. For example, if getStateSelector is nil, then this button shows the state of a read-only boolean that is always false.",				"",				"The model informs its view(s) of changes by sending #changed: to itself with getStateSelector as a parameter. The view tells the model when the button is pressed by sending actionSelector.",				"",				"If the actionSelector takes one or more arguments, then the following are relevant:",				"\t\targuments\t\t\tA list of arguments to provide when the actionSelector is called.",				"\t\targumentsProvider\tThe object that is sent the argumentSelector to obtain arguments, if dynamic",				"\t\targumentsSelector\tThe message sent to the argumentProvider to obtain the arguments.",				"",				"Options:",				"\taskBeforeChanging\t\thave model ask user before allowing a change that could lose edits",				"\ttriggerOnMouseDown\tdo this button's action on mouse down (vs. up) transition",				"\tshortcutCharacter\t\ta place to record an optional shortcut key"			],			"category" : "Morphic-Widgets-Basic-Buttons"		},		"TestServiceExample" : {			"hash" : 358144,			"definition" : "TestExecutionService subclass: #TestServiceExample\r\tinstanceVariableNames: 'forkedProcesses isCleanUpDone isCompletedTestHandled signaledExceptions'\r\tclassVariableNames: ''\r\tpackage: 'SUnit-Core-Kernel'",			"comment" : [				"I am an example of TestExecutionService created for tests.",				"I am not enabled by default. So I am not really shown to users.",				"",				"I simply log in variables everything requested from me by test environment.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tforkedProcesses:\t\t<OrderedCollection<Process>>",				"\tisCleanUpDone:\t\t<Boolean>",				"\tisCompletedTestHandled:\t\t<Boolean>",				"\tsignaledExceptions:\t\t<OrderedCollection<Exception>>"			],			"category" : "SUnit-Core-Kernel"		},		"MessageList" : {			"hash" : 5389312,			"definition" : "SpPresenter subclass: #MessageList\r\tinstanceVariableNames: 'cachedHierarchy topologySort model method listPresenter'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-MethodBrowsers-Base'",			"comment" : [				"I am a presenter listing messages. ",				"",				"I am used by more complexe browsers such as MessageBrowser or VersionBrowser.",				"\t",				" ",				"Internal Representation and Key Implementation Points.",				"--------------------",				"",				"    Instance Variables",				"\tcachedHierarchy:\t\t<aDictionary>\t \tA cache keeping info about the level of a class in the list.",				"\tlistModel:\t\t\t\t<aListPresenter>\tA list presenter to show all the messages.",				"\tmodel:\t\t\t\t\t\t<aTool>\t\t\t\u0010\u0010\tA model grouping generic methods for managing packages/classes/groups/methods from a browser",				"\ttopologySort:\t\t\t<aBoolean>\t\t \tA boolean to know if we should use a topology sort or not."			],			"category" : "NewTools-MethodBrowsers-Base"		},		"CmCommandCollector" : {			"hash" : 840448,			"definition" : "CmVisitor subclass: #CmCommandCollector\r\tinstanceVariableNames: 'commandsCollected'\r\tclassVariableNames: ''\r\tpackage: 'Commander2-Visitors'",			"comment" : [				"I am a concrete visitor that reucrsively collects all the commands of a command registry. I'm used by the `CmCommandGroup>>#allCommands` message."			],			"category" : "Commander2-Visitors"		},		"RSXmasBranch" : {			"hash" : 2294272,			"definition" : "Object subclass: #RSXmasBranch\r\tinstanceVariableNames: 'positions thickness isCandidate baseIndex dTheta'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-Xmas2019'",			"comment" : [				"I am a demo"			],			"category" : "Roassal3-Experimental-Xmas2019"		},		"ReThemeAccessRule class" : {			"hash" : 1730560,			"definition" : "ReThemeAccessRule class\r\tinstanceVariableNames: ''",			"comment" : [				"Morph and Model subclasses methods should access GUI theme via 'self theme' instead of 'Smalltalk ui theme'."			],			"category" : "Renraku-Rules"		},		"SpPanedConstraints" : {			"hash" : 2153216,			"definition" : "SpLayoutConstraints subclass: #SpPanedConstraints\r\tinstanceVariableNames: 'resize shrink'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Layout-Paned'",			"comment" : [				"I define the constraints of a presenter to be shown in a Paned Layout."			],			"category" : "Spec2-Layout-Paned"		},		"RubTextSegmentMorph" : {			"hash" : 600320,			"definition" : "RubSegmentMorph subclass: #RubTextSegmentMorph\r\tinstanceVariableNames: 'textArea firstIndex lastIndex icon iconBlock label changeable'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Core'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tchangeable:\t\t<Object>",				"\tfirstIndex:\t\t<Object>",				"\ticon:\t\t<Object>",				"\ticonBlock:\t\t<Object>",				"\tlabel:\t\t<Object>",				"\tlastIndex:\t\t<Object>",				"\ttextArea:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Rubric-Editing-Core"		},		"SelectionMorph" : {			"hash" : 1959680,			"definition" : "BorderedMorph subclass: #SelectionMorph\r\tinstanceVariableNames: 'selectedItems slippage dupLoc dupDelta itemsAlreadySelected otherSelection undoProperties'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Basic'",			"comment" : [				"A selectionMorph supports the selection of multiple objects in a morphic world or pasteUp. Using command+shift you get a squared lazzo and you can grab morphs. After you can grab the selection as a morph.",				"",				"Structure:",				"\tselectedItems\tan OrderedCollection of Morphs",				"\t\t\t\t\tThese are the morphs that have been selected",				"\tslippage\t\ta Point",				"\t\t\t\t\tKeeps track of actual movement between the ",				"\t\t\t\t\tsteps of gridded movement",				"\tdupLoc\t\ta Point",				"\t\t\t\t\tNotes the position when first duplicate request occurs from halo",				"\tdupDelta\ta Point",				"\t\t\t\t\tHolds the final delta of the first duplicate plus subsequent moves."			],			"category" : "Morphic-Base-Basic"		},		"ForEventTestMock" : {			"hash" : 4350464,			"definition" : "Object subclass: #ForEventTestMock\r\tinstanceVariableNames: 'stringMorph counter'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Tests-Event'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcounter:\t\t<Object>",				"\tstringMorph:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Morphic-Tests-Event"		},		"RBRefactoryPackageChange" : {			"hash" : 3195136,			"definition" : "RBRefactoryChange subclass: #RBRefactoryPackageChange\r\tinstanceVariableNames: 'browserEnvironment'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Changes-Changes-Packages'",			"comment" : [				"I am the baseclass for all refactoring changes for all kind of package changes."			],			"category" : "Refactoring-Changes-Changes-Packages"		},		"RSAbstractPlot" : {			"hash" : 5805824,			"definition" : "RSAbstractChartPlot subclass: #RSAbstractPlot\r\tinstanceVariableNames: 'xValues yValues shape'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Core'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Chart-Core"		},		"RBDumpVisitor" : {			"hash" : 1150464,			"definition" : "RBProgramNodeVisitor subclass: #RBDumpVisitor\r\tinstanceVariableNames: 'stream'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Visitors'",			"comment" : [				"I'm a visitor that generates code whose execution will recreate the visited node (similarly to storeOn: protocol).",				"This is handy because we can simply serialize the object in a textual form without requiring a separate parser.",				"",				"I'm used by reflexivity.",				"",				"try me! ",				"(RBDumpVisitor >> #stream) ast dump",				"",				"Instance Variables",				"\tstream:\t\t<Object>\t\tThe stream holding the output. Filled up throughout the visit.",				""			],			"category" : "AST-Core-Visitors"		},		"ResumeDebugAction" : {			"hash" : 2987776,			"definition" : "DebugAction subclass: #ResumeDebugAction\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Debugger-Actions-Actions'",			"comment" : [				"A ResumeDebugAction resumes the execution of the interrupted process and closes the debugger."			],			"category" : "Debugger-Actions-Actions"		},		"SpAdapterBindings" : {			"hash" : 2170624,			"definition" : "Object subclass: #SpAdapterBindings\r\tinstanceVariableNames: 'bindings'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Base'",			"comment" : [				"I am an abstract class",				"",				"I am used to link a spec-oriented adapter name to a framework specific adapter class name"			],			"category" : "Spec2-Core-Base"		},		"StReporter" : {			"hash" : 5466624,			"definition" : "StPresenter subclass: #StReporter\r\tinstanceVariableNames: 'topicList reportText topics'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-SystemReporter'",			"comment" : [				"I'm an abstract class. ",				"Better use my subclasses: ",				"",				"```",				"StSystemReporter new openWithSpec",				"```",				"",				"or ",				"",				"```",				"StSizeReporter new openWithSpec",				"```",				""			],			"category" : "NewTools-SystemReporter"		},		"ListPresenter" : {			"hash" : 891904,			"definition" : "AbstractWidgetPresenter subclass: #ListPresenter\r\tinstanceVariableNames: 'selectionHolder listHolder menuHolder multiSelectionHolder multiSelection allowToSelect listItemsCache filteringBlockHolder sortingBlockHolder wrapBlockHolder listAnnouncer backgroundColorBlock autoDeselect'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"A ListPresenter is an applicative presenter which handle a basic list.",				"See AbstractWidgetPresenter",				"",				"self example",				"self example2",				"self example3",				"",				"You can also have a look at ExampleListPresenter >> exampleRegisteredColor and ListSelectionPresenter for more examples.",				"",				"I provide the following variables and their accessors",				"- backgroundColorBlock should convert an item in the color in the background in the line of this item.",				"- displayBlock should convert an item in something that can be displayed in a list, use asStringOrText by default.",				"- filteringBlock should convert an item in a boolean representing if the item will be displayed, initialize with self defaultFilteringBlock.",				"- multiSelection is a boolean representing if several items can be selected in the same time, it have shortcut beMultipleSelection and beSingleSelection.",				"- sortingBlock should convert two items in a boolean representing if the first item must be place before the second, initialize with self defaultSortingBlock.",				"",				"Blocks should be set before items.",				"",				"I provide the following methods",				"- items: to set the list with the elements of the collection in parameter",				"- getIndex is the getter of the index of the selected item or the last selected item.",				"- getList is the getter of the list.",				"- listSize is the number of items.",				"",				"",				"todo",				"- allowToSelect",				"- autoDeselect",				"- menu",				"- listItems",				"- clickOnSelectedItem",				"- getSelectionStateFor:",				"- listElementAt:ifAbsent:",				"- refresh ...",				"- select ... , setSelected ...",				"- updateList"			],			"category" : "Spec-Core-Widgets"		},		"LocalVariable" : {			"hash" : 1245440,			"definition" : "Variable subclass: #LocalVariable\r\tinstanceVariableNames: 'escaping index scope usage'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Core-Semantics'",			"comment" : [				"I model local Variables"			],			"category" : "OpalCompiler-Core-Semantics"		},		"CoMockFetcherToRecordResets" : {			"hash" : 5341952,			"definition" : "CoFetcher subclass: #CoMockFetcherToRecordResets\r\tinstanceVariableNames: 'resetingCount'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Tests-Core'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tresetingCount:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "HeuristicCompletion-Tests-Core"		},		"RSKeyboardEvent" : {			"hash" : 5661952,			"definition" : "RSUserInputEvent subclass: #RSKeyboardEvent\r\tinstanceVariableNames: 'keyValue keyName'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Event'",			"comment" : [				"A base class for keyboard events."			],			"category" : "Roassal3-Event"		},		"SpTreeTablePresenter" : {			"hash" : 2215168,			"definition" : "SpAbstractTreePresenter << #SpTreeTablePresenter\r\tslots: {\r\t\t\t #columns => ObservableSlot .\r\t\t\t #showColumnHeaders => ObservableSlot .\r\t\t\t #isResizable => ObservableSlot .\r\t\t\t #lazilyComputeChildren };\r\ttag: 'Widgets-Tree';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter for tree with a table.",				"A table has columns with a type (See column types section).",				"",				"**IMPORTANT:** A table presenter does not contain other presenters. Instead, it maps the model provided (See `SpTreeTablePresenter>>#roots:` and `SpTreeTablePresenter>>#children:`) with the columns defined. If you need this behavior, you will need to use `SpComponentListPresenter`."			],			"category" : "Spec2-Core-Widgets-Tree"		},		"SpSelectEntity" : {			"hash" : 1563136,			"definition" : "SpPresenter << #SpSelectEntity\r\tslots: {\r\t\t\t #entity => ObservableSlot .\r\t\t\t #selectEntity .\r\t\t\t #possibleEntities => ObservableSlot .\r\t\t\t #displaySymbol .\r\t\t\t #entityText .\r\t\t\t #selectDialog => ObservableSlot .\r\t\t\t #placeholder => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Morphic'",			"comment" : [				"A to-1 relationship field with keyboard selection with entry completion and a separate dialog for detailed searching (and creating new entities).",				"",				"See my class side for an example",				""			],			"category" : "Spec2-Morphic-Widgets"		},		"MenubarSeparatorMorph" : {			"hash" : 1961728,			"definition" : "SimpleButtonMorph subclass: #MenubarSeparatorMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Menubar-View'",			"comment" : [				"Description",				"--------------------",				"",				"I am a simple morph used by the MenubarMorph to add some separators. Use me via the #addSeparator method of MenubarMorph."			],			"category" : "Morphic-Widgets-Menubar-View"		},		"RSAlpharo" : {			"hash" : 2287616,			"definition" : "RSAbstractContainerBuilder subclass: #RSAlpharo\r\tinstanceVariableNames: 'objects jarShape amebas perlin layout random redLine'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-Alpharo'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Experimental-Alpharo"		},		"RBCompositeTransformation" : {			"hash" : 4489728,			"definition" : "RBTransformation subclass: #RBCompositeTransformation\r\tinstanceVariableNames: 'previousTransformations transformations delegatesPreconditions'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring2-Transformations-Model'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tdelegatesPreconditions:\t\t<Object>",				"\tpreviousTransformations:\t\t<Object>",				"\ttransformations:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Refactoring2-Transformations-Model"		},		"AnimatedImageMorph" : {			"hash" : 569088,			"definition" : "Morph subclass: #AnimatedImageMorph\r\tinstanceVariableNames: 'frames frameStream currentFrame activeForm prevFrame currentDisposal'\r\tclassVariableNames: ''\r\tpackage: 'Images-Animated'",			"comment" : [				"I am a Morph that displays a sequence of Forms order, each as represented by AnimatedImageFrame objects.",				"",				"To set or access the AnimatedImageFrame objects that I should display, use #frames and #frames: with a collection of frames.",				"",				"For convenience, the #forms message will respond with a collection of the Forms inside of each AnimatedImageFrame.",				"",				"Unlike ImageMorph (from whom I do not subclass), my extent must be explicitly set since each frame's form can have different dimensions and offsets."			],			"category" : "Images-Animated"		},		"ZnSimplifiedByteEncoder class" : {			"hash" : 1198592,			"definition" : "ZnSimplifiedByteEncoder class\r\tinstanceVariableNames: 'byteTextConverters'",			"comment" : [				"I am ZnSimplifiedByteEncoder, a concrete subclass of ZnCharacterEncoder.",				"I handle single byte encodings where byte values 0 to 127 map to ASCII and 128 to 255 are a permutation to Unicode characters.",				"",				"I am like ZnByteEncoder, a subclass of me, but I implement just two mappings, latin1 or iso-8859-1 and ASCII, to conserve memory."			],			"category" : "Zinc-Character-Encoding-Core"		},		"ExternalSemaphoreTable class" : {			"hash" : 961536,			"definition" : "ExternalSemaphoreTable class\r\tinstanceVariableNames: ''",			"comment" : [				"By John M McIntosh johnmci@smalltalkconsulting.com",				"This class was written to mange the external semaphore table. When I was writing a Socket test server I discovered various race conditions on the access to the externalSemaphore table. This new class uses class side methods to restrict access using two mutex semaphores, one for removal and one for additions to the table. It seemed cleaner to delegate the responsibility here versus adding more code and another class variable to SystemDictionary ",				"",				"Note that in Smalltalk recreateSpecialObjectsArray we still directly play with the table.",				"",				"Henrik Sperre Johansen",				"The name is somewhat of a misnomer; the table can be used for any objects, not just semaphores.",				"That is its main usage though, so a split which deals with semaphores and other external objects differently ",				"(In the same underlying table) is not currently worth it.",				"Therefore, while in general not all users will care if the table is above a certain size, we still guard  against adding more objects than the limit above which external signals would be lost (on some VMs.)"			],			"category" : "System-Support-Utilities"		},		"RSHorizontalLineLayout" : {			"hash" : 5755136,			"definition" : "RSAbstractLineLayout subclass: #RSHorizontalLineLayout\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"A RTHorizontalLineLayout locates all the elements horizontally"			],			"category" : "Roassal3-Layouts-Core"		},		"HaloMorph" : {			"hash" : 579328,			"definition" : "Morph subclass: #HaloMorph\r\tinstanceVariableNames: 'target innerTarget positionOffset angleOffset growingOrRotating directionArrowAnchor haloBox originalExtent nameMorph'\r\tclassVariableNames: 'CurrentHaloSpecifications HaloEnclosesFullBounds HaloWithDebugHandle ShowBoundsInHalo'\r\tpackage: 'Morphic-Base-Widgets'",			"comment" : [				"This morph provides a halo of handles for its target morph. Dragging, duplicating, rotating, and resizing to be done by mousing down on the appropriate handle. There are also handles for help and for a menu of infrequently used operations."			],			"category" : "Morphic-Base-Widgets"		},		"ReJustSendsSuperRule" : {			"hash" : 3968512,			"definition" : "ReAbstractRule subclass: #ReJustSendsSuperRule\r\tinstanceVariableNames: 'matcher'\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"This smell arises when a method just forwards the message to its superclass. This often happens due to code changes or when you simply forget that you wanted to extend the behavior of a superclass method. These methods can be removed."			],			"category" : "GeneralRules-Migrated"		},		"DADependencyChecker" : {			"hash" : 1777920,			"definition" : "Object subclass: #DADependencyChecker\r\tinstanceVariableNames: 'report'\r\tclassVariableNames: ''\r\tpackage: 'Tool-DependencyAnalyser-Report'",			"comment" : [				"Utility class to easily check  dependencies of packages.",				"",				"",				"DADependencyChecker new dependenciesOf: #CargoPackageManager.",				"",				"DADependencyChecker new transitiveDependenciesOf: #'CargoPackageManager-Minimal'.",				"",				"DADependencyChecker new dependentsOf: #CargoPackageManager."			],			"category" : "Tool-DependencyAnalyser-Report"		},		"SelectRuleBrowser" : {			"hash" : 1705216,			"definition" : "SelectBrowser subclass: #SelectRuleBrowser\r\tinstanceVariableNames: 'environment removeTestCase selectedRules'\r\tclassVariableNames: ''\r\tpackage: 'Tool-CriticBrowser-Parts'",			"comment" : [				"To select rules."			],			"category" : "Tool-CriticBrowser-Parts"		},		"SpTreePresenter" : {			"hash" : 2214656,			"definition" : "SpAbstractTreePresenter << #SpTreePresenter\r\ttraits: {SpTDecoratedColumn};\r\tslots: {\r\t\t\t #showColumnHeaders => ObservableSlot .\r\t\t\t #isResizable => ObservableSlot .\r\t\t\t #iconBlock .\r\t\t\t #displayBlock };\r\ttag: 'Widgets-Tree';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter to display tree of elements.",				"A `SpTreePresenter` will display a line with a description of the element (See `SpTreePresenter>>#display:`, and optionally an icon (See `SpTreePresenter>>#icon:`).",				"",				"A `SpTreePresenter` can be seen as a simplified `SpTreeTablePresenter`."			],			"category" : "Spec2-Core-Widgets-Tree"		},		"StDebuggerActionModel" : {			"hash" : 5529600,			"definition" : "Object subclass: #StDebuggerActionModel\r\tinstanceVariableNames: 'session contextPredicate topContext filterStack'\r\tclassVariableNames: 'ShouldFilterStack'\r\tpackage: 'NewTools-Debugger-Model'",			"comment" : [				"I implement debug actions exposed by debuggers, and performed on the current debug session."			],			"category" : "NewTools-Debugger-Model"		},		"IceCredentialStore" : {			"hash" : 6177024,			"definition" : "Object subclass: #IceCredentialStore\r\tinstanceVariableNames: 'plainCredentials sshCredentials storeFile'\r\tclassVariableNames: 'CurrentStore StoreFile'\r\tpackage: 'Iceberg-Security'",			"comment" : [				"I am the responsible for storing the credentials. ",				"Now I can store plain text credentials and SSH key pairs. ",				"",				"I store the credentials in a fuel file, this is non encrypted. So it should be improved later.",				"",				"There is a default instance that stores the credentials in a file per image, in the pharo-local directory.",				"In the settings you can modify the location of the credentials file."			],			"category" : "Iceberg-Security"		},		"CairoScaledFont" : {			"hash" : 3084032,			"definition" : "FFIExternalObject subclass: #CairoScaledFont\r\tuses: TCairoLibrary\r\tinstanceVariableNames: 'face freeTypeFont'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'AthensCairoDefinitions'\r\tpackage: 'Athens-Cairo-Text'",			"comment" : [				"My instances map to `cairo_scaled_font_t *` data type."			],			"category" : "Athens-Cairo-Text"		},		"FFIWin64CallbackArgumentReader" : {			"hash" : 488192,			"definition" : "FFIAbstract64BitsArgumentReader subclass: #FFIWin64CallbackArgumentReader\r\tinstanceVariableNames: 'currentParameterIndex'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-Callbacks'",			"comment" : [				"I am the responsible to parse the callback arguments in Win64.",				"In Win64 the structures are always passed by reference. ",				"The first 4 parameters are passed in the registry. ",				"If the parameter is an integer, it is in the integer registers (general purpouse registers).",				"If the parameter is a float, it is in the float registers (SSE registers).",				"",				"The first parameter is always in the first register of the set, the second always in the second register, etc. Following the type of arguments.",				"",				"Ex: ",				"",				"int f( int a, float b, char c)",				"",				"The parameter a is in the first integer register, the parameter b is in the second float register, and the parameter c is in the third integer register.",				"",				"The fifth and following parameters are passed in the stack.",				"If any of the four first parameters does not fit in the registers are passed in the stack."			],			"category" : "UnifiedFFI-Callbacks"		},		"SpMultipleSelectionMode" : {			"hash" : 2166016,			"definition" : "SpAbstractSelectionMode << #SpMultipleSelectionMode\r\tslots: { #selectedIndexes => ObservableSlot };\r\ttag: 'Widgets-Table';\r\tpackage: 'Spec2-Core'",			"comment" : [				"Implement multiple selection mode (Users can select multiple element of list or table)"			],			"category" : "Spec2-Core-Widgets-Table"		},		"TextContainer class" : {			"hash" : 1891328,			"definition" : "TextContainer class\r\tinstanceVariableNames: ''",			"comment" : [				"A TextContainer models the shape of an ownerMorph, possibly occluded by one or more occludingMorphs, and scans this shape to provide a list of rectangles suitable for layout of text.  It does this by displaying the shadow of the ownerMorph in black, and any occludingMorphs in white, on its shadowForm.  It then scans horizontal strips of appropriate height to find unbroken intervals of black, greater than minWidth in extent.  Conputation of the rectangles is done on demand, and results are cached so that text can be redisplayed without having to recompute the rectangles."			],			"category" : "Morphic-Base-Text Support"		},		"TextMorph" : {			"hash" : 1964288,			"definition" : "BorderedMorph subclass: #TextMorph\r\tuses: TAbleToRotate\r\tinstanceVariableNames: 'textStyle text wrapFlag paragraph editor container predecessor successor backgroundColor margins defaultColor'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Basic'",			"comment" : [				"TextMorphs support display of text with emphasis.  They also support reasonable text-editing capabilities, as well as embedded hot links, and the ability to embed submorphs in the text.",				"",				"Late in life, TextMorph was made a subclass of BorderedMorph to provide border and background color if desired.  In order to keep things compatible, protocols have been redirected so that color (preferably textColor) relates to the text, and backgroundColor relates to the inner fill color.",				"",				"Text display is clipped to the innerBounds of the rectangle, and text composition is normally performed within a rectangle which is innerBounds inset by the margins parameter.",				"",				"If text has been embedded in another object, one can elect to fill the owner's shape, in which case the text will be laid out in the shape of the owner's shadow image (including any submorphs other than the text).  One can also elect to have the text avoid occlusions, in which case it will avoid the bounds of any sibling morphs that appear in front of it.  It may be necessary to update bounds in order for the text runaround to notice the presence of a new occluding shape.",				"",				"The optional autoFitContents property enables the following feature:  if the text contents changes, then the bounds of the morph will be adjusted to fit the minimum rectangle that encloses the text (plus any margins specified).  Similarly, any attempt to change the size of the morph will be resisted if this parameter is set.  Except...",				"",				"If the wrapFlag parameter is true, then text will be wrapped at word boundaries based on the composition width (innerBounds insetBy: margins) width.  Thus an attempt to resize the morph in autofit mode, if it changes the width, will cause the text to be recomposed with the new width, and then the bounds will be reset to the minimum enclosing rectangle.  Similarly, if the text contents are changed with the wrapFlag set to true, word wrap will be performed based on the current compostion width, after which the bounds will be set (or not), based on the autoFitcontents property.",				"",				"Note that fonts can only be applied to the TextMorph as a whole.  While you can change the size, color, and emphasis of a subsection of the text and have it apply to only that subsection, changing the font changes the font for the entire contents of the TextMorph. ",				"",				"Still a TextMorph can be composed of several texts of different fonts",				"",				"```",				"| font1 font2 t1 t2 tMorph|",				"tMorph := TextMorph new.",				"font1 := (TextFontReference toFont: (StrikeFont familyName: 'Atlanta' size: 22)).",				"font2 := (TextFontReference toFont: (StrikeFont familyName: 'Atlanta' size: 11)).",				"t1 := 'this is font1' asText addAttribute: font1.",				"t2 := ' and this is font2' asText addAttribute: font2.",				"tMorph contents: (t1,t2).",				"tMorph openInHand.",				"```",				"",				"Yet to do:",				"Make a comprehensive control for the eyedropper, with border width and color, inner color and text color, and margin widths."			],			"category" : "Morphic-Base-Basic"		},		"StSpotter" : {			"hash" : 5492480,			"definition" : "StPresenter subclass: #StSpotter\r\tinstanceVariableNames: 'searchText resultList model previewContainer categories mutex spinner tip queue updating lastSelectedEntry lastUpdateTime'\r\tclassVariableNames: 'History PreviewVisible Tips TipsVisible'\r\tpackage: 'NewTools-Spotter-View'",			"comment" : [				"When exploring the system, is useful to have a single entry point that will allow users to search for different component of the system. ",				"Spotter provides such entry point and is usually available by pressing <meta+enter>.",				"",				"Spotter is just a front-end to show the result of different processors (see *StSpotterProcessor*) that provide results. Those processors can be configured in different ways and will provide different access options. ",				"",				"Some known processors and options are: ",				"",				"## Classes processor: ",				"- Type #classes in the search bar",				"- Press <meta+b>",				"",				"## Implementors processor: ",				"- Type #implementors in the search bar",				"- Press <meta+m>",				"",				"## Senders processor: ",				"- Type #senders in the search bar",				"- Press <meta+n>"			],			"category" : "NewTools-Spotter-View"		},		"CoHeuristicBuilder" : {			"hash" : 5316864,			"definition" : "Object subclass: #CoHeuristicBuilder\r\tinstanceVariableNames: 'heuristics'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Model-SystemIntegration'",			"comment" : [				"I am an heuristic builder.",				"I am composed with several small heuristics and generate a chain of responsibility from them in the right order.",				"",				"For example, given a list of heuristics:",				"",				"CoHeuristicBuilder new",				"\tadd: CoSelfMessageHeuristic new;",				"\tadd: CoSuperMessageHeuristic new;",				"\tadd: CoInitializeInferencedMessageHeuristic new;",				"\tyourself.",				"",				"I create the following chain:",				"",				"CoSelfMessageHeuristic -next-> CoSuperMessageHeuristic -next-> CoInitializeInferencedMessageHeuristic",				"\t",				"I am used also as a hook, that can be redefined in subclasses and build heuristics differently."			],			"category" : "HeuristicCompletion-Model-SystemIntegration"		},		"RubWorkspaceBarRuler" : {			"hash" : 2996480,			"definition" : "RubScrolledTextSideRuler subclass: #RubWorkspaceBarRuler\r\tuses: TRubWithWrapPolicy + (TRubWithLineNumber - {#fontToUse})\r\tinstanceVariableNames: 'row wrappingPolicyMorph editingModeMorph lineNumbersDisplayMorph'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Workspace-Utilities'",			"comment" : [				"A bottom bar to change the editing mode, switch with/without line numbers and switch wrapping mode"			],			"category" : "Tool-Workspace-Utilities"		},		"DangerousClassNotifier class" : {			"hash" : 801280,			"definition" : "DangerousClassNotifier class\r\tinstanceVariableNames: 'enabled'",			"comment" : [				"Some classes have special importance to the core system.  DangerousClassNotifier notifies users which class defiitions should not be modified. ",				"",				"This class is refactored from the following Pharo2 methods:",				"",				"* Behaviour>>shouldNotBeRedefined",				"",				"* ClassBuilder>>tooDangerousClasses",				"",				"* ClassBuilder>>name:  inEnvironment:  subclassOf:  type:  instanceVariableNames:  classVariableNames:  poolDictionaries:  category:  unsafe: ",				"",				"Instance Variables",				"\tenabled:\t\t<Boolean>",				"\trestoreState:\t\t<Boolean>",				"",				"enabled",				"\t- Specifies whether this checking is performed. Some system tests that check \"dangerous\" behaviour need this turned off. ",				"",				"restoreState",				"\t- After disabling for testing, need to restore the previous state. "			],			"category" : "Shift-ClassBuilder"		},		"LGitStructWithDefaults" : {			"hash" : 6028544,			"definition" : "LGitExternalStructure subclass: #LGitStructWithDefaults\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'LibGit-Core-FFI-Structs'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "LibGit-Core-FFI-Structs"		},		"SpecLayout" : {			"hash" : 972800,			"definition" : "Object subclass: #SpecLayout\r\tinstanceVariableNames: 'type commands selector result shouldCheckSplitters currentOffset currentProportional numberOfProportionals lastFractionIndex autoFractionComputation size'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Layout-Layouts'",			"comment" : [				"A SpecPresenter is a object used to describe a user interface"			],			"category" : "Spec-Layout-Layouts"		},		"RSRoassalExporter" : {			"hash" : 2311680,			"definition" : "Object subclass: #RSRoassalExporter\r\tinstanceVariableNames: 'canvas fileName showFixedShapes cameraSetter'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Exporters-Core'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Exporters-Core"		},		"SpMorphicCodeCompletionEngine" : {			"hash" : 5372416,			"definition" : "CompletionEngine subclass: #SpMorphicCodeCompletionEngine\r\tinstanceVariableNames: 'scripting completionClass doItContext doItRequestor completionBuilder'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Code-Morphic'",			"comment" : [				"I'm a code completion engine.",				"I can have several configurations: ",				"",				"- I have a completionClass, and I am not for scripting -> I will be used in a browser.",				"- I have a completionClass, and I am for scripting -> I will be used in an inspector.",				"- I do not have a completionClass, and I am not for scripting -> I am in a method without class",				"- I do not have a completionClass, and I am for scripting -> I will be used in a workspace (playground)"			],			"category" : "Spec2-Code-Morphic"		},		"SpEditableListPresenter" : {			"hash" : 2230016,			"definition" : "SpPresenter subclass: #SpEditableListPresenter\r\tinstanceVariableNames: 'title list addButton removeButton upButton downButton topButton bottomButton addItemBlock okBlock label removeItemBlock'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Widgets'",			"comment" : [				"This widget allows you to edit a list of items :",				"- add / remove an item to/from the list ",				"- order the list by moving elements up/down/top/bottom.",				"",				"The default behavior is to work directly on the model collection. It means the collection has to support #add:, #remove: methods (e.g. OrderedCollection).",				"If you prefer, you can do a copy of the list and give the copy to the EditableList. It will allow the user to accept / reject changes (for example by opening the widget in a DialogWindow) before affecting the original list. If you use a copy of your collection, then it is your responsability to copy EditableList items back to the original list.",				"",				"The addItemBlock is used to provide a way to give the item to add (e.g. a UIManager default chooseFrom: values:).",				"",				"Example:",				"self example"			],			"category" : "Spec2-Core-Widgets"		},		"SpCompositeOutputPort" : {			"hash" : 2389248,			"definition" : "SpOutputPort subclass: #SpCompositeOutputPort\r\tinstanceVariableNames: 'ports'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Transmission-Base'",			"comment" : [				"A composited output port that allow presenters to trigger output transmissions to several subpresenters (or itself)"			],			"category" : "Spec2-Transmission-Base"		},		"AthensShadowPaint" : {			"hash" : 3051264,			"definition" : "AthensPaint subclass: #AthensShadowPaint\r\tinstanceVariableNames: 'color width blur offset'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Core-Paints'",			"comment" : [				"I representing a shadow paint object used by Athens.",				"My subclasses provide backend-specific implementation.",				"I am more serving to define the common protocols and",				"requirements for all backends (such as defaults).",				"",				"",				"IMPORTANT NOTE: a shadow paint object provides a protocol ",				"only for setting shadow properties, but not retrieving them back.",				"This is intentionally, because the way how these properties is",				"managed are highly backend-specific. ",				"",				"The shadow paint has following properties:",				" - color. A shadow color defined in RGBA color space.",				"",				"\tDefault: Color black alpha: 0.5",				"",				" - shadow width. Can be set using #width:",				"",				"\tDefault: if width is not set explicitly for shadow paint,",				"\t\tit is assumed to be equal to 2.0.",				"\t\t",				" - shadow offset. Defines how far shadow is located.",				"\tShadow offset is a point where x component defines ofset on x-asix and y component on y-axis.",				"\t",				"\tDefault: if offset is not set  explicitely it is assumed to be equal 2@2.",				"\t\t\t",				" - shadow blur. Defines how smooth shadow is.",				"\tBlur is a point with x component defining bluring along x-axis and y component along y axis",				"\t",				"\tDefault: if blur is not set explicitely it is assumed to be equal 4@4"			],			"category" : "Athens-Core-Paints"		},		"RSSunburstBuilder" : {			"hash" : 5788416,			"definition" : "RSAbstractTreeBuilder subclass: #RSSunburstBuilder\r\tinstanceVariableNames: 'maxLevel strategy sliceShape color'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Sunburst'",			"comment" : [				"I am a class to create visualizations about rings, center is the root of the tree and arcs are the sub trees.",				"",				"You can customize the angle of the arc, and play with the with radius and width of each arc."			],			"category" : "Roassal3-Sunburst"		},		"NECTestSuperClass" : {			"hash" : 4358656,			"definition" : "Object subclass: #NECTestSuperClass\r\tinstanceVariableNames: 'superInstVar'\r\tclassVariableNames: 'SuperClassVar'\r\tpackage: 'NECompletion-Tests'",			"comment" : [				"I'm only for SUnit TestCases."			],			"category" : "NECompletion-Tests"		},		"RBClass class" : {			"hash" : 3139072,			"definition" : "RBClass class\r\tinstanceVariableNames: ''",			"comment" : [				"I represent the instance side of a class in a refactoring namespace. ",				"",				"You can query methods and (instance) var names, poolDictionaries, class category and comment.",				"",				"I shouldn't be created directly, but always be part of a refactoring namespace.",				"My  namespace usally knows me and my meta class."			],			"category" : "Refactoring-Core-Model"		},		"Margin" : {			"hash" : 1057280,			"definition" : "Object subclass: #Margin\r\tinstanceVariableNames: 'right bottom left top'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-BasicObjects'",			"comment" : [				"I represent a margin (for now of rectangle-based operations).",				"",				"It can be expressed as different objects:",				"",				"- A number. When specified using a number, it sets all the four values to be the same.",				"",				"- A point. When specified as a point, pairs top/bottom and left/right take their values from a point y and x. ",				"",				"- Four numbers. They represent all the four directions.",				"",				"- A rectangle. (do not use this version because it is proposed just for migration and it may force you to create an unnecessary rectangle)."			],			"category" : "Kernel-BasicObjects"		},		"ClySystemEnvironment" : {			"hash" : 4905472,			"definition" : "Object subclass: #ClySystemEnvironment\r\tinstanceVariableNames: 'name globals changesAnnouncer packageOrganizer projectManager'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemQueries-Domain'",			"comment" : [				"I represent environment of Pharo system. I incapsulate globals (Smalltalk globals), packageOrganizer (RPackageOrganizer  default) and changesAnnouncer (SystemAnnouncer uniqueInstance). I have class side #currentImage instance created with all corresponding globals of current image.",				"",				"I am used to navigate over system by ClyNavigationEnvironment.",				"",				"Public API and Key Messages",				"",				"- packages",				"- createPackageNamed: aString",				"- removePackage: aPackage",				"- includesClassNamed: aString ",				"- defaultClassCompiler",				"- subscribe: aNavigationEnvironment",				"- unsubscribe: aNavigationEnvironment",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tchangesAnnouncer:\t\t<SystemAnnouncer>",				"\tglobals:\t\t<SmalltalkDictionary> \"Smalltalk globals class\"",				"\tname:\t\t<String>",				"\tpackageOrganizer:\t\t<RPackageOrganizer>",				"\tprojectManager:\t\t<ClyProjectManager>"			],			"category" : "Calypso-SystemQueries-Domain"		},		"Finder" : {			"hash" : 3337728,			"definition" : "Object subclass: #Finder\r\tinstanceVariableNames: 'searchingString selectedMethod selectedClass packagesSelection currentSearchMode environment resultDictionary useRegEx'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Finder-Base'",			"comment" : [				"I'm the finderUI model in the MVC pattern.",				"",				"I'm compute the search string and I construct a resultDictionary.",				"Then I throw events everywhere and my views are redrawn."			],			"category" : "Tool-Finder-Base"		},		"RSXmasTree" : {			"hash" : 2295808,			"definition" : "Object subclass: #RSXmasTree\r\tinstanceVariableNames: 'branchPositionFactor branchLenghtFactor candidateIndex amplitude phaseFactor twigs dt freq period time treeSize map'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-Xmas2019'",			"comment" : [				"just a demo"			],			"category" : "Roassal3-Experimental-Xmas2019"		},		"RBAbstractClass class" : {			"hash" : 3138560,			"definition" : "RBAbstractClass class\r\tinstanceVariableNames: ''",			"comment" : [				"I am the base class of RBClass and RBMetaclass implementing the common behavior for creating and accessing class and metaclass elements in a refactoring namespace. ",				"",				"My subclass instances are created in a refactoring namespace when querying the environment for existing ",				"classes (or metaclasses) and when creating or changing classes during refactoring operations.",				"",				"RBClass and RBMetaclass are used to model existing, changed or newly added classes before actually applying the refactoring change to the system. ",				"You can query the class name,  defined methods and  variables. ",				"They provide a similar interface like the real classes, but only the part that is necessary  for the ",				"refactoring framework.",				"",				"They shouldn't be directly used and always be a part of a refacotoring namespace - the model.",				"",				"Likewise this classes, my methods aren't real methods but models (RBMethod) that representing a real methods.",				"",				"Changes for my methods during refactoring are stored in a list of",				"newMethods and removedMethods.",				"Like a real class I referre to my superclass and subclass, which again are actually RBClasses."			],			"category" : "Refactoring-Core-Model"		},		"NSPerlinNoise2" : {			"hash" : 5631232,			"definition" : "Object subclass: #NSPerlinNoise2\r\tinstanceVariableNames: 'p'\r\tclassVariableNames: ''\r\tpackage: 'NumericNoise'",			"comment" : [				"Based on Ken Perlin"			],			"category" : "NumericNoise"		},		"EphemeronRegistry" : {			"hash" : 952576,			"definition" : "Object subclass: #EphemeronRegistry\r\tinstanceVariableNames: 'ephemeronCollection'\r\tclassVariableNames: ''\r\tpackage: 'System-Finalization-Ephemerons'",			"comment" : [				"I'm a registry of Ephemerons. My main responsibility is to hold Ephemeron instances to avoid that they are collected, and thus, guarantee their finalization.",				"",				"As soon as an Ephemeron receives the #mourn message, it will tell me to remove himself from me using the #removeEphemeron: message.",				"",				"",				"!! Example of usage ",				"",				"An ephemeron registry can be simply used by instantiating it and putting objects inside it:",				"",				"registry := EphemeronRegistry new.",				"registry at: objectThatMayBeCollected put: somePropertyThatWouldBeHoldWeaklyDependingOnTheKey.",				"",				"Notice that the key is the object that is important from the finalization point of view. As soon as the key is only reachable by the ephemeron registry, two things will happen:",				"",				"- The key will be sent #finalize, giving the user the opportunity to override the hook and provide an application specific finalization",				"- They registry will forget the ephemeron. If the value of the ephemeron is only referenced by this ephemeron it will then be collected.",				"",				"Ephemerons are created by the registry itself, and retrieved by the ephemeron registry in case the user needs to manipulate the ephemeron manually:",				"",				"ephemeron := registry at: key put: value.",				"",				"",				"!! Implementation Details",				"",				"This Ephemeron registry is implemented using an IdentitySet to hold the remembered Ephemeron instances. This avoid to scan for keys, and allows the usage of several ephemerons for the same object."			],			"category" : "System-Finalization-Ephemerons"		},		"SDL2Types class" : {			"hash" : 4066048,			"definition" : "SDL2Types class\r\tinstanceVariableNames: ''",			"comment" : [				"Various types used by SDL2"			],			"category" : "OSWindow-SDL2-Bindings"		},		"DTDebugTestCommand" : {			"hash" : 2966272,			"definition" : "DTLeafResultCommand subclass: #DTDebugTestCommand\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'DrTests-TestsRunner-Commands'",			"comment" : [				"I am the command allowing one to debug a failing test."			],			"category" : "DrTests-TestsRunner-Commands"		},		"SDL_Event class" : {			"hash" : 4076800,			"definition" : "SDL_Event class\r\tinstanceVariableNames: ''",			"comment" : [				"This is a raw SDL2 event"			],			"category" : "OSWindow-SDL2-Bindings"		},		"SpSliderPresenter" : {			"hash" : 2222336,			"definition" : "SpAbstractWidgetPresenter << #SpSliderPresenter\r\tslots: {\r\t\t\t #max => ObservableSlot .\r\t\t\t #min => ObservableSlot .\r\t\t\t #quantum => ObservableSlot .\r\t\t\t #value => ObservableSlot .\r\t\t\t #absoluteValue => ObservableSlot .\r\t\t\t #isHorizontal .\r\t\t\t #label => ObservableSlot .\r\t\t\t #marks => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter that show a slider."			],			"category" : "Spec2-Core-Widgets"		},		"RubEditingMode" : {			"hash" : 1858816,			"definition" : "Object subclass: #RubEditingMode\r\tinstanceVariableNames: 'textArea previousEditorClass acceptAllowed'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Core'",			"comment" : [				"I am an abstract class to choose the editing mode of the text area "			],			"category" : "Rubric-Editing-Core"		},		"SpMockMenuPresenter" : {			"hash" : 2884608,			"definition" : "SpMenuPresenter subclass: #SpMockMenuPresenter\r\tinstanceVariableNames: 'shown'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Backend-Tests-Base'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tshown:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Backend-Tests-Base"		},		"CoTypeInferencer" : {			"hash" : 5327104,			"definition" : "RBProgramNodeVisitor subclass: #CoTypeInferencer\r\tinstanceVariableNames: 'returnType variables level arguments method temporaryVariables receiverClass argumentVariables'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Model-InitializeInferenceHeuristic'",			"comment" : [				"I am a simple type inferencer that is depth-bound.",				"That is, I infer a method up to a certain level of the callgraph."			],			"category" : "HeuristicCompletion-Model-InitializeInferenceHeuristic"		},		"StartupPreferencesLoader" : {			"hash" : 1453824,			"definition" : "Object subclass: #StartupPreferencesLoader\r\tinstanceVariableNames: 'errors actions'\r\tclassVariableNames: 'AllowStartupScript UniqueInstance'\r\tpackage: 'StartupPreferences'",			"comment" : [				"StartupPreferencesLoader searches for and executes .st files from certain locations such as Library/Preferences/pharo on Mac OS X.  ",				"",				"StartupPreferencesLoader looks within such locations for a 'pharo' folder. This contains the startup scripts common to all versions of Pharo, and also optionally a folder per Pharo version holding startup scripts suitable for that version only.  So a typical directory layout might be...",				"",				".../some/folders/pharo/Content/Resources/pharo.image.",				".../some/folders/pharo/Content/Resources/startup.st",				".../some/folders/.config/pharo/author.st",				".../some/folders/.config/pharo/useSharedCache.st",				".../some/folders/.config/pharo/1.4/mystartupFor14only.st",				".../some/folders/.config/pharo/2.0/mystartupFor20only.st",				"",				"(**Note however that '.config' is an invalid filename on Windows, so '..config' is used instead)",				"",				"To know the real values for you...",				"Print the result of \"StartupPreferencesLoader preferencesGeneralFolder\" which holds the startup scripts common to all versions of Pharo.",				"Print the result of \"StartupPreferencesLoader preferencesVersionFolder\" which holds the startup scripts specific to the version of the current image.",				"",				"-----------",				"",				"",				"StartupPreferencesLoader example",				"",				"will define a script sample startup.st in your unix root on unix ",				"",				"Its contents is ",				"",				"StartupPreferencesLoader default executeAtomicItems: {",				"\tStartupAtomicItem name: 'Open Help' code: 'Workspace openContents: ''Here is just an example of how to use the StartupPreferencesLoader.",				"I should only be displayed once.",				"\t",				"You can also see StartupPreferencesLoader class>>#example'' label: ''Help''' isSingleton: true.",				"\tStartupAtomicItem name: 'Open Workspace' code: 'Workspace openContents: ''I should be displayed each time'''.",				"}",				"",				"EXAMPLE 1",				"============",				"",				"\t\" an example of script generation \"",				"\t| item1 item2 |",				"\titem1 := StartupAction name: 'Open Help' code: 'Smalltalk tools workspace openContents: ''Here is just an example of how to use the StartupPreferencesLoader.",				"I should only be displayed once.",				"\t",				" You can also see StartupPreferencesLoader class>>#example'' label: ''Help''' runOnce: true.",				"\titem2 := StartupAction name: 'Open Workspace' code:  [ Workspace openContents: 'I should be displayed each time' ].",				"\tStartupPreferencesLoader default addAtStartupInGeneralPreferenceFolder: {item1. item2}.",				"\t",				"\tStartupPreferencesLoader default loadFromDefaultLocations.",				"\tStartupPreferencesLoader default loadFromDefaultLocations.",				"",				"EXAMPLE 2",				"============",				"",				"\t\" it's my personal script provided as example\"",				"\t| items |",				"\titems := OrderedCollection new.",				"\titems add: (StartupAction name: 'Set the Author' code: [ Author fullName: Author fullName printString ]). \"replace it by your name\"",				"\t",				"\tStartupPreferencesLoader default addAtStartupInPreferenceVersionFolder: items named: 'author.st'.",				"\titems removeAll.",				"\t",				"\titems add: (StartupAction name: 'Dragging Option' code: [ UITheme defaultSettings fastDragging: true ]).",				"\titems add: (StartupAction name: 'Dialog Auto Accept' code: [ TextEditorDialogWindow autoAccept: true ]).",				"\tStartupPreferencesLoader default addAtStartupInPreferenceVersionFolder: items named: 'settings.st'.",				"\titems removeAll.",				"\t",				"\titems add: (StartupAction name: 'Fonts option' code: [ FreeTypeSystemSettings loadFt2Library: true.\t",				"\tFreeTypeFontProvider current updateFromSystem.",				"\tStandardFonts defaultFont: (LogicalFont familyName: 'Lucida Grande' pointSize: 10) forceNotBold.",				"\tGraphicFontSettings resetAllFontToDefault.",				"\tStandardFonts codeFont: (LogicalFont familyName: 'Consolas' pointSize: 10).] runOnce: true).",				"\t",				"\tStartupPreferencesLoader default addAtStartupInPreferenceVersionFolder: items named: 'fonts.st'.",				"\titems removeAll.",				"\tStartupPreferencesLoader default addAtStartupInImageDirectory: items.",				"\t",				"\tStartupPreferencesLoader default loadFromDefaultLocations.",				"",				"EXAMPLE 3",				"============",				"",				"\t| items |",				"\titems := OrderedCollection new.",				"\t",				"\titems add: (StartupAction name: 'General Preferences for all Pharo versions' code: [ ",				"\t\tFileStream stdout lf; nextPutAll: 'Setting general preferences for all Pharo versions'; lf.",				"\t\tFileStream stdout lf; nextPutAll: 'Finished'; lf.",				"\t\t ]).",				"\tStartupPreferencesLoader default addAtStartupInGeneralPreferenceFolder: items named: 'generalSettings.st'.",				"\t",				"\titems removeAll.",				"\titems add: (StartupAction name: 'Settings' code: [ ",				"\t\tFileStream stdout lf; nextPutAll: 'Setting general preferences for Pharo 2.0'; lf.",				"\t\tFileStream stdout lf; nextPutAll: 'Finished'; lf.",				"\t\t ]).",				"\tStartupPreferencesLoader default addAtStartupInPreferenceVersionFolder: items named: 'settings.st'.",				"\t",				"\titems removeAll.",				"\titems add: (StartupAction name: 'Image diretory' code: [ ",				"\t\tFileStream stdout lf; nextPutAll: 'Setting preferences for image directory'; lf.",				"\t\tFileStream stdout lf; nextPutAll: 'Finished'; lf.",				"\t\t ]).",				"\tStartupPreferencesLoader default addAtStartupInImageDirectory: items "			],			"category" : "StartupPreferences"		},		"SpToolCommand" : {			"hash" : 2343168,			"definition" : "CmCommand subclass: #SpToolCommand\r\tinstanceVariableNames: 'transform'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Commands-Presenters'",			"comment" : [				"I'm a base command to be used on spec 2 presenters. ",				"My children will define actions that can be executed as part of the Pharo System. "			],			"category" : "Spec2-Commands-Presenters"		},		"OSWindowRenderThread" : {			"hash" : 4057600,			"definition" : "Object subclass: #OSWindowRenderThread\r\tinstanceVariableNames: 'renderThreadQueue operationAvailableSemaphore registeredWindows registeredWindowsMutex activeRenderThreadProcessMutex hasAnimatedWindowsInThisPeriod'\r\tclassVariableNames: 'ActiveRenderThreadProcess RenderSession RenderThreadProcess UniqueInstance'\r\tpackage: 'OSWindow-Core-Extras'",			"comment" : [				"I am a pharo process that performs all rendering calls. "			],			"category" : "OSWindow-Core-Extras"		},		"SpLinkPresenter" : {			"hash" : 1565184,			"definition" : "SpAbstractWidgetPresenter << #SpLinkPresenter\r\tslots: {\r\t\t\t #label => ObservableSlot .\r\t\t\t #action => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Morphic'",			"comment" : [				"A presenter used to display a link. ",				"It will display me as a link the user should be able to click and it will open a web page in the user browser.",				"If there is no `label` set, the `url` will be taken as label aswell. "			],			"category" : "Spec2-Morphic-Widgets"		},		"TextInputFieldPresenter" : {			"hash" : 906752,			"definition" : "TextPresenter subclass: #TextInputFieldPresenter\r\tinstanceVariableNames: 'ghostText acceptOnCR entryCompletion isEncrypted'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"I handle one line of text.",				"See TextPresenter",				"",				"self example",				"",				"You can also have a look at DynamicalPopup for another example.",				"",				"I handle non source code text, that's why editing shortcuts are not supported (cmd+p just print a p by example).",				"",				"I provide the following variables and their accessors",				"- acceptOnCR is a boolean representing if the key cr trigger an accept action,  it is true by default and must be set before built the widget. (if false it will print a cr).",				"- encrypted is a boolean representing if the text appear like stars (it is only an appearance), beDecrypted and beEncrypted are shortcut to set it.",				"- entryCompletion is the object used to suggest text while typing, removeEntryCompletion is a shortcut to set it nil.",				"- ghostText is the ghost text to display in the text zone.",				"",				"I provide getters of ValueHolder of my super class actionToPerformHolder and textHolder .",				"",				"",				"todo",				"- specializing accept:",				"- specializing eventKeyStrokesForNextFocus , eventKeyStrokesForPreviousFocus",				"- globalsEntryCompletion",				"- specializing isCodeCompletionAllowed"			],			"category" : "Spec-Core-Widgets"		},		"FTEasyListMorph" : {			"hash" : 574720,			"definition" : "FTTableMorph subclass: #FTEasyListMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Easy'",			"comment" : [				"I'm an easy list used to simplify the creation of lists.",				"My parent is too powerful, I'm just a simplification of it (and no, I will not go to the psy to deal with that).",				"",				" Example: ",				"=========",				"FTEasyListMorph new",				"\textent: 300@550;",				"\telements: Morph methods;",				"\tdisplay: [ :method | method selector ];\t\t",				"\topenInWindow.",				"\t"			],			"category" : "Morphic-Widgets-FastTable-Easy"		},		"Workspace" : {			"hash" : 2996992,			"definition" : "Model subclass: #Workspace\r\tinstanceVariableNames: 'textModel bindings window fileName encoding textView'\r\tclassVariableNames: 'LastContents'\r\tpackage: 'Tool-Workspace-Base'",			"comment" : [				"I'm workspace: a great place to execute top-level expressions to compute something useful, and it is a great place to develop bits of a program before those bits get put into class methods.",				"",				"To open a new workspace, execute one of the following expression:",				"",				"[[[",				"\tself open",				"",				"\tself openContents: '''Pharo is cool'''",				"",				"\tself openLabel: 'A cleaner workspace'",				"\t",				"\tself open label: 'Tutu'",				"]]]",				"",				""			],			"category" : "Tool-Workspace-Base"		},		"TKTMockService" : {			"hash" : 439808,			"definition" : "TKTService subclass: #TKTMockService\r\tinstanceVariableNames: 'isStarted isShutDown hasRun'\r\tclassVariableNames: ''\r\tpackage: 'TaskIt-Tests-Services'",			"comment" : [				"I am a mock service used for testing purposes."			],			"category" : "TaskIt-Tests-Services"		},		"SpStringTableColumn" : {			"hash" : 2194176,			"definition" : "SpTableColumn subclass: #SpStringTableColumn\r\tuses: SpTDecoratedColumn\r\tinstanceVariableNames: 'editable acceptAction sortable'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Widgets-Table'",			"comment" : [				"A column to display strings.",				"A `SpStringTableColumn` cell can be edited (see `SpStringTableColumn>>#beEditable` and `SpStringTableColumn>>#onAcceptEdition:`)",				"",				"The user need to set the evaluation block (by sending `SpTableColumn>>#evaluated:`) to answer an image (an instance of `Form`).",				"",				"## Example",				"```",				"SpStringTableColumn ",				"\ttitle: 'My string' ",				"\tevaluated: [ :anObject | anObject printString ]",				"```"			],			"category" : "Spec2-Core-Widgets-Table"		},		"LIFOQueue" : {			"hash" : 1093888,			"definition" : "AtomicCollection subclass: #LIFOQueue\r\tinstanceVariableNames: 'head'\r\tclassVariableNames: ''\r\tpackage: 'Collections-Atomic-Base'",			"comment" : [				"This is a thread-safe LIFO (last-in-first-out) queue (also known as stack) implementation,",				"based on atomic operations."			],			"category" : "Collections-Atomic-Base"		},		"OmSessionStore class" : {			"hash" : 4179968,			"definition" : "OmSessionStore class\r\tinstanceVariableNames: 'storeNameStrategy defaultBaseLocator registry'",			"comment" : [				"I wrap a file store that is renewed each time either the Smalltalk session changes, among others (check #needsReset)."			],			"category" : "Ombu-Stores"		},		"SessionAccessModeResolver class" : {			"hash" : 1116672,			"definition" : "SessionAccessModeResolver class\r\tinstanceVariableNames: ''",			"comment" : [				"I check the image arguments and resolve if the access mode of the image. I am started very soon in the image start-up process."			],			"category" : "System-SessionManager-Utilities"		},		"TextHighlightByBounds" : {			"hash" : 1894144,			"definition" : "Object subclass: #TextHighlightByBounds\r\tinstanceVariableNames: 'color lineRange bounds borderWidth borderColor borderSides fillWidth'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Utilities'",			"comment" : [				"Definition of a clickable highlighted range of text with optional borders."			],			"category" : "Polymorph-Widgets-Utilities"		},		"MergeJoinSection" : {			"hash" : 3353088,			"definition" : "JoinSection subclass: #MergeJoinSection\r\tinstanceVariableNames: 'selectedBorderColor selected selectionState stateIcons allowClick'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Diff-Joins'",			"comment" : [				"A join section usable for merging"			],			"category" : "Tool-Diff-Joins"		},		"DATarjanAlgorithm" : {			"hash" : 1789184,			"definition" : "Object subclass: #DATarjanAlgorithm\r\tinstanceVariableNames: 'runningIndex stack stronglyConnectedComponents'\r\tclassVariableNames: ''\r\tpackage: 'Tool-DependencyAnalyser-Core'",			"comment" : [				"A class to do Tarjan Algorithm on a PDPackageRelation, in order to detect strongly connected components.",				"Give a package dependency graph (PDPackageRelationGraph)  in entry of the message run to run the Tarjan algorithm and retrieve all the strongly connected components graph."			],			"category" : "Tool-DependencyAnalyser-Core"		},		"MWHandlerToggling" : {			"hash" : 3382528,			"definition" : "MWHandlerDecorating subclass: #MWHandlerToggling\r\tinstanceVariableNames: 'enable'\r\tclassVariableNames: ''\r\tpackage: 'MethodWrappers'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tenable:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "MethodWrappers"		},		"LGitDiffHunk class" : {			"hash" : 2877440,			"definition" : "LGitDiffHunk class\r\tinstanceVariableNames: ''",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "LibGit-Core-FFI-Structs"		},		"ClyFormatAsReadSwitchMorph" : {			"hash" : 5132288,			"definition" : "ClyTextMorphToolMorph subclass: #ClyFormatAsReadSwitchMorph\r\tinstanceVariableNames: 'checkbox'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemTools-Core-Editors-Methods'",			"comment" : [				"I am a tool to force method editor to automatically format given source code.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcheckbox:\t\t<Object>"			],			"category" : "Calypso-SystemTools-Core-Editors-Methods"		},		"MetacelloVisitedPackages" : {			"hash" : 332032,			"definition" : "Object subclass: #MetacelloVisitedPackages\r\tinstanceVariableNames: 'groups packages projects'\r\tclassVariableNames: ''\r\tpackage: 'Metacello-MC-Specs'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tgroups:\t\t<Object>",				"\tpackages:\t\t<Object>",				"\tprojects:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Metacello-MC-Specs"		},		"PoolDefiner2 class" : {			"hash" : 3659008,			"definition" : "PoolDefiner2 class\r\tinstanceVariableNames: ''",			"comment" : [				"A pool used for testing purposes"			],			"category" : "Kernel-Tests-Classes"		},		"AthensAffineTransform" : {			"hash" : 3068160,			"definition" : "AthensTransform subclass: #AthensAffineTransform\r\tinstanceVariableNames: 'sx shx x shy sy y'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Core-Matrices'",			"comment" : [				"I support the same protocol than AthensTransform,",				"but in addition I store a plain 2x3 matrix with state accessible at any moment.",				"",				"This is different to AthensTransform because it does not expose its internal storage, because it can be backend specific."			],			"category" : "Athens-Core-Matrices"		},		"BalloonMorph" : {			"hash" : 1957632,			"definition" : "PolygonMorph subclass: #BalloonMorph\r\tinstanceVariableNames: 'target offsetFromTarget balloonOwner balloonColor'\r\tclassVariableNames: 'BalloonColor'\r\tpackage: 'Morphic-Base-Widgets'",			"comment" : [				"A balloon with text used for the display of explanatory information.",				"",				"Balloon help is integrated into Morphic as follows:",				"If a Morph has the property #balloonText, then it will respond to #showBalloon by adding a text balloon to the world, and to #deleteBalloon by removing the balloon.",				"",				"Moreover, if mouseOverEnabled is true (see class msg), then the Hand will arrange to cause display of the balloon after the mouse has lingered over the morph for a while, and removal of the balloon when the mouse leaves the bounds of that morph.  In any case, the Hand will attempt to remove any such balloons before handling mouseDown events, or displaying other balloons.",				"",				"Balloons should not be duplicated with veryDeepCopy unless their target is also duplicated at the same time."			],			"category" : "Morphic-Base-Widgets"		},		"MCFileRepositoryInspector" : {			"hash" : 3213056,			"definition" : "MCVersionInspector subclass: #MCFileRepositoryInspector\r\tinstanceVariableNames: 'repository versions loaded loadedPackages newer packageList selectedPackage selectedVersion order versionInfo packagePattern versionPattern packageListUpdateProcess versionProcess selectedPackageAncestors'\r\tclassVariableNames: 'Order'\r\tpackage: 'MonticelloGUI-Tools'",			"comment" : [				"I'm a monticello tool composed of three panes to browse repositories and the packages they contain. You get an instance of me when you click on a repository in Monticello browser and press open. ",				"",				"My left pane presents the packages, my right one their versions and the bottom one the commit log of the selected package versions.",				"",				"I underline the packages you already loaded, and highlight the ones you don't have updated to the last version. I also highlight the versions you did not load yet.",				"",				"Example: I can browse packages of PharoInbox with:",				"(MCFileRepositoryInspector ",				"\trepository: (MCHttpRepository",				"\t\t\t\t\tlocation: 'http://www.squeaksource.com/PharoInbox'",				"\t\t\t\t\tuser: ''",				"\t\t\t\t\tpassword: '')",				"\tworkingCopy: nil) show.",				"\t",				"COTDC - S.Ducasse, G.Polito, L.Laffont"			],			"category" : "MonticelloGUI-Tools"		},		"UndefinedSortFunction" : {			"hash" : 4456960,			"definition" : "ComposedSortFunction subclass: #UndefinedSortFunction\r\tinstanceVariableNames: 'direction'\r\tclassVariableNames: ''\r\tpackage: 'SortFunctions-Core'",			"comment" : [				"An  UndefinedSortFunction is a specialization useful for sorting undefined objects (nil), either first or last according to direction.",				"The non nil objects are sorted according to the baseSortFunction defined in superclass.",				"",				"instance variables:",				"\tdirection\t<Integer>\t-1 for sorting nil first, 1 for sorting nil last"			],			"category" : "SortFunctions-Core"		},		"PluggableButtonMorphExample" : {			"hash" : 687872,			"definition" : "Model subclass: #PluggableButtonMorphExample\r\tinstanceVariableNames: 'label state icon'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Examples-Widgets'",			"comment" : [				"I keep some examples on how to use a PluggableButtonMorph"			],			"category" : "Morphic-Examples-Widgets"		},		"SpLabelPresenter" : {			"hash" : 2218240,			"definition" : "SpAbstractWidgetPresenter << #SpLabelPresenter\r\tslots: { #label => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A label presenter displays smalls (or medium) amounts of text.",				"",				"_NOTE: In the future, it should be possible to attach another widget to a label, but for now it is not implemented._"			],			"category" : "Spec2-Core-Widgets"		},		"BasicCommandLineHandler class" : {			"hash" : 864768,			"definition" : "BasicCommandLineHandler class\r\tinstanceVariableNames: ''",			"comment" : [				"I'm a command line handler who is not aware of any UI or Tools present in the system.",				"I'm used as base handler for loading executing stripped images (kernel images, for example). ",				"",				"My usage is the same as PharoCommandLineHandler, see his comment as better explanation.",				"",				"I also implement a way to password-protect command lines. ",				"",				"The password will not be saved as in clear. It will be hash using pepper and iterations.",				"",				"The pepper of a hash is a fix string happened to a password to increase the difficulty of finding the password. Also, we hash multiple times (iterations) to increase the strength of the protection.",				"",				"If you wish to define \"application\" command lines who do not need a password protection, implement the method #requirePasswordInDeployment on the class side to return false.",				"",				"Examples of password protection",				"----------------",				"",				"\"Enable password protection\"",				"CommandLinePasswordManager protectCommandLinesByPasswordWith: 'PharoPassword'",				"",				"\"You can also customize the pepper and number of iterations for the hashing of the password.\"",				"CommandLinePasswordManager protectCommandLinesByPasswordWith: 'PharoPassword' pepper: 'SomePepper' numberOfHashIterations: 10",				"",				"\"Remove password protection\"",				"CommandLinePasswordManager removePasswordProtection",				"",				"How to specify the password",				"----------------",				"",				"Command line without password:",				"\tPharo.exe Pharo.image eval \"1+1\"",				"",				"Command line with password:",				"\tPharo.exe Pharo.image eval \"1+1\" --deploymentPassword=Test"			],			"category" : "System-BasicCommandLineHandler-Base"		},		"KMCatcherMorph" : {			"hash" : 2998272,			"definition" : "BorderedMorph subclass: #KMCatcherMorph\r\tinstanceVariableNames: 'focused keystrokes keymapSetting labelMorph initialShortcut edited'\r\tclassVariableNames: ''\r\tpackage: 'Keymapping-Settings'",			"comment" : [				"I am a morph that captures keymappings, so they can be used for configuration/customization, or debugging."			],			"category" : "Keymapping-Settings"		},		"ClyUnknownScope" : {			"hash" : 4860928,			"definition" : "ClyScope subclass: #ClyUnknownScope\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Calypso-NavigationModel-Model'",			"comment" : [				"I am kind of null object for environment scope.",				"",				"I am default scope of any query. I provide #instance singleton for this.",				"",				"Also I prevent real execution of query by returning ClyUnknownResult instance from #query method. ",				"So environment is not requested to evaluate given query when query is bound to me."			],			"category" : "Calypso-NavigationModel-Model"		},		"ObservablePoint" : {			"hash" : 3478272,			"definition" : "Object << #ObservablePoint\r\ttraits: {TObservable};\r\tslots: {\r\t\t\t #x => ObservableSlot .\r\t\t\t #y };\r\ttag: 'Observable';\r\tpackage: 'VariablesLibrary-Tests'",			"comment" : [				"I am a mock point used to test observable properties. I have an observable property x and a non-observable property y.",				"",				"I use TObservable that has methods to ease the usage of my observable properties."			],			"category" : "VariablesLibrary-Tests-Observable"		},		"RSBoxPlot" : {			"hash" : 5811456,			"definition" : "RSAbstractPlot subclass: #RSBoxPlot\r\tinstanceVariableNames: 'barSize bars gapRatio barOffset boxAndWhisker'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Core'",			"comment" : [				"I am a box and whisker plot used for comparing the distributions of datasets.",				"",				"I require a 2D collection where the first dimension are the individual box-and-whisker and the inner ",				"collection are the data points. ",				"",				"```",				"| c p y |",				"",				"\"With PolyMath loaded SortedCollection responds to the quantile: message\"",				"y := { { 1. 2. 3. 4. 5. } . ",				"\t\t\t { 5. 6. 7. 5. 10. }  .",				"\t\t\t { 12. 12. 13. 14. 15. 24. }  }. ",				"c := RSChart new.",				"p := RSBoxPlot new y: y.",				"\t",				"c addPlot: p.",				"\t",				"c addDecoration: (RSHorizontalTick new ",				"\t\tnumberOfTicks: y size).",				"c xlabel: 'X Axis'.",				"c addDecoration: (RSVerticalTick new ",				"\t\tnumberOfTicks: 10;",				"\t\tasFloat).",				"c ylabel: 'Y Axis'.",				"c title: 'Box Plot'.",				"c openOnce.",				"```"			],			"category" : "Roassal3-Chart-Core"		},		"RSSunburstFadeInteraction" : {			"hash" : 5786368,			"definition" : "RSHighlightable subclass: #RSSunburstFadeInteraction\r\tinstanceVariableNames: 'still builder'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Sunburst'",			"comment" : [				"I define a new basic highlight interaction"			],			"category" : "Roassal3-Sunburst"		},		"SpecTableLayoutAdd" : {			"hash" : 968704,			"definition" : "SpecTableLayoutSend subclass: #SpecTableLayoutAdd\r\tinstanceVariableNames: 'subwidget'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Layout-Actions'",			"comment" : [				"A SpecTableLayoutAdd represents the action to add a subwidget into a spec table layout"			],			"category" : "Spec-Layout-Actions"		},		"StDebuggerObjectForTests" : {			"hash" : 5551616,			"definition" : "Object subclass: #StDebuggerObjectForTests\r\tinstanceVariableNames: 'instVar'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Debugger-Tests-Utils'",			"comment" : [				"I am a dummy object to test StDebuggerContext inspector nodes building."			],			"category" : "NewTools-Debugger-Tests-Utils"		},		"ReAssignmentWithoutEffectRule" : {			"hash" : 3943936,			"definition" : "ReNodeMatchRule subclass: #ReAssignmentWithoutEffectRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"This smell arises when a statement such as x := x is found. This statement has not effect, it can be removed."			],			"category" : "GeneralRules-Migrated"		},		"CairoBackendCache" : {			"hash" : 3086592,			"definition" : "Object subclass: #CairoBackendCache\r\tinstanceVariableNames: 'cache'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'AthensCairoDefinitions'\r\tpackage: 'Athens-Cairo-Caching'",			"comment" : [				"I providing a simple [weak]key->value storage used to cache various objects used by Athens for Cairo backend, like fonts/forms etc.",				"",				"The cache is global (there's only a single instance of me used at a time) and",				"cache is visible globally by all entities of Cairo backend.",				"",				"The cached objects is held weakly.",				"The cache is flushed for a new image session."			],			"category" : "Athens-Cairo-Caching"		},		"RoundedBorderStyle" : {			"hash" : 659200,			"definition" : "SimpleBorderStyle subclass: #RoundedBorderStyle\r\tinstanceVariableNames: 'cornerRadius'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Borders'",			"comment" : [				"Rounded corner border supporting radii of 1-4 pixels. Slower but more flexible than CornerRounder."			],			"category" : "Morphic-Base-Borders"		},		"OCScopesCollector" : {			"hash" : 3748352,			"definition" : "RBProgramNodeVisitor subclass: #OCScopesCollector\r\tinstanceVariableNames: 'scopes'\r\tclassVariableNames: ''\r\tpackage: 'OpalCompiler-Tests-AST'",			"comment" : [				"I am a helper class to simplify tests related to scopes. I collect all scopes of the AST.",				"This way one can easily check for scopes and variables even when the scopes are deeply nested.",				"Simple example (with just a method scope):",				"",				"|ast scopes ivar|",				"ast := (OCOpalExamples>>#exampleiVar) ",				"\t\tparseTree doSemanticAnalysisIn: OCOpalExamples.",				"scopes := (OCScopesCollector new visitNode: ast) scopes.",				"ivar := scopes first lookupVar: #iVar"			],			"category" : "OpalCompiler-Tests-AST"		},		"TabPresenter" : {			"hash" : 904192,			"definition" : "AbstractWidgetPresenter subclass: #TabPresenter\r\tinstanceVariableNames: 'tabSelectedActionHolder labelHolder iconHolder morphHolder retrievingBlockHolder menuHolder actionsHolder closeableHolder selectedHolder'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"I am a spec presenter representing a single tab.",				"",				"I should not be used without being contained into a TabManagerPresenter.",				"",				"You can also have a look at TabsExample for another example.",				"",				"!! #retrievingBlock: warning",				"",				"If you specify #retrievingBlock: directly, you should also set the ownership of the appropriate. (See TabPresenter>>#model:)"			],			"category" : "Spec-Core-Widgets"		},		"SUnitTestsCounter" : {			"hash" : 368384,			"definition" : "SUnitVisitor subclass: #SUnitTestsCounter\r\tinstanceVariableNames: 'count'\r\tclassVariableNames: ''\r\tpackage: 'SUnit-Visitor'",			"comment" : [				"A visitor which count tests in the visitable object provided."			],			"category" : "SUnit-Visitor"		},		"AthensTextScanner" : {			"hash" : 1569280,			"definition" : "Object subclass: #AthensTextScanner\r\tinstanceVariableNames: 'text currentLine lines currentAttributes currentFont currentColor textStyle currentStrip currentBackground'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Text'",			"comment" : [				"I responsible for scanning the Text and transforming it into a list of AthensTextLine, where each line is a list of AthensTextDisplayCommand (sub)instances"			],			"category" : "Athens-Text"		},		"TabAction" : {			"hash" : 1886464,			"definition" : "Object subclass: #TabAction\r\tinstanceVariableNames: 'action icon label'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Tabs-Base'",			"comment" : [				"I am a data object representing an action associated to a tab.",				"",				"I contains",				"\t- an action to be performed when clicked",				"\t- an icon to be rendered",				"\t- a label to add indication about what I am supposed to do"			],			"category" : "Morphic-Widgets-Tabs-Base"		},		"ReNotEliminationRule" : {			"hash" : 3938816,			"definition" : "ReNodeRewriteRule subclass: #ReNotEliminationRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Eliminate unnecessary not''s in relation of conditionals.",				"For example test not ifTrue:[] is equivalent to test ifFalse:[]' ",				"",				"[[[",				"anObject not ifFalse: block'",				"]]]",				"",				"is transformed into",				"",				"[[[  ",				"anObject ifTrue: block'",				"]]]",				"",				"[[[",				"aCollection select: [ :each | ... anObject not ] ",				"]]]",				"\t",				"is transformed into \t",				"",				"[[[",				"aCollection reject: [ :each | ... anObject ] ",				"]]]"			],			"category" : "GeneralRules-Migrated"		},		"TKTWorker" : {			"hash" : 417536,			"definition" : "TKTQueueTaskScheduler subclass: #TKTWorker\r\tuses: TFinalizable\r\tinstanceVariableNames: 'process name exceptionHandler priority'\r\tclassVariableNames: ''\r\tpackage: 'TaskIt-Worker'",			"comment" : [				"! TKTWorker",				"",				"The worker runner, instance of TKTWorker, is a task runner that uses a single process to execute tasks from a queue. The worker's single process removes one-by-one the tasks from the queue and executes them sequenceally. Then, schedulling a task into a worker means to add the task inside the queue.",				"",				"A worker manages the life-cycle of its process and provides the messages start and stop to control when the worker thread will begin and end.",				"",				"[[[language=smalltalk",				"worker := TKTWorker new.",				"worker start.",				"worker schedule: [ 1 + 5 ].",				"worker stop.",				"]]]",				"",				"By using workers, we can control the amount of alive processes and how tasks are distributed amongst them. For example, in the following example three tasks are executed sequenceally in a single separate process while still allowing us to use an asynchronous style of programming.",				"",				"[[[language=smalltalk",				"worker := TKTWorker new start.",				"future1 := worker future: [ 2 + 2 ].",				"future2 := worker future: [ 3 + 3 ].",				"future3 := worker future: [ 1 + 1 ].",				"]]]",				"",				"Workers can be combined into worker pools."			],			"category" : "TaskIt-Worker"		},		"ZnMultiPartFormDataEntity" : {			"hash" : 1412864,			"definition" : "ZnEntity subclass: #ZnMultiPartFormDataEntity\r\tinstanceVariableNames: 'parts representation'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Core'",			"comment" : [				"I am ZnMultiPartFormDataEntity, a concrete HTTP Entity ",				"holding multi part form data that is encoded according to specific rules.",				"I am a ZnEntity.",				"",				"Acknowledgement: some code borrowed from AJP.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Core"		},		"ClyBrowserToolbarItemMorph" : {			"hash" : 5089536,			"definition" : "Morph subclass: #ClyBrowserToolbarItemMorph\r\tinstanceVariableNames: 'activator'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-Toolbar'",			"comment" : [				"My subclasses are different kind of UI elements which represent particular command in the browser toolbar. ",				"Instances should be created with command activator: ",				"",				"\tClyBrowserButton activatingBy: aCommandActivator  ",				"",				"When browser buids the toolbar it collect all commands annotated with ClyToolbarCommandActivation and asks all of them to build toolbar item.",				"So command decides what UI element (my subclass) should be used to represent it in the toolbar. ",				"  ",				"Subclasses should implement method #build which should create actual widged which will perform the command using #executeCommand method.",				"Also I provide the #title method which is based on menu item name of the command.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tactivator:\t\t<CmdCommandActivator>"			],			"category" : "Calypso-Browser-Toolbar"		},		"ColorChooserMorph" : {			"hash" : 1919744,			"definition" : "ColorPresenterMorph subclass: #ColorChooserMorph\r\tuses: TEnableOnHaloMenu\r\tinstanceVariableNames: 'setColorSelector enabled getEnabledSelector'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-ColorPicker'",			"comment" : [				"ColorPresenter that opens a colour selector when clicked."			],			"category" : "Morphic-Widgets-ColorPicker"		},		"ClyInheritanceAnalysisEnvironmentPlugin" : {			"hash" : 5025536,			"definition" : "ClySystemEnvironmentPlugin subclass: #ClyInheritanceAnalysisEnvironmentPlugin\r\tinstanceVariableNames: 'cacheGuard allImplementorsCache littleHierarchyMaxSize'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemPlugins-InheritanceAnalysis-Queries'",			"comment" : [				"I plug environment with many kind of inheritance hints.",				"",				"I tag abstract classes and method.",				"I analyze method inheritance and tag method with overriden and overriding tags.",				"",				"To check if method is overriding superclass methods use following expression: ",				"",				"\tplugin isMethodOverriding: aMethod.",				"",				"For implementation I simply call \"aMethod isOverriding\" which checks if any superclass implements same selector. It is quite fast operation due to the fact that the size of most of the hierarchies are not much than 10.",				"",				"To check if method is overridden by some of subclasses methods use following expression: ",				"",				"\tplugin isMethodOverridden: aMethod.",				"",				"The \"aMethod isOverridden\" can be very expensive. It enumerates all subclasses of the method class. And there are classes with really huge hierarchies like Object or Morph. ",				"To optimize overridden state analysis I build the cache of all method implementors in the image (#allImplementorsCache). It makes the analysis for big hierarchies very fast. But for small hierachies the #isOverridden operation is faster. I use the cache only when the class of the method has more than 10 subclasses in the hierarchy. Testing approves that it is a good criteria. But you can specify different value using #littleHierarchyMaxSize variable.",				"",				"In addition #allImplementorsCache is built lazely only when I need to analyze big hierarchy. It avoids the effect of slow analysis in general browser experience. Users rarely open the browser on huge hierarcies. And only in such scenarious they can notice the little initial delay when browser is opening. (Testing shows just 200 ms to build the cache for vanila Pharo image on macair machine).",				"",				"I am subscribed on system changes and invalidate #allImplementorsCache when related classes or methods are changed (look at #attachToSystem method for details).",				"",				"In addition I provide following method groups:",				"\t- abstract methods",				"\t- override methods",				"\t- overridden methods ",				"\t- should be implemented methods"			],			"category" : "Calypso-SystemPlugins-InheritanceAnalysis-Queries"		},		"ExceptionSet" : {			"hash" : 954880,			"definition" : "Object subclass: #ExceptionSet\r\tinstanceVariableNames: 'exceptions'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Exceptions'",			"comment" : [				"An ExceptionSet is a grouping of exception handlers which acts as a single handler.  Within the group, the most recently added handler will be the last handler found during a handler search (in the case where more than one handler in the group is capable of handling a given exception). "			],			"category" : "Kernel-Exceptions"		},		"UUID" : {			"hash" : 1158912,			"definition" : "ByteArray variableByteSubclass: #UUID\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Network-UUID-Base'",			"comment" : [				"I am UUID.",				"I am a ByteArray.",				"",				"An RFC4122 Universally Unique Identifier (UUID) is an opaque 128-bit number that can be used for identification purposes. Concretely, a UUID is a 16 element byte array.",				"",				"The intent of UUIDs is to enable distributed systems to uniquely identify information without significant central coordination. In this context the word unique should be taken to mean \"practically unique\" rather than \"guaranteed unique\".",				"",				"Usage:",				"",				"\tUUID new.",				"\t",				"Whenever you create a new UUID, the shared, default UUIDGenerator will be used to generate a new, unique UUID.",				"",				"See UUIDGenerator for extensive documentation on how UUIDs are actually generated.",				"",				"UUIDs have a standard string representation, like this:",				"",				"\t3ccb64f1-aa04-0d00-bbbc-259a0f871399",				"\t",				"The representation consists of 32 lowercase hexadecimal digits, displayed in five groups separated by hyphens, in the form 8-4-4-4-12 for a total of 36 characters (32 alphanumeric characters and four hyphens).",				"",				"My #printOn: #printString and #asString methods produce this representation.  My class' #fromString: or instance #readFrom: parse it.",				"",				"Alternatively, my base 36 number representation is  the shortest representation still being able to work as filenames etc since it does not depend on case nor characters that might cause problems, and it is reasonably short.",				"",				"See #asString36 and my class' #fromString36:",				"",				"UUIDs are basically opaque (contain no interesting content) and should be treated as indivisable values. Do not use parts of them, since these will most probably no longer be unique.",				"",				"See also:",				"",				"  http://en.wikipedia.org/wiki/UUID",				"  https://tools.ietf.org/html/rfc4122"			],			"category" : "Network-UUID-Base"		},		"RadioButtonGroup" : {			"hash" : 940544,			"definition" : "Object subclass: #RadioButtonGroup\r\tinstanceVariableNames: 'buttons currentlyActivated canDeselectByClick'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets-Support'",			"comment" : [				"I am a group for radio buttons which ensures that only one button is activated at the same time.",				"",				"I collaborate with",				"- RadioButtonPresenter are usually the buttons I manage.",				"- ValueHolder to link buttons.",				"",				"I provide the following methods",				"- addRadioButton: to add the button in my collection and link it at the other.",				"- buttons getter of my collection.",				"- default: activate a button when it is built.",				"",				"todo",				"- canDeselectByClick"			],			"category" : "Spec-Core-Widgets-Support"		},		"ShortIntegerArray class" : {			"hash" : 1624320,			"definition" : "ShortIntegerArray class\r\tinstanceVariableNames: ''",			"comment" : [				"ShortIntegerArray is an array for efficiently representing integers in the 16bit range."			],			"category" : "FormCanvas-Core-BalloonEngine"		},		"OSSDL2AthensRenderer" : {			"hash" : 4067328,			"definition" : "OSWindowAthensRenderer subclass: #OSSDL2AthensRenderer\r\tinstanceVariableNames: 'texture renderer textureExtent mutex'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'SDL2Constants'\r\tpackage: 'OSWindow-SDL2-Rendering'",			"comment" : [				"I am an Athens renderer which uses SDL2."			],			"category" : "OSWindow-SDL2-Rendering"		},		"RSLabeled" : {			"hash" : 5733376,			"definition" : "RSInteraction subclass: #RSLabeled\r\tinstanceVariableNames: 'location isHighlightable lowColor target modelBlock shapeBuilder'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Core'",			"comment" : [				"<keyClass>",				"`RSLabeled` adds a label on shape. Per default, it is added on top of the shape. The label may be particularized using #text: in the default string representation is not sufficient. ",				"",				"*Responsibility*: locate a label on top of a shape.",				"",				"*Collaborators*: can be added to any Roassal shape",				"",				"*Variables*:",				"- `location`: a `RSLocation` indicating where the label should be located",				"- `isHighlightable`: a boolean indicating whether the label should be highlighted",				"- `lowColor`: a boolean indicating whether the label should be highlighted",				"",				"*Example*:",				"```Smalltalk",				"c := RSCanvas new.",				"",				"shapes := RSGroup new.",				"1 to: 3 do: [ :v |",				"\tshapes add: (RSBox new model: v) ].",				"",				"shapes @ (RSLabeled new text: [ :m | 'Value = ', m asString ]).",				"",				"RSNormalizer size",				"\tshapes: shapes;",				"\tfrom: 20; to: 40;",				"\tnormalize: [ :aModel | aModel ].",				"",				"c addAll: shapes.",				"RSVerticalLineLayout new gapSize: 30; on: shapes.",				"c @ RSCanvasController",				"```",				"",				"Another example:",				"```Smalltalk",				"c := RSCanvas new.",				"shapes := (1 to: 10) collect: [ :v | RSBox new model: v; size: 30 ] as: RSGroup.",				"c addAll: shapes.",				"shapes @ RSLabeled new highlightable.",				"RSNormalizer size shapes: shapes; normalize: #yourself.",				"RSGridLayout on: shapes.",				"c @ RSCanvasController.",				"c ",				"```"			],			"category" : "Roassal3-Interaction-Core"		},		"MemoryFileSystemFile" : {			"hash" : 1436928,			"definition" : "MemoryFileSystemEntry subclass: #MemoryFileSystemFile\r\tinstanceVariableNames: 'bytes size closed'\r\tclassVariableNames: ''\r\tpackage: 'FileSystem-Memory-Base'",			"comment" : [				"I represent a memory file system entry for a regular file"			],			"category" : "FileSystem-Memory-Base"		},		"MCServerRegistry" : {			"hash" : 1375488,			"definition" : "Object subclass: #MCServerRegistry\r\tinstanceVariableNames: 'registry'\r\tclassVariableNames: ''\r\tpackage: 'MonticelloRemoteRepositories'",			"comment" : [				"Registry for metacello servers"			],			"category" : "MonticelloRemoteRepositories"		},		"MetacelloPharoPlatform class" : {			"hash" : 343040,			"definition" : "MetacelloPharoPlatform class\r\tinstanceVariableNames: ''",			"comment" : [				"Class used to abstract specific code for the Pharo platform."			],			"category" : "Metacello-Platform"		},		"RSMockShape" : {			"hash" : 5741312,			"definition" : "RSObject subclass: #RSMockShape\r\tinstanceVariableNames: 'position weight oldPosition isFixed fixPosition charge realShape'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Util'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Layouts-Util"		},		"RGPackage" : {			"hash" : 5265920,			"definition" : "RGObject subclass: #RGPackage\r\tinstanceVariableNames: 'definedBehaviors extensionMethods tagsForClasses'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"RGPackage is the representation for packages.",				"A package manages classes, methods and children packages as elements.",				"A package can also know in which package is defined"			],			"category" : "Ring-Core-Kernel"		},		"FFITestStructure class" : {			"hash" : 1581312,			"definition" : "FFITestStructure class\r\tinstanceVariableNames: ''",			"comment" : [				"A structure for test purposes"			],			"category" : "UnifiedFFI-Tests-Test-Data"		},		"ZdcByteArrayManager" : {			"hash" : 1430784,			"definition" : "Object subclass: #ZdcByteArrayManager\r\tinstanceVariableNames: 'limit resources access'\r\tclassVariableNames: 'Current'\r\tpackage: 'Zodiac-Core'",			"comment" : [				"I manage the allocation and recycling of ByteArrays. ",				"",				"For each size, I maintain up to limit instances, configurable using #limit:",				"",				"I never preallocate.",				"",				"I am threadsafe.",				"",				"My public API consists of just 2 messages: #byteArrayOfSize:zero: and #recyle:",				"",				"There is one global current instance for me, but I can be used as needed.",				"",				"\tZdcByteArrayManager current limit: 4.",				"\t",				"\tZdcByteArrayManager current limit: 0."			],			"category" : "Zodiac-Core"		},		"NonInteractiveTranscript" : {			"hash" : 920320,			"definition" : "Object subclass: #NonInteractiveTranscript\r\tinstanceVariableNames: 'stream fileName accessSemaphore'\r\tclassVariableNames: ''\r\tpackage: 'Transcript-NonInteractive-Base'",			"comment" : [				"I am NonInteractiveTranscript, a replacement for Transcript, writing everything to a file or stdout. I implement TTranscript.",				"",				"This is useful when running headless.",				"",				"\tNonInteractiveTranscript file install.",				"\t",				"To connect to the output stream of the virtual machine process choose stdout.",				"",				"\tNonInteractiveTranscript stdout install.",				"",				"or ",				"",				"\tNonInteractiveTranscript stderr install"			],			"category" : "Transcript-NonInteractive-Base"		},		"StPharoDefaultIconProvider" : {			"hash" : 5383680,			"definition" : "SpPharoThemeIconProvider subclass: #StPharoDefaultIconProvider\r\tinstanceVariableNames: 'synonyms'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Core-Application'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tsynonyms:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "NewTools-Core-Application"		},		"ClyClassGroup" : {			"hash" : 4931584,			"definition" : "ClyItemGroup subclass: #ClyClassGroup\r\tinstanceVariableNames: 'classQuery subgroupsQuery'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemQueries-Domain'",			"comment" : [				"I am a root of hierarchy of class groups.",				"",				"Any class group is created on class query:",				"",				"\tClyClassGroup named: 'some group' on: aClassQuery",				"",				"Class query can be also composite but it should return classes.",				"",				"Also I can be expanded to subgroups using subgroupsQuery. You can specify it in another instance creation method: ",				"",				"\tClyClassGroup named: 'some group' on: aClassQuery withSubgroupsFrom: aQuery\t",				"",				"And there are additional constructors to specify priority of group:",				"",				"\tClyClassGroup named: 'some group' priority: 20 on: aClassQuery.",				"\tClyClassGroup named: 'some group' priority: 20 on: aClassQuery withSubgroupsFrom: aQuery",				"",				"All groups are sorted by priority and name in the browser. Larger priority value put group to the top of list.",				"",				"I provide several methods to implement various commands: ",				"",				"- importClass: aClass",				"It supposed to modify given aClass in the way that it will become the part of group.",				"",				"- importClasses: classes ",				"It imports multiple classes",				"\t\t ",				"- removeWithClasses",				"It removes all classes and should ensure that groups will be removed too which is true for all virtual groups.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tclassQuery:\t\t<ClyClassQuery>",				"\tsubgroupsQuery:\t\t<ClyQuery>"			],			"category" : "Calypso-SystemQueries-Domain"		},		"RSNiceStepSizeGenerator" : {			"hash" : 5803776,			"definition" : "RSObject subclass: #RSNiceStepSizeGenerator\r\tinstanceVariableNames: 'qvar i io j q ss ovar ssOffMap resetRequired base niceStep o'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Chart-Labeling'",			"comment" : [				"Nice numbers are just step sizes and used for tick spacing. We will use only niceStep tick",				" spaces and place tick marks at multiples of tick spacing.",				"  ",				"  References:",				"  \t[1] An Extension of Wilkinson's Algorithm for positioning Tick Labels on Axes",				"  \t\t \t\t\t\t(Justin Talbot, Sharon Lin, Pat Hanrahan)",				"   [2] Nice Numbers for Graph Labels (Paul S. Heckbert, Graphic Gems I)",				"",				"Here is an example on how to use it:",				"-=-=-=-=-=-=-=-=-=",				"nice := RSNiceStepSizeGenerator new.",				"lg := RSLabelGenerator nice: nice.",				"",				"lg setLooseFlag: true.",				"label := lg searchMin: -98.0 max: 18.0 desired: 3.",				"label asString",				"-=-=-=-=-=-=-=-=-=",				"This prints  '(Score: 0.14) -100.00\t-60.00\t-20.00\t20.00\t'"			],			"category" : "Roassal3-Chart-Labeling"		},		"JPEGReadWriter class" : {			"hash" : 769024,			"definition" : "JPEGReadWriter class\r\tinstanceVariableNames: ''",			"comment" : [				"I am JPEGReadWriter.",				"I am a concrete subclass of ImageReadWriter.",				"",				"I implement the JPEG image format.",				"",				"  https://en.wikipedia.org/wiki/JPEG",				"",				"NOTE: I only implement reading, not writing, see PluginBasedJPEGReadWriter for that.",				"",				"I am a subclass of ImageReadWriter that understands JFIF file streams, and can decode JPEG images.",				"This code is based upon the Independent Joint Photographic Experts Group (IJPEG) software, originally written in C by Tom Lane, Philip Gladstone, Luis Ortiz, Jim Boucher, Lee Crocker, Julian Minguillon, George Phillips, Davide Rossi, Ge' Weijers, and other members of the Independent JPEG Group.",				""			],			"category" : "Graphics-Files"		},		"GeneralScrollPaneMorph" : {			"hash" : 576256,			"definition" : "Morph subclass: #GeneralScrollPaneMorph\r\tinstanceVariableNames: 'scroller hScrollbar vScrollbar'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Scrolling'",			"comment" : [				"A scroll pane that handles its contents accurately."			],			"category" : "Morphic-Widgets-Scrolling"		},		"LayoutProperties" : {			"hash" : 1840896,			"definition" : "Object subclass: #LayoutProperties\r\tinstanceVariableNames: 'hResizing vResizing disableLayout'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Layouts'",			"comment" : [				"This class provides a compact bit encoding for the most commonly used layout properties."			],			"category" : "Morphic-Base-Layouts"		},		"RBParser" : {			"hash" : 1144320,			"definition" : "Object subclass: #RBParser\r\tinstanceVariableNames: 'scanner currentToken nextToken errorBlock source comments pragmas'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Parser'",			"comment" : [				"RBParser takes a source code string and generates an AST for it. This is a hand-written, recursive descent parser and has been optimized for speed. The simplest way to call this is either 'RBParser parseExpression: aString' if you want the AST for an expression, or 'RBParser parseMethod: aString' if you want to parse an entire method.",				"",				"Instance Variables:",				"\tcurrentToken\t<RBToken>\tThe current token being processed.",				"\temptyStatements\t<Boolean>\tTrue if empty statements are allowed. In IBM, they are, in VW they aren't.",				"\terrorBlock\t<BlockClosure>\tThe block to evaluate on a syntax error.",				"\tnextToken\t<RBToken>\tThe next token that will be processed. This allows one-token lookahead.",				"\tscanner\t<RBScanner>\tThe scanner that generates a stream of tokens to parse.",				"\tsource\t<String>\tThe source code to parse",				"\ttags\t<Collection of: Interval>\tThe source intervals of the tags appearing at the top of a method (e.g. Primitive calls)",				"",				"Shared Variables:",				"\tParserType\t<Symbol>\tthe type code we are parsing"			],			"category" : "AST-Core-Parser"		},		"DiffReplyVisitor" : {			"hash" : 5361920,			"definition" : "DiffVisitor subclass: #DiffReplyVisitor\r\tinstanceVariableNames: 'stream'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Code-Diff'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tstream:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Code-Diff"		},		"STONTestUser" : {			"hash" : 4382976,			"definition" : "Object subclass: #STONTestUser\r\tinstanceVariableNames: 'username password enabled'\r\tclassVariableNames: ''\r\tpackage: 'STON-Tests-Support'",			"comment" : [				"STONTestUser is used to support unit tests.",				"",				"Instance Variables",				"\tenabled:\t\t<Boolean>",				"\tpassword:\t<String>",				"\tusername:\t<String>"			],			"category" : "STON-Tests-Support"		},		"RadioButtonModelExample" : {			"hash" : 691968,			"definition" : "Model subclass: #RadioButtonModelExample\r\tinstanceVariableNames: 'option'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Examples-Widgets'",			"comment" : [				"Model used for radio buttons in example of basic controls (see \"UITheme exampleBasicControls\")."			],			"category" : "Morphic-Examples-Widgets"		},		"ExternalDropHandler class" : {			"hash" : 1651200,			"definition" : "ExternalDropHandler class\r\tinstanceVariableNames: ''",			"comment" : [				"Handle a number of dropped files from the OS"			],			"category" : "Morphic-Core-Worlds"		},		"StHaltCache" : {			"hash" : 5559808,			"definition" : "Object << #StHaltCache\r\ttraits: {TObservable};\r\tslots: {\r\t\t\t #isActive => ObservableSlot .\r\t\t\t #methodsWithHalts .\r\t\t\t #scanAllSystem };\r\tsharedVariables: { #DefaultCache };\r\ttag: 'Model';\r\tpackage: 'NewTools-Debugger-Breakpoints-Tools'",			"comment" : [				"I cache all message nodes that are halts in the system. ",				"There is already a breakpoint cache in the Breakpoint class.",				"",				"The cache is built when I am initialized,  then I register to the method changes system announcement to update the cache each time a method is added, modified or removed.",				"",				"I associate the selector of methods in which I found halts to a set holding the AST nodes of those halts.",				"",				"For now it is a simple cache that does not require as much functionality than AbstractCache provides, so it does not subclass it.",				"However, it might be interesting if I evolve later, or if I need safe concurrent access (which AbstractCache provides).",				"",				"By default, the cache does not lookup halts in all the system's methods. This can be enabled in a settings under tools>debugging>halt cache. The cache must be refreshed to effectively perform the lookup (StHaltCache refresh)."			],			"category" : "NewTools-Debugger-Breakpoints-Tools-Model"		},		"STONReader" : {			"hash" : 337664,			"definition" : "Object subclass: #STONReader\r\tinstanceVariableNames: 'readStream objects classes unresolvedReferences stringStream acceptUnknownClasses newLine convertNewLines'\r\tclassVariableNames: ''\r\tpackage: 'STON-Core-Reader'",			"comment" : [				"STONReader materializes objects using the Smalltalk Object Notation format.",				"",				"This parser is backwards compatible with standard JSON.",				"",				"Customization options are:",				"",				"- acceptUnknownClasses <Boolean> default is false",				"\tif true, unknown class names are allowed, the standard #mapClass (Dictionary) is instanciated and the class name is added under #classNameKey (#className)",				"\tif false, unknown class names result in a NotFound error",				"- convertNewLines <Boolean> default is false",				"\tif true, any unescaped EOL sequence CR, LF or CRLF inside strings or symbols is read and converted as the chosen EOL sequence",				"\tif false, CR, LF and CRLF are read unmodified",				"- newLine <String> default is String cr",				"\tsequence to use as EOL"			],			"category" : "STON-Core-Reader"		},		"MCDataStream class" : {			"hash" : 1355008,			"definition" : "MCDataStream class\r\tinstanceVariableNames: ''",			"comment" : [				"This is the save-to-disk facility. A DataStream can store one or more objects in a persistent form.",				"",				"To handle objects with sharing and cycles, you must use a",				"ReferenceStream instead of a DataStream.  (Or SmartRefStream.)  ReferenceStream is typically",				"faster and produces smaller files because it doesn't repeatedly write the same Symbols.",				"",				"Here is the way to use DataStream and ReferenceStream:",				"\trr := ReferenceStream fileNamed: 'test.obj'.",				"\trr nextPut: <your object>.",				"\trr close.",				"",				"To get it back:",				"\trr := ReferenceStream fileNamed: 'test.obj'.",				"\t<your object> := rr next.",				"\trr close.",				"",				"Each object to be stored has two opportunities to control what gets stored.  On the high level, objectToStoreOnDataStream allows you to substitute another object on the way out.  The low level hook is storeDataOn:. The read-in counterparts to these messages are comeFullyUpOnReload and (class) readDataFrom:size:. See these methods for more information about externalizing and internalizing.",				"",				"NOTE: A DataStream should be treated as a write-stream for writing.  It is a read-stream for reading.  It is not a ReadWriteStream."			],			"category" : "Monticello-Storing"		},		"TabExample" : {			"hash" : 695552,			"definition" : "Model subclass: #TabExample\r\tinstanceVariableNames: 'manager listModel window'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Examples-Tabs'",			"comment" : [				"I am an example of how to:",				"\t- instanciate tabs (#tabs)",				"\t- use a tab manager",				"\t",				"Nothing really complicated here.",				"",				"self open"			],			"category" : "Morphic-Examples-Tabs"		},		"RGPackageDefinition" : {			"hash" : 1334272,			"definition" : "RGContainer subclass: #RGPackageDefinition\r\tinstanceVariableNames: 'package'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Definitions-Containers-Base'",			"comment" : [				"RGPackage is the representation for packages.",				"A package manages classes, methods and children packages as elements.",				"A package can also know in which package is defined"			],			"category" : "Ring-Definitions-Containers-Base"		},		"GradientPaint" : {			"hash" : 3052288,			"definition" : "AthensAbstractPaint subclass: #GradientPaint\r\tinstanceVariableNames: 'colorRamp'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Core-Paints'",			"comment" : [				"I am paint which using color gradient for fills.",				"",				"The gradient is defined using color ramp in range between 0 and 1",				"where colors can be set at certain point. The color are interpolated between defined points.",				"",				"The color ramp is a collection of associations with keys - floating point values between 0 and 1",				"and values with Colors, for example:",				"",				"{  0 -> Color white. 1 -> Color black }.",				"",				"My subclasses used to define a concrete kind of gradient,",				"while me is an abstract class which has common properties for all gradients: color ramp.",				"",				"Also, note that my subclasses representing backend-neutral gradients,",				"encapsulating all necessary data, which is then passed to corresponding surface factory method, like",				"AthensSurface>>#createLinearGradient:start:stop: , which answers backend-specific gradient paint.",				"I am userful in cases when user wants to define a paint without need",				"to have any Athens surface at hand.",				"",				"Sure thing, using backend-specific gradients is preferable, if possible,",				"because conversion to backend-specific paint can be costly. ",				"Especially if gradient is statically defined (ramp values and other parameters never changing) ",				"and used many times during the life time of surface.",				""			],			"category" : "Athens-Core-Paints"		},		"ReDoNotSendSuperInitializeInClassSideRule" : {			"hash" : 3935232,			"definition" : "ReNodeRewriteRule subclass: #ReDoNotSendSuperInitializeInClassSideRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Don't send super initialize in class side because the class initialize methods of your superclass  may maintain state level shared state and it can be dangerous to automatically reinitialize it. ",				"",				"For example, ",				"",				"[[[  ",				"ZnServer class>>initialize",				"\tManagedServers := IdentitySet new.",				"\tAlwaysRestart := true.",				"\tSmalltalk addToStartUpList: self.",				"\tSmalltalk addToShutDownList: self",				"]]]"			],			"category" : "GeneralRules-Migrated"		},		"PasteUpMorph class" : {			"hash" : 1652736,			"definition" : "PasteUpMorph class\r\tinstanceVariableNames: ''",			"comment" : [				"A morph whose submorphs comprise a paste-up of rectangular subparts which \"show through\".  Anything called a 'Playfield' is a PasteUpMorph.",				"",				"Facilities commonly needed on pages of graphical presentations and on simulation playfields, such as the painting of new objects, turtle trails, gradient fills, background paintings, parts-bin behavior, collision-detection, etc., are (or will be) provided.",				"",				"",				"",				""			],			"category" : "Morphic-Core-Worlds"		},		"ClyCursorPositionLabelMorph" : {			"hash" : 5093120,			"definition" : "ClyTextMorphToolMorph subclass: #ClyCursorPositionLabelMorph\r\tinstanceVariableNames: 'labelMorph'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-TextEditors'",			"comment" : [				"I print position of cursor in the text editor.",				"Look at #printCursorPosition method for details.",				"  ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tlabelMorph:\t\t<StringMorph>"			],			"category" : "Calypso-Browser-TextEditors"		},		"HEExtendedInstaller" : {			"hash" : 1052928,			"definition" : "HEInstaller subclass: #HEExtendedInstaller\r\tinstanceVariableNames: 'failOnUndeclared duplicationMode'\r\tclassVariableNames: ''\r\tpackage: 'Hermes-Extensions-ClassInstaller'",			"comment" : [				"The HEInstaller is really basic. ",				"It is designed that way to keep simple the bootstraped image. ",				"A bigger or complex bootstraped image requires more bootstrap time.",				"",				"So, I am loaded later (with Hermes itself) and I extend the behavior in HEInstaller ",				"",				"I add: ",				" \t- \tHaving a duplication Strategy",				"\t-\tHaving a configuration to fail on new undeclared variables."			],			"category" : "Hermes-Extensions-ClassInstaller"		},		"SpPanedResizerMorph" : {			"hash" : 2579456,			"definition" : "AbstractResizerMorph subclass: #SpPanedResizerMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Layout'",			"comment" : [				"I'm a base splitter to be used with a SpecPanedLayout. ",				"Splitters can be placed vertically or horizontally and my children deal with each of the cases.",				"The way I work is easy: ",				"",				"- I need to be placed between two other morphs.",				"- I also need to act inside a morph with PanedLayout. ",				"",				"self exampleVertical.",				"self exampleHorizontal."			],			"category" : "Spec2-Adapters-Morphic-Layout"		},		"StrikeFont class" : {			"hash" : 646144,			"definition" : "StrikeFont class\r\tinstanceVariableNames: ''",			"comment" : [				"I represent a compact encoding of a set of Forms corresponding to characters in the ASCII character set. All the forms are placed side by side in a large form whose height is the font height, and whose width is the sum of all the character widths. The xTable variable gives the left-x coordinates of the subforms corresponding to the glyphs. Characters are mapped to glyphs by using the characterToGyphMap.",				"",				"Subclasses can have non-trivial mapping rules as well as different representations for glyphs sizes (e.g., not using an xTable). If so, these classes should return nil when queried for xTable and/or the characterToGlyphMap. This will cause the CharacterScanner primitive to fail and query the font for the width of a character (so that a more programatical approach can be implemented).",				"",				"For display, fonts need to implement two messages:",				"\t#installOn: aDisplayContext foregroundColor: foregroundColor backgroundColor: backgroundColor",				"This method installs the receiver (a font) on the given DisplayContext (which may be an instance of BitBlt or Canvas (or any of it's subclasses). The font should take the appropriate action to initialize the display context so that further display operations can be optimized.",				"\t#displayString: aString on: aDisplayContext from: startIndex to: stopIndex at: aPoint kern: kernDelta",				"This method is called for each subsequent run of characters in aString which is to be displayed with the (previously installed) settings."			],			"category" : "Graphics-Fonts"		},		"OSTouchFingerTracker" : {			"hash" : 4041728,			"definition" : "Object subclass: #OSTouchFingerTracker\r\tinstanceVariableNames: 'fingerId deviceId delta pressure timestamp move firstPosition lastPosition'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Gestures'",			"comment" : [				"I am recording all movements and informations from a finger"			],			"category" : "OSWindow-Core-Gestures"		},		"TFPooledExternalAsyncCall" : {			"hash" : 2030080,			"definition" : "TFExternalAsyncCall subclass: #TFPooledExternalAsyncCall\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'ThreadedFFI-Base'",			"comment" : [				"I am a callout who uses the external semaphore pool you can find in each runner.",				"Intead creating and registering a semaphore each time, I take one from the ones available in the pool.",				"I return the semaphore to the list as soon as I will not use it anymore."			],			"category" : "ThreadedFFI-Base"		},		"RBClassTransformation" : {			"hash" : 4466688,			"definition" : "RBTransformation subclass: #RBClassTransformation\r\tinstanceVariableNames: 'className class environment'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring2-Transformations-Model'",			"comment" : [				"I'm a transformation whose focus is class.  "			],			"category" : "Refactoring2-Transformations-Model"		},		"TKTService" : {			"hash" : 418048,			"definition" : "Object subclass: #TKTService\r\tinstanceVariableNames: 'worker stopRequested stopCallbacks stepDelay recursiveTask currentDelay'\r\tclassVariableNames: ''\r\tpackage: 'TaskIt-Services'",			"comment" : [				"A service is a process that executes a task over and over again. You can think about a web server, or a database server that needs to be up and running and listening to new connections all the time.",				"",				"Each TaskIt service may define a `setUp`, a `tearDown` and a `stepService`. `setUp` is run when a service is being started, `shutDown` is run when the service is being shutted down, and `stepService` is the main service action that will be executed repeateadly.",				"",				"Creating a new service is as easy as creating a subclass of `TKTService`. For example, let's create a service that watches the existence of a file. If the file does not exists it will log it to the transcript. It will also log when the service starts and stops to the transcript.",				"",				"```smalltalk",				"TKTService subclass: #TKTFileWatcher",				"  instanceVariableNames: 'file'",				"  classVariableNames: ''",				"  package: 'TaskItServices-Tests'",				"```",				"",				"Hooking on the service's `setUp` and `tearDown` is as easy as overriding such methods:",				"",				"```smalltalk",				"TKTFileWatcher >> setUp",				"  super setUp.",				"  Transcript show: 'File watcher started'.",				"",				"TKTFileWatcher >> tearDown",				"  super tearDown.",				"  Transcript show: 'File watcher finished'.",				"```",				"",				"Finally, setting the watcher action is as easy as overriding the `stepService` message.",				"",				"```smalltalk",				"TKTFileWatcher >> stepService",				"  1 second wait.",				"  file asFileReference exists",				"    ifFalse: [ Transcript show: 'file does not exist!' ]",				"```",				"",				"Making the service work requires yet an additional method: the service name. Each service should provide a unique name through the `name` method. TaskIt verifies that service names are unique and prevents the starting of two services with the same name.",				"",				"```smalltalk",				"TKTFileWatcher >> name",				"  ^ 'Watcher file: ', file asString",				"```",				"",				"Once your service is finished, starting it is as easy as sending it the `start` message.",				"",				"```smalltalk",				"watcher := TKTFileWatcher new.",				"watcher file: 'temp.txt'.",				"watcher start.",				"```",				"",				"Requesting the stop of a service is done by sending it the `stop` message. Know that sending the `stop` message will not stop the service right away. It will actually request it to stop, which will schedule the tear down of the service and kill its process after that. ",				"",				"```smalltalk",				"watcher stop.",				"```",				"",				"Stopping the process in an unsafe way is also supported by sending it the `kill` message. Killing a service will stop it right away, interrupting whatever task it was executing.",				"",				"```smalltalk",				"watcher kill.",				"```"			],			"category" : "TaskIt-Services"		},		"StInspector class" : {			"hash" : 5397760,			"definition" : "StInspector class\r\tinstanceVariableNames: 'preferredExtent'",			"comment" : [				"I am an inspector of objects. ",				"I offer multiple views using a miller list as a navigation. ",				"One particular feature is that you can use the evaluator tab to enter code, and evaluating it results in opening another pane to the right.",				"",				"The object finder asks dynamically the object for the actual presentations that are displayed in each pane.",				"",				"Example:",				"self openOn: Smalltalk.",				"",				"Register it as a replacement for inspector:",				"self registerToolsOn: Smalltalk tools."			],			"category" : "NewTools-Inspector-View"		},		"RubTextScrollPane" : {			"hash" : 577280,			"definition" : "GeneralScrollPaneMorph subclass: #RubTextScrollPane\r\tinstanceVariableNames: 'drawFocusBorder'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Widgets'",			"comment" : [				"I am a text morph with a scrollbar "			],			"category" : "Rubric-Editing-Widgets"		},		"ComposablePresenter" : {			"hash" : 876544,			"definition" : "Model subclass: #ComposablePresenter\r\tinstanceVariableNames: 'focusOrder owner window spec extentHolder needRebuild additionalKeyBindings keyStrokesForNextFocusHolder keyStrokesForPreviousFocusHolder windowIcon aboutText askOkToClose titleHolder'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Base'",			"comment" : [				"ComposablePresenter is an abstract class which represent a applicative presenter made to be composed with other ComposablePresenter",				"",				"Most often, I am used to display other subclasses of ComposablePresenter or subclasses of AbstractWidgetPresenter.",				"",				"I collaborate with ",				"-  ValueHolder to managed some of my variables.",				"- SpecFocusOrder when no focusOrder are specified.",				"- SpecLayout",				"- WindowPresenter or DialogWindowPresenter to display myself.",				"",				"A new subclass of ComposablePresenter must at least define initializeWidgets and defaultSpec on the class side.",				"",				"I provide the following methods",				"- aboutText: set the text displayed in the About.",				"- title: set the title of the window.",				"- extent: set the initial size of the window, alternative possibility is define again initialExtent, it must be called before have displayed the widget. ",				"- focusOrder: set an instance what manage the order of focus of the keyboard navigation.",				"- bindKeyCombination:toAction: create a shortcut on keyboard what perform the block of the  action.",				"- owner getter of my parent.",				"- window getter of the window displaying me.",				"",				"On my class side, I provide methods returning standard height and width for some elements.",				"",				"todo",				"- announce:",				"- applyMenuModel: and neglectMenuModel:",				"- keyStrokeForNextFocus: , giveFocusToNextFrom: and takeKeyboardFocus",				"- ensureExtentFor:",				"- hide",				"- needRebuild",				"- on:do:",				"- update:",				"- widget",				"",				"Window",				"=======",				"",				"- openWithSpec instantiate a WindowPresenter using the lookup to found the layout to use.",				"- openDialogWithSpec instanciate a DialogWindowPresenter using the lookup to found the layout to use.",				"Their variants openWithSpec: and openDialogWithSpec:  use the layout parameter.",				"",				"These methods can be useful to manage the window",				"- isDisplayed return true if the window of the widget is displayed",				"- hasWindow return true if the widget have a window",				"- centered to center the window in the world.",				"- delete to delete the window.",				"",				"todo",				"- cancelled",				"- setModal:",				"- windowIcon:",				"",				"",				"Instantiation",				"===========",				"",				"* initializeWidgets is called by the initialize method, it should contain initialization of subwidgets and of the focusorder.",				"",				"The instantiation of a subwidget should use one of that way",				"- instantiate: take a class in parameter and return the created instance.",				"- methods named 'new' followed by a widget name are shortcut working with instantiate:",				"",				"Usually, the subwidgets must be added in the focusOrder using something like 'self focusOrder add: accessor of  the  subwidget'",				"",				"Note that instantiateModels: is legacy code in ComposablePresenter and must not be used. It will be deprecated and removed.",				"",				"* initializePresenter is called by the initialize method after initializeWidgets, it should manage interaction of subwidgets.",				"",				"Methods named 'when' followed by an event provide hook to perform the action in parameter.",				"",				"Note",				"-------",				"Be careful about code order if you are overriding initialize method.",				"Normally in Spec initializing instance variables should be done BEFORE calling super initialize (so the opposite of the normal approach), because super initialize calls initializeWidgets and initializePresenter that normally would make use of those variables.",				"",				"Layout",				"======",				"",				"See SpecLayout",				"",				"defaultSpec or a method containing the pragma <spec: #default> must be defined in the class side of my subclasses.",				"It contains information about how place its elements.",				"It possible to define more than one method to give the possibility to use another layout, by default the one containing the pragma will be used if it exists, if not defaultSpec will be used."			],			"category" : "Spec-Core-Base"		},		"ZnSimplifiedByteEncoder" : {			"hash" : 1198848,			"definition" : "ZnCharacterEncoder subclass: #ZnSimplifiedByteEncoder\r\tinstanceVariableNames: 'identifier byteToUnicode unicodeToByte strict'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-Character-Encoding-Core'",			"comment" : [				"I am ZnSimplifiedByteEncoder, a concrete subclass of ZnCharacterEncoder.",				"I handle single byte encodings where byte values 0 to 127 map to ASCII and 128 to 255 are a permutation to Unicode characters.",				"",				"I am like ZnByteEncoder, a subclass of me, but I implement just two mappings, latin1 or iso-8859-1 and ASCII, to conserve memory."			],			"category" : "Zinc-Character-Encoding-Core"		},		"SpToolbarToggleButtonPresenter" : {			"hash" : 2225408,			"definition" : "SpToolbarButtonPresenter << #SpToolbarToggleButtonPresenter\r\tslots: {\r\t\t\t #selected => ObservableSlot .\r\t\t\t #associatedToggleButtons };\r\ttag: 'Widgets-Toolbar';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter to display a toggle button in a `SpToolbarPresenter`.",				"A toggle button is a button that can be activated (toggled) or deactivated (untoggled)."			],			"category" : "Spec2-Core-Widgets-Toolbar"		},		"WorkingSession" : {			"hash" : 1193728,			"definition" : "Object subclass: #WorkingSession\r\tinstanceVariableNames: 'manager deferredStartupActions id creationTime properties'\r\tclassVariableNames: ''\r\tpackage: 'System-SessionManager-Utilities'",			"comment" : [				"I am the unique object for the current smalltalk session (I.e. between a startup and a shutdown).",				"On each image startup the current session is invalidated and a new session is created.",				"I define how errors should be handled.",				"",				"ps: I replace the old Session class that was only used as a session identifier  "			],			"category" : "System-SessionManager-Utilities"		},		"TabMorph" : {			"hash" : 612096,			"definition" : "Morph subclass: #TabMorph\r\tinstanceVariableNames: 'closeable label morph state fadeOut retrievingBlock closeIcon actions menu retrievingProcess retrievingSemaphore model'\r\tclassVariableNames: 'Icons'\r\tpackage: 'Morphic-Widgets-Tabs-Morphs'",			"comment" : [				"I represent a simple tab",				"I have a IconicListItem which wrap my label and my icon.",				"I also have a morph to display when selected.",				"This morph can in fact be anything responding to #asMorph. Moreover it could be a block for lazy initialization.",				"",				"I also have a state representing if I am selecting or not, enabled or not, etc"			],			"category" : "Morphic-Widgets-Tabs-Morphs"		},		"RSBasicUMLClassRenderer" : {			"hash" : 5777664,			"definition" : "RSAbstractUMLClassRenderer subclass: #RSBasicUMLClassRenderer\r\tinstanceVariableNames: 'classInnerLine popup'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-UML-Rendering'",			"comment" : [				"I am the default renderer that RSUMLClassBuilder "			],			"category" : "Roassal3-UML-Rendering"		},		"DAPackageCycleDetector" : {			"hash" : 1782528,			"definition" : "Object subclass: #DAPackageCycleDetector\r\tinstanceVariableNames: 'sccs cycles visitedNodes queue relationGraph'\r\tclassVariableNames: ''\r\tpackage: 'Tool-DependencyAnalyser-Core'",			"comment" : [				"I'm able to detect all the cycles in a package dependency graph.",				"",				"Analysis is done in three steps: build the dependency graph, isolating the strongly connected components (SCC), and for each SCC detect all the elementary cycles.",				"",				"Use the message runAlgorithm to run the algorithm to retrieve the elementary cycles in the package dependency graph.",				"",				" At the end, all the cycles are in the collection \"cycles\"."			],			"category" : "Tool-DependencyAnalyser-Core"		},		"SystemWindow class" : {			"hash" : 1936384,			"definition" : "SystemWindow class\r\tinstanceVariableNames: ''",			"comment" : [				"SystemWindow is the Morphic equivalent of StandardSystemView -- a labelled container for rectangular views, with iconic facilities for close, collapse/expand, and resizing.",				"",				"The attribute onlyActiveOnTop, if set to true (and any call to activate will set this), determines that only the top member of a collection of such windows on the screen shall be active.  To be not active means that a mouse click in any region will only result in bringing the window to the top and then making it active."			],			"category" : "Morphic-Widgets-Windows-Widgets"		},		"ClyMethodEditorToolMorph" : {			"hash" : 5117440,			"definition" : "ClyTextEditorToolMorph subclass: #ClyMethodEditorToolMorph\r\tinstanceVariableNames: 'ast methodTags extendingPackage targetClasses'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemTools-Core-Editors-Methods'",			"comment" : [				"I am a base class for method edito tools.",				"",				"I implement correctly the styling of typed source code. ",				"Also I add multiple text editing tools to the status bar: ",				"- wrap mode switch ",				"- line number=s switch",				"- format as you read ",				"- method tags and package editor.",				"",				"In addition to the superclass abstract methods subclasses should implement following methods: ",				"",				"- methodClass ",				"Subclasses should decide what class will accept editing method",				"",				"- modifiesExtension ",				"Subclasses should detect that editing method is going to be extension.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\textendingPackage:\t\t<RPackage>",				"\tmethodTags:\t\t<Array of<Symbol>>"			],			"category" : "Calypso-SystemTools-Core-Editors-Methods"		},		"NECDetailMorph" : {			"hash" : 3200768,			"definition" : "Morph subclass: #NECDetailMorph\r\tinstanceVariableNames: 'title description arrowPosition label'\r\tclassVariableNames: ''\r\tpackage: 'NECompletion-Morphic'",			"comment" : [				"I display some detail information for a selected ECEntry in the ECMenuMorph.",				"The content I show, is provided by an ECDetailContentProvider subclass. "			],			"category" : "NECompletion-Morphic"		},		"ReflectivityExamples" : {			"hash" : 3530240,			"definition" : "Object subclass: #ReflectivityExamples\r\tinstanceVariableNames: 'ivar tag'\r\tclassVariableNames: 'ClassVar singleton'\r\tpackage: 'Reflectivity-Tests-Data'",			"comment" : [				"Examples for RF"			],			"category" : "Reflectivity-Tests-Data"		},		"HiRulerBuilderTest class" : {			"hash" : 4321536,			"definition" : "HiRulerBuilderTest class\r\tinstanceVariableNames: ''",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"",				"    Implementation Points"			],			"category" : "Hiedra-Tests-Model"		},		"SpDynamicSpecExample" : {			"hash" : 2446592,			"definition" : "Object << #SpDynamicSpecExample\r\ttraits: {TObservable};\r\tslots: {\r\t\t\t #ui .\r\t\t\t #object => ObservableSlot };\r\ttag: 'Wrapper';\r\tpackage: 'Spec2-Examples'",			"comment" : [				"I am an example of how dynamically create the UI corresponding at an object.",				"",				"self exampleInt",				"self exampleNil",				"self exampleString"			],			"category" : "Spec2-Examples-Wrapper"		},		"MethodToolbar" : {			"hash" : 2104576,			"definition" : "ComposablePresenter subclass: #MethodToolbar\r\tinstanceVariableNames: 'methodHolder browseModel sendersModel implementorsModel versionModel dropListModel model usersModel'\r\tclassVariableNames: ''\r\tpackage: 'Spec-PolyWidgets-Widgets'",			"comment" : [				"A MethodToolbar is xxxxxxxxx.",				"",				"self example"			],			"category" : "Spec-PolyWidgets-Widgets"		},		"MicroDownParser" : {			"hash" : 6563584,			"definition" : "Object subclass: #MicroDownParser\r\tinstanceVariableNames: 'current root dispatchTable'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Parser'",			"comment" : [				"# Microdown Parser and Elements",				"",				"I'm a parser for Microdown, implemented by S. Ducasse, L. Dargaud and G. Polito (2020). ",				"It is based on K. Osterbye's work on GitHubMarkdown. ",				"",				"Microdown covers Markdown basis syntax, with great Pillar's features. It's more extensible too.",				"",				"## MicroDown Syntax in a Nutshell!",				"",				"**Headers** (up to 6 levels) >>>> `# Header level 1`",				"",				"**Unordered list**",				"```",				"- item a",				"  on another line",				"- item b",				"   - item b1",				"   - item b2",				"- item c",				"```",				"",				"produces",				"",				"- item a",				"  on another line",				"- item b",				"   - item b1",				"   - item b2",				"- item c",				"",				"**Ordered list**",				"```",				"1. item one",				"   1. subitem",				"2. item two",				"```",				"produces ",				"",				"1. item one",				"   1. subitem",				"2. item two",				"",				"",				"**Codeblock with arguments**",				"```",				" ```language=Pharo&caption=Beautiful&label=Fig1",				" some piece of code",				" ```",				"```",				"",				"produces ",				"",				"```language=Pharo&caption=Beautiful&label=Fig1",				"some piece of code",				"```",				"",				"**Anchor and its reference** >>>> `\\@anchor` and its reference in text with `\\*@anchor@*`",				"",				"**Math environment** (rendered with LaTex in Pharo)",				"- inline: $\\cos(\\theta_i+C_3)$ >>>> `\\$\\cos(\\theta_i+C_3)$`",				"- block: ",				"```",				" $",				" \\cos(\\theta_i+C_3)",				" $",				"```",				"**Annotated paragraph**",				"``` ",				" !!note Then you can write your note",				" on several lines, like a normal paragraph",				"```",				"**Quote** to indent some lines",				"```",				"> This is",				"> A nice quote",				"```",				"**Environment** (called Annotation for inline)",				"- inline: `\\<?keyword|key1=value1&key2=value2?>`",				"- block: ",				"```",				" <?keyword|key1=value1&key2=value2",				" type your content",				" ?>",				"```",				"**Metadata** as a block",				"```",				" { ",				" type your metadata",				" }",				"```",				"",				"**Table** **@tocomment**",				"",				"**Horizontal line** >>> `***` alone on a line will define a separator in your text **@todo**",				"",				"**Comments** don't appear after parsing >>> `% A commented line`",				"",				"**Inline formats**",				"- **bold** >>>> `**bold**`",				"- _italic_ >>>> `\\_italic_`",				"- `monospace` aka inline code >>>> `\\`monospace\\``",				"",				"_Note: inline escape character is back slash: \\\\ ._",				"_Note: text in monospace is analyzed for you to generate hypertext Pharo code objects! Isn't it so cool to write a great doc? It is! Click on them!_",				"- `Point` for classes",				"- `Point class` for class side",				"- `Point>>#setX:setY:` for methods",				"- `#'Microdown-Tests'` for packages",				"",				"**Raw** for your other code (inline) >>>> `\\{{ some code }}`",				"",				"**Link** >>>> `\\[link's name](url|key1=value1&key2=value2)`",				"",				"**Figure** >>>> `\\!\\[figure's name](url|key1=value1&key2=value2)`",				"",				"`![Pharo logo](https://files.pharo.org/media/logo/logo.png)`",				"produces",				"",				"![Pharo logo](https://files.pharo.org/media/logo/logo.png)",				"",				"",				"## Implementation",				"",				"I follow the design mentioned in [https://github.github.com/gfm](https://github.github.com/gfm), in particular the parsing strategy in appendix A.",				"",				"In short, the strategy is that at any point in time, we might have a number of children of the root which are \"open\". The deepest in open in the tree is called \"current\". All the parents of current are open. ",				"",				"When a new line is read we do the following:",				"",				"1. Check if the new line can be consumed by current.",				"   - as part of this, a child of current can be made which can consume the new line. for example when consuming \\`\\`\\` the root block node will create, a new code block that will become current and consume the body of the \\`\\`\\` element then close. ",				"2. If current cannot consume the new line, we close current, move current to its parent, and repeat 1.",				"3. The root node can consume anything, for instance by making new nodes for storing the new line.",				"4. The root node is not closed until input is exhausted.",				"",				"I do not accept lazy definition. I do not accept three different ways to do the same. Except for bulleted list where `*` and `-` are accepted. ",				"",				"The spec says:",				"```",				"-> document",				"  -> block_quote",				"       paragraph",				"         \"Lorem ipsum dolor\\nsit amet.\"",				"    -> list (type=bullet tight=true bullet_char=-)",				"         list_item",				"           paragraph",				"             \"Qui *quodsi iracundia*\"",				"      -> list_item",				"        -> paragraph",				"             \"aliquando id\"",				"```",				"Now the implementation for now does not create a paragraph in the list_item element. "			],			"category" : "Microdown-Parser"		},		"RegisterableTranslatorMock" : {			"hash" : 4392192,			"definition" : "Object subclass: #RegisterableTranslatorMock\r\tinstanceVariableNames: 'translations'\r\tclassVariableNames: ''\r\tpackage: 'System-Localization-Tests-Mocks'",			"comment" : [				"I'm a mock object to mock a translator"			],			"category" : "System-Localization-Tests-Mocks"		},		"MailAddressTokenizer class" : {			"hash" : 3203584,			"definition" : "MailAddressTokenizer class\r\tinstanceVariableNames: ''",			"comment" : [				"Divides an address into tokens, as specified in RFC 822.  Used by MailAddressParser."			],			"category" : "Network-Mail"		},		"MenuLineMorph" : {			"hash" : 585984,			"definition" : "Morph subclass: #MenuLineMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Base-Menus'",			"comment" : [				"A MenuLineMorph is a item separator in menu."			],			"category" : "Morphic-Base-Menus"		},		"ClyBrowserMorph" : {			"hash" : 5097216,			"definition" : "PanelMorph subclass: #ClyBrowserMorph\r\tinstanceVariableNames: 'navigationPanel navigationViews toolPanel toolbar tabManager navigationHistory navigationStarted plugins navigationEnvironment systemScope'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-UI'",			"comment" : [				"I am a base class for various browser implementations.",				"My main subcasses are ClyFullBrowser (for an advanced 4 panes browser) and ClyQueryBrowser (to display results of senders/implementors/...).",				"",				"I provide UI layout structure for my subclasses:",				"",				"- all navigation views occupy the top half of the browser.",				"- the tabs panel is placed at the bottom half of the browser.",				"- and the toolbar is placed at the middle.",				"",				"Navigation is represented by ClyQueryView(Morph) instances placed from left to right. This reflects the flow of navigation: selection in the left panel leads to the new content at the right panel.",				"",				"!! Example of Queries ",				"",				"I create query instances using current state like selections, metalevel scope (class/inst side) and current queries themselves. ",				"In some cases it is quite complex logic and it requires interaction between different objects. For exampe the construction logic of methodGroupQuery is very complex:",				"\t- the different query class for variable mode (vars in protocols pane)",				"\t- in variable mode the scope is different (vars are shown from all superclasses)",				"\t- extra query composition when query is build from scope of extended classes (grey classes are selected)",				"\t- extra logic to allow default traits visibility",				"\t- some other details.",				"(it could be extracted to new kind of queries and scopes)",				"",				"!! Browser Logic ",				"Another part of browser logic is defined in methods like #selectMethod:, #selectClass:, selectPackage:. A browser knows that to select method it should first select its class. To select class it should first select its package. In some cases it is also not trivial logic. Look at selectClass: method. ",				"",				"Ideally browser should be a model itself independently from UI.  But this point deserves another iteration. The main concern of the current version was to introduce queries to manage browser state. It simplifies a lot of behaviour but it still not enough to get really clean solution. ",				"",				"",				"!! Browser contexts ",				"",				"Browser contexts are not for maintaining the state. They only represent possible state of components. They are approach to have pluggability points for commands, tabs, toolbars and table decorators. Remember that commands are annotated with activators for particular context where they should be used. Exactly the same logic is used for other parts of browser. Everything you read in Commander chapter is applicable for tabs, table decorators and toolbar items. Tabs are annotated with ClyTabActivationStrategy. Table decorators are annotated with ClyTableDecorationStrategy.",				"",				"So a browser collects contexts from children because otherwise children will need to know about toolbar and tabs. Now they only know the browser. Also all contexts are used to build spotter command menu (cmd+/). Query views has no information about it.  ",				"",				"",				"!! Browser changes ",				"",				"I implement logic how and when rebuild tabs and toolbar. Any browser change should be wrapped by method #changeStateBy:",				"",				"\tbrowser changeStateBy: [ packageView selection selectItemsWith: { 'Kernel' asPackage } ]",				"\t",				"Any selection change can lead to the changes in all related navigation views which follow navigation flow. I ensure in this method that tabs and toolbar will be rebuilt only when navigation will be completely finished. However this is only when all views will set new content and selection that I will update tabs and toolbar.",				"",				"Also I manage navigation history by allowing go back and forward in the browser. And this method also ensures that intermediate navigation states will not be considered as navigation. Many selection changes can be triggered from single #changeStateBy: call. But I will add only one item to the history.",				"",				"I provide two methods to force go back and forward navigation: ",				"",				"\tbrowser navigateBack.",				"\tbrowser navigateForward.",				"",				"For more details on history implementation look at ClyNavigationHistory.",				"",				"",				"",				"",				"",				"!! How to create new browsers",				"",				"",				"Subclasses should implement #initializeNavigationViews to configure the number of navigation panes and their properties.",				"They should create navigation views using #newNavigationView message: ",				"",				"\tpackageView := self newNavigationView.",				"\t",				"The content of view should be set in another methods (see bellow). During initialization you should only configure structure of the view.",				"For example by default created view will show single column with the name of item.",				"But you can configure different label using following method: ",				"",				"\tpackageView mainColumn ",				"\t\tdisplayItemPropertyBy: [:packageItem | packageItem name, packageItem actualObject classes size asString].",				"",				"(the argument of the block is instance of ClyDataSourceItem which wrap actual object retrieved by query).",				"",				"Also to describe navigation flow you should setup selector which should called when user will select any item: ",				"\t",				"\tpackageView requestNavigationBy: #packageSelectionChanged.",				"\t ",				"Look at ClyQueryView(Morph) to find more possible settings and browser senders of #newNavigationView (for example you can add more columns to the view).",				"",				"To setup the content of the navigation views you should implement method #prepareInitialState. For the package view example it can be: ",				"",				"\tpackages := ClyAllPackages sortedFrom: self systemScope.",				"\tpackageView showQuery: packages ",				"",				"You do not need to set up the content of all navigation views. They have kind of empty data source by default.",				"During navigation you will configure them in the navigation request methods. You will create appropriate queries for them based on new selected objects.",				"",				"The last responsibility of subclasses is to implement #newWindowTitle. It is used to setup the title of window which contains the browser. And it is updated when state of browser is changed.",				"",				"",				"",				"",				"",				"",				"",				"",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tnavigationEnvironment:\t\t<ClyNavigationEnvironment>",				"\tnavigationHistory:\t\t<ClyNavigationHistory>",				"\tnavigationPanel:\t\t<Morph>",				"\tnavigationStarted:\t\t<Boolean>",				"\tnavigationViews:\t\t<OrderedCollection of<ClyQueryView>>",				"\tplugins:\t\t<Collection of<ClyBrowserPlugin>>",				"\tsystemScope:\t\t<ClySystemScope>",				"\ttabManager:\t\t<ClyTabManager>",				"\ttoolPanel:\t\t<Morph>",				"\ttoolbar:\t\t<ClyToolbar>"			],			"category" : "Calypso-Browser-UI"		},		"KMBuffer" : {			"hash" : 771840,			"definition" : "Object subclass: #KMBuffer\r\tinstanceVariableNames: 'buffer currentEvent'\r\tclassVariableNames: ''\r\tpackage: 'Keymapping-Core-Base'",			"comment" : [				"I am a buffer of keyboard events. I am checked against key combinations to see if there is a match.",				"",				"I am cleared when the current morph loses focus or when a full match announcement is given."			],			"category" : "Keymapping-Core-Base"		},		"ClyNotebookManager" : {			"hash" : 5108992,			"definition" : "Object subclass: #ClyNotebookManager\r\tinstanceVariableNames: 'browser tabMorph tools updatingStarted selectionPriorities desiredSelection shouldSkipCurrentDesiredSelection'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-Tabs'",			"comment" : [				"I manage tabs in the browser.",				"Any tab in browser is represented by ClyBrowserTool subclasses.",				"And my responsibility is to show all appropriate tools which are relevant to the current browser context (state). ",				"`#updateTools` method is doing that. ",				"",				"The logic is simple: ",				"When selection (browser context) is changed then browser collects new tools which should be opened in that new browser state. ",				"Then it removes all old tools and open all new tools. ",				"But there is special case when new collected tool is already opened. In that case such new tool will be not used. And existing tool will be not removed. So it will stay opened.",				"",				"I use `#isSimilarTo:` tab method to detect that new collected tool is already opened (the browser already shows similar tool).",				"By default #isSimilarTo: simply checks the class of given tool. My subclases should redefine it when they include extra state because otherwise new tool instance will never replace old one (browser will think that it is already opened).",				"",				"There are cases when existing tools are not closed when selection is changed. For example when method editor is dirty and you select another method.",				"In that case dirty method will indicate that it is now do not belongs to the context of browser.",				"Tools implement method #belongsToCurrentBrowserContext to support this logic.",				"For example method editor checks that browser still selects editing method.",				"",				"There is one complex part of my behaviour: the way how I choose what tab should be selected.",				"In simple cases I just select the tab with lagest value of #activationPriority. But it is not enough.",				"Problem that user want to keep current selected tab (the kind of tab) when he selects another item in the table.",				"For example in full browser user can select class. It will automatically selects the tab with class definition because it has the most activation priority.",				"But then user can select class comment tab and switch to another class. The desired behaviour is to keep comment tab selected for this newly selected class.",				"",				"And for this logic I maintain desired set of selected tool in the variable desiredSelection.",				"It adds and removes items when user manually selects tabs.",				"But in addition browser fills it with tools which are relevant for manually selected table.",				"Every time user selects new item in the table the browser collects tools which are relevant for this new selection and it passes them to me as new desired selection. ",				"",				"So at the end I always select tab with most activation priority which exists in desiredSelection list.",				"",				"By default activationPriority is equal to `#tabOrder` which defines general order between tabs.",				"",				"My instances are created on the browser: ",				"",				"```",				"\tClyTabManager of: aBrowser",				"```\t"			],			"category" : "Calypso-Browser-Tabs"		},		"AthensBezierConverter" : {			"hash" : 3059456,			"definition" : "AthensPathConverter subclass: #AthensBezierConverter\r\tinstanceVariableNames: 'distanceTolerance angleTolerance'\r\tclassVariableNames: 'CollinearityEps CurveAngleTolerance DistanceEps'\r\tpackage: 'Athens-Core-Paths'",			"comment" : [				"I converting all bezier segments to a sequence of line segments, by approximating the curve along its path.",				"",				"This classs is used for generating strokes."			],			"category" : "Athens-Core-Paths"		},		"MalKruskal" : {			"hash" : 1758976,			"definition" : "MalGraphAlgorithm subclass: #MalKruskal\r\tinstanceVariableNames: 'sortBlock'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"Kruskal's algorithm is a greedy algorithm in graph theory that finds a minimum spanning tree for a connected weighted graph. This means it finds a subset of the edges that forms a tree that includes every vertex, where the total weight of all the edges in the tree is minimized. If the graph is not connected, then it finds a minimum spanning forest (a minimum spanning tree for each connected component).",				"",				"See https://en.wikipedia.org/wiki/Kruskal%27s_algorithm"			],			"category" : "Moose-Algos-Graph"		},		"RGUnknownSlot" : {			"hash" : 5256704,			"definition" : "RGSlot subclass: #RGUnknownSlot\r\tinstanceVariableNames: 'expression'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\texpression:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"RGClassDescriptionStrategy" : {			"hash" : 5243904,			"definition" : "RGBehaviorStrategy subclass: #RGClassDescriptionStrategy\r\tinstanceVariableNames: 'layout'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tlayout:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"RSClusterLayout" : {			"hash" : 5763840,			"definition" : "RSAbstractGraphLayout subclass: #RSClusterLayout\r\tinstanceVariableNames: 'externalLayer maxLayer maxAbcissa'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Layouts-Core"		},		"MicInlineParser" : {			"hash" : 6560000,			"definition" : "Object subclass: #MicInlineParser\r\tinstanceVariableNames: 'openersStack result allDelimiters index string incrementation children nestedLevel opener closer correctSubstring correctURL keys delimiterClass'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Parser'",			"comment" : [				"I'm a parser of block text. I'm responsible to generate text, annotation, format, link, url kind of objects."			],			"category" : "Microdown-Parser"		},		"BalloonEngine class" : {			"hash" : 1625856,			"definition" : "BalloonEngine class\r\tinstanceVariableNames: ''",			"comment" : [				"BalloonEngine is the representative for the Balloon engine inside Squeak. For most purposes it should not be used directly but via BalloonCanvas since this ensures proper initialization and is polymorphic with other canvas uses."			],			"category" : "FormCanvas-Core-BalloonEngine"		},		"RSTransitionAnimation" : {			"hash" : 5705472,			"definition" : "RSAbstractAnimation subclass: #RSTransitionAnimation\r\tinstanceVariableNames: 'stepAction duration easing scale'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Animation-Core'",			"comment" : [				"I am an animation that provides a number interpolating between 0 and 1. and apply it the value to one block"			],			"category" : "Roassal3-Animation-Core"		},		"GlobalIdentifier class" : {			"hash" : 760832,			"definition" : "GlobalIdentifier class\r\tinstanceVariableNames: 'uniqueInstance'",			"comment" : [				"I keep global IDs that are used for tracking user activity, e.g. computer id. By default, you should access me by calling #uniqueInstance.",				"",				"Responsibility:",				"The IDs that are important to store onto disk (and shared by all images) should be placed in persistedInformation instance variable. On other hand, if you do not want to store it onto disk, create a new instance variable. I can #loadPreferences and #savePreferences onto a disk.",				"",				"I know computer ID and secret ID. Computer ID is a global UUID that is share among all the images. It is stored on a local disk. Secret ID is use for encrypting information, e.g., class names, method names. You can use #hashForText: method.",				"",				"Collaborators: I do not collaborate with other classes. I only offer the basic IDs for other frameworks.",				"",				"Public API and Key Messages",				"",				"- computerUUID ",				"- ensureComputerUUID",				"- hashForText:",				"- loadPreferences ",				"- savePreferences.",				"",				"Before using #computerUUID, you should call #ensureComputerUUID. It will update UUID from the disk or stores existing one if it is not stored yet. I behave like this as automatic storing data to disk on image start-up leads to errors.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tpersistedInformation:\t\t<Dictionary>",				"\tpreferences:\t\t<FileReference>"			],			"category" : "System-Identification"		},		"ClyRing2Environment" : {			"hash" : 5294336,			"definition" : "Object subclass: #ClyRing2Environment\r\tinstanceVariableNames: 'environment name packageOrganizer projectManager'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Ring'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tenvironment:\t\t<Object>",				"\tname:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Calypso-Ring"		},		"CmdMouseCommandActivation" : {			"hash" : 4732160,			"definition" : "CmdCommandActivationStrategy subclass: #CmdMouseCommandActivation\r\tinstanceVariableNames: 'whichButton keyboardModifier'\r\tclassVariableNames: ''\r\tpackage: 'Commander-Activators-Mouse'",			"comment" : [				"My subclasses represent particular kind of mouse events which should activate annotated commands.",				"For example it can be mouse click or double click.",				"",				"My instances are configured with type of mouse button and keyboard modifier which are expected to be used to activate commands.",				"",				"By default the left click is expected:",				"",				"\tCmdClickActivation for: aCommandUser.",				"",				"With extra parameter you can configure modifier: ",				"",				"\tCmdClickActivation with: KMModifier shift for: aCommandUser.",				"\t",				"To specify mouse button use following messages: ",				"",				"\t(CmdClickActivation for: aCommandUser) beBlueButton.",				"\t(CmdClickActivation for: aCommandUser) beYellowButton.",				"\t(CmdClickActivation for: aCommandUser) beRedButton",				"",				"And there is special constructor for yellow button which is usefull for various context menu activations:",				"",				"\tCmdClickActivation byYellowButtonFor: aCommandUser.",				"\tCmdClickActivation byYellowButtonWith: KMModifier shift for: aCommandUser",				"",				"My instances are active when they are match last mouse event:",				"",				"\taMouseActivation isActiveInContext: aToolContext ",				"\t",				"I extend this method to check that last mouse event matches expected button and modifier. ",				"\t\t",				"There are few methods how to enable mouse commands in the morphs: ",				"",				"\taMorph enableMouseCommands: CmdClickActivation withContextFrom: aToolContext.",				"",				"It enables click action to execute commands in given aMorph instance.",				"",				"\taMorph enableAllMouseCommandsFrom: aToolContext.    \t ",				"\t\t",				"It enables all kind of mouse events to execute commands in given aMorph instance.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tkeyboardModifier:\t\t<KMModifier>",				"\twhichButton:\t\t<Integer>"			],			"category" : "Commander-Activators-Mouse"		},		"RealEstateAgent class" : {			"hash" : 1662464,			"definition" : "RealEstateAgent class\r\tinstanceVariableNames: ''",			"comment" : [				"Responsible for real-estate management on the screen, which is to say, controlling where new windows appear, with what sizes, etc.  5/20/96 sw"			],			"category" : "Morphic-Core-Worlds"		},		"MetaLinkInstaller" : {			"hash" : 3027200,			"definition" : "Object subclass: #MetaLinkInstaller\r\tinstanceVariableNames: 'linksRegistry anonSubclassesBuilder linkToNodesMapper superJumpLinks'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Installer'",			"comment" : [				"#TODO and notes",				"- Should we replace method operations (copying, removing) by ast manipulation ?",				"- Peer reviews... ?",				"- For now, only method nodes can be affected by object specific links.",				"",				"#document inst vars and their usage",				"anonSubclassesRegistry <Dictionary: (Class -> WeakSet of: AnonymousClass)> This table contains for a given class all its anonymous subclasses for which there are instance specific links. Each anonymous class has exactly one instance.",				"",				"nodesForObjects <WeakKeyDictionary (Object -> WeakSet of: RBMethodNode)>",				"",				"links <WeakKeyDictionary (MetaLink -> WeakSet of: Object)> For each instance specific link, stores all objects it does affect. Used only for counting the number of objects affected by a given link. Maybe could be removed and replaced by a computation.",				"",				"#document basic usage of the link installer",				"",				"#Installing",				"When a link is put on a specific object, an anonymous subclass of the object's class is generated and the object is migrated to this subclass. There is a 1-1 mapping between objects an their anonymous class. That means that if we put two instance specific links on two objects of class A, these objects will migrate to two different anonymous subclasses of A. However, putting a new instance specific link to one of these objects will preserve its anonymous class and will not migrate the object to another subclass.",				"\t",				"If aNode is in the original class of anObject and if there are class scoped links on this node,  they are installed in the new node of the anonymous subclass. It is necessary to preserve the original instrumentation of a node which are meant to be applied for all instances of the class.",				"",				"#Uninstalling",				"We know we can remove a node in an anonymous subclass when there are no more instance specific links on this node. There may be \"class scoped\" links remaining, but the node can be removed because all these links are present on the superclass node that was copied down in the subclass.",				"",				"When there are no more nodes specific to a given object, the object is migrated back to its superclass. As there is only one anonymous subclass per object, it is expected that the anonymous subclass is garbaged and the object is now an instance of its original class.",				"",				"#Linking and unlinking subtleties",				"As already said, when putting a link on a node for a specific object an anonymous subclass is generated  and the node is copied down from the origin class to its anonymous subclass. When adding or removing a new link to the node in the original class, we ensure that this link is also added/removed from all nodes copies in the corresponding anonymous subclasses.",				"",				"#Listening for code changes",				"The link installer listens for method source code changes and  must update its anonymous classes nodes with those changes. Not done yet. See LinkInstaller >> #methodChanged:",				"",				"Also there is the problem of renaming a method in a class for which an anonymous subclass with a copy of this method has been made.",				"",				"",				"",				"",				"",				"",				"",				"",				"",				"",				"",				"",				"",				""			],			"category" : "Reflectivity-Installer"		},		"RubTextFieldMorph" : {			"hash" : 598784,			"definition" : "RubScrolledTextMorph subclass: #RubTextFieldMorph\r\tinstanceVariableNames: 'hasValidText acceptOnCR entryCompletion maxLength encrypted'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Widgets'",			"comment" : [				"I am a morph for a text area which has only one line, like search field"			],			"category" : "Rubric-Editing-Widgets"		},		"IceRepository" : {			"hash" : 6205184,			"definition" : "Object subclass: #IceRepository\r\tinstanceVariableNames: 'name workingCopy index commitsInPackageCache'\r\tclassVariableNames: 'Registry'\r\tpackage: 'Iceberg-Core'",			"comment" : [				"I represent an iceberg repository. I am an abstract class, my subclasses will represent concrete repositories such as monticello or git repositories. I define the main API and I have some common methods defined as template methods.",				"",				"! Instantiation",				"Check my subclasses to know how to instantiate them.",				"",				"! Basic  repository properties",				"",				"All repositories have two main properties: a name and a working copy. ",				" - name is used to identify a repository",				" - the working copy is used to manage the status of all code loaded from the repository. See #IceWorkingCopy",				"",				"! The repository HEAD",				"",				"Moreover, every repository has to define a HEAD. The repository HEAD is a reference to our current working commit/branch in the repository.",				"",				"  repository head.",				"",				"The head can be either a branch or a commit. To access the current commit you can ask the head for its commit, or directly the repository for its headCommit (Yes, commits and branches are polymorphic, a commit returns self when asked for its commit).",				"",				"  repository head commit.",				"  repository headCommit.",				"",				"HEAD is an important concept inside iceberg. It is used to calculate if our code is synchronized, if we have commits to fetch and load, and so on...",				"",				"Moreover, please notice that HEAD is a repository property, and it is completely separate from the image's state. The image can have code loaded from commits other than HEAD, and vice-versa. More of it is explained in IceWorkingCopy class comment.",				"",				"! Branches",				"",				"An iceberg repository natively  supports branches. To query the branches in the repository you can ask for:",				"",				"  repository localBranches.",				"  repository remoteTrackedBranches.",				"  repository allBranches.",				"",				"Other convenience methods also provide:",				"",				"  repository localBranchNames.",				"  repository remoteBranchNames.",				"",				"Take into account that such methods will return only already fetched branches. If the branch exists in a remote repository, you should need to do a #fetch before being able to see it.",				"",				"Branches can also be queried by name, using the utility methods",				"",				"  repository branchNamed: aName.",				"  repository branchNamed: aName ifAbsent: [ ... ].",				"  repository branchNamed: aName ifPresent: [ ... ].",				"  repository branchNamed: aName ifAbsent: [ ... ] ifPresent: [ ... ].",				"",				"and the variant for remote branches.",				"",				"  repository remoteBranchNamed: aName.",				"  repository remoteBranchNamed: aName ifAbsent: [ ... ].",				"  repository remoteBranchNamed: aName ifPresent: [ ... ].",				"  repository remoteBranchNamed: aName ifAbsent: [ ... ] ifPresent: [ ... ].",				"",				"Branches can be created from a specific commit or, by default, from #headCommit.",				"",				"  repository createBranch: aBranchName.",				"  repository createBranch: aBranchName inCommit: aCommit.",				"",				"Notice that creating a branch will switch to it automatically.",				"",				"The variant #ensureBranch: will create a branch only if a branch with the same name does not exist.",				"",				"  repository ensureBranch: aBranchName.",				"",				"Also, to create a branch tracking a remote branch (that is, that will start from the same commit and follow the evolution of a remote branch), you can use #createBranchTracking: aBranchName.",				"",				"Finally, to switch to an existing branch:",				"",				"  repository switchToBranchNamed: aBranchName.",				"",				"! Remotes",				"",				"Remotes are references to remote repositories. Remotes are used for pulling and pushing commits and branches.",				"Remotes can be added using the #addRemote: message and removed using the remoteRemote: message . However, thou shall be careful, remotes should be created from the class corresponding to the repository. For example, git repositories should use git remotes, and so on. Check IceRemote and its concrete subclasses.",				"",				"  repository addRemote: aRemote.",				"",				"Once remotes are configured, we can configure them as pull remote and push remote. A pull remote is a remote used for pulling commits by default, while a push remote is a remote used for pushing new commits by default.",				"",				"  repository pullRemote: aRemote.",				"  repository pushRemote: aRemote.",				"",				"  repository isPullRemote: aRemote.",				"  repository isPushRemote: aRemote.",				"",				"If pull or push remotes are not configured, they will default to 'origin'. Origin is a well known remote, for which an accessor to the 'origin' remote  is provided through the #origin message.",				"",				"  repository origin.",				"",				"Remotes can be queried with:",				"",				"  repository remotes.",				"  repository remoteNamed: aName.",				"  repository remoteNamed: aName ifAbsent: [ ... ].",				"",				"Moreover, we can query if the current branch has commits to be uploaded using the #outgoingCommits and friends, or if the current branch has commits to be downloaded using the #ingoingCommits and friends.",				"",				"  repository hasIncomingCommits.",				"  repository incomingCommits.",				"  repository hasIncomingCommitsFrom: aRemote.",				"  repository incomingCommitsFrom: aRemote.",				"",				"  repository hasOutgoingCommits.",				"  repository outgoingCommits.",				"  repository hasOutgoingCommitsTo: aRemote.",				"  repository outgoingCommitsTo: aRemote.",				"",				"Finally, we can interact with remotes via the fetch, pull and push operations.",				"Fetch downloads new commits and branches from the specified remote.",				"Pull and push operations delegate to pull and push of the current branch. Check IceLocalBranch.",				"",				"  repository fetch.",				"  repository pull.",				"  repository push.",				"",				"! Committing code",				"",				"Once modifications are done, we can commit them to the repository using the commit* messages. The main API for it is #commitWithMessage: that will commit all changes with the given commit.",				"",				"  repository commitWithMessage: 'aMessage in a string'.",				"",				"A second commit message is also available to commit cherry picks:",				"",				"  repository commitCherryPick: aChangesList withMessage: ' a message in a string'.",				"",				"NOTICE that commits can only be done if the following is true:",				"",				" - HEAD is a branch",				" - the working copy reference commit is the same commit as #headCommit",				"",				"In any other case, commits are forbidden as they may break the repository consistency.",				"",				"! Loading code & Package querying",				"",				"From the repository point of view, only some convenience methods are provided to checkout all code from the current branch, unload all loaded code, know what packages are loaded or modified. Please refer to IceWorkingCopy for a more complete API.",				""			],			"category" : "Iceberg-Core"		},		"SpTContextMenu" : {			"hash" : 2161920,			"definition" : "Trait << #SpTContextMenu\r\tslots: { #contextMenu => ObservableSlot };\r\ttag: 'Base';\r\tpackage: 'Spec2-Core'",			"comment" : [				"I'm a trait to add context menus capabilities to the presenter that use it.",				"Note that I just add some behaviour at presenter level, the right implementation needs ",				"to be solved in the backend adaptor."			],			"category" : "Spec2-Core-Base"		},		"RSBounceInterpolator" : {			"hash" : 5710592,			"definition" : "RSEasingInterpolator subclass: #RSBounceInterpolator\r\tinstanceVariableNames: 'b1 b2 b3 b4 b5 b6 b7 b8 b9 b0'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Animation-Easing'",			"comment" : [				"TSEasing bounceIn",				"Bounce easing, like a rubber ball.",				"",				"TSEasing bounce",				"TSEasing bounceOut",				"Reverse bounce easing; equivalent to 1 - bounceIn(1 - t).",				"",				"TSEasing bounceInOut",				"Symmetric bounce easing; scales bounceIn for t in [0, 0.5] and bounceOut for t in [0.5, 1]."			],			"category" : "Roassal3-Animation-Easing"		},		"RubCharacterScanner" : {			"hash" : 1856256,			"definition" : "Object subclass: #RubCharacterScanner\r\tinstanceVariableNames: 'destX lastIndex destY stopConditions text textStyle alignment leftMargin rightMargin font line runStopIndex spaceCount spaceWidth emphasisCode kern indentationLevel baselineY firstDestX pendingKernX'\r\tclassVariableNames: 'DefaultStopConditions NilCondition PaddedSpaceCondition SpaceCondition'\r\tpoolDictionaries: 'TextConstants'\r\tpackage: 'Rubric-TextScanning'",			"comment" : [				"I scan characters"			],			"category" : "Rubric-TextScanning"		},		"PSMCChangesGrouper" : {			"hash" : 3340288,			"definition" : "Object subclass: #PSMCChangesGrouper\r\tinstanceVariableNames: 'nonClassChanges classes model currentOperation classChanges'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Diff-Utilities'",			"comment" : [				"I am a visitor on MCDefinition objects. I will group a collection of definitions into a tree that will be shown in the PSMCPatchMorph."			],			"category" : "Tool-Diff-Utilities"		},		"ZnLogEvent" : {			"hash" : 1381632,			"definition" : "Announcement subclass: #ZnLogEvent\r\tinstanceVariableNames: 'timestamp id'\r\tclassVariableNames: 'IdCounter LogEventAnnouncer'\r\tpackage: 'Zinc-HTTP-Logging'",			"comment" : [				"I am ZnLogEvent, the base class of a log events emitted by elements of the Zinc HTTP Components framework.",				"",				"I add a timestamp and a simple id attribute. The id can wrap around and should only be used to distinguish between events that have the same timestamp.",				"",				"ZnLogEvents are distributed as Announcement through a singleton Announcer that I maintain.",				"",				"I have a small convenience API to log to the Transcript or open a simple GUI on the emitted log events."			],			"category" : "Zinc-HTTP-Logging"		},		"SerialPort" : {			"hash" : 4244224,			"definition" : "Object subclass: #SerialPort\r\tinstanceVariableNames: 'port baudRate stopBitsType parityType dataBits outputFlowControlType inputFlowControlType xOnByte xOffByte'\r\tclassVariableNames: ''\r\tpackage: 'System-Serial Port'",			"comment" : [				"This class supports a simple interface to the serial ports of the underlying platform, if it supports serial ports. The mapping of port numbers to hardware ports is platform specific, but typically follows platform ordering conventions. For example, on the Macintosh, port 0 is the modem port and port 1 is the printer port, since in the programmers documentation these ports are referred to as ports A and B."			],			"category" : "System-Serial Port"		},		"Categorizer class" : {			"hash" : 827136,			"definition" : "Categorizer class\r\tinstanceVariableNames: ''",			"comment" : [				"A Categorizer is responsible to manage the class categories and method protocols. ",				"",				"Instances consist of an Array of category names (categoryArray), each of which refers to an Array of elements (elementArray). This association is made through an Array of stop indices (categoryStops), each of which is ",				"the index in elementArray of the last element (if any) of the corresponding category. For example: categories := Array with: 'firstCat' with: 'secondCat' with: 'thirdCat'. stops := Array with: 1 with: 4 with: 4. ",				"elements := Array with: #a with: #b with: #c with: #d. This means that category firstCat has only #a, secondCat has #b, #c, and #d, and thirdCat has no elements. This means that stops at: stops size must be the same as elements size.",				"",				" Instance Variables",				"      categoryArray:          <SequenceableCollection of: Object>",				"      categoryStops:          <SequenceableCollection of: Integer>",				"      elementArray:           <SequenceableCollection of: Object>",				"",				"categoryArray",				"       - holds the list of categories.",				"       A category could be any Object but is generally a String or Symbol.",				"       Categories should be unique (categoryArray asSet size = categoryArray size)",				"",				"categoryStops",				"       - holds the index of last element belonging to each category.",				"       There should be a category stop for each category (categoryStops size = categoryArray size).",				"       The categoryStops should be sorted (categoryStops sorted = categoryStops).",				"       A category stop equal to its predecessor (= 0 for the first category stop) denotes an empty category.",				"",				"elementArray",				"      - holds the elements to be classified. The elements are sorted by category.",				"",				"Class variables",				"       Default is the default category used to classify yet unclassified methods of a class",				"       NullCategory is the category to be displayed in a Browser for a class having no method."			],			"category" : "Kernel-Classes"		},		"MWHandlerCounting" : {			"hash" : 3383552,			"definition" : "MWHandlerPrePostPlugging subclass: #MWHandlerCounting\r\tinstanceVariableNames: 'count'\r\tclassVariableNames: ''\r\tpackage: 'MethodWrappers'",			"comment" : [				"```",				"methods := (BaselineOfDocumaps allPackageNames collect: [ :each | each asPackage ]) flatCollect: [ :each | each methods ].",				"",				"wrappers := methods collect: [ :each | MethodTemperatureWrapper on: each ].",				"wrappers do: [ :each | each install ].",				"",				"\"open the application here \"",				"    ",				"wrappers do: [ :each | each uninstall ].",				"wrappers := (wrappers sorted: [:a :b | a count <= b count]) collect: [:e | e count -> e].",				"",				"\"find one method\"",				"",				"wrappers detect: [ :e |  e value method = (PdmStandardNames>>#getOwnPersonIdForUserName:) ]",				"```"			],			"category" : "MethodWrappers"		},		"ZipStringMember" : {			"hash" : 1344768,			"definition" : "ZipArchiveMember subclass: #ZipStringMember\r\tinstanceVariableNames: 'contents stream'\r\tclassVariableNames: ''\r\tpackage: 'Compression-Archives'",			"comment" : [				"ZipStringMember instances are used to represent files that are going to be written to a ZipArchive.",				"Their data comes from in-image strings, though."			],			"category" : "Compression-Archives"		},		"ReStringConcatenationRule" : {			"hash" : 3951616,			"definition" : "ReNodeMatchRule subclass: #ReStringConcatenationRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Check for string concatenation inside some iteration message. Since string concatenation is O(n^2), it is better to use streaming since it is O(n) - assuming that n is large enough. As a general principal avoid , since the receiver is copied. Therefore chaining , messages will lead to multiple useless copies of the receiver. ",				"",				"Instead of writing",				"\t| string | ",				"\tstring := String new.",				"\t#(1 2 3) do: [ :each |",				"\t\tstring := string, each asString].",				"\t^ string",				"",				"Write, it is much more efficient.",				"",				"\tString streamContents: [:s | ",				"\t\t#(1 2 3)  do: [:each | s nextPutAll: each asString]]",				"\t",				"or more concisely...",				"\t'''' join: {1. 1+1. 3}\t"			],			"category" : "GeneralRules-Migrated"		},		"NetNameResolver class" : {			"hash" : 1364480,			"definition" : "NetNameResolver class\r\tinstanceVariableNames: ''",			"comment" : [				"This class implements TCP/IP style network name lookup and translation facilities.",				"",				"Attempt to keep track of whether there is a network available.",				"HaveNetwork\ttrue if last attempt to contact the network was successful.",				"LastContact\t\tTime of that contact (totalSeconds).",				"haveNetwork\treturns true, false, or #expired.  True means there was contact in the last 30 minutes.  False means contact failed or was false last time we asked.  Get out of false state by making contact with a server in some way (FileList or updates)."			],			"category" : "Network-Kernel-Base"		},		"IceRootDefinition" : {			"hash" : 6184192,			"definition" : "IceDefinition subclass: #IceRootDefinition\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Changes'",			"comment" : [				"I am an IceDefinition representing the repository root. I contain all packages, directories and files of the repository. I'm not meant to be shown.",				"",				"See my superclasses for more information."			],			"category" : "Iceberg-Changes"		},		"RGEnvironment" : {			"hash" : 5257216,			"definition" : "RGObject subclass: #RGEnvironment\r\tinstanceVariableNames: 'announcer behaviors packages globalVariables backend queryInterface version'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Environment'",			"comment" : [				"I'm a representation of a Pharo environment that contains behaviors, packages and global variables. I have my own announcer for processing of events inside of the environment. ",				"",				"I'm connected to a data source - backend, that provides me real data I'm working with. ",				"",				"In most cases, you should communicate with me using my query interface. You will get it by sending me a message #ask."			],			"category" : "Ring-Core-Environment"		},		"SDL_Renderer" : {			"hash" : 4075520,			"definition" : "SDL2Handle subclass: #SDL_Renderer\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpoolDictionaries: 'SDL2Constants SDL2Types'\r\tpackage: 'OSWindow-SDL2-Bindings'",			"comment" : [				"I represent a handle of SDL rendering context, coming from SDL2 library"			],			"category" : "OSWindow-SDL2-Bindings"		},		"PluggableDialogWindow" : {			"hash" : 1948416,			"definition" : "ModelDependentDialogWindow subclass: #PluggableDialogWindow\r\tinstanceVariableNames: 'statusValue buttons contentMorph applyChangesSelector defaultFocusMorph'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Windows'",			"comment" : [				"Pluggable form of dialog window supporting custom selector on model for applying changes along with configurable content and buttons."			],			"category" : "Polymorph-Widgets-Windows"		},		"SpMorphicGridLayout" : {			"hash" : 2575360,			"definition" : "LayoutPolicy subclass: #SpMorphicGridLayout\r\tinstanceVariableNames: 'calculating layout'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Layout'",			"comment" : [				"I'm a grid layout.",				"I can arrange submorphs in a grid according to its properties (position and span, see GrisLayoutProperties), and according certain layout properties: ",				"",				"- columnHomogeneous -> weather a columns will have same size.",				"- rowHomogeneous -> weather a row will have same size. ",				"- padding -> the padding to start drawing cells",				"- colSpacing -> the column space between cells",				"- rowSpacing -> the row space between cells",				"",				"WARNING: I'm designed to work for Spec. While any other morph could benefit from this layout, tipic properties of morphic (like vResizing and hResizing) can not behave as expected. "			],			"category" : "Spec2-Adapters-Morphic-Layout"		},		"CalendarPresenter" : {			"hash" : 2098432,			"definition" : "ComposablePresenter subclass: #CalendarPresenter\r\tinstanceVariableNames: 'previousMonthButton nextMonthButton monthYearLabel namesOfDaysLabels daysButtons whenDaySelectedBlock'\r\tclassVariableNames: ''\r\tpackage: 'Spec-PolyWidgets-Widgets'",			"comment" : [				"I am a composable presenter to show a calendar to the user.",				"",				"See my example methods on class side."			],			"category" : "Spec-PolyWidgets-Widgets"		},		"RSKeyNavigationCanvasInteraction" : {			"hash" : 5722624,			"definition" : "RSAbstractControlCanvasInteraction subclass: #RSKeyNavigationCanvasInteraction\r\tinstanceVariableNames: 'steps speed animation speedMult'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Controls'",			"comment" : [				"I add key events to the view to move it, zoom it with the key board"			],			"category" : "Roassal3-Interaction-Controls"		},		"FreeTypeNameParser" : {			"hash" : 760576,			"definition" : "Object subclass: #FreeTypeNameParser\r\tinstanceVariableNames: 'combinedName familyNameIn styleNameIn delimiters tokens extractedSlant extractedSlantValue extractedUpright extractedStretch extractedWeight italicFlag boldFlag extractedWeightValue extractedStretchValue'\r\tclassVariableNames: ''\r\tpackage: 'FreeType-FontManager'",			"comment" : [				"A name parser"			],			"category" : "FreeType-FontManager"		},		"ReCascadedNextPutAllsRule" : {			"hash" : 3933184,			"definition" : "ReNodeRewriteRule subclass: #ReCascadedNextPutAllsRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Use cascaded nextPutAll:''s instead of #, in #nextPutAll:.",				"Indeed this is really important to understand that the implementation of the concatenation of strings creates a new string for each uses of ,.",				"Therefore if you use five , to concatenate an expression you create 5 intermediate strings for nothing. Using nextPutAll: just add the string in the stream.",				"",				"Have a look at  streamContents:. Here is an example",				"",				"String streamContents: [ :s|",				"\t\ts nextPutAll: '---'.",				"\t\ts nextPutAll: self.",				"\t\ts nextPutAll: '---' ]."			],			"category" : "GeneralRules-Migrated"		},		"ZdcPluginSSLSession" : {			"hash" : 1427712,			"definition" : "ZdcAbstractSSLSession subclass: #ZdcPluginSSLSession\r\tinstanceVariableNames: 'handle'\r\tclassVariableNames: ''\r\tpackage: 'Zodiac-Core'",			"comment" : [				"I am ZdcPluginSSLSession, an object managing the secure communication between two parties.",				"",				"I am a ZdcAbstractSSLSession.",				"",				"I am a wrapper for the SqueakSSL plugin.",				"",				"I am probably too primitive to be used directly, see ZnSecureSocketStream for a higher level client.",				"",				"Ackowledgement: based on the original SqueakSSL code."			],			"category" : "Zodiac-Core"		},		"RSColoredTreePalette" : {			"hash" : 5772544,			"definition" : "RSObject subclass: #RSColoredTreePalette\r\tinstanceVariableNames: 'shapes totalNumberOfLeaves alpha'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Colors'",			"comment" : [				"Set the colors on a tree, based on the number of leaves",				"",				"```",				"c := RSCanvas new.",				"nodes := RSBox models: (1 to: 10).",				"c addAll: nodes.",				"nodes @ RSPopup.",				"lb := RSLineBuilder orthoVertical.",				"lb withVerticalAttachPoint.",				"lb shapes: nodes.",				"lb connectFrom: [ :nb | nb // 2 ].",				"",				"RSTreeLayout on: nodes.",				"",				"c @ RSCanvasController.",				"",				"ctp := RSColoredTreePalette new.",				"ctp shapes: c nodes.",				"ctp assignColor.",				"",				"c.",				"```",				"",				"```",				"m := RSMondrian new.",				"m nodes: Collection withAllSubclasses.",				"",				"m orthoVerticalLine ",				"\tconnectFrom: #superclass.",				"m layout tree.",				"m normalizeSize: #numberOfLinesOfCode.",				"m build.",				"",				"ctp := RSColoredTreePalette new.",				"ctp shapes: m canvas nodes.",				"ctp assignColor.",				"",				"m canvas",				"```",				""			],			"category" : "Roassal3-Colors"		},		"CriticToolbar" : {			"hash" : 1703168,			"definition" : "ComposablePresenter subclass: #CriticToolbar\r\tinstanceVariableNames: 'ruleHolder criticHolder browseModel falsepositiveModel transformModel'\r\tclassVariableNames: ''\r\tpackage: 'Tool-CriticBrowser-Parts'",			"comment" : [				"I am the toolbar for a selected SmallLint Critic in the critic browser.",				"",				"",				"Instance Variables",				"\tbrowseModel:\t\t<Object>",				"\tcriticHolder:\t\t<Object>",				"\tfalsepositiveModel:\t\t<Object>",				"\truleHolder:\t\t<Object>",				"\ttransformModel:\t\t<Object>",				"",				"browseModel",				"\t- xxxxx",				"",				"criticHolder",				"\t- xxxxx",				"",				"falsepositiveModel",				"\t- xxxxx",				"",				"ruleHolder",				"\t- xxxxx",				"",				"transformModel",				"\t- xxxxx"			],			"category" : "Tool-CriticBrowser-Parts"		},		"ZnServer class" : {			"hash" : 1419776,			"definition" : "ZnServer class\r\tinstanceVariableNames: ''",			"comment" : [				"I am ZnServer, an abstract superclass of HTTP Servers.",				"I am a facade for controlling a default server implementation.",				"",				"I delegate my public class protocol methods to #defaultServerClass.",				"",				"  ZnServer startDefaultOn: 1701.",				"  ZnClient new get: 'http://localhost:1701'.",				"",				"Subclasses can register with me to have start/stop sent to them on System startUp/shutDown.",				"The default server instance will be registered automatically when it is started.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Client-Server"		},		"RPackage class" : {			"hash" : 1097984,			"definition" : "RPackage class\r\tinstanceVariableNames: ''",			"comment" : [				"A RPackage is a new implementation of package. Note that it does not touch classes but it is just a layer on top of classes therefore removing a method from a package does not change the underlying class. ",				"",				"",				"Instance Variables",				"\tclassDefinedSelectors:\t\tDictionary",				"\tclassExtensionSelectors:\t\tDictionary",				"\tmetaclassDefinedSelectors:\t\tDictionary",				"\tmetaclassExtensionSelectors:\t\tDictionary",				"\tpackageName:\t\tString",				"\tclasses: OrderedCollection of Symbols",				"\tclassTags: is a mapping from tags to classNames",				"",				"The reason we use four dictionaries is that this way we only store #Point in both as the class and the metaclass are involved. We do not have to with Point_class problem when comparing defined and extended classes. The idea is taken from the RBSelectorEnvironment. \t\t\t\t\t",				"\t\t",				"Class Invariant one:",				"\tClasses should not contain metaclass name, but only class names",				"\t",				"\t",				"",				"Implementation notes ",				"====================",				"This class went over 3 internal representations implementation. ",				"\t- first: \ta list of class + two dictionaries: class * methods",				"\tThis was not good since we add to go all the time over the list of classes.",				"\t- second: 4 dictionaries class * selectors ",				"\tThis was not good since we want to have defined classes without methods. ",				"\t- third: 4 dictionaries + definedClasses",				"",				"Originally I wanted to avoid to have a defined class list and I wanted to avoid to have to declare the class as defined. But this is not really good since",				"\t- we will want to know if a class definition (without method for example is defined in a given package)",				"\t- second this is easier to hook the packageOf: behavior (we register the package class when the class is \tadded to the package).",				"",				"defined classes information is redundant with the dictionary keys of defined methods but we would have to check and register the class to the packageOrganizer the first time a method is defined then also check on remove to unregister the class from the packageOrganizer.",				"",				"Adding a method does not define the class as a defined package class. This has to be done explictly. The reason for this choice is that a class should register to the packageOrganizer and that I do not want to do it each time a method is added and I do not want to test it each time a method is added. Now this is done only when the class is declared as defined. ",				"We could also give the complete freedom to the client to register the class but I thought it was a good compromise. ",				"\t",				"\t",				"ClassTag are tags that can be associated to classes. They help user organizing their class internal. ",				"So that we can have a package infrastructure as follows:",				"\tPackage1",				"\t\tClassA",				"\t\tClassB",				"\tin case there is no tags associated to the package",				"\tor",				"\tPackage2\t",				"\t\tTag1",				"\t\t\tClassA",				"\t\t\tClassB",				"\t\tTag2",				"\t\t\tClassC",				"\t\t\tClassD",				"\t\t\tClassE",				"\t\t\tClassA\t\t",				"\t",				"Todo",				"====",				"\tNext: ",				"\t- finish ",				"\t- build up a synchronizer that import PackageInfo.",				"\t",				"",				"\t",				"",				"\t"			],			"category" : "RPackage-Core-Base"		},		"FreeTypeFontProvider" : {			"hash" : 711936,			"definition" : "AbstractFontProvider subclass: #FreeTypeFontProvider\r\tinstanceVariableNames: 'fileInfos fileInfoCache tempFileInfos families tempFamilies fontInstallers'\r\tclassVariableNames: ''\r\tpackage: 'FreeType-FontManager'",			"comment" : [				"This is a font provider for true type fonts. You can use it to add TTF files to your image:",				"",				"FreeTypeFontProvider current ",				"\tupdateFontsFromSystem;",				"\tupdateAvailableFontFamilies. ",				"",				"You can add TTF fonts from a spetial dirrectory:",				"FreeTypeFontProvider current ",				"\tupdateFromDirectory: './fonts/' asFileReference done: Set new.",				"",				"Then you can use font dialog:",				"\tFreeTypeFontSelectorDialogWindow new open.",				"",				"Or set for example set ballon or default font as following:",				"\tStandardFonts balloonFont: ",				"\t        (LogicalFont familyName: 'Arial'  pointSize: 10). ",				"\tStandardFonts defaultFont: ",				"\t        (LogicalFont familyName: 'Arial'  pointSize: 10)."			],			"category" : "FreeType-FontManager"		},		"OSWindow class" : {			"hash" : 4041984,			"definition" : "OSWindow class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a central class, which provides a top-level API for creating/controlling an operating-system windows.",				"",				"To create a new OS window with default attributes, just use",				"",				"OSWindow new.",				"",				"For better control of window creation, use ",				"",				"OSWindow createWithAttributes: ...",				"",				"message. (See OSWindowAttributes for description).",				"",				"A newly created OSWindow instance can be used and controlled by application.",				"To handle events (mouse/keyboard) of newly created window, one must ",				"bind own event handler to it (#eventHandler:) which must understand #handleEvent: message.",				"",				"To render on window's surface, first application must obtain an OSWindowRenderer instance.",				"Currently there's two kinds of renderers available:",				"- form renderer (to use existing form for updating window's contents)",				"- opengl renderer (to render using OpenGL).",				"",				"OSWindow instance and its handle: ",				" - all operations with window (like hiding/showing/resizing etc) is possible only if its handle is valid. If window gets destroyed, or image opened in a new session while window was created in previous session, the handle becomes invalid, and any operations will lead to error. ",				"To test if window is still valid, you can just use #isValid message.",				"",				"Text input",				"",				"Why does OSWindow need a text input API?",				"When I press a key on my keyboard, my program receives a character event, right?",				"Well, it's not always that simple. Sometimes it can take multiple key presses to produce a character. Sometimes a single key press can produce multiple characters.",				"Text input is not as simple as it seems, particularly when you consider International users (and you should). It's not hard to figure out why that is when you look at languages like Chinese, Japanese, and Korean. These languages, collectively referred to as the CJK, have thousands of symbols.",				"It would not be feasible to have a keyboard with over ten-thousand keys, would it? The solution to this is a software input method.",				"",				"Related methods:",				" - startTextInput",				" - stopTextInput",				" - isTextInputActive",				"",				"(reference https://wiki.libsdl.org/Tutorials/TextInput)"			],			"category" : "OSWindow-Core-Base"		},		"MalCyclesCoverage" : {			"hash" : 1762560,			"definition" : "MalTarjan subclass: #MalCyclesCoverage\r\tuses: MalTNormalize\r\tinstanceVariableNames: 'circuits sccExtractorClass'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcircuits:\t\t<Object>",				"\tsccExtractorClass:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Moose-Algos-Graph"		},		"FreeTypeCacheConstants class" : {			"hash" : 1901568,			"definition" : "FreeTypeCacheConstants class\r\tinstanceVariableNames: ''",			"comment" : [				"Constants for the FreeType cache"			],			"category" : "FreeType-Cache"		},		"SoundTheme" : {			"hash" : 1881856,			"definition" : "Object subclass: #SoundTheme\r\tinstanceVariableNames: 'sounds'\r\tclassVariableNames: 'Current UseThemeSounds'\r\tpackage: 'Polymorph-Widgets-Themes'",			"comment" : [				"Groups a set of sounds to use with a UITheme.",				"Note that, although instances may have their sounds changed the settings will still indicate the class of theme that is current."			],			"category" : "Polymorph-Widgets-Themes"		},		"ParametrizedTestMatrix" : {			"hash" : 374016,			"definition" : "Object subclass: #ParametrizedTestMatrix\r\tinstanceVariableNames: 'selector options cases'\r\tclassVariableNames: ''\r\tpackage: 'ParametrizedTests-Core'",			"comment" : [				"I represent the test configuration matrix of all the cases.",				"Check the examples to see how to use me."			],			"category" : "ParametrizedTests-Core"		},		"ZipFileMember" : {			"hash" : 1343744,			"definition" : "ZipArchiveMember subclass: #ZipFileMember\r\tinstanceVariableNames: 'externalFileName stream localHeaderRelativeOffset dataOffset'\r\tclassVariableNames: ''\r\tpackage: 'Compression-Archives'",			"comment" : [				"ZipNewFileMember instances are used to represent files that have been read from a ZipArchive.",				"Their data stays in the file on disk, so the original Zip file cannot be directly overwritten."			],			"category" : "Compression-Archives"		},		"SpOverlayLayout" : {			"hash" : 2148608,			"definition" : "SpExecutableLayout subclass: #SpOverlayLayout\r\tinstanceVariableNames: 'singleChild overlays'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Layout-Overlay'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\toverlays:\t\t<Object>",				"\tsingleChild:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Layout-Overlay"		},		"SpecWrapperTableLayout" : {			"hash" : 982016,			"definition" : "SpecTableLayout subclass: #SpecWrapperTableLayout\r\tinstanceVariableNames: 'elementAdded'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Layout-Layouts'",			"comment" : [				"A SpecWrapperTableLayout is a variant of SpecTableLayout that is a  wrapper around a single element.",				"It is used to set hResizing, vResizing, and/or some other properties affecting layout."			],			"category" : "Spec-Layout-Layouts"		},		"RSBorder" : {			"hash" : 5685504,			"definition" : "RSObject subclass: #RSBorder\r\tinstanceVariableNames: 'width style paint'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Border'",			"comment" : [				"I represent borders and line styles.",				"",				"A same border can be shared amoung different shapes. Here is an example:",				"",				"```Smalltalk",				"c := RSCanvas new.",				"",				"b := RSBorder new color: Color blue.",				"(30 to: 50 by: 5) do: [ :nb |",				"\tbox := RSBox new size: nb.",				"\tellipse := RSEllipse new width: nb; height: nb + 10.",				"\tbox border: b.",				"\tellipse border: b.",				"\tc add: box; add: ellipse.",				"\t ].",				"",				"RSFlowLayout on: c shapes.",				"c @ RSCanvasController.",				"c open",				"```",				"",				"Another example, using animation: ",				"```Smalltalk",				"c := RSCanvas new.",				"",				"b := RSBorder new color: Color blue.",				"b dashArray: #(5 1 5).",				"(30 to: 60) do: [ :nb |",				" box := RSBox new size: nb.",				" ellipse := RSEllipse new width: nb; height: nb + 10.",				" box border: b.",				" ellipse border: b.",				" c add: box; add: ellipse.",				"  ].",				"",				"RSFlowLayout on: c shapes.",				"c @ RSCanvasController.",				"",				"c newAnimation ",				" from: 0;",				" to: 40;",				" on: b set: #dashOffset:.",				"c open",				"```"			],			"category" : "Roassal3-Shapes-Border"		},		"SmalllintManifestChecker" : {			"hash" : 1699584,			"definition" : "RBSmalllintChecker subclass: #SmalllintManifestChecker\r\tinstanceVariableNames: 'manifestClassCache'\r\tclassVariableNames: ''\r\tpackage: 'Manifest-Core-Base'",			"comment" : [				"SmalllintManifestChecker is responsible for running a set of rules on a given subsystem.",				"",				"| rules checker | ",				"rules := RBCompositeLintRule allGoodRules resetResult.",				"",				"\"the resetResult is necessary because it will build a knid of cache of the result",				"and this cannot be done automatically (for example you may want to run several rules without invalidating the results). \"",				"",				"checker := SmalllintManifestChecker new",				"\trunRules: rules onPackage: (RPackageOrganizer default packageNamed: #'Manifest-Core')."			],			"category" : "Manifest-Core-Base"		},		"ClyBrowserItem" : {			"hash" : 4838912,			"definition" : "Object subclass: #ClyBrowserItem\r\tinstanceVariableNames: 'position name depth properties actualObject type isPrepared'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-NavigationModel-Model'",			"comment" : [				"I wrap actual object retrieved by query and extend it with information required for the browser:",				"- name of item",				"- type of item (a class)",				"- position inside result items",				"- depth inside items hierarchy (if hierarchycal result was built)",				"- properties about actual object",				"",				"For example you can query classes from system. The result can be sorted by name. Or classes can be arranged in subclass hierarchy. ",				"In first case I will represent particular class with one position and zero depth. But in another case position of same class will be different and depth could be not zero.",				"\t",				"Properties are represented by first class objects: subclasses of ClyProperty. To add and access them use following messages:",				"\t- addProperty: aProperty",				"\t- getProperty: aPropertyClass",				"\t- getProperty: aPropertyClass ifAbsent: aBlock",				"\t- hasProperty: aPropertyClass",				"",				"There are special kind of properties for specific purposes:",				"",				"There is hierarchy of item tags represented by subclasses of ClySimpleTag. They allow mark object with specific tag. For example there is ClyAbstractItemTag which is used to mark abstract classes and methods.",				"You can use following methods to manage tags:",				"\t- markWith: aSimpleTagClass",				"\t- isMarkedWith: aSimpleTagClass. It is analogue to #hasProperty:",				"",				"There is special property ClyItemChildrenTag to mark object that it includes particilar kind of children. Kind of children is represented by class of children type.",				"For example you can mark class with methods:",				"\tclassItem markWithChildrenOf: ClyMethod.",				"To check that object has particular children use:",				"\tclassItem hasChildrenOf: ClyMethod",				"",				"Another special kind of property is ClyItemLocalHierarchyProperty. It includes number of all local children which exists in item query result. ",				"For example if you look at classes as a hierarchy then you can see Object and its subclasses. This hierarchy can be limited by package scope.",				"So in case of one particular package Object can have 10 subclasses. But in another package it can be 30 (for example).",				"And ClyItemLocalHierarchyProperty represents such local hierarchy size. To access it use following methods:",				"\t- localHierarchySize",				"\t- localHierarchySize: count",				"ClyItemLocalHierarchyProperty is used by tools to organize tree view for list of items which provide local hierarchy by themselves. Item has no real list of children. But instead it knows count of internal tree. It allows tool hide right number of items when given parent node needs to be collapsed. Important condition here is that property must hold count of full subtree of local hierarchy (not just first level children).",				"",				"I collect properties using environment plugins. Query result prepares own browser items lazely when they should be returned to the user:",				"",				"\taBrowserItem prepareIn: environment",				"",				"But actual preparation is delegated to plugins:",				"",				"\tenvironment pluginsDo: [ :each | aBrowserItem decorateBy: each].",				"",				"So every plugin decorates item with properties. At the end decoration is dispatched to the item type which sends concrete typed message back to the plugin. ",				"For example method decoration is evaluated to:",				"",				"\taPlugin decorateBrowserItem: aBrowserItem ofMethod: aBrowserItem actualObject.",				"\t",				"Properties computation can be heavy process and I use special flag #isPrepared to collect them only once.",				"",				"To create my instances there is class side method:",				"",				"\tClyBrowserItem named: aString with: anObject",				"",				"But normally you should ask anObject directly: ",				"\t",				"\tanObject asCalypsoBrowserItem",				"",				"During instance creation I collect the type of given object:",				"",				"\tanObject calypsoEnvironmentType ",				"",				"The idea behind item type is to separate it from object class to not depends on single implementation of particular kind of objects. For example there is CompiledMethod, RGMethodDefinition and RG2MethodDefinition. They all represent different model of methods. But for the browser it is important to work with them in same way. So all of them return ClyMethod class as calypsoEnvironmentType. It allows avoid duplication of methods by delegating actual logic to the reusable item type class. ",				"For example system browser defines commands to be used in context of selected methods. It uses ClyMethod type to attach commands to methods. And they available and work independently from concrete method class. ",				"But by default the calypso type is the class of object. And it is not necessery to introduce separate type for every kind of item.",				"",				"I provide several methods to compare items: ",				"",				"- isSameAs: anotherBrowserItem",				"It checks that receiver and argument represent same actual object. The #same meaning is based on item type to which I delegate actual comparison:",				"",				"\ttype checkCalypsoItem: actualObject isSameAs: anotherBrowserItem actualObject",				"",				"- isEqualTo: anotherBrowserItem ",				"It checks that receiver and argument represent equal actual objects. The #equal meaning is based on item type to which I delegate actual comparison:",				"\ttype checkCalypsoItem: actualObject isEqualTo: anotherBrowserItem actualObject",				"",				"- isSimilarTo: anotherBrowserItem",				"It is very weak comparison which return true for two equaly named items of same type. If they are named differently then isEqualTo: comparison will be result.",				"The method is used in browser logic to restore desired selection. For example when user selects new class which has the method similar to the prevous method selection of another class.",				"",				"As you see comparison logic is also delegated to the item type. So in method example all method implementations do not need to duplicate them.",				"",				"There are few other testing methods:",				"",				"- representsItemOfType: itemType",				"It check that browser item belongs to the given type. It uses #includesBehaviour: logic.",				"",				"- representsObject: anObject",				"It checks that browser item represents same object as argument. Actual comparison is delegated to the item type.",				"",				"- representsObjectEqualTo: anObject",				"It checks that browser item represents object equal to argument. Actual comparison is delegated to the item type.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tactualObject:\t\t<Object>",				"\tname:\t\t<String>",				"\tposition:\t\t<Number>",				"\tdepth:\t\t<Number>",				"\ttype: <Class>",				"\tproperties:\t\t<Collection of<ClyProperty>>",				"\tisPrepared:\t\t<Boolean>\t"			],			"category" : "Calypso-NavigationModel-Model"		},		"Variable class" : {			"hash" : 841984,			"definition" : "Variable class\r\tinstanceVariableNames: ''",			"comment" : [				"I am an abstract class. Subclasses of me model meta objects for any kind of variables: ",				"",				"- slots (instance variables)",				"- literal variables (Class, Global, Pool) and ",				"- local variables of methods (temps and args). ",				"",				"Being a superclass for LiteralVariable I have a restriction on my layout: I can only have a single instance variable representing the variable #name",				"\t\t\t\t\t\t\t\tDO NOT ADD ANY NEW STATE TO ME.",				"",				"This restriction is required because LiteralVariable encodes global references in the method literals and therefore there is an expectation from the VM on particular shape of these objects.",				"",				"At this step I only pulled a duplicated protocol of properties from my subclasses. But more cleanup is comming:",				"- breakpoints",				"- metalinks",				"- queries",				"- refactoring commands",				"",				"Internal Representation and Key Implementation Points.",				"",				"Instance Variables",				"\tname:\t\t<Symbol>"			],			"category" : "Kernel-Variables"		},		"RSMouseDragging" : {			"hash" : 5659392,			"definition" : "RSAbstractMouseEvent subclass: #RSMouseDragging\r\tinstanceVariableNames: 'step'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Event'",			"comment" : [				"When: during dragging of the element",				"Target: dragged element"			],			"category" : "Roassal3-Event"		},		"SpToolbarPresenter" : {			"hash" : 2225920,			"definition" : "SpAbstractWidgetPresenter << #SpToolbarPresenter\r\tslots: {\r\t\t\t #displayMode => ObservableSlot .\r\t\t\t #leftItems => ObservableSlot .\r\t\t\t #rightItems => ObservableSlot };\r\ttag: 'Widgets-Toolbar';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter to display a toolbar."			],			"category" : "Spec2-Core-Widgets-Toolbar"		},		"RSLocation" : {			"hash" : 5768448,			"definition" : "RSObject subclass: #RSLocation\r\tinstanceVariableNames: 'offset orientation direction fixedX fixedY'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-PositionAndResize'",			"comment" : [				"<keyClass>",				"`RSLocation` locates shapes with respect to other shapes. Shapes can be positioned in a sticky fashion or not. Being sticky means whether the base shapes \"drag\" the sitcky shapes when dragged. `RSLocation` iteratively builds constraint for moving and positioning a shape on top of another one.",				"",				"*Responsibility*: locate permanently or not some shapes with respect to other shapes.",				"",				"*Collaborators*: closely interact with `RSShape`, `RSExtentChangedEvent`, and `RSPositionChangedEvent`",				"",				"*Variables*:",				"- `offset`: offset between the positioned shape and the base shape",				"- `orientation`: a value that could be -1, 0, 1 indicating the orientation of the location",				"- `direction`: a point indicating the direction of the lcoation",				"",				"*Example*:",				"Here is a simple example:",				"```Smalltalk",				"c := RSCanvas new.",				"",				"box1 := RSBox new size: 50; color: Color gray translucent.",				"box2 := RSBox new size: 30; color: Color gray translucent.",				"box1 @ RSDraggable.",				"box2 @ RSDraggable.",				"c add: box1; add: box2.",				"",				"box1 translateBy: 150 @ -40.",				"",				"label := RSLabel new text: 'Move the mouse above me'.",				"c add: label.",				"RSLocation new ",				"\tabove;",				"\tstick: label on: box1.",				"c",				"```",				"",				"",				"```Smalltalk",				"c := RSCanvas new.",				"",				"g := RSGroup new.",				"g add: (RSLabel new text: 'Base shape, drag me').",				"baseShape := g asShape adjustToChildren.",				"baseShape color: #lightBlue.",				"baseShape @ RSDraggable.",				"c add: baseShape.",				"",				"redShape := RSBox new extent: 60 @ 30; color: #red.",				"c add: redShape.",				"",				"RSLocation new",				"\tbottom;",				"\touter;",				"\tright;",				"\toffset: 20;",				"\tstick: redShape on: baseShape.",				"\"Try changing stick:on: by move:on. Replacing bottom by top\"",				"c",				"```",				"",				"A more complex example:",				"",				"```Smalltalk",				"v := RSCanvas new.",				"",				"classes := Collection withAllSubclasses.",				"boxes := classes collect: [ :cls |",				"\tRSBox new",				"\t\twidth: (cls instVarNames size * 5 max: 5);",				"\t\theight: (cls numberOfMethods max: 5);",				"\t\tmodel: cls",				"] as: RSGroup.",				"",				"boxes @ RSDraggable.",				"v addAll: boxes.",				"",				"RSEdgeBuilder orthoVertical",				"\tcanvas: v;",				"\tattachPoint: RSVerticalAttachPoint new;",				"\tshapes: boxes;",				"\tconnectFrom: #superclass.",				"",				"boxes do: [ :b |",				"\t| t |",				"\tt := RSLabel new height: 2; text: b model name.",				"\tv add: t.",				"\tRSLocation new",				"\t\toffset: 1;",				"\t\tabove; center;",				"\t\tstick: t on: b.",				"].",				"",				"RSTreeLayout on: boxes.",				"v @ RSCanvasController.",				"v open",				"```"			],			"category" : "Roassal3-Layouts-PositionAndResize"		},		"AnnouncementSetWithExclusions" : {			"hash" : 852224,			"definition" : "AnnouncementSet subclass: #AnnouncementSetWithExclusions\r\tinstanceVariableNames: 'exclusions'\r\tclassVariableNames: ''\r\tpackage: 'Announcements-Core-Collections'",			"comment" : [				"I am an AnnouncementSet that explicitely does not handle a number of exclusion Announcements.",				"",				"You could define me by #- message:",				"",				"\tannouncer when: Announcement - ValueChanged do: [...].",				"\tannouncer when: Announcement - ValueChanged - ValueAdded do: [...].",				"\tannouncer when: ValueAdded, ValueRemoved - ValueAdded",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\texclusions:\t\t<OrderedCollection>"			],			"category" : "Announcements-Core-Collections"		},		"MorphTreeMorph" : {			"hash" : 1925376,			"definition" : "ScrollPane subclass: #MorphTreeMorph\r\tinstanceVariableNames: 'columns potentialDropMorph rowInset columnInset columnResizers withHLines preferedPaneColor indentGap expandedToggleImage notExpandedToggleImage resizerWidth gapAfterToggle hasToggleAtRoot topHeader topHeaderBackground unboundLastColumn columnDropUnabled columnColors rowColors nodeList iconBlock treeLineWidth lineColorBlock treeLineDashes listManager mouseOverAllowed maxNodeWidth enabled'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Tree'",			"comment" : [				"A MorphTreeMorph is a list and a tree in one easily customizable widget. A list or tree is made of nodes. Each node can be made of whatever object . This allows the use of morphs inside the tree. A MorphTreeMorph works with a model which must use the TMorphTreeModel trait. MorphTreeModel uses it and can serves  as the model or as a superclass for a specific tree model.",				"",				"Customizable columns:",				"Several customizable columns can be viewed. Columns are separated by resizers used in order to increase or decrease the columns width with the mouse.",				"A MorphTreeMorph can have a top header composed of buttons, one button per column. Such a button can have an icon and/or a title and may run some action when clicked on (a typical action is the ordering of the list). You can also allow column drag-and-drop so that a column  can be dynamically moved with a simple drop.",				"See this in action with following example:",				"-----------",				"ClassListExample new openOn: Collection",				"-----------",				"By default, the last column is not bounded, so that no resizer is added for it and threre exists no unused space between the last scroller and the right side of the whole tree. But, in some case one want to have a resizer also for the last column. This is the case for data grid as an example This is possible by sending #makeLastColumnBounded to the MorphTreeMorph.",				"Try it with:",				"-----------",				"SimpleGridExample new open",				"-----------",				"",				"Single and multi-selection:",				"A MorphTreeMorph implements single and multiple selection. Multi-selection is allowed by sending  #multiSelection: with true as argument. Several items can be selected with ctrl-click (or cmd-click on mac) or with shift-click (see MorphTreeMorphModel comments to see how to handle selection from the model).",				"Try multi-selection with following example:",				"------------",				"SimplestClassListExample new openOn: Collection",				"------------",				"",				"Double-click handling:",				"You can allow double-click just by indicating the message to send to the model with the doubleClickSelector: selector.",				"Try this with the package-tree example where double-clicking on a class node or or a method node open a browser on the class or on the method:",				"------------",				"PackageTreeExample new open",				"------------",				"",				"Long list handling:",				"For very long lists or trees, two kind of pager can be used to limit the number of items visible in the list. The idea  is that when you have very long lists, you most of the time do not  want to see all details but just want some visual support for what is in the list: ",				"- with a simple pager, you indicate how much items are to be seen in one page, the list items are viewed page by page,",				"- with a chunk pager you can expand either incrementally or  all-together the number of items once you get to the bottom of the existing items.",				"See SimplestClassListWithPagerExample and SimplestClassListWithChunkExample examples.",				"Try them with:",				"------------",				"SimplestClassListWithPagerExample new openOn: Object.",				"SimplestClassListWithChunkExample new openOn: Object.",				"------------",				"",				"Columns/rows coloring:",				"MorphTreeMorph makes it possible the coloring of either the columns or the rows. A MorphTreeMorph understands #rowColorForEven:odd: for rows coloring and columnColorForEven:odd: for columns coloring with two colors passed as argument (nil means no color). ",				"See following examples:",				"-------------",				"PackageTreeExample new open. \"For row coloring\"",				"ClassListExample new openOn: Collection. \"For column coloring\"",				"-------------",				"",				"Column drag and drop",				"A column can be dragged. Inside the tree, a column can be dropped into another one. Then, the two columns are swapped (the roughly implemented)",				"Try it with:",				"-------------",				"ClassListExample new openOn: Collection.",				"-------------",				"",				"",				"Instance Variables",				"\tautoDeselection:\t\t<Object>",				"\tautoMultiSelection:\t\t<Object>",				"\tcolumnColors:\t\t<Object>",				"\tcolumnDropUnabled:\t\t<Object>",				"\tcolumnInset:\t\t<Object>",				"\tcolumnResizers:\t\t<Object>",				"\tcolumns:\t\t<Object>",				"\tdoubleClickSelector:\t\t<Object>",				"\texpandedToggleImage:\t\t<Object>",				"\tgapAfterIcon:\t\t<Object>",				"\tgapAfterToggle:\t\t<Object>",				"\tgetListSelector:\t\t<Object>",				"\tgetSelectionSelector:\t\t<Object>",				"\thasToggleAtRoot:\t\t<Object>",				"\ticonReservedExtent:\t\t<Object>",				"\tindentGap:\t\t<Object>",				"\tkeystrokeActionSelector:\t\t<Object>",				"\tlastSelectedMorph:\t\t<Object>",				"\tlineColor:\t\t<Object>",				"\tmultipleSelection:\t\t<Object>",				"\tnodeList:\t\t<Object>",				"\tnodeSortBlock:\t\t<Object>",				"\tnotExpandedToggleImage:\t\t<Object>",				"\tpager:\t\t<Object>",				"\tpotentialDropMorph:\t\t<Object>",				"\tpreferedPaneColor:\t\t<Object>",				"\tresizerWidth:\t\t<Object>",				"\trowColors:\t\t<Object>",				"\trowInset:\t\t<Object>",				"\tscrollDeltaHeight:\t\t<Object>",				"\tselectedMorphList:\t\t<Object>",				"\tsetSelectionSelector:\t\t<Object>",				"\tshiftSelectedMorph:\t\t<Object>",				"\ttopHeader:\t\t<Object>",				"\ttopHeaderBackground:\t\t<Object>",				"\tunboundLastColumn:\t\t<Object>",				"\twithHLines:\t\t<Object>",				"",				"autoDeselection",				"\t- xxxxx",				"",				"autoMultiSelection",				"\t- xxxxx",				"",				"columnColors",				"\t- xxxxx",				"",				"columnDropUnabled",				"\t- xxxxx",				"",				"columnInset",				"\t- xxxxx",				"",				"columnResizers",				"\t- xxxxx",				"",				"columns",				"\t- xxxxx",				"",				"doubleClickSelector",				"\t- xxxxx",				"",				"expandedToggleImage",				"\t- xxxxx",				"",				"gapAfterIcon",				"\t- xxxxx",				"",				"gapAfterToggle",				"\t- xxxxx",				"",				"getListSelector",				"\t- xxxxx",				"",				"getSelectionSelector",				"\t- xxxxx",				"",				"hasToggleAtRoot",				"\t- xxxxx",				"",				"iconReservedExtent",				"\t- xxxxx",				"",				"indentGap",				"\t- xxxxx",				"",				"keystrokeActionSelector",				"\t- xxxxx",				"",				"lastSelectedMorph",				"\t- xxxxx",				"",				"lineColor",				"\t- xxxxx",				"",				"multipleSelection",				"\t- xxxxx",				"",				"nodeList",				"\t- xxxxx",				"",				"nodeSortBlock",				"\t- xxxxx",				"",				"notExpandedToggleImage",				"\t- xxxxx",				"",				"pager",				"\t- xxxxx",				"",				"potentialDropMorph",				"\t- xxxxx",				"",				"preferedPaneColor",				"\t- xxxxx",				"",				"resizerWidth",				"\t- xxxxx",				"",				"rowColors",				"\t- xxxxx",				"",				"rowInset",				"\t- xxxxx",				"",				"scrollDeltaHeight",				"\t- xxxxx",				"",				"selectedMorphList",				"\t- xxxxx",				"",				"setSelectionSelector",				"\t- xxxxx",				"",				"shiftSelectedMorph",				"\t- xxxxx",				"",				"topHeader",				"\t- xxxxx",				"",				"topHeaderBackground",				"\t- xxxxx",				"",				"unboundLastColumn",				"\t- xxxxx",				"",				"withHLines",				"\t- xxxxx"			],			"category" : "Morphic-Widgets-Tree"		},		"CoverageDemo" : {			"hash" : 3519232,			"definition" : "SpPresenter subclass: #CoverageDemo\r\tinstanceVariableNames: 'installMetalinkButton runCodeButton codePanelMorph metalinkBlock compiledMethods coverageCode'\r\tclassVariableNames: ''\r\tpackage: 'Reflectivity-Examples'",			"comment" : [				"I'm an example of how metalinks can be used to show the coverage of an execution.",				"",				"CoverageDemo open"			],			"category" : "Reflectivity-Examples"		},		"IceTipCache" : {			"hash" : 6260480,			"definition" : "Object subclass: #IceTipCache\r\tinstanceVariableNames: 'proxy objects'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-Model'",			"comment" : [				"I'm a cache that can be reseted when some announcements arrive. ",				"I'm used to cache values to be used on the UI.",				"",				"I can be reseted (sending #reset), but responsibility of reset caches belongs to presenters who use them."			],			"category" : "Iceberg-TipUI-Model"		},		"ReReturnInEnsureRule" : {			"hash" : 3949568,			"definition" : "ReNodeMatchRule subclass: #ReReturnInEnsureRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for return statements within ensure: blocks that can have unintended side-effects."			],			"category" : "GeneralRules-Migrated"		},		"MCDependencySorter" : {			"hash" : 273408,			"definition" : "Object subclass: #MCDependencySorter\r\tinstanceVariableNames: 'required provided orderedItems'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Loading'",			"comment" : [				"A MCDependencySorter computes the dependencies to a set of entities."			],			"category" : "Monticello-Loading"		},		"RBMethodNode" : {			"hash" : 1170176,			"definition" : "RBProgramNode subclass: #RBMethodNode\r\tinstanceVariableNames: 'scope selector keywordsPositions body source arguments pragmas replacements nodeReplacements compilationContext bcToASTCache'\r\tclassVariableNames: ''\r\tpackage: 'AST-Core-Nodes'",			"comment" : [				"RBMethodNode is the node that represents AST of a Smalltalk method.",				"",				"Some properties aren't known to the parser creating this Object. For example, the scope value isn't known by parsing the code but only after doing a",				"semantic analysis. Likewise, the compilation context isn't needed until we try to do the semantic analysis. ",				"",				"Instance Variables:",				"\targuments\t<SequenceableCollection of: RBVariableNode>\tthe arguments to the method",				"\tbody\t<BRSequenceNode>\tthe body/statements of the method",				"\tnodeReplacements\t<Dictionary>\ta dictionary of oldNode -> newNode replacements",				"\treplacements\t<Collection of: RBStringReplacement>\tthe collection of string replacements for each node replacement in the parse tree",				"\tselector\t<Symbol>\tthe method name",				"\tkeywordsPositions\t<IntegerArray | nil>\tthe positions of the selector keywords",				"\tsource\t<String>\tthe source we compiled",				"\tscope\t<OCMethodScope | nil> the scope associated with this code of this method",				"\tpragmas\t< SequenceableCollection of: RBPragmaNodes > Nodes representing the pragma statements in this method",				"\tcompilationContext\t<CCompilationContext | CompilationContext>"			],			"category" : "AST-Core-Nodes"		},		"ClyTestResultProperty" : {			"hash" : 5049600,			"definition" : "ClyProperty subclass: #ClyTestResultProperty\r\tinstanceVariableNames: 'allCount errorCount failureCount successCount'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemPlugins-SUnit-Queries'",			"comment" : [				"I provide information about result of running tests which are related to my environment item.",				"",				"My instances are created from method ot test case: ",				"",				"\tClyTestResultProperty ofMethod: aCompiledMethod.",				"\tClyTestResultProperty ofMethod: aTestCaseClass.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tallCount:\t\t<Integer>",				"\terrorsCount:\t\t<Integer>",				"\tfailuresCount:\t\t<Integer>",				"\tsuccessesCount:\t\t<Integer>"			],			"category" : "Calypso-SystemPlugins-SUnit-Queries"		},		"IceUndefinedRemote" : {			"hash" : 6204160,			"definition" : "IceRemote subclass: #IceUndefinedRemote\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Core'",			"comment" : [				"I am a null object representing a not found remote. I'm mainly used for polimorphism when the well known remote 'origin' is not found in the repository."			],			"category" : "Iceberg-Core"		},		"SpProgressBarPresenter" : {			"hash" : 2221824,			"definition" : "SpAbstractWidgetPresenter << #SpProgressBarPresenter\r\tslots: { #state => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter used to define a progress bar.",				"",				"`SpProgressBarPresenter` uses a strategy to define the kind of progress ba (It can be fixed at a value, indetermineted or progressing)."			],			"category" : "Spec2-Core-Widgets"		},		"MalTopologicalSorting" : {			"hash" : 1763584,			"definition" : "MalGraphAlgorithm subclass: #MalTopologicalSorting\r\tinstanceVariableNames: 'sortedElements verticesWithNoIncomingEdge'\r\tclassVariableNames: ''\r\tpackage: 'Moose-Algos-Graph'",			"comment" : [				"From wikipedia:",				"A topological sort (sometimes abbreviated topsort or toposort) or topological ordering of a directed graph is a linear ordering of its vertices such that for every directed edge uv from vertex u to vertex v, u comes before v in the ordering. For instance, the vertices of the graph may represent tasks to be performed, and the edges may represent constraints that one task must be performed before another; in this application, a topological ordering is just a valid sequence for the tasks. A topological ordering is possible if and only if the graph has no directed cycles, that is, if it is a directed acyclic graph (DAG). Any DAG has at least one topological ordering, and algorithms are known for constructing a topological ordering of any DAG in linear time."			],			"category" : "Moose-Algos-Graph"		},		"InteractiveResolver" : {			"hash" : 1282816,			"definition" : "FileSystemResolver subclass: #InteractiveResolver\r\tinstanceVariableNames: 'cache'\r\tclassVariableNames: ''\r\tpackage: 'FileSystem-Core-Base-Resolver'",			"comment" : [				"I resolve origins by consulting the user. I maintain a cache of the user's responses."			],			"category" : "FileSystem-Core-Base-Resolver"		},		"DTTreeNode" : {			"hash" : 2951680,			"definition" : "DTAbstractTreeNode subclass: #DTTreeNode\r\tinstanceVariableNames: 'name subResults contextMenuBlock subResultsAggregator browseBlock'\r\tclassVariableNames: ''\r\tpackage: 'DrTests-Model'",			"comment" : [				"I am a node from a tree used to show results in DrTestUI."			],			"category" : "DrTests-Model"		},		"FreeTypeSettings class" : {			"hash" : 1903104,			"definition" : "FreeTypeSettings class\r\tinstanceVariableNames: 'current'",			"comment" : [				"Settings for FreeType"			],			"category" : "FreeType-Settings"		},		"TFLongTestStruct class" : {			"hash" : 2034432,			"definition" : "TFLongTestStruct class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a test structure fill with longs"			],			"category" : "ThreadedFFI-Tests-Test-Structs"		},		"TFExternalAsyncCall" : {			"hash" : 2029568,			"definition" : "Object subclass: #TFExternalAsyncCall\r\tinstanceVariableNames: 'function semaphore arguments parameterArray index'\r\tclassVariableNames: ''\r\tpackage: 'ThreadedFFI-Base'",			"comment" : [				"I am an asynchronous call to an external function. I reference the function to call and the arguments of the call.",				"The function execution will happen in a separate thread, and meanwhile the current Pharo process is suspended without suspending the entire VM thread.",				"",				"For this purpose, I have a semaphore that is handed out to the primitive that executes the function.",				"Upon the return of the primitive (i.e., when the function execution finished is scheduled), I wait at the semaphore.",				"When the function execution is managed and finishes, the threaded FFI plugin will signal the semaphore and the calling Pharo process will be re-scheduled to be run."			],			"category" : "ThreadedFFI-Base"		},		"RGTraitV2DescriptionStrategy" : {			"hash" : 5246976,			"definition" : "RGBehaviorStrategy subclass: #RGTraitV2DescriptionStrategy\r\tinstanceVariableNames: 'layout'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tlayout:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"TreeChunkPagerMorph" : {			"hash" : 1966848,			"definition" : "TreeNavigationBarMorph subclass: #TreeChunkPagerMorph\r\tinstanceVariableNames: 'atBottom lastIndex pageSizeEditor nextPageAllowed'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Tree-Pagination'",			"comment" : [				"A chunk pager"			],			"category" : "Morphic-Widgets-Tree-Pagination"		},		"SHTextStyler" : {			"hash" : 1684992,			"definition" : "Object subclass: #SHTextStyler\r\tinstanceVariableNames: 'backgroundProcess text monitor view stylingEnabled'\r\tclassVariableNames: ''\r\tpackage: 'Shout-Styling'",			"comment" : [				"I am an Abstract class.",				"Subclasses of me can create formatted, coloured, and styled copies of Text that is given to them.",				"They may perform their styling asynchronously, in a background process which I create and manage.",				"",				"My public interface is...",				"",				"\tview: aViewOrMorph - set the view that will receive notifications when styling has completed.",				"\t",				"\tformat: aText - modifies aText's string",				"",				"\tstyle: aText - modifies the TextAttributes of aText, but does not change the string, then sends #stylerStyled: to the view.",				"",				"\tstyleInBackgroundProcess: aText - performs style: in a background process, then sends #stylerStylednBackground: to the view.",				"",				"\tstyledTextFor: aText - answers a formatted and styled copy of aText",				"",				"\tunstyledTextFrom: aText - answers a copy of aText with all TextAttributes removed",				"",				"Subclasses of me should re-implement...",				"",				"\tprivateFormat: aText - answer a formatted version of aText; the String may be changed",				"\tprivateStyle: aText - modify the TextAttributes of aText; but do not change the String",				"\t",				"",				"\t",				"\t"			],			"category" : "Shout-Styling"		},		"BeaconSignal" : {			"hash" : 383744,			"definition" : "Announcement subclass: #BeaconSignal\r\tinstanceVariableNames: 'timestamp processId properties'\r\tclassVariableNames: ''\r\tpackage: 'Beacon-Core-Signals'",			"comment" : [				"A `BeaconSignal` is a special kind of announcement that when emitted is passed to a central Beacon to which `SignalLogger`s may register. When registered loggers can then handle emitted signals: they can serialize them, store them in memory, or perform other treatments.",				"",				"By default a signal records the timestamp of its creation and the processId of its creator. ",				"It is specifically useful in the context of logging, and it serves as the superclass for custom signals. Users are encouraged to capture custom signals in explicit subclasses.",				"",				"The class also offers a property instance variable that can be used by custom loggers to capture specific logging parameters. Accessors to the concrete entries are meant to be wrapped in setters and getters.",				"",				"For example, a ClassicLogger may want to add the notion of a level to a signal. To this end, the ClassicLogger package would define:",				"",				"```",				"BeaconSignal >> level",				"    ^ self properties at: #level ifAbsent: [ LogLevel info ]",				"```",				"```",				"BeaconSignal >> level: aLevel",				"    ^ self properties at: #level put: aLevel",				"```\t"			],			"category" : "Beacon-Core-Signals"		},		"JoinSide" : {			"hash" : 3338752,			"definition" : "Object subclass: #JoinSide\r\tinstanceVariableNames: 'range offset lineRange highlights color text'\r\tclassVariableNames: ''\r\tpackage: 'Tool-Diff-Joins'",			"comment" : [				"The join side"			],			"category" : "Tool-Diff-Joins"		},		"ClassAPIHelpBuilder" : {			"hash" : 3008768,			"definition" : "HelpBuilder subclass: #ClassAPIHelpBuilder\r\tinstanceVariableNames: 'addSubclasses addMethods subclassesAsSeparateTopic addMethodsWithoutComment'\r\tclassVariableNames: ''\r\tpackage: 'HelpSystem-Core-Builders'",			"comment" : [				"A builder to build the API Help for a class",				"",				"Instance Variables",				"\taddMethods:\t\t<Boolean>",				"\taddSubclasses:\t\t<Boolean>",				"\tsubclassesAsSeparateTopic:\t\t<Boolean>",				"",				"addMethods",				"\t- When true the builder will include method help",				"",				"addSubclasses",				"\t- When true the builder will recursively go through and add subclasses",				"",				"subclassesAsSeparateTopic",				"\t- xxxxx"			],			"category" : "HelpSystem-Core-Builders"		},		"FullscreenMorph" : {			"hash" : 575744,			"definition" : "Morph subclass: #FullscreenMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Windows-Widgets'",			"comment" : [				"Provides for another morph to occupy the full screen area (less docking bars)."			],			"category" : "Morphic-Widgets-Windows-Widgets"		},		"RSColorPerlinGenerator" : {			"hash" : 2283520,			"definition" : "RSAbstractColorGenerator subclass: #RSColorPerlinGenerator\r\tinstanceVariableNames: 'perlin'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-Force'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Experimental-Force"		},		"MCMethodDefinition class" : {			"hash" : 268544,			"definition" : "MCMethodDefinition class\r\tinstanceVariableNames: ''",			"comment" : [				"A MCMethodDefinition represents a method definition. ",				"It captures the following information.",				"",				"Instance Variables",				"\tcategory:\t\t<Object>",				"\tclassIsMeta:\t\t<Object>",				"\tclassName:\t\t<Object>",				"\tselector:\t\t<Object>",				"\tsource:\t\t<Object>",				"\ttimeStamp:\t\t<Object>",				""			],			"category" : "Monticello-Modeling"		},		"VTermOutputStyles class" : {			"hash" : 1168384,			"definition" : "VTermOutputStyles class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a SharedPool for the style constants used by VTermOutputDriver"			],			"category" : "System-CommandLine-VTerm-Styling"		},		"ReBooleanPrecedenceRule" : {			"hash" : 3944448,			"definition" : "ReNodeMatchRule subclass: #ReBooleanPrecedenceRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks precedence ordering of & and | with equality operators. Since | and & have the same precedence as =, there are common mistakes where parenthesis are missing around the equality operators."			],			"category" : "GeneralRules-Migrated"		},		"DynamicPresentersListBuilder" : {			"hash" : 929792,			"definition" : "Object subclass: #DynamicPresentersListBuilder\r\tinstanceVariableNames: 'configurationBlock instVarCount dynamicPresenter nullPresentersInstVarNames layoutBuilder instVarToModelObject presenterBlock'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Dynamic-Builder'",			"comment" : [				"I allow to build a list of spec presenters into a DynamicComposablePresenter depending on an arbitrary number of objects.",				"",				"I also allow to specify the layout to use for these presenters.",				"",				"See",				"[[[",				"\tself example.",				"]]]"			],			"category" : "Spec-Core-Dynamic-Builder"		},		"ZnServerSession" : {			"hash" : 1422080,			"definition" : "Object subclass: #ZnServerSession\r\tinstanceVariableNames: 'id attributes created modified'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-HTTP-Support'",			"comment" : [				"I am ZnServerSession.",				"I represent an HTTP session in the context of a ZnServer.",				"",				"To get a reference to the current session, send #session to a ZnMessage (request or response).",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Support"		},		"RSAbstractAnimation" : {			"hash" : 5703424,			"definition" : "RSObject subclass: #RSAbstractAnimation\r\tuses: RSTAnnounceable\r\tinstanceVariableNames: 'announcer isRunning hasCompleted startTime endTime currentLoop startLoopTime loops delay isPaused startPauseTime endPauseTime pauseTime canvas'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Animation-Core'",			"comment" : [				"I am the abstract class that defines animations for roassal3"			],			"category" : "Roassal3-Animation-Core"		},		"ReIconHardcodedMessageRule" : {			"hash" : 4137984,			"definition" : "ReNodeRewriteRule subclass: #ReIconHardcodedMessageRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Rules'",			"comment" : [				"According to the new API you should use",				"",				"\tself iconNamed: #symbol",				"\t",				"Instead of",				"",				"\tSmalltalk ui icons iconNamed: #symbol"			],			"category" : "Polymorph-Widgets-Rules"		},		"MicMinimalConfiguration" : {			"hash" : 6560512,			"definition" : "Object subclass: #MicMinimalConfiguration\r\tinstanceVariableNames: 'newLine headingLevelOffset'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Utils'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\theadingLevelOffset:\t\t<Object>",				"\tnewLine:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Microdown-Utils"		},		"TreeColumnButtonMorph" : {			"hash" : 1962752,			"definition" : "SimpleButtonMorph subclass: #TreeColumnButtonMorph\r\tinstanceVariableNames: 'model icon'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Tree'",			"comment" : [				"A button in a morphic based tree"			],			"category" : "Morphic-Widgets-Tree"		},		"SelectionValueHolder" : {			"hash" : 687360,			"definition" : "NewValueHolder subclass: #SelectionValueHolder\r\tinstanceVariableNames: 'index selection'\r\tclassVariableNames: ''\r\tpackage: 'NewValueHolder-Core-Base'",			"comment" : [				"I am especially designed to contain a list selection (an index + an object)"			],			"category" : "NewValueHolder-Core-Base"		},		"SharedRandom class" : {			"hash" : 1129472,			"definition" : "SharedRandom class\r\tinstanceVariableNames: 'global'",			"comment" : [				"I represent a Random number generator that can be shaded between different code.",				"",				"I wrap the access to my parent's functionality (#next, #nextInt: and #next:into:)  through a mutex making me safe for multi threaded use.",				"",				"To access the default shared random number generator, do:",				"",				"\tSharedRandom globalGenerator.",				"\t",				"In principle it is better to use a shared generator since multiple users will create a more random pattern."			],			"category" : "Random-Core-Base"		},		"SimpleServiceEntry" : {			"hash" : 1432320,			"definition" : "Model subclass: #SimpleServiceEntry\r\tinstanceVariableNames: 'provider label selector usingLineAfter stateSelector description argumentGetter buttonLabel'\r\tclassVariableNames: ''\r\tpackage: 'System-FileRegistry-Base'",			"comment" : [				"I represent a service",				"",				"provider : the service provider",				"label : to be display in a menu",				"selector : to do the service",				"useLineAfter",				"stateSelector : a secondary selector (to be able to query state of the provider for example)",				"description : a description for balloon for example",				"argumentGetter : a selector to get additional arguments with (if selector requires them)",				"buttonLabel : a short label",				"",				"The entire client interface (provided by FileList and other users of the registry)",				"is this (browse #getArgumentsFrom: and the ",				"senders of #argumentGetter:):",				"",				"fullName (returns a String with the full filename)",				"dirAndFileName (returns {directory. fileName})",				"readOnlyStream (returns an open read-only stream)"			],			"category" : "System-FileRegistry-Base"		},		"RPackage" : {			"hash" : 1098240,			"definition" : "Object subclass: #RPackage\r\tinstanceVariableNames: 'classDefinedSelectors metaclassDefinedSelectors classExtensionSelectors metaclassExtensionSelectors classes name classTags'\r\tclassVariableNames: 'PackageGlobalOrganizer Properties'\r\tpackage: 'RPackage-Core-Base'",			"comment" : [				"A RPackage is a new implementation of package. Note that it does not touch classes but it is just a layer on top of classes therefore removing a method from a package does not change the underlying class. ",				"",				"",				"Instance Variables",				"\tclassDefinedSelectors:\t\tDictionary",				"\tclassExtensionSelectors:\t\tDictionary",				"\tmetaclassDefinedSelectors:\t\tDictionary",				"\tmetaclassExtensionSelectors:\t\tDictionary",				"\tpackageName:\t\tString",				"\tclasses: OrderedCollection of Symbols",				"\tclassTags: is a mapping from tags to classNames",				"",				"The reason we use four dictionaries is that this way we only store #Point in both as the class and the metaclass are involved. We do not have to with Point_class problem when comparing defined and extended classes. The idea is taken from the RBSelectorEnvironment. \t\t\t\t\t",				"\t\t",				"Class Invariant one:",				"\tClasses should not contain metaclass name, but only class names",				"\t",				"\t",				"",				"Implementation notes ",				"====================",				"This class went over 3 internal representations implementation. ",				"\t- first: \ta list of class + two dictionaries: class * methods",				"\tThis was not good since we add to go all the time over the list of classes.",				"\t- second: 4 dictionaries class * selectors ",				"\tThis was not good since we want to have defined classes without methods. ",				"\t- third: 4 dictionaries + definedClasses",				"",				"Originally I wanted to avoid to have a defined class list and I wanted to avoid to have to declare the class as defined. But this is not really good since",				"\t- we will want to know if a class definition (without method for example is defined in a given package)",				"\t- second this is easier to hook the packageOf: behavior (we register the package class when the class is \tadded to the package).",				"",				"defined classes information is redundant with the dictionary keys of defined methods but we would have to check and register the class to the packageOrganizer the first time a method is defined then also check on remove to unregister the class from the packageOrganizer.",				"",				"Adding a method does not define the class as a defined package class. This has to be done explictly. The reason for this choice is that a class should register to the packageOrganizer and that I do not want to do it each time a method is added and I do not want to test it each time a method is added. Now this is done only when the class is declared as defined. ",				"We could also give the complete freedom to the client to register the class but I thought it was a good compromise. ",				"\t",				"\t",				"ClassTag are tags that can be associated to classes. They help user organizing their class internal. ",				"So that we can have a package infrastructure as follows:",				"\tPackage1",				"\t\tClassA",				"\t\tClassB",				"\tin case there is no tags associated to the package",				"\tor",				"\tPackage2\t",				"\t\tTag1",				"\t\t\tClassA",				"\t\t\tClassB",				"\t\tTag2",				"\t\t\tClassC",				"\t\t\tClassD",				"\t\t\tClassE",				"\t\t\tClassA\t\t",				"\t",				"Todo",				"====",				"\tNext: ",				"\t- finish ",				"\t- build up a synchronizer that import PackageInfo.",				"\t",				"",				"\t",				"",				"\t"			],			"category" : "RPackage-Core-Base"		},		"SpMorphicPatchLineVisitor" : {			"hash" : 5376000,			"definition" : "DiffVisitor subclass: #SpMorphicPatchLineVisitor\r\tinstanceVariableNames: 'lineNumber stream lineMarks'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Code-Diff-Morphic'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tlineMarks:\t\t<Object>",				"\tlineNumber:\t\t<Object>",				"\tstream:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Code-Diff-Morphic"		},		"DropListMorph" : {			"hash" : 1920768,			"definition" : "ModelMorph subclass: #DropListMorph\r\tuses: TEnableOnHaloMenu\r\tinstanceVariableNames: 'contentMorph listMorph buttonMorph list listSelectionIndex getListSelector getIndexSelector setIndexSelector getEnabledSelector enabled useSelectionIndex wrapSelector'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Base'",			"comment" : [				"Displays a selected item and a drop button. When pressed will popup a list to enable changing of the selection. Supports enablement."			],			"category" : "Polymorph-Widgets-Base"		},		"SystemProgressMorph class" : {			"hash" : 1963520,			"definition" : "SystemProgressMorph class\r\tuses: TAbleToRotate classTrait\r\tinstanceVariableNames: 'horizontalPosition verticalPosition'",			"comment" : [				"I display a set of progress indicator in a list.",				"Special care is taken to update the view while the rest of the UI process is blocked.",				"",				"Reset.",				"SystemProgressMorph reset.",				"",				"Examples.",				"self show: 'Doing...' from: 500 to: 600 during: [ :bar |",				"\t500 to: 600 do: [ :x | ",				"\t\tbar current: x.",				"\t\t(Delay forMilliseconds: 20) wait ",				"\t\t\"Just to slow it down so we can see what's going on\" ] ].",				"",				"self show: 'Doing...' from: 0 to: 50 during: [ :bar |",				"\t0 to: 50 do: [ :x | ",				"\t\tbar increment.",				"\t\tbar label: x asString.",				"\t\t(Delay forMilliseconds: 20) wait \"Just to slow it down so we can see what's going on\" ] ]."			],			"category" : "Morphic-Base-ProgressBar"		},		"StDebuggerContextPredicate" : {			"hash" : 5533184,			"definition" : "Object subclass: #StDebuggerContextPredicate\r\tinstanceVariableNames: 'context postMortem'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Debugger-Model'",			"comment" : [				"I describe the status of a context:",				"- I can print a meaningful description of the context",				"- I can tell if the current context is steppable (predicates)",				"",				"I reference the context I describe.",				"I become obsolete as soon as an action is performed on the context."			],			"category" : "NewTools-Debugger-Model"		},		"StSpotterCandidatesList" : {			"hash" : 5506304,			"definition" : "Object subclass: #StSpotterCandidatesList\r\tinstanceVariableNames: 'categories candidates announcer processorLinksMap count'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Spotter-Model'",			"comment" : [				"Maintains a list of candidates (results of a `StSpotterQuery`)."			],			"category" : "NewTools-Spotter-Model"		},		"IcePushTransferProgress" : {			"hash" : 6226176,			"definition" : "LGitPushTransferProgressCallback subclass: #IcePushTransferProgress\r\tinstanceVariableNames: 'job'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Progress'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tjob:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Iceberg-Progress"		},		"ExpanderMorph" : {			"hash" : 1953024,			"definition" : "PanelMorph subclass: #ExpanderMorph\r\tinstanceVariableNames: 'titleMorph announcer'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Base'",			"comment" : [				"A morph that can expand or collapse to show its contents."			],			"category" : "Polymorph-Widgets-Base"		},		"ClassAnnotation" : {			"hash" : 2071296,			"definition" : "Object subclass: #ClassAnnotation\r\tinstanceVariableNames: 'annotatedClass declarationSelector priority activeContext'\r\tclassVariableNames: ''\r\tpackage: 'ClassAnnotation'",			"comment" : [				"I am the root of class annotation hierarchy.",				"My subclasses should annotate classes using class side methods with the pragma #classAnnotation. ",				"For example:",				"",				"\tMyClass class>>specialAnnotationExample",				"\t\t<classAnnotation>",				"\t\t^MySpecialAnnotation new",				"",				"The annotating method should return an instance of the annotation.",				"",				"I provide a query API to retrieve all registered instances of a concrete annotation class:",				"",				"\tMySpecialAnnotation registeredInstances.",				"\tMySpecialAnnotation registeredInstancesFor: MyClass.",				"\tMySpecialAnnotation registeredInstancesDo: [:each | each logCr].",				"",				"Each annotation includes the annotated class and the selector of declaration method.",				"All annotations are cached in default ClassAnnotationRegistry instance. It is cheap to query them.",				"",				"Classes itself can be queried for all attached annotations:",				"",				"\tMyClass classAnnotations.",				"\tMyClass classAnnotationsDo: [:each | each logCr].",				"",				"I provide extra hook to forbid annotating of particular classes. For example my subclasses can define that abstract classses should not be annotated by them.",				"The rule should be  implemented in the method:",				"",				"\tMySpecialAnnotation >>isForbidden",				"\t\t^annotatedClass isAbstract ",				"",				"By default method returns true which means that annotation can annotate any class.",				"",				"Because annotations are declared in the methods it provides interesting feature to extend meta information from external packages.",				"Just define declaration method as class extension. And when your package will be loaded the new annotation will be added into existing class.",				" ",				"There is no special way how instantiate annotation instances. It is up to your domain.",				"The internal state is initialized during Registry creation.  Users should not think about it. ",				"You can add any domain specific variables to your annotations and add constructors to initialize them in declaration methods. ",				"Annotations are just normal objects without any restrictions. You can also attatch annotations to annotations like in other languages.",				"",				"-----------Advanced features. Priority------------",				"",				"Annotations in the registry are sorted by priority. It provides out of the box mechanizm for ordering annotated classes for the user domain purposes. ",				"Just pass priority number into the annotation when you create it in declaration method. And define suitable constructor for this.",				"",				"-----------Advanced features. Context------------",				"",				"Any annotation can be contextual. You can specify instance of context where annotation can be used:",				"\tMySpecialAnnotation for: anAnotationContext",				"Context describes annotation users where they should be active.",				"",				"For simplicity you can specify any class instead of context instance. It will represent all users of annotation of particular class hierarchy:",				"",				"\tMySpecialAnnotation for: MyUserClass.",				"",				"Internallly argument is always converted to the context:",				"",				"\tMyUserClass asAnnotationContext.",				"",				"I provide query interface to retriev registered annotations which are active in given context:",				"",				"\tMySpecialAnnotation activeInstancesInContext: anAnnotationUser.",				"\tMySpecialAnnotation activeInstancesInContext: anAnnotationUser do: [:ann | ].",				"\tMySpecialAnnotation activeInstancesFor: MyClass inContext: anAnnotationUser do: [:ann | ].",				"",				"By default the annotation is active if given user is described by declared context:",				"",				"\tClassAnnotation>>isActiveInContext: anAnnotationUser",				"\t\t^activeContext describes: anAnnotationUser",				"",				"Subclasses can provide extra conditions for active annotations. In that case they override this method:",				"",				"\tMySpecialAnnotation>>isActiveInContext: anAnnotationUser",				"\t\t^(super isActiveInContext: anAnnotationUser)",				"\t\t\tand: [annotatingClass canBeUsedInContext: anAnnotationUser]",				"",				"So the logic can depends on annotating class itself and actual annotation user.",				"",				"For some scenarios you may need to query annotations according to original \"active\" definition despite of extra conditions.",				"For such cases I introduced the \"visibility\" of annotations: the annotation is visible if it is declared for given user:",				"",				"\tClassAnnotation>>isVisibleInContext: anAnnotationUser",				"\t\t^activeContext describes: anAnnotationUser",				"",				"So the visible annotation is not necessary active. But active annotation is always visible for given user:",				"",				"\tClassAnnotation>>isActiveInContext: anAnnotationUser",				"\t\t^self isVisibleInContext: anAnnotationUser",				"",				"(I showed another version above to simplify description).",				"There are extra query methods to retrieve visible annotations:",				"",				"\tMySpecialAnnotation visibleInstancesInContext: anAnnotationUser.",				"\tMySpecialAnnotation visibleInstancesInContext: anAnnotationUser do: [:ann | ].",				"\tMySpecialAnnotation visibleInstancesFor: MyClass inContext: anAnnotationUser do: [:ann | ].",				"",				"-----------Advanced features. Annotation dependency methods------------",				"",				"It is possible to call other methods inside annotation declaring methods (with pragma <classAnnotation>).",				"Such methods are dependency methods and their modification requires updating annotation cache (registry).",				"You can do it manually using",				"",				"\tClassAnnotation resetAll",				"\t",				"Or you can mark such methods with special pragma <classAnnotationDependency> and systen will track these methods for automatically.\t",				"For example in Commander package there is CmdShortcutCommandActivation annotation. It provides reusable methods for rename and remove shorcuts: cmd+r and cmd+x. So you can annotate commands using: ",				"",				"\tMyRenameCommand class>>shortcutActivation",				"\t\t<classAnnotation>",				"\t\t^CmdShortcutCommandActivation renamingFor: MyApp.",				"",				"This annotation will keep cmd+r in instance variable. ",				"If you will modify #renamingFor: method with new shorctut the annotations should be updated. And special pragma ensures this logic:",				"",				"\tCmdShortcutCommandActivation class>>renamingFor: anAnnotationUser",				"\t\t<classAnnotationDependency>",				"\t\t^self by: $r meta for: anAnnotationUser ",				"",				"-----------Advanced features. Redefining registered instances------------",				"",				"All annotations are collected from methods and cached in default ClassAnnotationRegistry instance. ",				"I provide special mechanizm to redefine collected instances. When cache is updated I use and keep all redefined annotations.",				"",				"To redefine particular annotation use #redefineBy: message with block which sets custom properties to original instance.",				"For example following code allows to redefine shortcut of #browse command in Calypso: ",				"",				"\t(ClySpawnFullBrowserCommand classAnnotationsAt: #browserShortcutActivation)",				"\t\tredefineBy: [:shortcut | shortcut keyCombination: $o meta ].",				"\t",				"Try evaluate it and press cmd+o on selected item in browser. If will open new browser window.",				"You can notice that old shortcut cmd+b is not working anymore.",				"",				"Now you can manualy reset annotation cache to check that it will not affect redefined shortcut: ",				"",				"\tClassAnnotation resetCache.",				"\t",				"To inspect redefined annotations ask their class for: ",				"",				"\tCmdShortcutCommandActivation redefinedInstances",				"\t",				"Redefined instances are stored in class side variable #redefinedInstances. ",				"It is a dictionary which keys are new redefining annotations and values are original annotations collected from methods.",				"Notice that key and value are equal objects because annotations define equality using annotated class and declaration selector.",				"So dictionary items can be accessed using both objects.",				"",				"To check that annotation is redefined use following example: ",				"",				"\t (ClySpawnFullBrowserCommand classAnnotationsAt: #browserShortcutActivation)",				"\t\t\tisRedefined",				"",				"And you can ask actual redefined annotaion: ",				"",				"\t (ClySpawnFullBrowserCommand classAnnotationsAt: #browserShortcutActivation)",				"\t\t\tredefinedInstance",				"\t\t",				"Using annotation instance you can also retrieve redefining instance: ",				"",				"\tanAnnotation redefiningInstance.",				"\t",				"It should be identical to cached one.",				"\t",				"To revert redefined annotation use #revertRedefinedInstance message: ",				"",				"\t(ClySpawnFullBrowserCommand classAnnotationsAt: #browserShortcutActivation)",				"\t\t\trevertRedefinedInstance",				"",				"Check that now browse command is again activated by cmd+b shortcut (which is defined in annotation declaration method).",				"",				"To revert all annotations use following script: ",				"",				"\tCmdShortcutCommandActivation revertRedefinedInstances",				"",				"Redefining logic is very suitable mehanizm to override system behavior which depends on annotations without changing the code.",				"It can be used to manage particular kind of annotation in settings browser. ",				"For example shortcut annotations based on Commander are available in setting browser. Users can explore and edit all shortcuts in the system. And these settings are persistable.",				"",				"-----------Internal Representation and Key Implementation Points------------",				" ",				"    Instance Variables",				"\tannotatedClass:\t\t<Class>",				"\tdeclarationSelector:\t\t<Symbol>",				"\tpriority:\t\t<Number>",				"\tactiveContext:\t\t<AnnotationContext>"			],			"category" : "ClassAnnotation"		},		"IceGitHubRemoveBranchesModel" : {			"hash" : 6477056,			"definition" : "IceTipSpPresenter subclass: #IceGitHubRemoveBranchesModel\r\tinstanceVariableNames: 'selectedItems listPanel selectButton acceptBlock displayBlock remote'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Plugin-GitHub-View'",			"comment" : [				"I'm a dialog to select a list of anything (used by branches now)."			],			"category" : "Iceberg-Plugin-GitHub-View"		},		"AthensFT2Constants class" : {			"hash" : 3070464,			"definition" : "AthensFT2Constants class\r\tinstanceVariableNames: ''",			"comment" : [				"The various flags from the Freetype/2 header.",				"",				"The LoadXXXX flags can be used with `primitiveLoadGlyph:flags:` or with the Cairo `primCairoFtFontCreateForFtFace:flags:scale:` primitives.",				"",				"#### `FT_LOAD_DEFAULT`",				"  Corresponding to 0, this value is used a default glyph load.  In this",				"  case, the following will happen:",				"                                                                        ",				"1. FreeType looks for a bitmap for the glyph corresponding to the",				"   face's current size.  If one is found, the function returns.  The",				"   bitmap data can be accessed from the glyph slot (see note below).",				"                                                                        ",				"2. If no embedded bitmap is searched or found, FreeType looks for a",				"   scalable outline.  If one is found, it is loaded from the font",				"   file, scaled to device pixels, then \"hinted\" to the pixel grid in",				"   order to optimize it.  The outline data can be accessed from the",				"   glyph slot (see note below).",				"                                                                        ",				"Note that by default, the glyph loader doesn't render outlines into",				"bitmaps. The following flags are used to modify this default",				"behaviour to more specific and useful cases.",				"                                                                        ",				"#### `FT_LOAD_NO_SCALE`",				"  Don't scale the vector outline being loaded to 26.6 fractional",				"  pixels, but kept in font units.  Note that this also disables",				"  hinting and the loading of embedded bitmaps.  You should only use it",				"  when you want to retrieve the original glyph outlines in font units.",				"                                                                        ",				"#### `FT_LOAD_NO_HINTING`",				"  Don't hint glyph outlines after their scaling to device pixels.",				"  This generally generates \"blurrier\" glyphs in anti-aliased modes.",				"                                                                        ",				"  This flag is ignored if `FT_LOAD_NO_SCALE` is set.",				"                                                                        ",				"#### `FT_LOAD_RENDER` ",				"  Render the glyph outline immediately into a bitmap before the glyph",				"  loader returns.  By default, the glyph is rendered for the",				"  `FT_RENDER_MODE_NORMAL` mode, which corresponds to 8-bit anti-aliased",				"  bitmaps using 256 opacity levels.  You can use either",				"  `FT_LOAD_TARGET_MONO` or `FT_LOAD_MONOCHROME` to render 1-bit",				"  monochrome bitmaps.",				"                                                                        ",				"  This flag is ignored if `FT_LOAD_NO_SCALE` is set.",				"                                                                        ",				"####`FT_LOAD_NO_BITMAP`",				"  Don't look for bitmaps when loading the glyph.  Only scalable",				"  outlines will be loaded when available, and scaled, hinted, or",				"  rendered depending on other bit flags.",				"                                                                        ",				"  This does not prevent you from rendering outlines to bitmaps",				"  with `FT_LOAD_RENDER`, however.",				"                                                                        ",				"####`FT_LOAD_VERTICAL_LAYOUT`",				"  Prepare the glyph image for vertical text layout.  This basically",				"  means that `face.glyph.advance` will correspond to the vertical",				"  advance height (instead of the default horizontal advance width),",				"  and that the glyph image will be translated to match the vertical",				"  bearings positions.",				"                                                                        ",				"####`FT_LOAD_FORCE_AUTOHINT`",				"  Force the use of the FreeType auto-hinter when a glyph outline is",				"  loaded.  You shouldn't need this in a typical application, since it",				"  is mostly used to experiment with its algorithm.",				"                                                                        ",				"####`FT_LOAD_CROP_BITMAP`",				"  Indicates that the glyph loader should try to crop the bitmap (i.e.,",				"  remove all space around its black bits) when loading it.  This is",				"  only useful when loading embedded bitmaps in certain fonts, since",				"  bitmaps rendered with `FT_LOAD_RENDER` are always cropped by default.",				"                                                                        ",				"####`FT_LOAD_PEDANTIC`",				"  Indicates that the glyph loader should perform pedantic",				"  verifications during glyph loading, rejecting invalid fonts.  This",				"  is mostly used to detect broken glyphs in fonts.  By default,",				"  FreeType tries to handle broken fonts also.",				"                                                                        ",				"#### `FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH`",				"  Indicates that the glyph loader should ignore the global advance",				"  width defined in the font.  As far as we know, this is only used by",				"  the X-TrueType font server, in order to deal correctly with the",				"  incorrect metrics contained in DynaLab's TrueType CJK fonts.",				"                                                                        ",				"####`FT_LOAD_NO_RECURSE`",				"  This flag is only used internally.  It merely indicates that the",				"  glyph loader should not load composite glyphs recursively.  Instead,",				"  it should set the `num_subglyph` and `subglyphs` values of the glyph",				"  slot accordingly, and set \"glyph->format\" to `FT_GLYPH_FORMAT_COMPOSITE`.",				"                                                                        ",				"  The description of sub-glyphs is not available to client",				"  applications for now.",				"                                                                        ",				"####`FT_LOAD_IGNORE_TRANSFORM`",				"  Indicates that the glyph loader should not try to transform the",				"  loaded glyph image.  This doesn't prevent scaling, hinting, or",				"  rendering.",				"                                                                        ",				"####`FT_LOAD_MONOCHROME`",				"  This flag is used with `FT_LOAD_RENDER` to indicate that you want",				"  to render a 1-bit monochrome glyph bitmap from a vectorial outline.",				"                                                                        ",				"  Note that this has no effect on the hinting algorithm used by the",				"  glyph loader.  You should better use `FT_LOAD_TARGET_MONO` if you",				"  want to render monochrome-optimized glyph images instead.",				"                                                                        ",				"####`FT_LOAD_LINEAR_DESIGN`",				"  Return the linearly scaled metrics expressed in original font units",				"  instead of the default 16.16 pixel values.",				"                                                                        ",				"####`FT_LOAD_NO_AUTOHINT`",				"  Indicates that the auto-hinter should never be used to hint glyph",				"  outlines.  This doesn't prevent native format-specific hinters from",				"  being used.  This can be important for certain fonts where unhinted",				"  output is better than auto-hinted one.",				"",				"One of following flags (as LoadTargetXXX) can be used to further specify the result.",				"",				"####`FT_RENDER_MODE_NORMAL`                                          ",				"     This is the default render mode; it corresponds to 8-bit        ",				"     anti-aliased bitmaps, using 256 levels of opacity.              ",				"                                                                     ",				"####`FT_RENDER_MODE_LIGHT`                                           ",				"     This is similar to `FT_RENDER_MODE_NORMAL`, except that this     ",				"     changes the hinting to prevent stem width quantization.  This   ",				"     results in glyph shapes that are more similar to the original,  ",				"     while being a bit more fuzzy (\"better shapes\", instead of       ",				"     \"better contrast\" if you want :-).                              ",				"                                                                     ",				"####`FT_RENDER_MODE_MONO`                                            ",				"     This mode corresponds to 1-bit bitmaps.                         ",				"                                                                     ",				"####`FT_RENDER_MODE_LCD`                                             ",				"     This mode corresponds to horizontal RGB/BGR sub-pixel displays, ",				"     like LCD-screens.  It produces 8-bit bitmaps that are 3 times   ",				"     the width of the original glyph outline in pixels, and which use",				"     the `FT_PIXEL_MODE_LCD` mode.                                    ",				"                                                                     ",				"####`FT_RENDER_MODE_LCD_V`                                         ",				"     This mode corresponds to vertical RGB/BGR sub-pixel displays    ",				"     (like PDA screens, rotated LCD displays, etc.).  It produces    ",				"     8-bit bitmaps that are 3 times the height of the original       ",				"     glyph outline in pixels and use the `FT_PIXEL_MODE_LCD_V` mode.  ",				"                                                                     ",				"####Note                                                              ",				"  The LCD-optimized glyph bitmaps produced by `FT_Render_Glyph` are    ",				"  _not filtered_ to reduce color-fringes.  It is up to the caller to ",				"  perform this pass.                                                 ",				""			],			"category" : "Athens-Cairo-Text"		},		"Locale class" : {			"hash" : 1841664,			"definition" : "Locale class\r\tinstanceVariableNames: 'localeAnnouncer'",			"comment" : [				"Main comment stating the purpose of this class and relevant relationship to other classes.",				"",				"",				"",				"\thttp://www.w3.org/WAI/ER/IG/ert/iso639.htm",				"\thttp://www.oasis-open.org/cover/iso639a.html",				"\tSee also",				"\thttp://oss.software.ibm.com/cvs/icu/~checkout~/icuhtml/design/language_code_issues.html",				"\thttp://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.10",				"\t",				"ISO 3166",				"http://mitglied.lycos.de/buran/knowhow/codes/locales/"			],			"category" : "System-Localization-Locales"		},		"ClyTabManager" : {			"hash" : 5110528,			"definition" : "Object subclass: #ClyTabManager\r\tinstanceVariableNames: 'browser tools tabMorph updatingStarted selectionPriorities desiredSelection shouldSkipCurrentDesiredSelection'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-Tabs'",			"comment" : [				"I manage tabs in the browser.",				"Any tab in browser is represented by `ClyBrowserTool` subclasses.",				"And my responsibility is to show all appropriate tools which are relevant to the current browser context (state). ",				"`#updateTools` method is doing that. ",				"",				"The logic is simple: ",				"When selection (browser context) is changed then browser collects new tools which should be opened in that new browser state. ",				"Then it removes all old tools and open all new tools. ",				"But there is special case when new collected tool is already opened. In that case such new tool will be not used. And existing tool will be not removed. So it will stay opened.",				"",				"I use `#isSimilarTo:` tab method to detect that new collected tool is already opened (the browser already shows similar tool).",				"By default #isSimilarTo: simply checks the class of given tool. My subclases should redefine it when they include extra state because otherwise new tool instance will never replace old one (browser will think that it is already opened).",				"",				"There are cases when existing tools are not closed when selection is changed. For example when method editor is dirty and you select another method.",				"In that case dirty method will indicate that it is now do not belongs to the context of browser.",				"Tools implement method #belongsToCurrentBrowserContext to support this logic.",				"For example method editor checks that browser still selects editing method.",				"",				"There is one complex part of my behaviour: the way how I choose what tab should be selected.",				"In simple cases I just select the tab with lagest value of #activationPriority. But it is not enough.",				"Problem that user want to keep current selected tab (the kind of tab) when he selects another item in the table.",				"For example in full browser user can select class. It will automatically selects the tab with class definition because it has the most activation priority.",				"But then user can select class comment tab and switch to another class. The desired behaviour is to keep comment tab selected for this newly selected class.",				"",				"And for this logic I maintain desired set of selected tool in the variable desiredSelection.",				"It adds and removes items when user manually selects tabs.",				"But in addition browser fills it with tools which are relevant for manually selected table.",				"Every time user selects new item in the table the browser collects tools which are relevant for this new selection and it passes them to me as new desired selection. ",				"",				"So at the end I always select tab with most activation priority which exists in desiredSelection list.",				"",				"By default activationPriority is equal to `#tabOrder` which defines general order between tabs.",				"",				"My instances are created on the browser: ",				"",				"\tClyTabManager of: aBrowser",				"\t",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tbrowser:\t\t<ClyBrowser>",				"\tselectionPriorities:\t\t<Dictionary<ClyBrowserTool class, Number>>",				"\ttabMorph:\t\t<TabManagerMorph>",				"\ttools:\t\t<Collection of<ClyBrowserTool>>",				"\tupdatingStarted:\t\t<Boolean>",				"\tdesiredSelection: <Set of<ClyBrowserTool class>>"			],			"category" : "Calypso-Browser-Tabs"		},		"MWHandlerReceiverArgumentsCopying" : {			"hash" : 3381504,			"definition" : "MWHandlerDecorating subclass: #MWHandlerReceiverArgumentsCopying\r\tinstanceVariableNames: 'table copier'\r\tclassVariableNames: ''\r\tpackage: 'MethodWrappers'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcopier:\t\t<Object>",				"\ttable:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "MethodWrappers"		},		"RSDarkUMLClassRenderer" : {			"hash" : 2268672,			"definition" : "RSBasicUMLClassRenderer subclass: #RSDarkUMLClassRenderer\r\tinstanceVariableNames: 'darkColor'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-UML-Examples'",			"comment" : [				"I am a demo class"			],			"category" : "Roassal3-UML-Examples"		},		"RubScrolledTextMorph" : {			"hash" : 597760,			"definition" : "Morph subclass: #RubScrolledTextMorph\r\tinstanceVariableNames: 'hasEditingConflicts hasUnacceptedEdits alwaysAccept setTextSelector getTextSelector getSelectionSelector setSelectionSelector autoAccept scrollPane rulers enabled highlights getBackgroundColorSelector askBeforeDiscardingEdits'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Widgets'",			"comment" : [				"I am the common morph to represent a text area. I should be created by my model, a RubScrolledTextModel. The tool should talk to my model and not me directly "			],			"category" : "Rubric-Editing-Widgets"		},		"MCVersionMerger" : {			"hash" : 298496,			"definition" : "Object subclass: #MCVersionMerger\r\tinstanceVariableNames: 'records merger'\r\tclassVariableNames: ''\r\tpackage: 'Monticello-Versioning'",			"comment" : [				"Merge versions"			],			"category" : "Monticello-Versioning"		},		"ClyQueryResultMetadata" : {			"hash" : 4858368,			"definition" : "Object subclass: #ClyQueryResultMetadata\r\tinstanceVariableNames: 'properties'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-NavigationModel-Model'",			"comment" : [				"I represent metadata of query result as collection of first class properties (kind of ClyProperty).",				"I allow annotate query result with summary information about items. ",				"",				"For example SUnit plugin annotates method queries with information about tests.",				"Another example: ClyAsyncQueryResult includes metadata ClyBackgroundProcessingTag which indicates that result is still in processing. ",				"",				"To access properties use following methods: ",				"- addProperty: aProperty",				"- getProperty: aPropertyClass",				"- hasProperty: aPropertyClass",				"",				"Metadata is collected lazely when user asks it from the result: ",				"\taQueryResult metadata ",				"",				"Actual logic to collect metadata is implemented by environment plugins. But concrete dispatch method is choosen by query which built given result:",				"",				"\tmetadata := ClyQueryResultMetadata new.",				"\tenvironment pluginsDo: [:each | ",				"\t\tbuildingQuery collectMetadataOf: self by: each\t] ",				"",				"Query sends typed message depending on items which query retrieves. For example:",				"\t",				"\tClyMethodQuery>>collectMetadataOf: aQueryResult by: anEnvironmentPlugin",				"\t\tanEnvironmentPlugin collectMetadataOfMethods: aQueryResult",				"",				"So metadata is property of query result. But when you open browser cursor metadata is passed to the cursor instances. It is important optimization for remote scenario where result is remote proxy. In that case cursor is transferred to the client by value together with metadata. So all properties are available for the local cursor user.",				"\t",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tproperties:\t<OrderedCollection of: <ClyProperty>>"			],			"category" : "Calypso-NavigationModel-Model"		},		"OSTouchHoldDetector class" : {			"hash" : 4046592,			"definition" : "OSTouchHoldDetector class\r\tinstanceVariableNames: ''",			"comment" : [				"I am the abstract class for all the Hold gesture detectors"			],			"category" : "OSWindow-Core-Gestures"		},		"SpecLayoutProperties" : {			"hash" : 977408,			"definition" : "Object subclass: #SpecLayoutProperties\r\tinstanceVariableNames: 'hResizing vResizing disableLayout'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Layout-Layouts'",			"comment" : [				"Used to describe properties for layouts in Spec"			],			"category" : "Spec-Layout-Layouts"		},		"ReAsClassRule" : {			"hash" : 2095872,			"definition" : "ReNodeRewriteRule subclass: #ReAsClassRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Do not use methods such as",				"",				"\t#asClass",				"\t#asClassIfAbsent:",				"\t#asClassIfPresent:",				"\t",				"because they do not take into account an environment. Instead use `self class environment at: #ClassName`"			],			"category" : "GeneralRules-Migrated"		},		"ZnSingleThreadedServer class" : {			"hash" : 1420288,			"definition" : "ZnSingleThreadedServer class\r\tinstanceVariableNames: 'default'",			"comment" : [				"I am ZnSingleThreadedServer.",				"I can be customized with a delegate (#handleRequest:) and an authenticator (#authenticateRequest:do:).",				"",				"  ZnSingleThreadedServer startDefaultOn: 1701.",				"  ZnSingleThreadedServer default authenticator: (ZnBasicAuthenticator username: 'foo' password: 'secret').",				"  ZnClient new username: 'foo' password: 'secret'; get: 'http://localhost:1701'.",				"",				"I use ZnDefaultServerDelegate when no other delegate is set.",				"I am single threaded, I run in a single process.",				"I close connections after each request/response cycle.",				"",				"Part of Zinc HTTP Components."			],			"category" : "Zinc-HTTP-Client-Server"		},		"CairoFontMetricsProvider" : {			"hash" : 3087104,			"definition" : "Object subclass: #CairoFontMetricsProvider\r\tuses: TCairoLibrary\r\tinstanceVariableNames: 'font utfConverter cairoFont extents glyphExtents cache'\r\tclassVariableNames: ''\r\tpoolDictionaries: 'AthensCairoDefinitions'\r\tpackage: 'Athens-Cairo-Text'",			"comment" : [				"Provide font metrics (Cairo)"			],			"category" : "Athens-Cairo-Text"		},		"OSNullBackendWindow" : {			"hash" : 4002816,			"definition" : "OSBackendWindow subclass: #OSNullBackendWindow\r\tinstanceVariableNames: 'attributes isTextInputActive'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Utilities'",			"comment" : [				"i am a handle for null window , created using OSNullWindowDriver."			],			"category" : "OSWindow-Core-Utilities"		},		"ClyNotebookMorph" : {			"hash" : 5099264,			"definition" : "SpNotebookMorph subclass: #ClyNotebookMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-Tabs'",			"comment" : [				"I extend a notebook by adding sortable capabilities."			],			"category" : "Calypso-Browser-Tabs"		},		"SpPresenterSelectorPresenter" : {			"hash" : 2234624,			"definition" : "SpPresenter subclass: #SpPresenterSelectorPresenter\r\tinstanceVariableNames: 'model cases default'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Widgets'",			"comment" : [				"A selector presenter that chooses what to show (when condition is satisfied).",				"The purpose is to allow users to choose different outputs depending on the result of a condition  defined.",				"The basic usage would be:",				"",				"```",				"choose := self newPresenterSelector",				"\twhen: [ aCondition ] show: [ aPresenter ];",				"\twhen: [ anotherCondition ] show: [ anotherPresenter ];",				"\tdefaultShow: [ defaultPresenter ]",				"```"			],			"category" : "Spec2-Core-Widgets"		},		"RSAbstractContextInteraction" : {			"hash" : 5792768,			"definition" : "RSInteraction subclass: #RSAbstractContextInteraction\r\tinstanceVariableNames: 'presentation propagateToChildren'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Inspector-Contexts'",			"comment" : [				"A context is very usefull to describe de default interactions for a canvas.",				"",				"My subclasses should override interaction"			],			"category" : "Roassal3-Inspector-Contexts"		},		"CoStatisticsCompletionEngine" : {			"hash" : 5328640,			"definition" : "CoCompletionEngine subclass: #CoStatisticsCompletionEngine\r\tinstanceVariableNames: 'statistics'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Morphic-Statistics'",			"comment" : [				"I am a completion engine that logs when the menu is closed without activating an entry."			],			"category" : "HeuristicCompletion-Morphic-Statistics"		},		"ClyEnvironmentPlugin class" : {			"hash" : 4841216,			"definition" : "ClyEnvironmentPlugin class\r\tinstanceVariableNames: 'isAutoActivated'",			"comment" : [				"I am a root of environment plugins hierarchy.",				"My subclasses are responsible for three things:",				"",				"1) Extend browser items with arbitrary properties. Any plugin can compute specific properties for given item. ",				"For example plugin can mark class that it is abstract:",				"\t",				"\tMyPluginClass>>decorateBrowserItem: anItem ofClass: aClass",				"\t\taClass isAbstract ifTrue: [ anItem markWith: ClyAbstractItemTag  ]",				"\t\t",				"Concrete decoration methods which plugin can implement are depends on the item types which plugin is going support. For another example to decorate methods plugin should implement: ",				"",				"- decorateBrowserItem: anItem ofMethod: aMethod",				"",				"Normally when you develop navigation over concrete system you build some common superclass plugin which will provide stubs for all item types form your domain. ",				"In case of Smalltalk navigation there is ClySystemEnvironmentPlugin which implements empty methods to decorate packages, classes and methods (like in examples)",				"",				"2) Connect external systems to the navigation environment. ",				"Plugin package can provide new kind of queries and scopes which retrieves new kind of items. These items can be from systems which are external to the main navigation environment. ",				"Plugin should take care about external updates by subscribing to external system for the changes and by delegating them to the navigation environment.",				"",				"For example SUnit plugin extends Smalltalk environment with information about tests. It subscribes on SUnit events about test ran. And when it happens it delegates event to the environment which updates methods queries with new information about test result.",				"",				"To connect to external system plugin implements following method:",				"- attatchToSystem ",				"Here plugin can subscribe on external events. For example SUnit plugin subscribes on \"TestCase historyAnnouncer\" to know when user run tests.",				"",				"And to disconnect from system should implement:",				"- detatchFromSystem",				"For example SUnit plugin unsubscribes from \"TestCase historyAnnouncer\".",				"",				"3) Collect query result metadata. ",				"For example SUnit plugin can collect how many success tests are retrieved by method query.",				"The exact methods which plugin should implement depends on the kind of queries it is supposed to support. In case of SUnit it implements:",				"- collectMetadataOfMethods: aQueryResult",				"",				"But decision what method to use is responsibility of queries. For example: ",				"",				"\tClyMethodQuery>>collectMetadataOf: aQueryResult by: anEnvironmentPlugin",				"\t\tanEnvironmentPlugin collectMetadataOfMethods: aQueryResult",				"",				"As in case of items decoration the superclass of plugins can provide empty methods for metadata collection. So concrete plugin only chooses what it wants.",				"",				"That is all responsibility.",				" ",				"To activate plugin it should be added to navigation environment: ",				"\tenvironment addPlugin: anEnvironmentPlugin ",				"",				"Default global environment adds all plugins automatically. Only plugins marked as auto-activated are used (which is true by default):",				"\t",				"\tClyEnvironmentPlugin class>>isAutoActivated",				"\t\t^isAutoActivated ifNil [true]",				"",				"You can disable any plugin using: ",				"\t",				"\tClyConcretePlugin disable",				"",				"But it do not affect default navigation environment. You will need recreate it.",				"",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tenvironment:\t\t<ClyNavigationEnvironment>"			],			"category" : "Calypso-NavigationModel-Model"		},		"RBCombinatorVisitor" : {			"hash" : 3217152,			"definition" : "RBProgramNodeVisitor subclass: #RBCombinatorVisitor\r\tinstanceVariableNames: 'combinations'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Core-Base'",			"comment" : [				"I am a visitor to find differents combinations of sequences nodes"			],			"category" : "Refactoring-Core-Base"		},		"SDL2SpecialCharacterMapping class" : {			"hash" : 4108544,			"definition" : "SDL2SpecialCharacterMapping class\r\tinstanceVariableNames: ''",			"comment" : [				"This class keeps a maps for key symbols that are represented by Morphic as special characters."			],			"category" : "OSWindow-SDL2-Bindings"		},		"BalloonEngineConstants class" : {			"hash" : 1625344,			"definition" : "BalloonEngineConstants class\r\tinstanceVariableNames: ''",			"comment" : [				"Constants for the baloon engine"			],			"category" : "FormCanvas-Core-BalloonEngine"		},		"HEPackage" : {			"hash" : 992512,			"definition" : "HEAbstractExported subclass: #HEPackage\r\tinstanceVariableNames: 'version packageName classes extensionMethods traits'\r\tclassVariableNames: ''\r\tpackage: 'Hermes-Model'",			"comment" : [				"Even though the format is intented to store any kind of objects as a root element.",				"This is the root element expected by the command line tool and the installer.",				"",				"I represent an exported package.",				"I store in myself the version of Hermes used to export me. ",				"I also include: ",				"\t- the package name as an exported symbol",				"\t- the classes ordered by dependency",				"\t- the traits ordered by dependency",				"\t- the extension methods",				"\t",				"I first load all the traits. ",				"Then the classes",				"",				"Then the methods for all the classes and traits.",				"And then the extension methods."			],			"category" : "Hermes-Model"		},		"RSAbstractLine" : {			"hash" : 5669120,			"definition" : "RSShape subclass: #RSAbstractLine\r\tuses: RSTMarkeable\r\tinstanceVariableNames: 'attachPoint from to markers'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Lines'",			"comment" : [				"I represent the abstract lines that have start and end points",				"",				"For example:",				"-=-=-=-=-=-=-=-=-=-=-=-=",				"c := RSCanvas new.",				"",				"circle := RSEllipse new color: Color green; size: 10.",				"box := RSBox new color: Color red; size: 10.",				"c add: circle; add: box.",				"",				"dragMeLabel := RSLabel new text: 'Drag me'.",				"c add: dragMeLabel.",				"RSLocation new",				"\tabove; center;",				"\tstick: dragMeLabel on: box.",				"",				"c add: (RSLine new color: Color veryVeryLightGray; from: 0 @ -1000; to: 0 @ 1000).",				"c add: (RSLine new color: Color veryVeryLightGray; from: -1000 @ 0; to: 1000 @ 0).",				"",				"box translateBy: 50 @ 50.",				"box @ RSDraggable.",				"",				"c add: (RSLine new color: Color blue; from: box; to: circle).",				"",				"c",				"-=-=-=-=-=-=-=-=-=-=-=-="			],			"category" : "Roassal3-Shapes-Lines"		},		"IceTipEditProjectDialog" : {			"hash" : 6309120,			"definition" : "IceTipDialog subclass: #IceTipEditProjectDialog\r\tinstanceVariableNames: 'nameLabel nameInput model acceptCallback sourceDirectoryLabel sourceDirectoryTree selectedDirectoryPath formatList formatLabel formats defaultFormat messageIcon messageText removeButton addButton'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-View-Repository'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tacceptCallback:\t\t<Object>",				"\taddButton:\t\t<Object>",				"\tdefaultFormat:\t\t<Object>",				"\tformatLabel:\t\t<Object>",				"\tformatList:\t\t<Object>",				"\tformats:\t\t<Object>",				"\tmessageIcon:\t\t<Object>",				"\tmessageText:\t\t<Object>",				"\tmodel:\t\t<Object>",				"\tnameInput:\t\t<Object>",				"\tnameLabel:\t\t<Object>",				"\tremoveButton:\t\t<Object>",				"\tselectedDirectoryPath:\t\t<Object>",				"\tsourceDirectoryLabel:\t\t<Object>",				"\tsourceDirectoryTree:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Iceberg-TipUI-View-Repository"		},		"ClyOldMessageBrowserQuery" : {			"hash" : 5236224,			"definition" : "ClyConstantMethodQuery subclass: #ClyOldMessageBrowserQuery\r\tinstanceVariableNames: 'extraMethods criteriaString criteriaBlock'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemTools-OldToolCompatibillity'",			"comment" : [				"I am a special query which is based on constant list of methods or class comments. ",				"",				"I am introduced to support old (current) approach for system queries which is based on SystemNavigation collecting list of methods.",				"",				"I am used by ClyOldMessageBrowserAdapter which is installed as default as part of Calypso toolset.",				"",				"I implement semantics of old MessageBrowser.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcriteriaBlock:\t\t<BlockClosure>",				"\tcriteriaString:\t\t<String>",				"\textraMethods:\t\t<Collection of<CompiledMethod>>"			],			"category" : "Calypso-SystemTools-OldToolCompatibillity"		},		"FFIExternalStructureFlatLayout" : {			"hash" : 492800,			"definition" : "Object subclass: #FFIExternalStructureFlatLayout\r\tinstanceVariableNames: 'fields size alignment integerRegisterCount floatRegisterCount'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-External-StructureHandling'",			"comment" : [				"I represent a flattened layout of a structure. I am use to compute whether a structure is passed in registers or not, and which registers are used for passing the structure."			],			"category" : "UnifiedFFI-External-StructureHandling"		},		"RSShape" : {			"hash" : 5640960,			"definition" : "RSObjectWithProperty subclass: #RSShape\r\tinstanceVariableNames: 'paint path border parent isFixed encompassingRectangle model'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Core'",			"comment" : [				"<keyClass>",				"A shape is a visual element meant to be displayed. Roassal offers numerous shapes, themselves highly configurable. The class `RSShape` is the root of all the Roassal shapes, and a shape is typically created by instantiating a subclass of `RSShape`. For example, a box is defined by instantiating `RSBox`. ",				"",				"For example, a colored box with a thick border may be defined as:",				"",				"```Smalltalk",				"box := RSBox new",				"\t\t\tsize: 80;",				"\t\t\tcolor: #yellow;",				"\t\t\tborder: (RSBorder new color: #blue; width: 10).",				"```",				"",				"Colors may be provided either as a color object (e.g., `Color blue` or `Color r: 0 g: 0 b: 1.0`) or as a symbol (e.g., `#yellow`). In case a symbol is provided, it is converted to a color object using `Color>>colorFrom:`, as in `Color>>colorFrom: #yellow`. ",				"",				"Although most of the configuration may be carried out by directly sending an object with a literal (e.g., `size: 80`), part of the configuration of the shape may involve dedicated objects, such as `RSBorder`.",				"",				"`RSShape` is the root of all the Roassal shapes. A shape represents a visual element meant to be inserted in a `RSCanvas`. `RSShape` is an abstract class, not meant to be directly instantiated therefore.",				"",				"*Responsibility*: A shape, i.e., subclass of the class `RSShape` is responsible to model a visual element. ",				"",				"*Collaborators*: A shape is meaningful when inserted in a canvas",				"",				"*Variables*:",				"- `paint`: the color of the Athens paint object used to render the visual shape",				"- `path`: refers to AthensCairoPath, which is a resource of a foreign object, ie., the cairo on",				"- `border`:",				"- `parent`: the parent shape",				"- `isFixed`: a boolean indicating if the shape is fixed (ie., not subject to the camera position and movement)"			],			"category" : "Roassal3-Core"		},		"FFIAbstract64BitsArgumentReader" : {			"hash" : 487168,			"definition" : "FFICallbackArgumentReader subclass: #FFIAbstract64BitsArgumentReader\r\tinstanceVariableNames: 'currentRegisterIndex'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-Callbacks'",			"comment" : [				"I implement the common behavior of the processing of arguments for 64 bits platforms.",				"The 64 bits platforms uses the registers to pass parameters.",				"The integer parameters are passed in the general purpose parameters (the address of the copy of them is in #integerRegisterPointer) and the float parameters are passed in the set of registers XMM0-XMM8. This float point registers are accessible through the #floatRegisterPointer.",				"",				"As the different calling conventions uses the registers in different ways and also they use different number of registers I only have limited reused code."			],			"category" : "UnifiedFFI-Callbacks"		},		"CairoFontFace" : {			"hash" : 3083008,			"definition" : "FFIExternalObject subclass: #CairoFontFace\r\tuses: TCairoLibrary\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpoolDictionaries: 'AthensCairoDefinitions AthensFT2Constants'\r\tpackage: 'Athens-Cairo-Text'",			"comment" : [				"I am a private class, used to represent a 'cairo_font_face_t *' data structure ",				"of Cairo library.",				"",				"I am not useful for direct use nor providing any functionality. My only purpose is to keep a strong reference to original FT2Face object",				"(so it won't be freed before a corresponding instance of mine will release it).",				""			],			"category" : "Athens-Cairo-Text"		},		"KMCategory" : {			"hash" : 772352,			"definition" : "Object subclass: #KMCategory\r\tinstanceVariableNames: 'name platforms'\r\tclassVariableNames: ''\r\tpackage: 'Keymapping-Core-Categories'",			"comment" : [				"I am a keymap category.  I represent a set of keymaps that can be attached to a morph, so morphs can share my keymaps."			],			"category" : "Keymapping-Core-Categories"		},		"IceCherrypicker" : {			"hash" : 6171904,			"definition" : "Object subclass: #IceCherrypicker\r\tinstanceVariableNames: 'dependencies sourceDiff receiverToAncestorDiff mergeTree incomingChangesDiff environment'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Cherrypicking'",			"comment" : [				"I know how to cherry-pick changes from a source IceDiff into a target IceDiff. ",				"",				"* The source diff is an \"initial change set\" (ICS) with changes we want to initially selected.",				"* The target diff is an \"estimated transitive change set\" (ETCS) is the universe of changes, some of them will be pruned if they are not required by the changes in the ICS."			],			"category" : "Iceberg-Cherrypicking"		},		"SpEventHandler" : {			"hash" : 2180864,			"definition" : "Object subclass: #SpEventHandler\r\tinstanceVariableNames: 'presenter events'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Base-Event'",			"comment" : [				"I am an event handler to dispatch low-level events to my presenters.",				"I am used when the \"high-level\" events (like \"clicked\" for buttons, etc.) are not enough and users need to control better what is happening. ",				"",				"I can listen: ",				"- focus events: got focus, lost focus. ",				"- mouse events: mouse enter, mouse leave, mouse move",				"- keyboard events: keydown, keyup",				"",				"WARNING: Not all presenters will answer equally to all events. For example, presenters who can't take the keyboard focus can't respond to focus events."			],			"category" : "Spec2-Core-Base-Event"		},		"BalloonMorph class" : {			"hash" : 1957376,			"definition" : "BalloonMorph class\r\tinstanceVariableNames: ''",			"comment" : [				"A balloon with text used for the display of explanatory information.",				"",				"Balloon help is integrated into Morphic as follows:",				"If a Morph has the property #balloonText, then it will respond to #showBalloon by adding a text balloon to the world, and to #deleteBalloon by removing the balloon.",				"",				"Moreover, if mouseOverEnabled is true (see class msg), then the Hand will arrange to cause display of the balloon after the mouse has lingered over the morph for a while, and removal of the balloon when the mouse leaves the bounds of that morph.  In any case, the Hand will attempt to remove any such balloons before handling mouseDown events, or displaying other balloons.",				"",				"Balloons should not be duplicated with veryDeepCopy unless their target is also duplicated at the same time."			],			"category" : "Morphic-Base-Widgets"		},		"CheckboxMorph" : {			"hash" : 1918208,			"definition" : "ModelMorph subclass: #CheckboxMorph\r\tuses: TEnableOnHaloMenu\r\tinstanceVariableNames: 'buttonMorph labelMorph getLabelSelector setStateSelector getStateSelector enabled getEnabledSelector labelClickable'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Basic'",			"comment" : [				"Checkbox with box button and label with enablement support."			],			"category" : "Morphic-Widgets-Basic"		},		"TextStyle class" : {			"hash" : 1642496,			"definition" : "TextStyle class\r\tinstanceVariableNames: 'notifier'",			"comment" : [				"A textStyle comprises the formatting information for composing and displaying a unit (usually a paragraph) of text.  Typically one makes a copy of a master textStyle (such as TextStyle default), and then that copy may get altered in the process of editing.  Bad things can happen if you do not copy first.",				"",				"Each of my instances consists of...",				"\tfontArray\t\tAn array of StrikeFonts",				"\tfontFamilySize\tunused",				"\tlineGrid\t\t\tAn integer; default line spacing for paragraphs",				"\tbaseline\t\t\tAn integer; default baseline (dist from line top to bottom of an 'a')",				"\talignment\t\tAn integer; text alignment, see TextStyle alignment:",				"\tfirstIndent\t\tAn integer; indent of first line in pixels",				"\trestIndent\t\tAn integer; indent of remaining lines in pixels",				"\trightIndent\t\tAn integer; indent of right margin rel to section",				"\ttabsArray\t\tAn array of integers giving tab offsets in pixels",				"\tmarginTabsArray\tAn array of margin tabs",				"\tleading\t\t\tAn integer giving default vertical line separation",				"",				"For a concrete example, look at TextStyle default copy inspect"			],			"category" : "Text-Core-Base"		},		"IceGitHubPullRequest" : {			"hash" : 6480640,			"definition" : "Object subclass: #IceGitHubPullRequest\r\tinstanceVariableNames: 'repository json fetched branch detail status'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Plugin-GitHub-Model'",			"comment" : [				"I'm a pull request from github API. ",				"I represent (more or less), what is described here: https://developer.github.com/v3/pulls/#list-pull-requests"			],			"category" : "Iceberg-Plugin-GitHub-Model"		},		"PickListPresenter" : {			"hash" : 2105088,			"definition" : "ComposablePresenter subclass: #PickListPresenter\r\tinstanceVariableNames: 'defaultValueHolder labelClickableHolder pickedItemsHolder wrapHolder associationsItemToWrapper associationsWrapperToItem associationsIndexToWrapper blockToPerformOnWrappers listPresenter'\r\tclassVariableNames: ''\r\tpackage: 'Spec-PolyWidgets-ListAndTree'",			"comment" : [				"A PickList is a tick list done using spec.",				"",				"self example"			],			"category" : "Spec-PolyWidgets-ListAndTree"		},		"ZnNewLineWriterStream" : {			"hash" : 1213696,			"definition" : "WriteStream subclass: #ZnNewLineWriterStream\r\tinstanceVariableNames: 'stream cr lf previous lineEnding'\r\tclassVariableNames: ''\r\tpackage: 'Zinc-Character-Encoding-Core'",			"comment" : [				"I am a write stream wrapping a second stream. Whenever they ask me to write a cr, a lf, or a crlf I'll instead print a new line depending on a configured convention. By default I use the current platform convention. ",				"",				"| stream converter |",				"stream := '' writeStream.",				"converter := ZnNewLineWriterStream on: stream.",				"converter cr; cr; lf; nextPut: $a.",				"stream contents",				"",				"A ZnNewLineWriterStream can be configured with the desired line ending convention using the methods ",				"",				"converter forCr.",				"converter forLf.",				"converter forCrLf.",				"converter forPlatformLineEnding."			],			"category" : "Zinc-Character-Encoding-Core"		},		"TransferMorph class" : {			"hash" : 613888,			"definition" : "TransferMorph class\r\tinstanceVariableNames: ''",			"comment" : [				"This is a Morph that is used to visually indicate the progress of a drag operation, and also as a container for various bits of drag state information.",				"",				"It polls the shift state in its step method to update its copy state (shift pressed = should copy).",				"",				"And if you hit the Escape key while dragging, it aborts the drag operation."			],			"category" : "Morphic-Base-Events"		},		"RSGraphCanvasMonitorInteraction" : {			"hash" : 5720576,			"definition" : "RSAbstractCanvasMonitorInteraction subclass: #RSGraphCanvasMonitorInteraction\r\tinstanceVariableNames: 'polyline label frames polyScale polygon'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Extra'",			"comment" : [				"I have a canvas monitor"			],			"category" : "Roassal3-Interaction-Extra"		},		"OSTouchRotationDetector" : {			"hash" : 4054016,			"definition" : "OSTouchStateGestureDetector subclass: #OSTouchRotationDetector\r\tinstanceVariableNames: 'minAngleBeforeDetection vectorAtBeginnig lastAngle currentAngle'\r\tclassVariableNames: 'MinAngleBeforeDetection'\r\tpackage: 'OSWindow-Core-Gestures'",			"comment" : [				"I am the abstract class for all the Rotation gesture detectors"			],			"category" : "OSWindow-Core-Gestures"		},		"CmBlockCommand" : {			"hash" : 831744,			"definition" : "CmCommand subclass: #CmBlockCommand\r\tinstanceVariableNames: 'block canBeExecutedBlock'\r\tclassVariableNames: ''\r\tpackage: 'Commander2-Commands'",			"comment" : [				"While other commands actions should be defined by overriding #execute method, I'm a block command. ",				"I  execute a block as my action."			],			"category" : "Commander2-Commands"		},		"OSTouchScrollDetector" : {			"hash" : 4050432,			"definition" : "OSTouchOneDirectionGestureDetector subclass: #OSTouchScrollDetector\r\tinstanceVariableNames: 'directionAtBeginning persistentDirection'\r\tclassVariableNames: 'PersistentDirection'\r\tpackage: 'OSWindow-Core-Gestures'",			"comment" : [				"I am the abstract class for all the Scroll gesture detectors"			],			"category" : "OSWindow-Core-Gestures"		},		"RSMorphicPopupInteraction" : {			"hash" : 5727744,			"definition" : "RSAbstractPopupInteraction subclass: #RSMorphicPopupInteraction\r\tinstanceVariableNames: 'morphBuilder gapFromPointer'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Popup'",			"comment" : [				"I am a popup that uses Morphic and can be visible outside of the RSCanvas."			],			"category" : "Roassal3-Interaction-Popup"		},		"ReFloatEqualityComparisonRule" : {			"hash" : 3948032,			"definition" : "ReNodeMatchRule subclass: #ReFloatEqualityComparisonRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Floating point types are imprecise. Using the operators = or ~= might not yield the expected result due to internal rounding differences."			],			"category" : "GeneralRules-Migrated"		},		"MorphicWindowAdapter" : {			"hash" : 1027584,			"definition" : "AbstractMorphicAdapter subclass: #MorphicWindowAdapter\r\tinstanceVariableNames: 'isClosedHolder'\r\tclassVariableNames: ''\r\tpackage: 'Spec-MorphicAdapters-Base'",			"comment" : [				"I am the adapter used to bridge a WindowPresenter and a SystemWindow"			],			"category" : "Spec-MorphicAdapters-Base"		},		"SpAbstractPresenter" : {			"hash" : 2204416,			"definition" : "Model subclass: #SpAbstractPresenter\r\tuses: TObservable\r\tinstanceVariableNames: 'owner adapter needRebuild eventHandler'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Base'",			"comment" : [				"I'm a base for all presenters. ",				"I define common behaviours for widget presenters and also for composable presenters (the ones an user regularly uses).",				"",				"From a Spec2 users, my key methods are ",				"- `SpAbstractPresenter>>#application` to get access to the application into which I play.",				"- `SpAbstractPresenter>>#initializeDialogWindow:` defines the default buttons that decorated a dialog. Subclasses can override it to be able to customize how dialog get decorated.",				"- `SpAbstractPresenter>>#initializeWindow:` is a hook to define the window title and extend.",				"- `SpAbstractPresenter>>#openWithSpec` to open the receiver with the default layout. ",				"- `SpAbstractPresenter>>#openWithSpec: aSelector` to open the receiver with the specified layout."			],			"category" : "Spec2-Core-Base"		},		"TKTParameterizableService" : {			"hash" : 418560,			"definition" : "TKTService subclass: #TKTParameterizableService\r\tinstanceVariableNames: 'name task startUpTask tearDownTask'\r\tclassVariableNames: ''\r\tpackage: 'TaskIt-Services'",			"comment" : [				"Additionally, TaskIt provides an alternative means to create services through blocks (or valuables actually) using `TKTParameterizableService`. An alternative implementation of the file watcher could be done as follows.",				"",				"```smalltalk",				"service := TKTParameterizableService new.",				"service name: 'Generic watcher service'.",				"service onSetUpDo: [ Transcript show: 'File watcher started' ].",				"service onTearDownDo: [ Transcript show: 'File watcher finished' ].",				"service step: [",				"  'temp.txt' asFileReference exists",				"    ifFalse: [ Transcript show: 'file does not exist!' ] ].",				"",				"service start.",				"```"			],			"category" : "TaskIt-Services"		},		"OSTouchGestureNeedingThresholdDetector" : {			"hash" : 4048896,			"definition" : "OSTouchStateGestureDetector subclass: #OSTouchGestureNeedingThresholdDetector\r\tinstanceVariableNames: 'minDistBeforeDetection'\r\tclassVariableNames: 'MinDistanceBeforeDetection'\r\tpackage: 'OSWindow-Core-Gestures'",			"comment" : [				"I am a gesture detector for gestures who has to travel a certain distance before being detected"			],			"category" : "OSWindow-Core-Gestures"		},		"AthensBezierConverter class" : {			"hash" : 3059200,			"definition" : "AthensBezierConverter class\r\tinstanceVariableNames: ''",			"comment" : [				"I converting all bezier segments to a sequence of line segments, by approximating the curve along its path.",				"",				"This classs is used for generating strokes."			],			"category" : "Athens-Core-Paths"		},		"RSUMLAbstractModelDescriptor" : {			"hash" : 5782784,			"definition" : "RSObject subclass: #RSUMLAbstractModelDescriptor\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-UML-Descriptor'",			"comment" : [				"Abstract descriptor for UML artifacts"			],			"category" : "Roassal3-UML-Descriptor"		},		"RSSunburstConstantWidthLayout" : {			"hash" : 5787392,			"definition" : "RSAbstractSunburstLayout subclass: #RSSunburstConstantWidthLayout\r\tinstanceVariableNames: 'arcWidth centerWidth'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Sunburst'",			"comment" : [				"I am a layout for sunburst visualization,",				"",				"I put the arcs in a constant delta separation, you can define the center width."			],			"category" : "Roassal3-Sunburst"		},		"OkToolbar" : {			"hash" : 922624,			"definition" : "ComposablePresenter subclass: #OkToolbar\r\tinstanceVariableNames: 'okButton okAction'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Support'",			"comment" : [				"An OkCancelToolbar is a model for a basic Ok toolbar"			],			"category" : "Spec-Core-Support"		},		"RBClassRegexRefactoring" : {			"hash" : 3171072,			"definition" : "RBRegexRefactoring subclass: #RBClassRegexRefactoring\r\tinstanceVariableNames: 'rootClass mode'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Core-Refactorings'",			"comment" : [				"I am a regex refactoring renaming or copying class names.",				"I offer several models of operation in addition to regex matching. ",				"",				"Refactored classes can be renamed, copied and kept aside old ones: try renameClasses, copyClasses, or createClasses. ",				"",				"See also the comment of superclass for a nice script."			],			"category" : "Refactoring-Core-Refactorings"		},		"LGitReadStream" : {			"hash" : 6158592,			"definition" : "Object subclass: #LGitReadStream\r\tinstanceVariableNames: 'gitBlob position'\r\tclassVariableNames: ''\r\tpackage: 'LibGit-FileSystem'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tgitBlob:\t\t<Object>",				"\tposition:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "LibGit-FileSystem"		},		"SpVerticalAlignment" : {			"hash" : 2198272,			"definition" : "Object << #SpVerticalAlignment\r\ttraits: {TObservable};\r\tslots: {\r\t\t\t #firstVisibleRowIndex .\r\t\t\t #lastVisibleRowIndex .\r\t\t\t #desiredVisibleRow => ObservableSlot };\r\ttag: 'Widgets-Table';\r\tpackage: 'Spec2-Core'",			"comment" : [				"I represent the vertical scrolling of a presenter.",				"You can ask the first and last index of the visible rows.",				"I can move the scrolling to make an element visible with the #desiredVisibleRow: method."			],			"category" : "Spec2-Core-Widgets-Table"		},		"RubScrolledTextExtra" : {			"hash" : 592128,			"definition" : "Morph subclass: #RubScrolledTextExtra\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Editing-Widgets'",			"comment" : [				"RubScrolledTextExtra represents the root of rulers graphical representations (which add specific behavior to the scrolledText on which they are attached).",				"",				"Subinstances are the graphical representation of the associated decorators defined in the .",				"",				" the main methods are ",				"\t- computedExtentFrom:",				"\t- computedHeightFrom: ",				"\t- computedPositionFrom:",				"\t- computedWidthFrom:",				"\t"			],			"category" : "Rubric-Editing-Widgets"		},		"Unicode class" : {			"hash" : 1080064,			"definition" : "Unicode class\r\tinstanceVariableNames: ''",			"comment" : [				"This class holds the entry points for the utility functions around characters."			],			"category" : "Multilingual-Encodings-CharSets"		},		"MicAbstractMicrodownTextualBuilder" : {			"hash" : 6535424,			"definition" : "Object subclass: #MicAbstractMicrodownTextualBuilder\r\tinstanceVariableNames: 'stream parserClass lastIsNewLine newLineCharacterString'\r\tclassVariableNames: ''\r\tpackage: 'Microdown-Parser'",			"comment" : [				"I'm a copy of Pillar textual canvas. I should be fusioned in my subclass.",				"We should revisit the API because parsing lines is a not really good design."			],			"category" : "Microdown-Parser"		},		"OmFileStore" : {			"hash" : 4178176,			"definition" : "OmStore subclass: #OmFileStore\r\tinstanceVariableNames: 'globalName headReference fileReference entryPositionsByLocalName entryCount writingDeferrer entryByLocalName mustRefresh entryBuffer lock lastStreamPosition'\r\tclassVariableNames: ''\r\tpackage: 'Ombu-Stores'",			"comment" : [				"I am a single-file store of entries. Each new entry is appended at the end. Entries are lazily read from file on demand."			],			"category" : "Ombu-Stores"		},		"TaskbarMorph" : {			"hash" : 613632,			"definition" : "Morph subclass: #TaskbarMorph\r\tinstanceVariableNames: 'tasks orderedTasks'\r\tclassVariableNames: 'MaximumButtons ShowTaskbar ShowWindowPreview'\r\tpackage: 'Morphic-Widgets-Taskbar'",			"comment" : [				"Themed synchronous taskbar (not using #step to poll windows). The buttons provide visual feedback as to whether a window is active or minimised (collapsed) plus a popup menu with options to restore, minimise, maximise and close the associated window. Optional (via settings) preview of the window while mouse is over a taskbar button."			],			"category" : "Morphic-Widgets-Taskbar"		},		"ExecutionCounter class" : {			"hash" : 3024384,			"definition" : "ExecutionCounter class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a meta-object that can be put on any AST node to count execution",				"",				"To install a watchpoint in a node: ",				"\tExecutionCounter installOn: aNode",				"\t",				"Class CounterIconStyler then renders an icon in the editor, mouse over it to see the current counter value."			],			"category" : "Reflectivity-Breakpoints"		},		"OSTouchHoldDetector" : {			"hash" : 4046848,			"definition" : "OSTouchPunctualGestureDetector subclass: #OSTouchHoldDetector\r\tinstanceVariableNames: 'waitingTime maxDistanceTravelled process'\r\tclassVariableNames: 'MaxDistanceTravelled WaitingTime'\r\tpackage: 'OSWindow-Core-Gestures'",			"comment" : [				"I am the abstract class for all the Hold gesture detectors"			],			"category" : "OSWindow-Core-Gestures"		},		"SpMillerLayout" : {			"hash" : 2148096,			"definition" : "SpExecutableLayout << #SpMillerLayout\r\ttraits: {TObservable};\r\tslots: {\r\t\t\t #direction .\r\t\t\t #spacing .\r\t\t\t #borderWidth .\r\t\t\t #visiblePages => ObservableSlot };\r\ttag: 'Miller';\r\tpackage: 'Spec2-Layout'",			"comment" : [				"I'm a layout to implement miller lists. ",				"Since I am intended to be used dynamically (adding/removing components on demand), I implement just `add:` and `remove:` related methods.",				"You can also control borderWith and spacing between elements."			],			"category" : "Spec2-Layout-Miller"		},		"MetacelloMCPartiallyLoadedStatus" : {			"hash" : 331008,			"definition" : "Object subclass: #MetacelloMCPartiallyLoadedStatus\r\tinstanceVariableNames: 'hasNoPackage hasNoProject aProjectIsLoaded aPackageIsLoaded aLoadedProjectIsExact aLoadedPackageIsExact aLoadedProjectIsCurrent aLoadedPackageIsCurrent aLoadedProjectIsNotCurrent aLoadedPackageIsNotCurrent aProjectNotLoaded aPackageNotLoaded vrsnStatus abort'\r\tclassVariableNames: ''\r\tpackage: 'Metacello-MC-Specs'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\taLoadedPackageIsCurrent:\t\t<Object>",				"\taLoadedPackageIsExact:\t\t<Object>",				"\taLoadedPackageIsNotCurrent:\t\t<Object>",				"\taLoadedProjectIsCurrent:\t\t<Object>",				"\taLoadedProjectIsExact:\t\t<Object>",				"\taLoadedProjectIsNotCurrent:\t\t<Object>",				"\taPackageIsLoaded:\t\t<Object>",				"\taPackageNotLoaded:\t\t<Object>",				"\taProjectIsLoaded:\t\t<Object>",				"\taProjectNotLoaded:\t\t<Object>",				"\tabort:\t\t<Object>",				"\thasNoPackage:\t\t<Object>",				"\thasNoProject:\t\t<Object>",				"\tvrsnStatus:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Metacello-MC-Specs"		},		"TaskbarItemMorph" : {			"hash" : 1912064,			"definition" : "PluggableButtonMorph subclass: #TaskbarItemMorph\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Taskbar'",			"comment" : [				"Description",				"--------------------",				"",				"A TaskbarItemMorph is a Morph representing a unique item of the taskbar. ",				"",				"It can be customized via the current theme for its border and fill style.",				"",				"Examples",				"--------------------",				"",				"\t(TaskbarItemMorph on: aWindow getState: #isActive action: #taskbarButtonClicked)",				"\t\tinitializeFor: aTaskbar;",				"\t\tyourself"			],			"category" : "Morphic-Widgets-Taskbar"		},		"ClyDataSourceUpdateScheduler" : {			"hash" : 5107456,			"definition" : "Object subclass: #ClyDataSourceUpdateScheduler\r\tinstanceVariableNames: 'updateQueue process'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-DataSource'",			"comment" : [				"I organize scheduled updates of data sources.",				"Idea to always defer update of browser until current UI command will be completelly done. ",				"It ensures that browser updates will not affect general performance of basic operations which modifies system because any update will be just queued and processes in low priority process when there will be time for this.",				"",				"My single instance is created by ClyDataSource as shared class variable UpdateScheduler.",				"Data sources register themselfs for updates when they receives event that items were changed: ",				"\t",				"\tUpdateScheduler register: aDataSource.",				"\t ",				"In addition actual update is executed in UI process using standart deferring logic: ",				"",				"\tUIManager default defer: [ next runUpdate ]",				"",				"But this deferring is triggered from low priority process.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tprocess:\t\t<Process>",				"\tupdateQueue:\t\t<AtomicSharedQueue>"			],			"category" : "Calypso-Browser-DataSource"		},		"KMAltModifier" : {			"hash" : 779008,			"definition" : "KMModifier subclass: #KMAltModifier\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Keymapping-KeyCombinations'",			"comment" : [				"I represent the Alt key modifier. Look at my superclass for a more detailed explanaition."			],			"category" : "Keymapping-KeyCombinations"		},		"RGClassInstanceVariableDefinition" : {			"hash" : 1325824,			"definition" : "RGVariableDefinition subclass: #RGClassInstanceVariableDefinition\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Ring-Definitions-Core-Base'",			"comment" : [				"A class instance variable definition"			],			"category" : "Ring-Definitions-Core-Base"		},		"RSAbstractConnection" : {			"hash" : 2275840,			"definition" : "Object subclass: #RSAbstractConnection\r\tinstanceVariableNames: 'inputCanvas outputs numberOfCreatedCanvases lastWindow windowOpener canvasOpenings'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Mondrian-Connections'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcanvasOpenings:\t\t<Object>",				"\tinputCanvas:\t\t<Object>",				"\tlastWindow:\t\t<Object>",				"\tnumberOfCreatedCanvases:\t\t<Object>",				"\toutputs:\t\t<Object>",				"\twindowOpener:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Roassal3-Mondrian-Connections"		},		"OSTextInputEvent" : {			"hash" : 4013568,			"definition" : "OSEvent subclass: #OSTextInputEvent\r\tinstanceVariableNames: 'text modifiers position'\r\tclassVariableNames: ''\r\tpackage: 'OSWindow-Core-Events'",			"comment" : [				"i am delivered when user enters some text"			],			"category" : "OSWindow-Core-Events"		},		"StringMorph" : {			"hash" : 604928,			"definition" : "Morph subclass: #StringMorph\r\tuses: TAbleToRotate\r\tinstanceVariableNames: 'font emphasis contents hasFocus backgroundColor'\r\tclassVariableNames: 'EditableStringMorph'\r\tpackage: 'Morphic-Base-Basic'",			"comment" : [				"StringMorph is a \"lightweight\" Morph to display a String. It supports only a single font, color, and emphasis combination. For multiple text styles, use TextMorph.",				"",				"Structure:",				"instance var    \tType              Description ",				"font \t\t\tStrikeFont \t\t(normally nil; then the accessor #font gives back TextStyle ",				"\t\t\t\tor nil\t\t\tdefaultFont) ",				"emphasis \t\tSmallInteger\tbitmask determining character attributes (underline, bold, \t\t\t\t\t\t\t\titalics, narrow, struckout) ",				"contents \t\tString \t\t\tThe text that will be displayed. ",				"hasFocus \t\tBoolean \t\tDo I have the keyboard focus or not? ",				"",				"A StringMorph may also be used like a SimpleButtonMorph to do an action when clicked. Use the menu 'extras' / 'add mouseUpAction'.",				"",				"The following propery will be defined:",				"aStringMorph valueOfProperty: #mouseUpCodeToRun"			],			"category" : "Morphic-Base-Basic"		},		"RSAbstractTreeBuilder" : {			"hash" : 5664512,			"definition" : "RSAbstractContainerBuilder subclass: #RSAbstractTreeBuilder\r\tinstanceVariableNames: 'rootNodes weight'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Builders-Core'",			"comment" : [				"I am a abstract class to create visual elements based on tree structured in roassal3"			],			"category" : "Roassal3-Builders-Core"		},		"MorphHandlingMiddleButton" : {			"hash" : 3100416,			"definition" : "Morph subclass: #MorphHandlingMiddleButton\r\tinstanceVariableNames: 'receivedBlueButtonUp receivedBlueButtonDown'\r\tclassVariableNames: ''\r\tpackage: 'SUnit-Support-UITesting-Morphic'",			"comment" : [				"I log when the middle mouse button has been clicked on me, which is useful for testing."			],			"category" : "SUnit-Support-UITesting-Morphic"		},		"SimpleSwitchMorph" : {			"hash" : 1962240,			"definition" : "SimpleButtonMorph subclass: #SimpleSwitchMorph\r\tinstanceVariableNames: 'onColor offColor'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Basic-Buttons'",			"comment" : [				"I represent a switch that can be either on or off.  I chnage my state in response to a mouse click.  When clicked, I also send my actionSelector to my target, just like a SimpleButtonMorph.",				"",				"\tSimpleSwitchMorph new openInWorld"			],			"category" : "Morphic-Widgets-Basic-Buttons"		},		"CoFetcher" : {			"hash" : 5305600,			"definition" : "Object subclass: #CoFetcher\r\tinstanceVariableNames: 'generator filter'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Model-Core'",			"comment" : [				"I'm a kind of iterator (in the sense of GoF) that goes one by one over \"a stream\" of entities that can be consumed by the completion engine within a completion context.",				"",				"I provide access to the elements I return one by one (using the next message) in a controlled manner. ",				"At the root, I define the architecture to yield one entry at a time. ",				"The next method invokes the hook method #entriesDo: with a generator yielding capability.",				"This way any use of #next will be done step by step. ",				"",				"My subclasses implement the following method entriesDo: aBlock which defines the semantics of element fetching",				"Here is a simple example where a generic fetcher is used on a collection, and wrapped by a fetcher that avoids returning duplicate elements.",				"",				"[[[",				"fetcher := AvoidRepeatedComplishonFetcher new",				"\tcomplishonFetcher: (GenericComplishonFetcher onCollection: #( a b b a c )).",				"]]]",				"\t",				"Here are two examples of definition",				"",				"[[[",				"AvoidRepeatedComplishonFecther >> entriesDo: aBlock",				"\tdecoree",				"\t\tentriesDo: [ :elem | ",				"\t\t\t(self hasAlreadyReturned: elem)",				"\t\t\t\tifFalse: [ elements add: elem.",				"\t\t\t\t\taBlock value: elem ] ]",				"]]]",				"",				"[[[",				"GenericComplishonFetcher >> entriesDo: aBlock",				"",				"\tcollection do: aBlock",				"]]]",				"",				"",				"",				"\t"			],			"category" : "HeuristicCompletion-Model-Core"		},		"MczInstaller class" : {			"hash" : 1844224,			"definition" : "MczInstaller class\r\tinstanceVariableNames: ''",			"comment" : [				"An installer for Monticello files with the *.mcz extension. ",				"",				"   MczInstaller installFileNamed: 'MyKillerApp-Core-Author.1.mcz'"			],			"category" : "System-Installers"		},		"HDTestReport" : {			"hash" : 464640,			"definition" : "HDReport subclass: #HDTestReport\r\tinstanceVariableNames: 'suite stream suitePosition suiteTime suiteFailures suiteErrors nodeName stageName progressFileName progressStream shouldSerializeError fileName'\r\tclassVariableNames: 'CurrentStageName'\r\tpackage: 'JenkinsTools-Core'",			"comment" : [				"Hudson report for test results"			],			"category" : "JenkinsTools-Core"		},		"SpMenuPresenterBuilder" : {			"hash" : 2397440,			"definition" : "CmVisitor subclass: #SpMenuPresenterBuilder\r\tinstanceVariableNames: 'menuPresenter stack'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Commander2-Visitors'",			"comment" : [				"I am a visitor that builds a Spec MenuPresenter from a commands and commands group."			],			"category" : "Spec2-Commander2-Visitors"		},		"ScrollBarMorph class" : {			"hash" : 1933312,			"definition" : "ScrollBarMorph class\r\tinstanceVariableNames: ''",			"comment" : [				"Inspired by an oiginal design of Hans-Martin Mosner, this ScrollBar is intended to exercise the handling of input events in Morphic.  With sufficient flexibility in this area, all particular behavior can be concentrated in this single class with no need to specialize any other morphs to achieve button, slider and menu-button behavior.",				"",				"Once we have this working, put in logic for horizontal operation as well.",				"",				"CachedImages was added to reduce the number of forms created and thrown away. This will be helpful for Nebraska and others as well."			],			"category" : "Morphic-Widgets-Scrolling"		},		"AthensCairoMatrix" : {			"hash" : 3072768,			"definition" : "FFIExternalStructure subclass: #AthensCairoMatrix\r\tuses: TCairoLibrary\r\tinstanceVariableNames: ''\r\tclassVariableNames: 'OFFSET_SHX OFFSET_SHY OFFSET_SX OFFSET_SY OFFSET_X OFFSET_Y'\r\tpoolDictionaries: 'AthensCairoDefinitions'\r\tpackage: 'Athens-Cairo-Transforms'",			"comment" : [				"I implement an AthensAffineTransform interface."			],			"category" : "Athens-Cairo-Transforms"		},		"ReRuleManager class" : {			"hash" : 1737728,			"definition" : "ReRuleManager class\r\tinstanceVariableNames: 'default managers'",			"comment" : [				"I should be used as singleton which provides sets of rules for checking classes and methods.",				"",				"Use:",				"",				"ReRuleManager uniqueInstance classRules \"to get rules for checking classes\"",				"ReRuleManager uniqueInstance methodRules \"to get rules for checking methods\""			],			"category" : "Renraku-Utility"		},		"TestWorkingSession" : {			"hash" : 4395776,			"definition" : "WorkingSession subclass: #TestWorkingSession\r\tinstanceVariableNames: 'errors errorHandler'\r\tclassVariableNames: ''\r\tpackage: 'System-SessionManager-Tests'",			"comment" : [				"I'm a special working session for test purposes.",				"I provide a way to escape from the UIManager. "			],			"category" : "System-SessionManager-Tests"		},		"ClyConstantMethodQuery" : {			"hash" : 4914176,			"definition" : "ClyMethodQuery subclass: #ClyConstantMethodQuery\r\tinstanceVariableNames: 'description methods'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-SystemQueries-Queries'",			"comment" : [				"I am most trivial method query which just returns constant set of methods.",				"",				"I implement logic to always return live method instances:",				"- I filter out removed methods",				"- I return actual version of methods if they were modified",				"Look at the method #filterInstalledMethods: for details.",				"",				"To create my instances use:",				"\tClyConstantMethodQuery with: {Rectangle >> #area}",				"Or with special description:",				"\tClyConstantMethodQuery named: 'todo methods' with: {Rectangle >> #area}",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tdescription:\t\t<String>",				"\tmethods:\t\t<IdentitySet of: CompiledMethod>"			],			"category" : "Calypso-SystemQueries-Queries"		},		"RSForceLayoutInSpacesBuilder" : {			"hash" : 2288640,			"definition" : "RSAbstractContainerBuilder subclass: #RSForceLayoutInSpacesBuilder\r\tinstanceVariableNames: 'numberOfSpaces spaces colorForLinesInSameSpace colorForLinesInDifferentSpace linearScale colorScale classes'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-ForceLayoutSpaces'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Experimental-ForceLayoutSpaces"		},		"ExecutionEnvironmentStub" : {			"hash" : 3674624,			"definition" : "ExecutionEnvironment subclass: #ExecutionEnvironmentStub\r\tinstanceVariableNames: 'forkedProcesses'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Tests-Processes'",			"comment" : [				"I am stub to test ExecutionEnvironment's"			],			"category" : "Kernel-Tests-Processes"		},		"TFBasicType class" : {			"hash" : 2016000,			"definition" : "TFBasicType class\r\tinstanceVariableNames: ''",			"comment" : [				"I am an abstract class representing a type in the C world.",				"I have a name and a code that corresponds to a type code in libffi.",				"From this information I:",				" - calculate my size in memory for the current platform",				" - provide marshalling from/to Pharo objets to their corresponding C representation.",				"",				"My class side contains a set of accessors for well known types that are cached in class side variables.",				"",				"!! Public API",				"",				"- #byteSize",				"  returns the size in bytes",				"- #readValue: anExternalAddress",				"  reads a value of my type from an external address containing a pointer",				"- #readValue: anExternalAddress offset: anOffset",				"  reads a value of my type from an external address containing a pointer but starting reading at the given offset. Offsets are Pharo-like, 1-based",				"- #write: aValue into: anExternalAddress",				"  writes a value of my corresponding type into an external address",				"- #isVoid",				"  returns true if it is a void type",				"- #isValid",				"  returns true if the type is initialized",				"",				"!! Implementation Details",				"",				"At my first usage in a session, any of my instances will use this information to ask the ThreadedFFI plugin for the correct representation in the current platform.",				"",				"See #validate and #primFillType.",				"",				"My subclasses should redefine #readValue:offset: to provide correct type marshalling from C values to Pharo values"			],			"category" : "ThreadedFFI-Types"		},		"CoAvoidRepeatedFetcher" : {			"hash" : 5310208,			"definition" : "CoFetcherDecorator subclass: #CoAvoidRepeatedFetcher\r\tinstanceVariableNames: 'elements'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Model-Core'",			"comment" : [				"GenericComplishonFetcher I ensure that I will not return twice the same entity.",				"I am mainly used in the context of code completion of messages, although I can be used in other context.",				"",				"For example, when looking to autocomplete messages for ==self==, an heuristic may choose to show the selectors in the class, then the selectors in the superclass, and so on, following the inheritance chain. However, in the class hierarchy we may observe redefined methods, so a naive fetcher will first show #redefined from the subclass and then #redefined again from the superclass.",				"",				"I can be easily created by sending the #withoutRepetition message to another fetcher.",				"",				"(GenericComplishonFetcher onCollection: aCollection) withoutRepetition."			],			"category" : "HeuristicCompletion-Model-Core"		},		"Watch" : {			"hash" : 3047680,			"definition" : "Object subclass: #Watch\r\tinstanceVariableNames: 'tagname node link values recording'\r\tclassVariableNames: 'Watches'\r\tpackage: 'Reflectivity-Breakpoints'",			"comment" : [				"A Watch save the change of values of expressions. ",				"I save them as an ordered collection of  key val association where the key is the timestamp an val is the actual value of the expression.",				"",				"To install a Watch in a node: ",				"Watch in: aNode"			],			"category" : "Reflectivity-Breakpoints"		},		"ZipDirectoryMember" : {			"hash" : 1343488,			"definition" : "ZipFileMember subclass: #ZipDirectoryMember\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Compression-Archives'",			"comment" : [				"ZipFileMember instances represent directories inside ZipArchives.",				"They don't do much other than hold names and permissions (and extra fields).",				"",				"You can add files in subdirectories to a ZipArchive without using any ZipDirectoryMembers."			],			"category" : "Compression-Archives"		},		"RGClassDescriptionDefinition" : {			"hash" : 1329408,			"definition" : "RGBehaviorDefinition subclass: #RGClassDescriptionDefinition\r\tinstanceVariableNames: 'instanceVariables organization'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Definitions-Core-Base'",			"comment" : [				"RGClassDescriptionDefinition is the common parent for classes and metaclasses defining instance variables"			],			"category" : "Ring-Definitions-Core-Base"		},		"RPackageOrganizer class" : {			"hash" : 1100288,			"definition" : "RPackageOrganizer class\r\tinstanceVariableNames: 'default'",			"comment" : [				"A RPackageOrganizer is responsible for providing all the package currently defined in the system.",				"In addition it provides a back pointer from the class to its package.",				"",				"The classPackageMapping and the classExtendingPackageMapping should be moved in the future to the classes themselves. ",				"",				"",				"For tests or actions that could destroy the package organizer,  do not access directly the singleton of RPackageOrganizer.",				"Use instead ",				"\t\tRPackage withOrganizer: aNewOrganizer do: ablock",				"\t\t\tor via RPackage organizer",				"\t\t",				"\t",				"RPackageOrganizer fillUp will fill up the system from the current PackageOrganizer",				"\t\"self fillUp\"",				"\t",				"-----------------------------------------------------------------------------------------------------------------------------------------------\t",				"\t",				"\t",				"A rpackageOrganizer update itself when some changes are made in the system. It does that by registering to a systemAnnoucer, specifying an action when an annoucement is triggered.",				"Here is what I (Cyrille Delaunay) propose to do for each annocuement triggered:",				"",				"SystemCategoryAddedAnnouncement \t",				"\t=> I would just register a new RPackage (if it does not already exist) in the RPackageOrganizer",				"\t",				"SystemCategoryRemovedAnnouncement ",				"     => I would just unregister the RPackage concerned from the organizer",				"",				"SystemCategoryRenamedAnnouncement",				"     => I would update the RPackage concerned, by changing its name",				"     => I would update the 'packages' dictionary of the organizer, putting the new name as key",				"",				"SystemClassAddedAnnouncement ",				"    => Import the class in the RPackage concerned (RPackage >> importClass:)",				"    => Register the class in the 'classPackageMapping' dictionary of the organizer (RPackageOrganizer >> registerPackage:forClass)",				"    (=> maybe we should pay attention if both the class and the metaclass launch this kind of event ?)",				"",				"SystemClassRecategorizedAnnouncement",				"    => I would update the old RPackage concerned:",				"            => unregister the class",				"            => unregister all defined methods of the class",				"    => I would update the new RPackage:",				"            => Import the class in the RPackage (importClass:)",				"    => I would update the organizer:",				"            => update the 'classPackageDictionary' to point on the new RPackage",				"",				" ",				"SystemClassRemovedAnnouncement",				"    => I would update the RPackake concerned",				"             => unregister the class",				"             => unregister all defined methods of the class",				"    => I would update the organizer:",				"             => update the 'classPackageDictionary' to remove the class",				"",				"SystemClassRenamedAnnouncement",				"    => I would update the RPackage in which the class is defined:",				"             => update the 'classDefinedSelectors' dictionary (replace the old key by the new one)",				"             => update the 'metaclassDefinedSelectors' dictionary (replace the old key by the new one)",				"    => I would update all RPackages extending this class",				"             => update the 'classExtensionsSelectors' dictionary (replace the old key by the new one)",				"             => update the 'metaclassclassExtensionsSelectors' dictionary (replace the old key by the new one)",				"    => I would update the organizer",				"             => update the 'classPackageDictionary' to replace the key with the new class name",				"             => update the 'classExtendingPackagesMapping' to replace the key with the new class name",				"                          ",				"SystemClassReorganizedAnnouncement ",				"    (=> I guess we should check if extensions have not been added or removed ? ",				"      (to retrieve this information, the only thing I found is ClassDescription >> organization, and then check each category begining with '*' and compare with the organizer. seems to be painful, no?))",				"\t=> when an extension is removed, all methods inside are removed. Therefore, the MethodRemovedAnnounecement will do the job. Not sur this one still usefull",				"",				"SystemProtocolAddedAnnouncement",				"    => I don't see anything to do for this annoucement",				"",				"SystemProtocolRemovedAnnoucement",				"    => If the category is an extension from a package, I would move all the methods concerned, from the extending RPackage to the class RPackage",				"",				"SystemMethodAddedAnnouncement",				"       => I would check the category in which the method has been defined",				"               => if it correspond to an extending package -> add the method to the extending RPackage",				"               => if not, add the method to the class parentPackage",				"",				"SystemMethodModifiedAnnouncement",				"       this annoucement can correspond to several kind of modifications:",				"\t       *  a method has been renamed",				"                       => I would update the rPackage in which the method is defined to replace the old selector by the new one",				"\t\t* a method has been move to another category ",				"\t\t\t-maybe from a classic category to an extending package",				"                             => we should move the method from the  method class parentPackage to extendingPackage package",				"\t\t\t-maybe from an extending package to another extending package",				"                             => we should move the method from the  extendingPackage package to the other extendingPackage package",				"\t\t\t-maybe from an extending package to a classic category",				"                             =>  we should move the method from the  extendingPackage to the method class parentPackage",				"\t\t        -maybe from a classic category to another classic category",				"                             => we have nothing to do",				"\t\t\t",				"",				"SystemMethodRecategorizedAnnouncement",				"          same thing than above",				"",				"SystemMethodRemovedAnnouncement",				"       => I would simply remove the method from the RPackage in which it is register"			],			"category" : "RPackage-Core-Base"		},		"ProcessMonitorTestService" : {			"hash" : 357632,			"definition" : "TestExecutionService subclass: #ProcessMonitorTestService\r\tinstanceVariableNames: 'forkedProcesses testFailures shouldSuspendBackgroundFailures shouldFailTestLeavingProcesses shouldTerminateProcesses'\r\tclassVariableNames: ''\r\tpackage: 'SUnit-Core-Kernel'",			"comment" : [				"I monitor all processes forked during tests and track all exceptions signaled from them.",				"",				"1) The main goal is to ensure that if there was an error from the background process the test will never be green. ",				"For example I make following test fail:",				"",				"\ttestExample",				"\t\t[ 1/0 ] fork.",				"\t\tself assert: true.",				"",				"TestFailedByForkedProcess will be signaled at the end of such test. And if user will debug this test then two debuggers will be opened for each error (for main and background processes).",				"\t\t",				"2) The second my purpose is to ensure that no running processes will be left after the test.",				"The background process can be more tricky than example and it can be forked by domain code.",				"Out of the test such processes could affect the overall system behavior. ",				"They could affect other tests results. If they fail during other tests it will hide the fact that the issue is related to the original test which will make debugging hard.",				"",				"So at the end of every test I perform a cleanup (#cleanUpAfterTest) where I terminate all running processes. This behavior can be disabled globaly in settings (System/SUnit) or in test method and setUp:",				"",				"\tself executionProcessMonitor disableProcessTermination ",				"\t",				"To enable it use: ",				"",				"\tself executionProcessMonitor terminateProcessesAfterTest",				"",				"In addition I implement special logic to fail the test which left running processes after run.",				"So the process termination is not hidden. ",				"For example following test will fail:",				"",				"\ttestExample",				"\t\t[ 10 seconds wait ] fork.",				"\t\tself assert: true.",				"",				"TestLeftRunningProcess will be signaled at the end of test.",				"For compatibility this feature is disabled by default. And this test would not fail. But it can be enabled globaly in settings (System/SUnit) or in test and setUp:\t ",				"",				"\tself executionProcessMonitor failTestLeavingProcesses.",				"",				"And to disable it use: ",				"",				"\tself executionProcessMonitor allowTestToLeaveProcesses.",				"",				"3) I can be completely disabled globaly in settings (System/SUnit) or in test and setUp:",				"",				"\tself executionProcessMonitor disable ",				"\t ",				"Finally at the end of every test I perform a cleanup (#cleanUpAfterTest) where I restore all my default settings. So the next test will be started with default behaviour.",				"",				"Implementation details:",				"",				"1. Background failures",				"",				"I am a kind of TestExecutionService and therefore I intercept all processes forked during the test (#handleNewProcess:).",				"I set up default exception handler for them to catch all unhandled exceptions. UnhandledException's are supposed to open a debugger at the end of processing. I postpone this logic by suspending the failing process. So when error is signaled from the background process no debugger will be opened immediately.",				"At the end of test (#handleCompletedTest) I check all suspended failures and if they exist I fail the test with TestFailedByForkedProcess signal.",				"In interactive mode when user debugs the test I pass all suspended failures together with this signal. So multiple debuggers will be opened to show each error.",				"",				"The interactive scenario is detected using UnhandledException logic: unhandled error from the main test process or halt from anywhere mean the \"debugger fallback\" and therefore it is a good time to show the rest of failures from other processes. So in that case I pass all suspended failures to debug all of them together.",				"",				"2. Failing strategy for left processes",				"",				"I collect all forked processes (#forkedProcesses) and at the end of tests I have an option (#shouldFailTestLeavingProcesses) to fail the test if these processes are still running. TestLeftRunningProcess would be a final error for the test in that case.",				"I implement a little logic to make this failing strategy more usable and not break the test in trivial cases. For eaxmple following pattern is quite common in tests: ",				"",				"\ttestExample ",				"\t\t[ \"some work here\". Processor yield ] fork.",				"\t\tProcessor yield.",				"\t\tself assert: true.",				"",				"The #yield's here are to describe what could happen in real world: processes can be preemted at any time due to various activities from other image processes (with different priorities). And a simple #fork in tests like this one will not be able to terminate at the end of test while it is \"almost done\".",				"The method #allowRunningProcessesToFinish is to solve this issue. It performs own \"Processor yield\" logic to allow such background processes to take a control and finish the execution. ",				"",				"3. One more detail: ",				"In uninteractive mode I signal TestFailedByForkedProcess even if there was a domain error from the test. So two exceptions can be signaled for single test run.",				"It allows to log all errors signaled during the test: one from the main process and others from all background processes using this signal (notice that I suspend all background failures and they do not log themselves as a default feedback).",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tforkedProcesses:\t\t<OrderedCollection<Process>>",				"\ttestFailures:\t\t<OrderedIdentityDictionary<Process, Exception>>",				"\tshouldFailTestLeavingProcesses:\t\t<Boolean>",				"\tshouldSuspendBackgroundFailures:\t\t<Boolean>"			],			"category" : "SUnit-Core-Kernel"		},		"ShLayoutDefinition" : {			"hash" : 818944,			"definition" : "Object subclass: #ShLayoutDefinition\r\tinstanceVariableNames: 'layoutClass slots classSlots sharedPools sharedVariables builder'\r\tclassVariableNames: ''\r\tpackage: 'Shift-ClassBuilder'",			"comment" : [				"I am an internal object used by the ShiftClassBuilder to represent the layout of a class."			],			"category" : "Shift-ClassBuilder"		},		"SpMenuGroupPresenter" : {			"hash" : 2218752,			"definition" : "SpAbstractWidgetPresenter << #SpMenuGroupPresenter\r\tslots: {\r\t\t\t #items .\r\t\t\t #autoRefresh => ObservableSlot };\r\ttag: 'Widgets';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A presenter for grouping menu items.",				"A group is always part of a menu (See `SpMenuPresenter`), and it groups items (See `SpMenuItemPresenter`)."			],			"category" : "Spec2-Core-Widgets"		},		"ThemeSettings" : {			"hash" : 696064,			"definition" : "Model subclass: #ThemeSettings\r\tinstanceVariableNames: 'windowColor selectionColor autoSelectionColor buttonColor scrollbarColor standardColorsOnly progressBarColor progressBarProgressColor menuColor menuTitleColor preferGradientFill preferRoundCorner autoMenuColor flatMenu fadedBackgroundWindows fastDragging animationSettings scrollBarThickness balloonHelpEnabled tabAmongFields balloonHelpDelayTime maxBalloonHelpLineLength desktopImageLayout menuSelectionColor findReplaceSelectionColor selectionBarColor unfocusedSelectionColor menuSelectionTextColor selectionTextColor secondarySelectionTextColor findReplaceSelectionTextColor'\r\tclassVariableNames: ''\r\tpackage: 'Polymorph-Widgets-Themes'",			"comment" : [				"Configurable basic settings for themes."			],			"category" : "Polymorph-Widgets-Themes"		},		"TFTestCallbackExceptionHandler" : {			"hash" : 2040832,			"definition" : "Object subclass: #TFTestCallbackExceptionHandler\r\tinstanceVariableNames: 'lastException available'\r\tclassVariableNames: ''\r\tpackage: 'ThreadedFFI-Tests'",			"comment" : [				"I am a test callback exception handler.",				"I keep the exception so it can be asserted in the test."			],			"category" : "ThreadedFFI-Tests"		},		"SpNotebookMorph" : {			"hash" : 2570752,			"definition" : "TabGroupMorph subclass: #SpNotebookMorph\r\tinstanceVariableNames: 'headerMorph toolbarMorph'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Notebook'",			"comment" : [				"I'm a tab morph used to build spec notebooks.",				"I extend my parent by adding special ways to add pages (allowing any widget to be a page).",				"I also add a toolbar to add actions."			],			"category" : "Spec2-Adapters-Morphic-Notebook"		},		"ReUnoptimizedToDoRule" : {			"hash" : 3955200,			"definition" : "ReNodeMatchRule subclass: #ReUnoptimizedToDoRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for inefficient uses of to:do: that create an unnecessary Interval instance.",				"",				"( 1 to: 10 ) do: aBlock",				"",				"can be more efficiently expressed as ",				"",				"1 to: 10 do: aBlock"			],			"category" : "GeneralRules-Migrated"		},		"GlobalIdentifier" : {			"hash" : 761088,			"definition" : "Object subclass: #GlobalIdentifier\r\tinstanceVariableNames: 'persistenceStrategy persistedInformation'\r\tclassVariableNames: ''\r\tpackage: 'System-Identification'",			"comment" : [				"I keep global IDs that are used for tracking user activity, e.g. computer id. By default, you should access me by calling #uniqueInstance.",				"",				"Responsibility:",				"The IDs that are important to store onto disk (and shared by all images) should be placed in persistedInformation instance variable. On other hand, if you do not want to store it onto disk, create a new instance variable. I can #loadPreferences and #savePreferences onto a disk.",				"",				"I know computer ID and secret ID. Computer ID is a global UUID that is share among all the images. It is stored on a local disk. Secret ID is use for encrypting information, e.g., class names, method names. You can use #hashForText: method.",				"",				"Collaborators: I do not collaborate with other classes. I only offer the basic IDs for other frameworks.",				"",				"Public API and Key Messages",				"",				"- computerUUID ",				"- ensureComputerUUID",				"- hashForText:",				"- loadPreferences ",				"- savePreferences.",				"",				"Before using #computerUUID, you should call #ensureComputerUUID. It will update UUID from the disk or stores existing one if it is not stored yet. I behave like this as automatic storing data to disk on image start-up leads to errors.",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tpersistedInformation:\t\t<Dictionary>",				"\tpreferences:\t\t<FileReference>"			],			"category" : "System-Identification"		},		"RSSankey" : {			"hash" : 2289152,			"definition" : "RSAbstractContainerBuilder subclass: #RSSankey\r\tinstanceVariableNames: 'extent nodePadding nodes links boxShape iterations boxes labels labelShape lineShape lines boxColor'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Experimental-Sankey'",			"comment" : [				"TODO"			],			"category" : "Roassal3-Experimental-Sankey"		},		"RxmBranch" : {			"hash" : 1443072,			"definition" : "RxmLink subclass: #RxmBranch\r\tinstanceVariableNames: 'loopback alternative'\r\tclassVariableNames: ''\r\tpackage: 'Regex-Core-Links'",			"comment" : [				"-- Regular Expression Matcher v 1.1 (C) 1996, 1999 Vassili Bykov",				"--",				"This is a branch of a matching process. Either `next' chain should match, or `alternative', if not nil, should match. Since this is also used to build loopbacks to match repetitions, `loopback' variable indicates whether the instance is a loopback: it affects the matcher-building operations (which of the paths through the branch is to consider as the primary when we have to find the \"tail\" of a matcher construct).",				"",				"Instance variables",				"\talternative\t\t<RxmLink> to match if `next' fails to match.",				"\tloopback\t\t<Boolean>"			],			"category" : "Regex-Core-Links"		},		"ReAllAnyNoneSatisfyRule" : {			"hash" : 2095360,			"definition" : "ReNodeRewriteRule subclass: #ReAllAnyNoneSatisfyRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Replace ad-hoc implementations (using explicit logic based on do:) of ==allSatisfy:==, ==anySatisfy:== and ==noneSatisfy:== by the adequate calls to ==allSatisfy:==, ==anySatisfy:== or ==noneSatisfy:==. ",				"",				"For example ",				"",				"[[[  ",				"collection do: [ :each |",				"\t\t\t\t...",				"\t\t\t\tcondition",				"\t\t\t\t\tifFalse: [ ^ false ] ]",				"]]]",				"is transformed into ",				"",				"[[[  ",				"collection allSatisfy: [ :each | condition ]",				"]]]"			],			"category" : "GeneralRules-Migrated"		},		"ReUseIsEmptyNotSizeRule" : {			"hash" : 3955712,			"definition" : "ReNodeMatchRule subclass: #ReUseIsEmptyNotSizeRule\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'GeneralRules-Migrated'",			"comment" : [				"Checks for code using equality tests instead of the message sends. Since the code \"aCollection size = 0\" works for all objects, it is more difficult for someone reading such code to determine that \"aCollection\" is a collection. Whereas, if you say \"aCollection isEmpty\" then aCollection must be a collection since isEmpty is only defined for collections."			],			"category" : "GeneralRules-Migrated"		},		"ClyTableFilterFactory" : {			"hash" : 5112064,			"definition" : "Object subclass: #ClyTableFilterFactory\r\tinstanceVariableNames: 'itemFilterClass stringPattern'\r\tclassVariableNames: ''\r\tpackage: 'Calypso-Browser-Table'",			"comment" : [				"I responsible to create new filter instances of given itemFilterClass using specified string pattern.",				"",				"I am a kind of hook to be able configure complex filters for fast table where it uses just a filter class. Fast table instantiates instances using #pattern: message which I define as filter creation method",				"",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\titemFilterClass:\t\t<ClyItemStringFilter class>",				"\tstringPattern:\t\t<ClyStringPatter>"			],			"category" : "Calypso-Browser-Table"		},		"SpPaginatorPageMorph" : {			"hash" : 2565632,			"definition" : "Morph subclass: #SpPaginatorPageMorph\r\tinstanceVariableNames: 'selectedBlock model'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Paginator'",			"comment" : [				"A morph representing a \"page\" inside a `SpPaginatorMorph`.",				"Pages can be selected and users can control it with `SpPaginatorPageMorph>>#whenSelectedDo:`."			],			"category" : "Spec2-Adapters-Morphic-Paginator"		},		"CompositionScanner" : {			"hash" : 722688,			"definition" : "CharacterScanner subclass: #CompositionScanner\r\tinstanceVariableNames: 'spaceX spaceIndex lineHeight baseline lineHeightAtSpace baselineAtSpace lastBreakIsNotASpace nextIndexAfterLineBreak wantsColumnBreaks'\r\tclassVariableNames: ''\r\tpackage: 'Text-Scanning'",			"comment" : [				"A CompositionScanner measures text and determines where line breaks.",				"Given a rectangular zone on input, it is used to split text in horizontal lines, and produce information about those lines on output (at which index a line starts/stops, which vertical space does the line require, which horizontal space if left for adjusting inter-word spacing, etc...)",				"",				"Instance Variables",				"\tbaseline:\t\t<Number>",				"\tbaselineAtSpace:\t\t<Number>",				"\tlastBreakIsNotASpace:\t\t<Boolean>",				"\tlineHeight:\t\t<Number>",				"\tlineHeightAtSpace:\t\t<Number>",				"\tnextIndexAfterLineBreak:\t\t<Integer>",				"\tspaceIndex:\t\t<Integer>",				"\tspaceX:\t\t<Number>",				"",				"baseline",				"\t- the distance between top of line and the base line (that is the bottom of latin characters abcdehiklmnorstuvwx in most fonts)",				"",				"baselineAtSpace",				"\t- memorize the baseline at last encountered space or other breakable character.",				"\tThis is necessary because the CompositionScanner wants to break line at a breakable character.",				"\tIf a word layout overflows the right margin, the scanner has to roll back and restore the line state to last encountered breakable character.",				"",				"lastBreakIsNotASpace",				"\t- indicates that the last breakable character was not a space.",				"\tThis is necessary because handling a line break at a space differs from non space.",				"\tIf line break occurs on space, the space won't be displayed in next line.",				"\tIf it's another breakable character, it has to be displayed on next line.",				"",				"lineHeight",				"\t- the total line height from top to bottom, including inter-line spacing.",				"",				"lineHeightAtSpace",				"\t- the line height at last encountered space or other breakable character.",				"\tSee baselineAtSpace for explanation.",				"",				"nextIndexAfterLineBreak",				"\t- the index of character after the last line break that was encountered.",				"",				"spaceIndex",				"\t- the index of last space or other breakable character that was encountered",				"",				"spaceX",				"\t- the distance from left of composition zone to left of last encountered space or other breakable character ",				"\tSee baselineAtSpace for explanation.",				"",				"Note: if a line breaks on a space, a linefeed or a carriage return, then the space, linefeed or carriage return is integrated in the line.",				"If there is a carriage return - linefeed pair, the pair is integrated to the line as if it were a single line break for compatibility with legacy software."			],			"category" : "Text-Scanning"		},		"TabSelectorMorph" : {			"hash" : 1952000,			"definition" : "ModelMorph subclass: #TabSelectorMorph\r\tinstanceVariableNames: 'selectedIndex visibleTabRange font tabs controls wrapScrolling'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-PolyTabs'",			"comment" : [				"Row of tabs for a TabGroupMorph."			],			"category" : "Morphic-Widgets-PolyTabs"		},		"CompiledMethodTrailer" : {			"hash" : 914944,			"definition" : "Object subclass: #CompiledMethodTrailer\r\tinstanceVariableNames: 'data encodedData kind size method'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Methods'",			"comment" : [				"I am responsible for encoding and decoding various kinds of compiled method trailer data.",				"I should not expose any binary data outside of myself, so all tools which working with compiled methods",				"should ask me to encode the meta-data, they want to be added to the compiled method trailer, as well as retrieve it.",				"",				"To add a new kind of trailer, you should give it a proper name and define it in the #trailerKinds method at my class side.",				"Then you need to implement a corresponding #encode<your name> and #decode<your name> methods at instance side. Then add any public accessor methods, which will use a newly introduced trailer kind for communicating with outer layer(s).",				"",				"An encodeXXX methods should store result (byte array) into encodedData instance variable.",				"",				"A decodeXXX methods should read the data from compiled method instance, held by 'method' ivar,",				"and always set 'size' ivar (denoting a total length of trailer in compiled method) and optionally 'data' ivar which should keep a decoded data, ready to be used by outer layer(s) using accessor method(s) you providing.",				"",				"The kind of compiled method trailer is determined by the last byte of compiled method.",				"",				"The byte format used is following: ",				"\t\"2rkkkkkkdd\"",				"",				"where 'k' bits stands for 'kind' , allowing totally 64 different kinds of method trailer",				"and 'd' bits is data.",				"",				"Following is the list of currently defined trailer kinds:",				"",				"NoTrailer , k = 000000, dd unused",				"method has no trailer, and total trailer size bytes is always 1",				"",				"ClearedTrailer, k = 000001, ",				"method has cleared trailer (it was set to something else, but then cleared) ",				"dd+1  determines the number of bytes for size field, and size is a total length of trailer bytes",				"So a total length of trailer is: 1 + (dd + 1) + size",				"",				"TempsNamesQCompress, k = 000010",				"the trailer contains a list of method temp names,  compressed using qCompress: method. ",				"dd+1  determines the number of bytes for size field, and size is a number of bytes of compressed buffer.",				"So a total length of trailer is:  1 + (dd + 1) + size",				"",				"TempsNamesZip, k = 000011",				"the trailer contains a list of method temp names,  compressed using GZIP compression method. ",				"dd+1  determines the number of bytes for size field, and size is a number of bytes of compressed buffer",				"So a total length of trailer is: 1 + (dd + 1) + size",				"",				"SourceBySelector, k = 000100",				"the trailer indicates , that method source is determined by a class + selector where it is installed to. ",				"Trailer size = 1.",				"",				"SourceByStringIdentifier, k = 000101",				"the trailer indicates , that method source is determined by a class + some ByteString identifier. ",				"dd+1  determines the number of bytes for size of ByteString identifier, and size is number of bytes of string.",				"A total length of trailer is:  1 + (dd + 1) + size",				"",				"EmbeddedSourceQCompress, k = 000110",				"the trailer contains an utf-8 encoded method source code, compressed using qCompress method",				"dd+1  determines the number of bytes for size field, and size is a number of bytes of compressed source code",				"A total length of trailer is:  1 + (dd + 1) + size",				"",				"EmbeddedSourceZip, k = 000111",				"the trailer contains an utf-8 encoded method source code, comressed using GZIP ",				"dd+1  determines the number of bytes for size field, and size is a number of bytes of compressed buffer",				"A total length of trailer is:  1 + (dd + 1) + size",				"",				"VarLengthSourcePointer, k = 001000",				"the trailer is variable-length encoded source pointer. ",				"dd bits is unused.",				"",				"ExtendedKind, k = 001001",				"the next byte of trailer (one that prepends the last byte of compiled method)",				"denotes an extended kind of trailer, allowing to use additional 256 kinds of encoding method's trailer in future. ",				"",				"SourcePointer, k = 111111 ",				"the trailer is encoded source pointer. Total trailer size is 4-bytes ",				"(this kind of encoding is backwards compatible with most of existing compiled methods)",				""			],			"category" : "Kernel-Methods"		},		"SpTableColumn" : {			"hash" : 2191104,			"definition" : "Object subclass: #SpTableColumn\r\tinstanceVariableNames: 'title evaluation expandable width sortFunction'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Core-Widgets-Table'",			"comment" : [				"A base definition for table columns.",				"A `SpTableColumn` define the common behavior of a column."			],			"category" : "Spec2-Core-Widgets-Table"		},		"TextPresenter" : {			"hash" : 905728,			"definition" : "AbstractWidgetPresenter subclass: #TextPresenter\r\tinstanceVariableNames: 'aboutToStyleHolder behaviorHolder textHolder actionToPerformHolder readSelectionHolder actionPerformedHolder isCodeCompletionAllowedHolder doItContext doItReceiver hasUnacceptedEdits selection scrollValue menuHolder autoAccept wantsVisualFeedback askBeforeDiscardingEdits isForSmalltalkCodeHolder'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"I handle basic multi-line text.",				"See AbstractWidgetPresenter",				"",				"self example",				"",				"You can also have a look at ListSelectionPresenter and ScrollSyncExample for more examples.",				"",				"My main purpose is to handle source code (I have editing shortcuts support).",				"",				"I provide the following variables and their accessors",				"- autoAccept is a boolean representing if the text is accepted on each keystroke.",				"- text is the text of the text zone.",				"",				"I provide the following methods",				"- beForCode and beForText are shortcut for configuring me.",				"- getSelection return the interval currently selected.",				"- getText is a getter of the text",				"",				"",				"todo",				"- aboutToStyleBlock  is the block used to know if the text must be styled, it returns a boolean. aboutToStyle: is a shortcut to set directly the boolean.",				"- accept , accept:notifying:",				"- acceptBlock should convert the text in a boolean representing if it is to be accepted.",				"- askBeforeDiscardingEdits",				"- behavior",				"- clearSelection",				"- codePaneMenu:shifted:",				"- doItContext",				"- doItReceiver",				"- specializing eventKeyStrokesForNextFocus , eventKeyStrokesForPreviousFocus",				"- getMenu",				"- hasEditingConflicts",				"- hasUnacceptedEdits",				"- isAboutToStyle",				"- isCodeCompletionAllowed",				"- isForSmalltalkCode",				"- menuHolder",				"- notify:at:in:",				"- readSelection , readSelectionBlock",				"- registerEvents , registerEventsForShout",				"- scrollValue",				"- selectedBehavior",				"- selectedClassOrMetaClass",				"-  setSelection: select the text in the interval in argument, selectAll is a shorcut that set the larger interval.",				"- setSelectionInterval:",				"- textArea"			],			"category" : "Spec-Core-Widgets"		},		"PluggableSliderMorph" : {			"hash" : 1931520,			"definition" : "SliderMorph subclass: #PluggableSliderMorph\r\tinstanceVariableNames: 'getValueSelector getEnabledSelector enabled min max quantum getLabelSelector label'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Scrolling'",			"comment" : [				"A pluggable slider (rather than one that auto-generates access selectors). Needs to be themed..."			],			"category" : "Morphic-Widgets-Scrolling"		},		"MorphTreeNodeMorph" : {			"hash" : 587008,			"definition" : "Morph subclass: #MorphTreeNodeMorph\r\tinstanceVariableNames: 'parent index indentLevel isExpanded complexContents firstChild container nextSibling controls lineColor selected'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Tree'",			"comment" : [				"I draw the node part of a tree."			],			"category" : "Morphic-Widgets-Tree"		},		"SpModalWindowPresenter" : {			"hash" : 2228480,			"definition" : "SpDialogWindowPresenter << #SpModalWindowPresenter\r\tslots: { #closeOnBackdropClick => ObservableSlot };\r\ttag: 'Windows';\r\tpackage: 'Spec2-Core'",			"comment" : [				"I'm a window presenter used to describe a **modal** DialogWindow. ",				"On the contrary of the `SpDialogWindowPresenter`, I will block the user to focus any other window.",				"",				"Usually instances of `SpModalWindowPresenter` are created using the method `SpAbstractPresenter>>#openModalWithSpec`.",				"",				"If you want to make the user to show a dialog without blocking the execution of other windows, use `SpAbstractPresenter>>#openDialogWithSpec` instead.",				"",				"## Usage",				"Typically, you do not instantiate directly a modal dialog, but you open a presenter as one. Since the program execution will be stopped until dialog is resolved (accepted or cancelled), you can ask for the status after calling it.",				"",				"```",				"dialog := aPresenter openModalWithSpec.",				"dialog isOk ",				"\tifTrue: [ \"dialog accepted action\" ]",				"\tifFalse: [ \"dialof cancelled action \" ]",				"```",				"",				"The method `SpModalWindowPresenter>>#closeOnBackdropClick:` controls whether the user is able to close or not the modal dialog.",				"",				"And to control how the dialog should behave, you define the method `initializeDialogWindow:` in your presenters.",				"",				"```",				"SomePresenter >> initializeDialogWindow: aDialogPresenter ",				"\tsuper initializeDialogWindow: aDialogPresenter.",				"\taDialogPresenter",				"\t\tinitialExtent: 600@400;",				"\t\ttitle: 'A title';",				"\t\tcloseOnBackdropClick: true",				"```"			],			"category" : "Spec2-Core-Windows"		},		"RSCellLayout" : {			"hash" : 5753088,			"definition" : "RSAbstractGridLayout subclass: #RSCellLayout\r\tinstanceVariableNames: 'inCellPosition translateElement align'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Core'",			"comment" : [				"A ROCellLayout is like ROGridLayout. Elements of each column are centered along the same vertical line. And elements of each row are centered along the same horizontal line.",				"",				"Instance Variables",				"\tinCellPosition:\t\t<Object | Block>",				"",				"inCellPosition",				"\t- Object which computes position of each element inside a cell. The cell is the space allocated for an element. Its height is maximum of heights of elements on the row. Its width is maximum of widths of elements on the column. By default elements are in the middle of their cell."			],			"category" : "Roassal3-Layouts-Core"		},		"SimpleButtonMorph" : {			"hash" : 1960192,			"definition" : "BorderedMorph subclass: #SimpleButtonMorph\r\tuses: TAbleToRotate\r\tinstanceVariableNames: 'target actionSelector arguments actWhen oldColor label'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Basic-Buttons'",			"comment" : [				"I am labeled, rectangular morph which allows the user to click me. I can be configured to send my \"target\" the message \"actionSelector\" with \"arguments\" when I am clicked. I may have a label, implemented as a StringMorph.",				"",				"Example:",				"",				"\tSimpleButtonMorph new",				"\t\ttarget: Beeper;",				"\t\tlabel: 'Beep!';",				"\t\tactionSelector: #beep; ",				"\t\topenInWorld",				"",				"Structure:",				"instance var \tType\t\tDescription ",				"target \t\t\tObject \t\tThe Object to notify upon a click ",				"actionSelector \tSymbol \t\tThe message to send to Target (#messageName) ",				"arguments \t\tArray \t\tArguments to send with #actionSelection (optional) ",				"actWhen \t\tSymbol \t\tWhen to take action: may be #buttonUp (default), #buttonDown,",				"\t\t\t\t\t\t\t\t#whilePressed, or #startDrag ",				"oldColor \t\tColor \t\tUsed to restore color after click ",				"",				"Another example: a button which quits the image without saving it.",				"",				"\tSimpleButtonMorph new",				"\t\ttarget: Smalltalk;",				"\t\tlabel: 'quit';",				"\t\tactionSelector: #snapshot:andQuit:;",				"\t\targuments: (Array with: false with: true); ",				"\t\topenInWorld",				""			],			"category" : "Morphic-Widgets-Basic-Buttons"		},		"RGTraitV2Strategy" : {			"hash" : 5248000,			"definition" : "RGTraitV2DescriptionStrategy subclass: #RGTraitV2Strategy\r\tinstanceVariableNames: 'comment classVariables package sharedPools classTrait'\r\tclassVariableNames: ''\r\tpackage: 'Ring-Core-Kernel'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tclassTrait:\t\t<Object>",				"\tclassVariables:\t\t<Object>",				"\tcomment:\t\t<Object>",				"\tpackage:\t\t<Object>",				"\tsharedPools:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Ring-Core-Kernel"		},		"SpCollectionListModel" : {			"hash" : 2178816,			"definition" : "Object << #SpCollectionListModel\r\ttraits: {TObservable};\r\tslots: {\r\t\t\t #announcer .\r\t\t\t #collection .\r\t\t\t #sorting => ObservableSlot };\r\ttag: 'Widgets-Table';\r\tpackage: 'Spec2-Core'",			"comment" : [				"A collection model to be used with list presenters (`SpAbstractListPresenter` and children).",				"",				"This model receives a `collection` of elements to be served to the list."			],			"category" : "Spec2-Core-Widgets-Table"		},		"FFITestArrayStructure class" : {			"hash" : 1579264,			"definition" : "FFITestArrayStructure class\r\tinstanceVariableNames: ''",			"comment" : [				"An array  structure for test purposes"			],			"category" : "UnifiedFFI-Tests-Test-Data"		},		"SindarinDebugger" : {			"hash" : 5377536,			"definition" : "Object subclass: #SindarinDebugger\r\tuses: TDebugger\r\tinstanceVariableNames: 'process stepHooks sindarinSession blockToDebug'\r\tclassVariableNames: ''\r\tpackage: 'Sindarin-Base'",			"comment" : [				"# Start",				"Get a ScriptableDebugger instance by doing: `ScriptableDebugger debug: [ <your execution> ]`.",				"Alternatively, you can get a ScriptableDebugger instance attached on an already existing DebugSession by doing: `ScriptableDebugger attach: aDebugSession` ",				"",				"# Breakpoints",				"ScriptableDebugger uses the VirtualBreakpoints class for its breakpoints. ",				"The breakpoints set by ScriptableDebugger are \"virtual\", in the sense that they do not modify any bytecode (as common breakpoints do) and do not show up in the rest of the IDE. They are simply markers indicating that the scritpable debugger should stop the debugged execution if it reaches an ast node or method on which a virtual breakpoint has been set. A virtual breakpoint set by a scriptable debugger instance is \"visible\" by all other scriptable debugger instances.",				"",				"Virtual breakpoints were introduced because due to technical limitations, normal breakpoints cannot be set in methods that are already in the stack of the debugged execution.",				"",				"# Instance Variables:",				"- process: the (suspended) Process in which the debugged execution takes place",				"- debugSession: the DebugSession monitoring the debugged execution.",				"- stepHooks: OrderedCollection<Block>. A list of blocks to be evaluated after each step of the debugged execution"			],			"category" : "Sindarin-Base"		},		"DADependencyReport" : {			"hash" : 1778432,			"definition" : "Object subclass: #DADependencyReport\r\tinstanceVariableNames: 'dependencies warnings imageVersion analysisRunString'\r\tclassVariableNames: ''\r\tpackage: 'Tool-DependencyAnalyser-Report'",			"comment" : [				"I'm reporting dependencies of packages previously analysed byt the dependnecy checker."			],			"category" : "Tool-DependencyAnalyser-Report"		},		"FTTableMorph" : {			"hash" : 574208,			"definition" : "Morph subclass: #FTTableMorph\r\tinstanceVariableNames: 'container verticalScrollBar horizontalScrollBar selectionColor selectedIndexes highlightedIndexes showIndex dataSource intercellSpacing rowHeight selectionStrategy columns secondarySelectionColor headerColor showColumnHeaders allowsDeselection needToggleAtMouseUp function resizable selectionModeStrategy'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Base'",			"comment" : [				"I'm an implementation of a table, in a not-naive way. ",				"",				"I assume I can have many rows, then I do not try to show all of them at once. Instead, I keep a datasource and I demand rows when needed (datasource implements a flyweight to fill the visible rows).",				"",				"I should not be subclasse. An extension of FastTable should happen on a data source an not here. Extend me ONLY if it is impossible to do what you want on the data source.",				"",				"Examples: ",				"-------------",				"FTTableMorph new",				"\textent: 200@400;",				"\tdataSource: (FTSimpleDataSource elements: (1 to: 10000));",				"\topenInWindow",				"\t",				"You can check better examples in FTExamples",				"",				"A FastTable have the possibility to be searchable, this is activate by default. ",				"You can disable this with the method #disableSearch.",				"But you also have the possibility to make your FastTable filterable with the method #enableFilter. But search and filter cannot be use in the same time.",				"",				"I manage different kind of selections through a strategy design pattern. For example I have a strategy to manage simple or multiple selection and I have a strategy to manage cell or row selection.",				"",				"Horizontal scrolling being a new feature is not enabled by default. Use #newWithHorizontalScrollBar or set horizontalScrollBar var to anything at early initialization stage (before #initializeScrollBars where it is being checked)",				"",				""			],			"category" : "Morphic-Widgets-FastTable-Base"		},		"Sp1RoassalPresenter" : {			"hash" : 1982464,			"definition" : "AbstractWidgetPresenter subclass: #Sp1RoassalPresenter\r\tinstanceVariableNames: 'script'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Spec-Obsolete'",			"comment" : [				"I am a basic presenter for widgets in roassal with the Spec system"			],			"category" : "Roassal3-Spec-Obsolete"		},		"IconicButtonMorph" : {			"hash" : 1960704,			"definition" : "SimpleButtonMorph subclass: #IconicButtonMorph\r\tinstanceVariableNames: 'graphicalMorph oldBorderStyle mouseOverBorderStyle'\r\tclassVariableNames: 'DefaultGraphics'\r\tpackage: 'Morphic-Widgets-Basic-Buttons'",			"comment" : [				"A \"Simple Button\" in which the appearance is provided by a Form."			],			"category" : "Morphic-Widgets-Basic-Buttons"		},		"RSLabel" : {			"hash" : 5676288,			"definition" : "RSBoundingShape subclass: #RSLabel\r\tinstanceVariableNames: 'text fontName fontSize font emphasis metricsProvider textExtents cairoGlyphs'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Shapes-Bounding'",			"comment" : [				"Instances of RSLabel uses font, text metrics, and a string. These labels can share fonts.",				"",				"Instance variables:",				"- text: a String without character cr or lf or tabs.",				"- fontName: a String, the font family name, Eg: `Source Code Pro`.",				"- fontSize: a positive number.",				"- font: an instance of LogicalFont, Eg: `LogicalFont familyName: 'Source Code Pro' pointSize: 20`",				"- emphasis: an instance of TextEmphasis, Eg: `TextEmphasis italic`",				"- metricsProvider: an instance of RSMetricProvider. Users of RSLabel can define a subvclass of RSMetricProvider in order to have differnt metrics for this class.",				"- textExtents: an instance of RSTextExtents, it has text information of this class.",				"- cairoGlyphs: private varible used to compute extents and draw this shape on the canvas",				"",				"",				"```Smalltalk",				"| c font words |",				"c := RSCanvas new.",				"font := LogicalFont familyName: 'Source Code Pro' pointSize: 20.",				"words := String loremIpsum splitOn: ' '.",				"c addAll: (words collect: [:word | ",				"\tRSLabel new",				"\t\tfont: font;",				"\t\ttext: word;",				"\t\tyourself ]).",				"c showEncompassingRectangles.",				"RSFlowLayout on: c nodes.",				"\t",				"c @ RSCanvasController.",				"c",				"",				"```",				"",				"For more fonts of your system use: `FreeTypeFontProvider current updateFromSystem families`."			],			"category" : "Roassal3-Shapes-Bounding"		},		"JPEGHuffmanTable class" : {			"hash" : 771072,			"definition" : "JPEGHuffmanTable class\r\tinstanceVariableNames: ''",			"comment" : [				"I represent the table of values used to decode Huffman entropy-encoded bitstreams.  From the JFIF file header entropy values, I build a derived table of codes and values for faster decoding."			],			"category" : "Graphics-Files"		},		"RxmSubstring" : {			"hash" : 1445632,			"definition" : "RxmLink subclass: #RxmSubstring\r\tinstanceVariableNames: 'sample compare'\r\tclassVariableNames: ''\r\tpackage: 'Regex-Core-Links'",			"comment" : [				"-- Regular Expression Matcher v 1.1 (C) 1996, 1999 Vassili Bykov",				"--",				"Instance holds onto a string and matches exactly this string, and exactly once.",				"",				"Instance variables:",				"\tstring \t<String>"			],			"category" : "Regex-Core-Links"		},		"IceTipMergeSelectingPanel" : {			"hash" : 6313216,			"definition" : "IceTipDiffPanel subclass: #IceTipMergeSelectingPanel\r\tinstanceVariableNames: 'codePanel checkedIceNodes'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-TipUI-View-Branch'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tcheckedIceNodes:\t\t<Object>",				"\tcodePanel:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Iceberg-TipUI-View-Branch"		},		"SpecLayoutAdd" : {			"hash" : 960000,			"definition" : "SpecLayoutSend subclass: #SpecLayoutAdd\r\tinstanceVariableNames: 'layoutFrame subwidget'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Layout-Actions'",			"comment" : [				"A SpecLayoutAdd represents the action to add a subwidget into a spec layout"			],			"category" : "Spec-Layout-Actions"		},		"PathShape" : {			"hash" : 1879296,			"definition" : "Shape subclass: #PathShape\r\tinstanceVariableNames: 'bounds vertices'\r\tclassVariableNames: ''\r\tpackage: 'Graphics-Shapes'",			"comment" : [				"I represent a model of an open sequence of connected points that can be queried for",				"enclosing bounds and whether a point lies along any segment.",				" ",				"I am typically used for drawing with a Canvas.",				"",				"ps := PathShape new",				"        addVertex: 0@0;",				"        addVertex: 30@30;",				"        addVertex: 50@10.",				"        ",				"self assert: (ps containsPoint: 24@24).",				"self assert: (ps containsPoint: 40@30) not.",				"Transcript show: ps calculatedBounds asString; cr."			],			"category" : "Graphics-Shapes"		},		"InstructionStream class" : {			"hash" : 1010944,			"definition" : "InstructionStream class\r\tinstanceVariableNames: ''",			"comment" : [				"Instance variables:",				"\tsender: <Context|nil> context that invoked this context",				"\tpc: <SmallInteger> (pc = program counter) offset of the bytecode instruction currently executed",				"",				"My instances can interpret the byte-encoded Smalltalk instruction set. They maintain a program counter (pc) for streaming through CompiledMethods. My subclasses are Contexts, which inherit this capability. They store the return pointer in the instance variable sender, and the current position in their method in the instance variable pc. For other users, sender can hold a method to be similarly interpreted. The unclean re-use of sender to hold the method was to avoid a trivial subclass for the stand-alone scanning function."			],			"category" : "Kernel-Methods"		},		"SpPaginatorPresenter" : {			"hash" : 1566208,			"definition" : "SpAbstractWidgetPresenter << #SpPaginatorPresenter\r\tslots: {\r\t\t\t #visiblePages => ObservableSlot .\r\t\t\t #selectedPage => ObservableSlot .\r\t\t\t #dragging => ObservableSlot .\r\t\t\t #pagesHolder };\r\ttag: 'Paginator';\r\tpackage: 'Spec2-Morphic'",			"comment" : [				"A presenter to show a paginator. ",				"Tipically, a paginator is associated to a miller list (See `SpMillerPaginatorPresenter`)."			],			"category" : "Spec2-Morphic-Paginator"		},		"IncrementalSliderMorph" : {			"hash" : 1923840,			"definition" : "ModelMorph subclass: #IncrementalSliderMorph\r\tinstanceVariableNames: 'sliderMorph getValueSelector setValueSelector getEnabledSelector'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Scrolling'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\tgetEnabledSelector:\t\t<Object>",				"\tgetValueSelector:\t\t<Object>",				"\tsetValueSelector:\t\t<Object>",				"\tsliderMorph:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Morphic-Widgets-Scrolling"		},		"MultistateButtonMorph" : {			"hash" : 588544,			"definition" : "Morph subclass: #MultistateButtonMorph\r\tinstanceVariableNames: 'enabled active over down stateMap upAction'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Basic-Buttons'",			"comment" : [				"A simple button that handles multiple fillstyle states:",				"\tNormal",				"\tMouse-over",				"\tMouse-down-inside",				"\tMouse-down outside\t",				"with variants being a combination of passive/active and enabled/disabled."			],			"category" : "Morphic-Widgets-Basic-Buttons"		},		"SpDualChangeSorterPresenter" : {			"hash" : 5396480,			"definition" : "StPresenter subclass: #SpDualChangeSorterPresenter\r\tinstanceVariableNames: 'model changeSorterLeft changeSorterRight isRefreshing'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-ChangeSorter'",			"comment" : [				"A `SpDualChangeSorterPresenter is a dual change sorter. It manages two sets of changes so that we can cherry pick and creates new changes. ",				"",				"`SpDualChangeSorterPresenter` shares the model between its two subcomponents that are instances of  `SpChangeSorterPresenter`. The class `ChangeSorterModel` defines the application logic."			],			"category" : "NewTools-ChangeSorter"		},		"ShSharedPoolChangeDetector" : {			"hash" : 822528,			"definition" : "ShAbstractClassChangeDetector subclass: #ShSharedPoolChangeDetector\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Shift-Changes'",			"comment" : [				"I know how to detect a change in the shared pools."			],			"category" : "Shift-Changes"		},		"FFIConstantArgument" : {			"hash" : 513792,			"definition" : "FFIFunctionArgument subclass: #FFIConstantArgument\r\tinstanceVariableNames: 'value'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-Arguments'",			"comment" : [				"I am a function argument representing a literal value (in contrast to a variable).",				"The parser creates me when it finds other than symbols as arguments.",				"",				"I am resolved by resolving my type.",				"The type knows how to resolve itself in a context."			],			"category" : "UnifiedFFI-Arguments"		},		"Morph class" : {			"hash" : 1651712,			"definition" : "Morph class\r\tinstanceVariableNames: 'announcer'",			"comment" : [				"A Morph (from the Greek \"shape\" or \"form\") is an interactive graphical object. General information on the Morphic system can be found at http://minnow.cc.gatech.edu/squeak/30. ",				"",				"Morphs exist in a tree, rooted at a World (generally a PasteUpMorph). The morphs owned by a morph are its submorphs. Morphs are drawn recursively; if a Morph has no owner it never gets drawn. To hide a Morph and its submorphs, set its #visible property to false using the #visible: method. ",				"",				"The World (screen) coordinate system is used for most coordinates, but can be changed if there is a TransformMorph somewhere in the owner chain. ",				"",				"My instance variables have accessor methods (e.g., #bounds, #bounds:). Most users should use the accessor methods instead of using the instance variables directly.",				"",				"Structure:",				"instance var \tType \t\t\tDescription ",				"bounds \t\t\tRectangle \t\tA Rectangle indicating my position and a size that will enclose \t\t\t\t\t\t\t\t\tme. ",				"owner \t\t\tMorph\t\t \tMy parent Morph, or nil for the top-level Morph, which is a",				" \t\t\t\tor nil\t\t\tworld, typically a PasteUpMorph.",				"submorphs \t\tArray \t\t\tMy child Morphs. ",				"fullBounds \t\tRectangle \t\tA Rectangle minimally enclosing me and my submorphs. ",				"color \t\t\tColor \t\t\tMy primary color. Subclasses can use this in different ways. ",				"extension \t\tMorphExtension Allows extra properties to be stored without adding a",				"\t\t\t\tor nil  \t\t\t\tstorage burden to all morphs. ",				"",				"By default, Morphs do not position their submorphs. Morphs may position their submorphs directly or use a LayoutPolicy to automatically control their submorph positioning.",				"",				"Although Morph has some support for BorderStyle, most users should use BorderedMorph if they want borders."			],			"category" : "Morphic-Core-Kernel"		},		"FFITestNestingStructure class" : {			"hash" : 1579776,			"definition" : "FFITestNestingStructure class\r\tinstanceVariableNames: ''",			"comment" : [				"A nesting structure for test purposes"			],			"category" : "UnifiedFFI-Tests-Test-Data"		},		"TaskListMorph" : {			"hash" : 613120,			"definition" : "Morph subclass: #TaskListMorph\r\tinstanceVariableNames: 'tasks taskList preview'\r\tclassVariableNames: 'KeepOpen'\r\tpackage: 'Morphic-Widgets-Taskbar'",			"comment" : [				"Themed task list/switcher to select the topmost window. Use cmd + left or right arrows (not ideal but the os typically handles cmd + tab/shift-tab).",				"On Linux, release of the command key is not detected (vm issue), so press and release cmd again or move the mouse!"			],			"category" : "Morphic-Widgets-Taskbar"		},		"HandMorph class" : {			"hash" : 1653760,			"definition" : "HandMorph class\r\tinstanceVariableNames: ''",			"comment" : [				"The cursor may be thought of as the HandMorph.  The hand's submorphs hold anything being carried by dragging.  ",				"",				"There is some minimal support for multiple hands in the same world."			],			"category" : "Morphic-Core-Kernel"		},		"IcePackageDefinition" : {			"hash" : 6183680,			"definition" : "IceDefinition subclass: #IcePackageDefinition\r\tinstanceVariableNames: 'package categories path'\r\tclassVariableNames: ''\r\tpackage: 'Iceberg-Changes'",			"comment" : [				"I represent a package inside the iceberg repository. How I am built depends on the repository format (e.g., tonel or filetree).",				"",				"My contents are the tags defined in the package.",				"",				"See my superclasses for more information."			],			"category" : "Iceberg-Changes"		},		"AthensCanvasWrapper" : {			"hash" : 3412736,			"definition" : "Object subclass: #AthensCanvasWrapper\r\tinstanceVariableNames: 'athensCanvas currentClipRect origin'\r\tclassVariableNames: ''\r\tpackage: 'Athens-Morphic'",			"comment" : [				"I am a wrapper for a (Form-)Canvas that implements the Canvas API on top of an AthensCanvas."			],			"category" : "Athens-Morphic"		},		"SpRoassalPresenter" : {			"hash" : 1980160,			"definition" : "SpAbstractWidgetPresenter << #SpRoassalPresenter\r\ttraits: {SpTContextMenu};\r\tslots: { #script . #currentCanvas };\r\ttag: 'Core';\r\tpackage: 'Roassal3-Spec'",			"comment" : [				"I am a basic presenter for widgets in roassal with the Spec system"			],			"category" : "Roassal3-Spec-Core"		},		"CompositeFillStyle" : {			"hash" : 1614848,			"definition" : "FillStyle subclass: #CompositeFillStyle\r\tinstanceVariableNames: 'fillStyles'\r\tclassVariableNames: ''\r\tpackage: 'Graphics-Canvas-Fills'",			"comment" : [				"Fillstyle supporting compositing of multiple sub-fillstyles."			],			"category" : "Graphics-Canvas-Fills"		},		"AtomicSharedQueue" : {			"hash" : 1094656,			"definition" : "WaitfreeQueue subclass: #AtomicSharedQueue\r\tinstanceVariableNames: 'availSema'\r\tclassVariableNames: ''\r\tpackage: 'Collections-Atomic-Base'",			"comment" : [				"I am using semaphore to signal/wait for new items available in queue",				"",				"I am introducing extra protocol - #next, which blocks the sender until ",				"it can successfully fetch next item from queue."			],			"category" : "Collections-Atomic-Base"		},		"FTColumn" : {			"hash" : 734976,			"definition" : "Object subclass: #FTColumn\r\tinstanceVariableNames: 'id width sortingStrategy'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-FastTable-Model'",			"comment" : [				"Description ",				"------------------",				" ",				"I'm a column definition for a fast table.",				"",				"I keep an id and relevant informations of my behaviour, but this behaviour is better defined in FTDataSource>>#headerColumn:",				"",				"I can have a sorting strategy, by default I uses a null sorting strategy. The datasource can ask to me informations from the current strategy such as an icon to display in the header cell. When the header is clicked, I'll give a datasource to the strategy and ask to sort it.",				"",				"Examples",				"--------------------",				"",				"\tFTTableMorph new",				"\t\textent: 650 @ 500;",				"\t\taddColumn:",				"\t\t\t((FTColumn id: 'Icon')",				"\t\t\t\twidth: 40;",				"\t\t\t\tyourself);",				"\t\taddColumn:",				"\t\t\t((FTColumn id: 'Name')",				"\t\t\t\tsortableOnProperty: #name;",				"\t\t\t\tyourself);",				"\t\taddColumn:",				"\t\t\t((FTColumn id: 'Number of methods')",				"\t\t\t\tsortableOnProperty: #numberOfMethods;",				"\t\t\t\tyourself);",				"\t\taddColumn:",				"\t\t\t((FTColumn id: 'Number of instance variables')",				"\t\t\t\tsortableOnProperty: #numberOfInstanceVariables;",				"\t\t\t\tyourself);",				"\t\tdataSource: FTExampleClassInfoTableDataSource new;",				"\t\tselectFirst;",				"\t\tshowFirstSelection;",				"\t\tbeResizable;",				"\t\topenInWindow",				" ",				"Internal Representation and Key Implementation Points.",				"--------------------",				"",				"    Instance Variables",				"\tid:\t\t\t\t\t\t\t<aSymbol>\t\t\t\t\t\t\tAn id for the column",				"\tsortingStrategy:\t\t<aColumnSortingStrategy>\t\tA subclass of FTAbstractColumnSortingStrategy that will manage all the behavior of the table sorting",				"\twidth:\t\t\t\t\t\t<anInteger>\t\t\t\t\t\tAn Integer that represent the width of a column"			],			"category" : "Morphic-Widgets-FastTable-Model"		},		"SpecTableLayoutProperties" : {			"hash" : 978944,			"definition" : "SpecLayoutProperties subclass: #SpecTableLayoutProperties\r\tinstanceVariableNames: 'cellInset cellPositioning cellSpacing layoutInset listCentering listDirection listSpacing reverseTableCells rubberBandCells wrapCentering wrapDirection minCellSize maxCellSize'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Layout-Layouts'",			"comment" : [				"Used to describe properties for table layouts in Spec"			],			"category" : "Spec-Layout-Layouts"		},		"SVColorSelectorMorph" : {			"hash" : 604416,			"definition" : "Morph subclass: #SVColorSelectorMorph\r\tinstanceVariableNames: 'selectedColor locationMorph'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-ColorPicker'",			"comment" : [				"A colour selector that displays an area with saturation on the x axis and volume on the y axis. Provides interactive selection of colour by mouse. For the moment it is event rather than model based.",				"Setting the color will specify the hue and setting the selectedColor will specify the saturation and volume (may have a different hue to that displayed if not in sync)."			],			"category" : "Morphic-Widgets-ColorPicker"		},		"SpPresenter" : {			"hash" : 2204928,			"definition" : "SpAbstractPresenter << #SpPresenter\r\ttraits: {SpTPresenterBuilder};\r\tslots: {\r\t\t\t #application .\r\t\t\t #focusOrder .\r\t\t\t #contextKeyBindings => ObservableSlot .\r\t\t\t #windowIcon => ObservableSlot .\r\t\t\t #aboutText => ObservableSlot .\r\t\t\t #askOkToClose => ObservableSlot .\r\t\t\t #titleHolder => ObservableSlot .\r\t\t\t #additionalSubpresentersMap .\r\t\t\t #layout => ObservableSlot .\r\t\t\t #visible => ObservableSlot .\r\t\t\t #extent => ObservableSlot .\r\t\t\t #styles };\r\ttag: 'Base';\r\tpackage: 'Spec2-Core'",			"comment" : [				"`SpPresenter` is an abstract class which represents an applicative presenter made to be composed with other `SpPresenter`.",				"",				"Often, I am used to display other subclasses of `SpPresenter` or subclasses of `SpAbstractWidgetPresenter`.",				"",				"I collaborate with ",				"- `ObservableSlot` to manage some of my variables.",				"- `SpLayout`",				"- `SpWindowPresenter` or `SpDialogWindowPresenter` to display myself.",				"",				"A new subclass of `SpPresenter` must at least define `initializeWidgets` and `defaultSpec` on the class side.",				"",				"I provide the following methods",				"- aboutText: set the text displayed in the About.",				"- initializeWindow: to set the title, and other information related to the window.",				"- extent: set the initial size of the window, alternative possibility is define again initialExtent, it must be called before have displayed the widget. ",				"- focusOrder: set an instance what manage the order of focus of the keyboard navigation.",				"- bindKeyCombination:toAction: create a shortcut on keyboard what perform the block of the  action.",				"- owner getter of my parent.",				"- window getter of the window displaying me.",				"",				"On my class side, I provide methods returning standard height and width for some elements.",				"",				"## Window",				"",				"- `SpPresenter>>#openWithSpec` instantiates a `SpWindowPresenter` using the lookup to found the layout to use.",				"- `SpPresenter>>#openDialogWithSpec` instanciates a `SpDialogWindowPresenter` using the lookup to found the layout to use.",				"Their variants `openWithSpec:` and `openDialogWithSpec:` use the layout parameter.",				"",				"These methods can be useful to manage the window",				"- `SpPresenter>>#isDisplayed` returns true if the window of the widget is displayed",				"- `SpPresenter>>#hasWindow` returns true if the widget have a window",				"- `SpPresenter>>#centered` to center the window in the world.",				"- `SpPresenter>>#delete` to delete the window.",				"",				"## Instantiation",				"",				"`SpPresenter>>#initializePresenters` is called by the initialize method, it should contain initialization of subwidgets.",				"",				"The instantiation of a subwidget should use one of that way",				"- `instantiate:` take a presenter class as parameter and return the created instance.",				"- methods named 'new' followed by a widget name are shortcut working with `instantiate:`",				"",				"```",				"\tlist := self newList.",				"\tlist2 := self instantiate: SpListPresenter",				"```",				"",				"Usually, the subwidgets must be added in the focusOrder using something like 'self focusOrder add: accessor of  the  subwidget'",				"",				"`SpPresenter>>#connectPresenters` is called by the initialize method after initializePresenters, it should manage interaction of subwidgets.",				"",				"Methods named 'when' followed by an event provide hook to perform the action in parameter.",				"",				"### Note",				"Be careful about code order if you are overriding initialize method.",				"Normally in Spec initializing instance variables should be done BEFORE calling `super initialize` (so the opposite of the normal approach), because super initialize calls `initalizePresenters` and `connectPresenters` that normally would make use of those variables.",				"",				"## Layout",				"",				"As a general principle refer to the subclasses of`SpExecutableLayout`.",				"",				"`defaultSpec` or a method containing the pragma `<spec: #default>` must be defined in the class side of my subclasses.",				"It contains information about how visually position its elements.",				"It possible to define more than one method to give the possibility to use another layout, by default the one containing the pragma will be used if it exists, if not `defaultSpec` will be used.",				"",				"Developer may also want to define instance level layouts. A good idiom is the following one:",				"",				"```",				"SpMyPresenter >> initializePresenters",				"\t... instantiate presenters ...",				"\tself initializeLayout",				"```",				"",				"```",				"SpMyPresenter >> initializeLayout",				"\tself layout: (SpXXLayout new add: ...; yourself)",				"```",				"",				"",				""			],			"category" : "Spec2-Core-Base"		},		"RBParseTreeLintRule" : {			"hash" : 1696000,			"definition" : "RBBasicLintRule subclass: #RBParseTreeLintRule\r\tinstanceVariableNames: 'matcher'\r\tclassVariableNames: ''\r\tpackage: 'Refactoring-Critics'",			"comment" : [				"A RBParseTreeLintRule is a rule that is expressed using a parse tree matcher on a method AST."			],			"category" : "Refactoring-Critics"		},		"TransferPresenter" : {			"hash" : 908288,			"definition" : "AbstractWidgetPresenter subclass: #TransferPresenter\r\tinstanceVariableNames: 'passenger source'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Support'",			"comment" : [				"I am a model representing a transfer during a drag and drop operation. I keep a pointer the source of the drag, and a pointer to what is dragged"			],			"category" : "Spec-Core-Support"		},		"SpMockMenu" : {			"hash" : 2918912,			"definition" : "Object << #SpMockMenu\r\ttraits: {TObservable};\r\tslots: {\r\t\t\t #realMenu .\r\t\t\t #shown => ObservableSlot };\r\ttag: 'Base';\r\tpackage: 'Spec2-Backend-Tests'",			"comment" : [				"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:",				"",				"For the Class part:  State a one line summary. For example, \"I represent a paragraph of text\".",				"",				"For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.",				"",				"For the Collaborators Part: State my main collaborators and one line about how I interact with them. ",				"",				"Public API and Key Messages",				"",				"- message one   ",				"- message two ",				"- (for bonus points) how to create instances.",				"",				"   One simple example is simply gorgeous.",				" ",				"Internal Representation and Key Implementation Points.",				"",				"    Instance Variables",				"\trealMenu:\t\t<Object>",				"\tshown:\t\t<Object>",				"",				"",				"    Implementation Points"			],			"category" : "Spec2-Backend-Tests-Base"		},		"FuzzyMatcher" : {			"hash" : 1688832,			"definition" : "Object subclass: #FuzzyMatcher\r\tinstanceVariableNames: 'pattern lowercasePattern indexes'\r\tclassVariableNames: ''\r\tpackage: 'FuzzyMatcher-Base'",			"comment" : [				"FuzzyMatcher is an approximate string matching algorithm that can determine if a string includes a given pattern.",				"For example, the string 'axby' matches both the pattern 'ab' and, 'ay', but not 'ba'. ",				"",				"The algorithm is based on lib_fts[1], and includes an optional scoring algorithm that can be used to sort all the matches based on their similarity to the pattern.",				"",				"1: ",				"https://blog.forrestthewoods.com/reverse-engineering-sublime-text-s-fuzzy-match-4cffeed33fdb",				"https://github.com/forrestthewoods/lib_fts"			],			"category" : "FuzzyMatcher-Base"		},		"FFIEnumeration class" : {			"hash" : 477184,			"definition" : "FFIEnumeration class\r\tinstanceVariableNames: 'representationType'",			"comment" : [				"Enumerations are data-types defining a finite set of named values.",				"For example, let's consider we want to create a data-type to identify the different positions of players inside a football match: goalkeeper, defender, midfielder, forward. Such data-type can be defined in C as an enumeration as follows:",				"",				"[[[language=c",				"typedef enum {",				"  goalkeeper,",				"  defender,",				"  midfielder,",				"  forward",				"} position;",				"]]]",				"",				"We can then use ==position== as a type, and the values defined within it as valid values for ==position==.",				"",				"",				"[[[language=c",				"position myPosition = defender;",				"]]]",				"",				"!!!! The values of C enumerations",				"",				"To better understand how to map C enumerations using uFFI, we must before understand how C assigns value to each of the elements in the enumeration.",				"Internally, C assigns to each of the elements of the enumeration a sequencial numeric value starting from 0 (zero).",				"In other words, ==goalkeeper== has a value of 0, ==defender== has a value of 1, and so on.",				"C allows developers to specify the values they want too, using an assignment-like syntax.",				"",				"[[[language=c",				"typedef enum {",				"  goalkeeper = 42,",				"  defender,",				"  midfielder,",				"  forward",				"} position;",				"]]]",				"",				"We can explicitly assign values to any of the elements of the enumeration.",				"We may leave values without explicit values, in which case they will be automatically assigned a value following its previous value. And finally, many elements in the enumeration may have the same value.",				"The example enumeration below shows these subtleties.",				"",				"[[[language=c",				"#include <assert.h>",				"#include <limits.h>",				"",				"enum example {",				"    example0,            /* will have value 0 */",				"    example1,            /* will have value 1 */",				"    example2 = 3,        /* will have value 3 */",				"    example3 = 3,        /* will have value 3 */",				"    example4,            /* will have value 4 */",				"    example5 = INT_MAX,  /* will have value INT_MAX */",				"    /* Defining a new value after this one will cause an overflow error */",				"};",				"]]]",				"",				"!!!! Defining an enumeration using ==FFIEnumeration==",				"",				"Enumerations are declared in uFFI as subclasses of the ==FFIEnumeration== class defining the same elements as defined in C, and with their same values.",				"For example, defining our example enumeration is done as follows, defining a subclass of ==FFIEnumeration==, a ==enumDecl== class-side method returning the specification of the enumeration elements, and finally sending the ==initialize== message to the enumeration class we created.",				"",				"[[[language=smalltalk",				"FFIEnumeration subclass: #ExampleEnumeration",				"  instanceVariableNames: ''",				"  classVariableNames: ''",				"  package: 'FFITutorial'",				"",				"ExampleEnumeration class >> enumDecl [",				"\t^ #(",				"    example0 0",				"    example1 1",				"    example2 3",				"    example3 3",				"    example4 4",				"    example5 2147483647",				"\t\t)",				"]",				"",				"ExampleEnumeration initialize.",				"]]]",				"",				"Doing this will automatically generate some boilerplate code to manipulate the enumeration.",				"You will see that the enumeration class gets redefined as follows creating and initializing a class variable for each of its elements.",				"",				"[[[language=smalltalk",				"FFIEnumeration subclass: #ExampleEnumeration",				"  instanceVariableNames: ''",				"  classVariableNames: 'example0 example1 example2 example3 example4 example5'",				"  package: 'FFITutorial'",				"]]]",				"",				"To use the values of enumerations in our code, it is enough to import it as a pool dictionary, since uFFI enumerations are shared pools.",				"",				"[[[language=smalltalk",				"Object subclass: #FFITutorial",				"  ...",				"  poolDictionaries: 'ExampleEnumeration'",				"  ...",				"]]]",				"",				"You can use your new enum in two ways:",				"\t- add it to a client class poolDictionaries list (see  #FFIExternalEnumTests for an example), ",				"\t\tand then just write CCC in your code -- CCC here is an item of your enum",				"\t- send the name of an item to your class --- FFITestEnumeration DDD",				"",				"The FFIEnumeration implements  (instance and class) some more API methods like:",				"\t#itemAt: retrieves the item having a specific value  --- NBTestEnumeration itemAt: 2",				"\t#includes: checks the existence of a specific item in the enum --- FFITestEnumeration includes: #AAA"			],			"category" : "UnifiedFFI-Objects"		},		"SpFilteringSelectableListPresenter" : {			"hash" : 2402048,			"definition" : "SpFilteringListPresenter subclass: #SpFilteringSelectableListPresenter\r\tinstanceVariableNames: 'selectColumn displayBlock displayIconBlock selectedItems previousSelectedIndex onActivation onDeactivation'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-CommonWidgets'",			"comment" : [				"A presenter to show a list that can be filter, and which elements are selectable."			],			"category" : "Spec2-CommonWidgets"		},		"RSRotated" : {			"hash" : 5734400,			"definition" : "RSInteraction subclass: #RSRotated\r\tinstanceVariableNames: 'drag targetShape totalAngle prevAngle'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Interaction-Core'",			"comment" : [				"I can rotate one shape on its parent"			],			"category" : "Roassal3-Interaction-Core"		},		"AtomicQueueItem" : {			"hash" : 1091584,			"definition" : "Object subclass: #AtomicQueueItem\r\tinstanceVariableNames: 'next object'\r\tclassVariableNames: ''\r\tpackage: 'Collections-Atomic-Elements'",			"comment" : [				"I am a queue item, used by atomic queues.",				"All my new instances are circular i.e. next = self"			],			"category" : "Collections-Atomic-Elements"		},		"TonelSTONWriter" : {			"hash" : 1524992,			"definition" : "STONWriter subclass: #TonelSTONWriter\r\tinstanceVariableNames: 'aliases'\r\tclassVariableNames: ''\r\tpackage: 'MonticelloTonel-Core'",			"comment" : [				"I'm a modified STON writer to make tonel metadata look as we want.",				"",				"- it accept aliasses for classes, so I can say OrderedDictionary -> nil (then I do not have an extra information I do not want). Btw, tonel needs to use ordered dictionaries instead plain dictionaries because output needs to be deterministic, and we want to control the order of attributes we publish.",				"- if dictionary has just one element, it prints it in just one line, to have a more compact view."			],			"category" : "MonticelloTonel-Core"		},		"MessageBrowser" : {			"hash" : 5392896,			"definition" : "AbstractMessageCentricBrowser subclass: #MessageBrowser\r\tinstanceVariableNames: 'textModel refreshingBlock'\r\tclassVariableNames: ''\r\tpackage: 'NewTools-MethodBrowsers-Senders'",			"comment" : [				"A MessageBrowser is a UI to browse a list of method, regardless of what they could be.",				"",				"example: ",				"",				"MessageBrowser new",				"\topenWithSpec;",				"\tmessages: (SystemNavigation new allSendersOf: #at:)",				"\tyourself"			],			"category" : "NewTools-MethodBrowsers-Senders"		},		"FloatPrintPolicy" : {			"hash" : 969984,			"definition" : "DynamicVariable subclass: #FloatPrintPolicy\r\tinstanceVariableNames: 'default'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-Numbers'",			"comment" : [				"I am FloatPrintPolicy.",				"I am a DynamicVariable.",				"",				"I control whether Float instances are printed exactly or inexactly. The inexact printing is much faster, but can be less accurate. ",				"",				"The default policy is ExactFloatPrintPolicy.",				"",				"FloatPrintPolicy ",				"\tvalue: InexactFloatPrintPolicy new ",				"\tduring: [ Float pi printString ]"			],			"category" : "Kernel-Numbers"		},		"RSHierarchyPackerInteraction" : {			"hash" : 5769472,			"definition" : "RSAbstractCanvasInteraction subclass: #RSHierarchyPackerInteraction\r\tinstanceVariableNames: 'rectanglePackLayout'\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Layouts-Interactions'",			"comment" : [				"This interaction layouts the connected subgraphs of a view using a rectangle pack layout each time the view changes it's extent (e.g. a window resize).",				"",				"Adapt the layout based on the window size:",				"-=-=-=-=-=-=-=-=-=",				"numberOfBoxes := 50.",				"r := Random seed: 42.",				"shapes := RSGroup new.",				"numberOfBoxes timesRepeat: [ ",				"    shapes add: (RSBox new width: (r nextInt: 40); height: (r nextInt: 40)) ].",				"",				"c := RSCanvas new. ",				"c addAll: shapes.",				"RSRectanglePackLayout new useProgressBar; on: shapes.",				"c @ RSCanvasController @ RSHierarchyPacker.",				"c open",				"-=-=-=-=-=-=-=-=-=",				"",				"Another example:",				"-=-=-=-=-=-=-=-=-=",				"\"Try resizing the window. Note that it also works in the inspector\"",				"classes := { 'Roassal3-Layouts'. 'Roassal3' }",				"\tflatCollect: [:pkgname | (RPackage organizer",				"\t\tpackageNamed: pkgname) definedClasses ].",				"shapes := RSGroup new.",				"classes do: [ :c | shapes add: (RSEllipse new model: c) ].",				"",				"c := RSCanvas new.",				"c addAll: shapes.",				"",				"eb := RSEdgeBuilder orthoVertical.",				"eb canvas: c.",				"eb connectFrom: #superclass.",				"",				"RSNormalizer size",				"\tshapes: shapes;",				"\tnormalize: [ :c | c numberOfMethods + 5 ].",				"RSTreeLayout on: shapes.",				"c @ RSCanvasController @ RSHierarchyPacker.",				"c open",				"-=-=-=-=-=-=-=-=-=",				"",				"Another example:",				"-=-=-=-=-=-=-=-=-=",				"builder := RSUMLClassBuilder new.",				"classes := { 'Roassal3-Layouts'. 'Roassal3' }",				"\tflatCollect: [:pkgname | (RPackage organizer",				"\t\tpackageNamed: pkgname) definedClasses ].",				"builder classes: classes.",				"builder renderer: RSTorchUMLClassRenderer new.",				"builder build.",				"builder canvas @ RSHierarchyPacker.",				"builder canvas open",				"-=-=-=-=-=-=-=-=-="			],			"category" : "Roassal3-Layouts-Interactions"		},		"TestInWorldMorph" : {			"hash" : 4349952,			"definition" : "Morph subclass: #TestInWorldMorph\r\tinstanceVariableNames: 'intoWorldCount outOfWorldCount'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Tests-Kernel'",			"comment" : [				"Helper class for MorphTest"			],			"category" : "Morphic-Tests-Kernel"		},		"KMPragmaKeymapBuilder class" : {			"hash" : 3000064,			"definition" : "KMPragmaKeymapBuilder class\r\tinstanceVariableNames: ''",			"comment" : [				"I am a singleton object, subscribed to system events, to listen to the creation of methods marked with the <keymap> and keymap:> pragmas.",				"",				"When I listen one of those events, I reinitialize the KMRepository default instance and reload it with all declared keymaps."			],			"category" : "Keymapping-Pragmas"		},		"MCLazyVersionInfo class" : {			"hash" : 265216,			"definition" : "MCLazyVersionInfo class\r\tinstanceVariableNames: ''",			"comment" : [				"A MCLazyVersionInfo puts ancestor and stepChilds data in WeakArrays to allow their memory to be reclaimed and reloaded on demand.",				"",				"For all purposes, a MCLazyVersionInfo behaves exactly like a MCVersionInfo with the same data, but:",				"- let the ancestry (and step children) be garbage collected",				"- and reload that ancestry (and stepChildren) from the MC repositories when accessed (MCLazyVersionInfo>>loadAncestorsAndStepChildren for the reload, MCLazyVersionInfo>>ancestors and MCLazyVersionInfo>>stepChildren for the access).",				"",				"MCLazyVersionInfo is installed just as the ancestor in a MCWorkingAncestry (the direct ancestry of a WorkingCopy, which is the state all packages take when they are loaded in an image). It allows a MCWorkingAncestry to still know which package it is coming from, and, of course, the MCLazyVersionInfo to be able to reload the relevant ancestry from the right package.",				"",				"Once installed, by flushing the Monticello package cache, all the stored ancestry is garbage collected, except the roots of those ancestry trees, which are the MCLazyVersionInfo instances inside the MCWorkingAncestry instances.",				"",				"Warnings:",				"",				"- Algorithms which traverse the entire ancestry chain of all packages will force a reload of all the packages contained in the image, which is a time and memory and network consuming process...",				"",				"- It degrades gracefully when reloading becomes impossible (returns an empty ancestry, keeps knowledge of the fact some ancestry is missing, reloading a full ancestry on when possible). This has been tested.",				"",				""			],			"category" : "Monticello-Versioning"		},		"SpDialogWindow" : {			"hash" : 2585088,			"definition" : "DialogWindow subclass: #SpDialogWindow\r\tinstanceVariableNames: 'toolbar'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Adapters-Morphic-Support'",			"comment" : [				"A SpecDialogWindow is a window made for embedding Spec models into dialog windows"			],			"category" : "Spec2-Adapters-Morphic-Support"		},		"SDL_SystemCursorType class" : {			"hash" : 4067584,			"definition" : "SDL_SystemCursorType class\r\tinstanceVariableNames: ''",			"comment" : [				"I am the FFIEnumeration used to get the system cursors. I am defined as following C Enum",				"",				"```",				"typedef enum {",				"        SDL_SYSTEM_CURSOR_ARROW,     ",				"        SDL_SYSTEM_CURSOR_IBEAM,     ",				"        SDL_SYSTEM_CURSOR_WAIT,      ",				"        SDL_SYSTEM_CURSOR_CROSSHAIR, ",				"        SDL_SYSTEM_CURSOR_WAITARROW, ",				"        SDL_SYSTEM_CURSOR_SIZENWSE,  ",				"        SDL_SYSTEM_CURSOR_SIZENESW,  ",				"        SDL_SYSTEM_CURSOR_SIZEWE,    ",				"        SDL_SYSTEM_CURSOR_SIZENS,    ",				"        SDL_SYSTEM_CURSOR_SIZEALL,   ",				"        SDL_SYSTEM_CURSOR_NO,        ",				"        SDL_SYSTEM_CURSOR_HAND,      ",				"        SDL_NUM_SYSTEM_CURSORS",				"} SDL_SystemCursor; ",				"```"			],			"category" : "OSWindow-SDL2-Bindings"		},		"FFIFunctionSpec" : {			"hash" : 519936,			"definition" : "Object subclass: #FFIFunctionSpec\r\tinstanceVariableNames: 'returnType functionName arguments'\r\tclassVariableNames: ''\r\tpackage: 'UnifiedFFI-Base'",			"comment" : [				"I am used to hold a parsed function signature, describing a C function.",				"Since all C functions having return type, arguments and name (unless it anonymous one), ",				"same structure can be used to hold an information about it in my instances.",				"However, what objects used to represent types and arguments is up to code generator."			],			"category" : "UnifiedFFI-Base"		},		"CoSession" : {			"hash" : 5322496,			"definition" : "Object subclass: #CoSession\r\tinstanceVariableNames: 'vocabularyCache'\r\tclassVariableNames: ''\r\tpackage: 'HeuristicCompletion-Model-SessionHeuristic'",			"comment" : [				"I implement a session that collects execution information.",				"I collect the last words in modified methods."			],			"category" : "HeuristicCompletion-Model-SessionHeuristic"		},		"RubPluggableTextMorph" : {			"hash" : 598272,			"definition" : "RubScrolledTextMorph subclass: #RubPluggableTextMorph\r\tinstanceVariableNames: 'getEnabledSelector'\r\tclassVariableNames: ''\r\tpackage: 'Rubric-Compatibility-toBeDeprecated'",			"comment" : [				"This class was introduced to ease the migration to Rubric.",				"Thus, I''am a replacement for compatibility with old PluggableTextMorph.",				"It is still partly based on change/update.",				"Do not use this class for new developments since it will be deprecated asap.",				"Use RubScrolledTextMorph instead"			],			"category" : "Rubric-Compatibility-toBeDeprecated"		},		"TabBarMorph" : {			"hash" : 1955584,			"definition" : "PanelMorph subclass: #TabBarMorph\r\tinstanceVariableNames: 'tabs selectionHistory menuButton numberOfSelectedTabs'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Tabs-Morphs'",			"comment" : [				"I am a bar gathering tabs. I am the one managing the selected tab and related bahavior (unselecting the last one, updating the layout to make the selected tab on top of the other)"			],			"category" : "Morphic-Widgets-Tabs-Morphs"		},		"ZipStore" : {			"hash" : 1976064,			"definition" : "MemoryStore subclass: #ZipStore\r\tinstanceVariableNames: 'reference'\r\tclassVariableNames: ''\r\tpackage: 'FileSystem-Zip-Base'",			"comment" : [				"I'm a specific store for Zip file systems"			],			"category" : "FileSystem-Zip-Base"		},		"ButtonPresenter" : {			"hash" : 882688,			"definition" : "AbstractWidgetPresenter subclass: #ButtonPresenter\r\tinstanceVariableNames: 'actionHolder labelHolder fontHolder stateHolder actionPerformedHolder askBeforeChangingHolder iconHolder menuHolder shortcutHolder'\r\tclassVariableNames: ''\r\tpackage: 'Spec-Core-Widgets'",			"comment" : [				"A ButtonPresenter is an applicative presenter which handle a basic button.",				"See AbstractWidgetPresenter",				"",				"self example",				"",				"You can also have a look at CustomerStatisfaction for another example.",				"",				"I provide the following variables and their accessors",				"- action is the action performed when I am clicked.",				"- icon is the icon displayed on me.",				"- label is the text displayed on me.",				"- state is a boolean representing if I am highlighted, it is false by default and it is reversed while clicking.",				"",				"todo",				"- askBeforeChanging",				"- font",				"- menu",				"- shortcut"			],			"category" : "Spec-Core-Widgets"		},		"CheckboxButtonMorph" : {			"hash" : 581376,			"definition" : "ThreePhaseButtonMorph subclass: #CheckboxButtonMorph\r\tuses: TEnableOnHaloMenu\r\tinstanceVariableNames: 'repressedImage enabled isRadioButton images'\r\tclassVariableNames: ''\r\tpackage: 'Morphic-Widgets-Basic-Buttons'",			"comment" : [				"Checkbox/radio - button only."			],			"category" : "Morphic-Widgets-Basic-Buttons"		},		"ReNoPrintStringInPrintOnRule class" : {			"hash" : 1721856,			"definition" : "ReNoPrintStringInPrintOnRule class\r\tinstanceVariableNames: ''",			"comment" : [				"#printString is implemented by manipulating a stream.",				"Using it inside a #printOn: will imply a useless creation of stream and its pass to #printOn: one, instead of using directely the stream parameter to #printOn:"			],			"category" : "Renraku-Rules"		},		"SpGridConstraints" : {			"hash" : 2152192,			"definition" : "SpLayoutConstraints subclass: #SpGridConstraints\r\tuses: SpTAlignable\r\tinstanceVariableNames: 'position span'\r\tclassVariableNames: ''\r\tpackage: 'Spec2-Layout-Grid'",			"comment" : [				"I am the constraints in which an element is placed into a grid layout.",				"I have a position and a span."			],			"category" : "Spec2-Layout-Grid"		},		"StInspectorCommand" : {			"hash" : 5411840,			"definition" : "CmCommand subclass: #StInspectorCommand\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'NewTools-Inspector-Command'",			"comment" : [				"A base for inspector toolbar commands."			],			"category" : "NewTools-Inspector-Command"		}	},	"messages" : {		"/%<" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"SymbolicIntegerTest>>#testQuoRemMinimal9Over21"			],			"implementors" : {				"Integer" : {					"sourceCode" : [						"/%< anObject",						"",						"\t^ anObject quoRemMinimalInteger: self"					],					"body" : [						"^ anObject quoRemMinimalInteger: self"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [ ],					"hash" : 18845632,					"argumentNames" : [						"anObject"					]				}			}		},		"quoRemComplementaryInteger:" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"Integer>>#'/%~'"			],			"implementors" : {				"Integer" : {					"sourceCode" : [						"quoRemComplementaryInteger: anInteger",						"",						"\t^ QuoRemComplementary a: anInteger b: self"					],					"body" : [						"^ QuoRemComplementary a: anInteger b: self"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [ ],					"hash" : 18845683,					"argumentNames" : [						"anInteger"					]				}			}		},		"initialize" : {			"senders" : [				"AColorSelectorMorph>>#initialize",				"AbstractCache>>#initialize",				"AbstractEnumerationVisitor>>#initializeWithBlock:",				"AbstractFontSelectorDialogWindow>>#initialize",				"AbstractFormButtonPresenter>>#initialize",				"AbstractMessageCentricBrowser>>#initialize",				"AbstractMethodReferenceConverter>>#initialize",				"AbstractResizerMorph>>#initialize",				"AbstractWidgetPresenter>>#initialize",				"AlignmentMorph>>#initialize",				"AlphaImageMorph>>#initialize",				"AnimatedImageFrame>>#initialize",				"AnimatedImageMorph>>#initialize",				"AnnotationUserExample>>#initialize",				"AnnouncementMockC>>#initialize",				"AnnouncementSetWithExclusions>>#initialize",				"Announcer>>#initialize",				"Archive>>#initialize",				"ArchiveMember>>#initialize",				"AthensBalloonImagePaint>>#initialize",				"AthensBalloonSurface>>#initialize",				"AthensBezierConverter>>#initialize",				"AthensCairoExportSurface>>#initializeWith:",				"AthensCairoGradientPaint>>#initializeRadialBetween:extending:and:extending:withColorRamp:",				"AthensCairoGradientPaint class>>#createLinearGradient:start:stop:",				"AthensCairoMatrix>>#initialize",				"AthensCairoMeshGradientPaint class>>#createMeshGradientWithPatches:",				"AthensCairoPathBuilder>>#createPath:",				"AthensCairoPatternSurfacePaint>>#initializeFor:",				"AthensCairoSurface class>>#extent:format:",				"AthensCairoSurface class>>#createFromFile:ifFailed:",				"AthensCairoSurface class>>#width:height:",				"AthensCairoText>>#initialize",				"AthensCanvasWrapper>>#initialize",				"AthensCompositeStrokePaint>>#initialize",				"AthensCurveFlattener>>#initialize",				"AthensDemoMorph>>#initialize",				"AthensDisplayScanner>>#initialize",				"AthensFlakeDemo>>#initialize",				"AthensFontDescription>>#initialize",				"AthensSceneView>>#initialize",				"AthensShadowPaint>>#initialize",				"AthensSimplePathBuilder>>#initialize",				"AthensStrokePaint>>#initialize",				"AthensTiger>>#initializeWith:",				"AthensTigerWindow>>#initialize",				"AthensWorldMorph>>#initialize",				"AthensWrapWorldMorph>>#initialize",				"AthensWrappedWorldDisplay>>#initialize",				"AtomicQueueItem>>#initialize",				"AtomicSharedQueue>>#initialize",				"Author>>#initialize",				"BalloonEngine>>#initialize",				"BalloonMorph>>#initialize",				"Base64MimeConverter>>#initialize",				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"BaselineOfBookletDSst>>#scriptStoragePoolsForDoc",				"BaselineOfDisplay>>#postload:package:",				"BaselineOfIDE>>#additionalInitialization",				"BaselineOfLibGit>>#postload:package:",				"BaselineOfMorphic>>#postload:package:",				"BaselineOfMorphic>>#cleanUpAfterMorphicInitialization",				"BaselineOfMorphicCore>>#postload:package:",				"BaselineOfUI>>#postload:package:",				"BasicCommandLineHandler>>#initialize",				"Beacon>>#initialize",				"BeaconSignal>>#initialize",				"Behavior>>#newPinned",				"Behavior>>#new:",				"Behavior>>#initialize",				"Behavior>>#new",				"Behavior>>#newPinned:",				"BorderedMorph>>#initialize",				"BracketMorph>>#initialize",				"BracketSliderMorph>>#initialize",				"BrowseDebugAction>>#initialize",				"ButtonPresenter>>#initialize",				"CDBehaviorDefinitionNode>>#initialize",				"CDNode>>#initialize",				"CTBlockSlotDescriptor>>#initialize",				"CTDfsShapeBuilder>>#initialize",				"CTDfsWalker>>#initialize",				"CTLinkedStoragePoolCircular>>#initialize",				"CTLinkedStoragePoolCircularDoubly>>#initialize",				"CTOrderPreservingTree>>#initialize",				"CTSlotDescriptorsVisitor>>#collect:",				"CTSlotDescriptorsVisitor>>#initialize",				"CTSlotDescriptorsVisitorCollect>>#initialize",				"CacheStatistics>>#initialize",				"CacheWeight>>#initialize",				"CairoFontOptions class>>#new",				"CairoScaledFont>>#initialize",				"CalendarDayMorph>>#initialize",				"CalendarMorph>>#initialize",				"CalendarPresenter>>#initialize",				"ChangeSet>>#fileOutPSFor:on:",				"ChangeSet>>#initialize",				"ChangeSet class>>#basicNewNamed:",				"CharacterSet>>#initialize",				"CheckboxButtonMorph>>#initialize",				"CheckboxMorph>>#initialize",				"ChooseDropListDialogWindow>>#initialize",				"ChunkFileFormatParser>>#initialize",				"CircleMorph>>#initialize",				"CircularMemoryLogger>>#initialize",				"ClapCommand>>#initialize",				"ClapDocumenter>>#initializeOn:",				"ClapParameterized>>#initialize",				"ClassAPIHelpBuilder>>#initialize",				"ClassAnnotation>>#initialize",				"ClassAnnotationRegistry>>#initialize",				"ClassDefinitionPrinter class>>#oldPharo",				"ClassDefinitionPrinter class>>#fluid",				"ClassDefinitionPrinter class>>#legacy",				"ClassFactoryForTestCase>>#initialize",				"ClassHierarchyPrinter>>#initialize",				"ClassOrganization>>#initializeClass:",				"ClassOrganization>>#initialize",				"ClassTest>>#testPoolVariableAccessibleInClassUser",				"ClassTest>>#testPoolVariableAccessibleInSubclassOfClassUser",				"Clipboard>>#initialize",				"ClyActiveBreakpointsQuery>>#initialize",				"ClyActivityAnimationIconMorph>>#initialize",				"ClyAllProblemMethodQuery>>#initialize",				"ClyAsyncQuery>>#initialize",				"ClyBrowserButtonMorph>>#initialize",				"ClyBrowserContext>>#initialize",				"ClyBrowserItem>>#initialize",				"ClyBrowserMorph>>#initialize",				"ClyBrowserQueryCache>>#initialize",				"ClyBrowserToolMorph>>#initialize",				"ClyBrowserToolbarItemMorph>>#initialize",				"ClyClassGroup>>#initialize",				"ClyClassHierarchy>>#initialize",				"ClyClassHierarchyMap>>#initialize",				"ClyClassHierarchyScope>>#initialize",				"ClyClassInitializationScript class>>#isImplementedByMethod:",				"ClyCollapsedDataSource>>#initialize",				"ClyCompositeTestResultProperty>>#initialize",				"ClyConcreteCritiqueMethodGroup>>#initialize",				"ClyConstantMethodQuery>>#initialize",				"ClyCriticEnvironmentPlugin>>#initialize",				"ClyCursorPositionLabelMorph>>#initialize",				"ClyDataSource>>#initialize",				"ClyDataSourceUpdateScheduler>>#initialize",				"ClyDesiredSelection>>#initialize",				"ClyExpandedDataSource>>#initialize",				"ClyFilteringCritiqueQuery>>#initialize",				"ClyFormatAsReadSwitchMorph>>#initialize",				"ClyFullBrowserMorph>>#initialize",				"ClyFullEnvironmentUpdateStrategy>>#initialize",				"ClyHierarchicallySortedClassesResult>>#initialize",				"ClyInheritanceAnalysisEnvironmentPlugin>>#initialize",				"ClyItemCellMorph>>#initialize",				"ClyLongExampleQuery>>#initialize",				"ClyMainItemCellMorph>>#initialize",				"ClyMergedHierarchy>>#initialize",				"ClyMetaLinkInstallationPresenter class>>#onNode:forInstallation:",				"ClyMethodEditorToolMorph>>#initialize",				"ClyMethodGroup>>#initialize",				"ClyMethodTagsAndPackageEditorMorph>>#initialize",				"ClyMethodVisibilityMorph>>#initialize",				"ClyNavigationEnvironment>>#initialize",				"ClyNavigationHistory>>#initialize",				"ClyNotebookManager>>#initialize",				"ClyNotebookMorph>>#initialize",				"ClyNotebookPageAction>>#initialize",				"ClyNotebookPageMorph>>#initialize",				"ClyOldMessageBrowserAdapter>>#initialize",				"ClyOldMessageBrowserQuery>>#initialize",				"ClyProjectManagerRegistry>>#initialize",				"ClyQuery>>#initialize",				"ClyQueryBrowserFilter>>#initialize",				"ClyQueryBrowserMorph>>#initialize",				"ClyQueryResult>>#initialize",				"ClyQueryResultMetadata>>#initialize",				"ClyQueryViewMorph>>#initialize",				"ClyRing2Environment>>#initialize",				"ClyScopeCompoBoxMorph>>#initialize",				"ClySortFunction>>#initialize",				"ClySortSystemItemFunction>>#initialize",				"ClyStatusBarItemMorph>>#initialize",				"ClyStatusBarMorph>>#initialize",				"ClySubstringPattern>>#initialize",				"ClySystemEnvironment>>#initialize",				"ClyTabManager>>#initialize",				"ClyTableFilterFactory>>#initialize",				"ClyTestResultProperty>>#initialize",				"ClyTextEditingMode>>#initialize",				"ClyTextEditorToolMorph>>#initialize",				"ClyTextMorphToolMorph>>#initialize",				"ClyToolbarMorph>>#initialize",				"ClyToolbarSeparatorMorph>>#initialize",				"ClyUnknownQueryResult>>#initialize",				"ClyUnknownScope>>#initialize",				"CmBlockCommand>>#initialize",				"CmCommand>>#initialize",				"CmCommandAborted>>#initialize",				"CmCommandCollector>>#initialize",				"CmCommandGroup>>#initialize",				"CmFakeCommand>>#initialize",				"CmUICommand>>#initialize",				"CmUICommandGroup>>#initialize",				"CmdMenu>>#initialize",				"CmdMenuCommandActivationStrategy>>#initialize",				"CmdMenuGroup>>#initialize",				"CmdMouseCommandActivation>>#initialize",				"CoASTNodeFetcherHeuristic>>#initialize",				"CoAvoidRepeatedFetcher>>#initialize",				"CoCompletionContext>>#initialize",				"CoCompletionEngine>>#initialize",				"CoFetcher>>#initialize",				"CoFetcherSequence>>#initialize",				"CoHeuristicBuilder>>#initialize",				"CoInitializeTypeInferenceTest>>#testInferInstanceVariableUsedInInitialize",				"CoInitializeTypeInferenceTest>>#testInferUndefinedInstanceVariableUsedInInitialize",				"CoInitializeTypeInferenceTest>>#testInferInstanceVariableNotUsedInInitializeHasNoType",				"CoMockClass>>#initialize",				"CoMockFetcherToRecordResets>>#initialize",				"CoNarrowHistoryFetcher>>#initialize",				"CoResultSet>>#initialize",				"CoSession>>#initialize",				"CoStaticBenchmarks>>#initialize",				"CoStatistics>>#initialize",				"CoStatisticsCompletionEngine>>#initialize",				"CoTypeInferencer>>#inferFrom:typeGetters:",				"CoTypeInferencer>>#visitMessageNode:receiverType:",				"CoTypeInferencer>>#tryInferSelector:",				"CoTypeInferencer>>#initialize",				"ColorChooserMorph>>#initialize",				"ColorPresenterMorph>>#initialize",				"ColorSelectorDialogWindow>>#initialize",				"CommandLineArguments>>#initializeWithArguments:",				"CommandLineHandler>>#initialize",				"CompiledMethodTest>>#testIsClassSide",				"ComposablePresenter>>#initialize",				"ComposablePresenter class>>#owner:on:",				"ComposablePresenter class>>#owner:",				"ComposablePresenter class>>#on:",				"ComposedSortFunction>>#initialize",				"CompositeFillStyle>>#initialize",				"CompositionScanner>>#initialize",				"ConfigurableHistoryIterator>>#initialize",				"ControlButtonMorph>>#initialize",				"CopyVisitor>>#initializeWithSource:dest:",				"CornerGripMorph>>#initialize",				"CoverageDemo>>#initialize",				"CriticBrowser>>#initialize",				"CriticBrowser>>#reapplyAllRules",				"CriticToolbar>>#initialize",				"CriticWorkingConfiguration class>>#current",				"CriticsCache>>#initialize",				"CustomQuestionDialogWindow>>#initialize",				"DAAssemblyNode>>#initializeWith:",				"DADependenciesHTMLPublisher>>#initializeWithReport:stream:",				"DADependencyChecker>>#initialize",				"DADependencyReport>>#initialize",				"DAPackage>>#initializeWithPackage:",				"DAPackageCycle>>#initialize",				"DAPackageCycle class>>#new",				"DAPackageCycleDetector>>#initialize",				"DAPackageDependencyWrapper>>#initializeFrom:",				"DAPackageRelationGraph>>#initializeWithPackages:",				"DATarjanAlgorithm>>#initialize",				"DTDebugTestCommand>>#initialize",				"DTFilterableListPresenter>>#initialize",				"DTLeavesCollector>>#initialize",				"DTMockPlugin>>#initialize",				"DTRerunCommand>>#initialize",				"DTTestsProfilerVisitor>>#initialize",				"DTTreeNode>>#initialize",				"DailyNonInteractiveTranscript>>#initialize",				"DamageRecorder>>#initialize",				"DashedBorderStyle>>#initialize",				"DatePresenter>>#initialize",				"DecoratorStream>>#on:",				"DeepCopier>>#initialize",				"DeflateStream>>#initialize",				"DeflateStream>>#on:",				"DelayMicrosecondTickerSimulation>>#initialize",				"DelayMillisecondTickerSimulation>>#initialize",				"DelaySchedulerBackgroundWorkerMorph>>#initialize",				"DialogItemsChooser>>#initialize",				"DialogItemsChooserUI>>#initialize",				"DialogItemsChooserUI class>>#on:",				"DialogWindowMorph>>#initialize",				"DialogWindowPresenter>>#initialize",				"DictionaryValueHolder>>#initialize",				"DiffBuilder>>#initialize",				"DiffChangeMorph>>#initialize",				"DiffJoinMorph>>#initialize",				"DiffMapMorph>>#initialize",				"DiffMorph>>#initialize",				"DiffPatch>>#initialize",				"DiffPatchVisitor>>#initialize",				"DiffPresenter>>#initialize",				"DiffReplyVisitor>>#initialize",				"DiskDirectoryEntry>>#initializeWithReference:statAttributes:",				"DiskStore>>#initialize",				"DisplayScanner>>#initialize",				"DisplayScanner class>>#new",				"DockingBarMorph>>#initialize",				"DropListItem>>#initialize",				"DropListMorph>>#initialize",				"DropListPresenter>>#initialize",				"Duration>>#initialize",				"DynamicComposablePresenter>>#initialize",				"DynamicPresentersListBuilder>>#initialize",				"EFContext>>#initialize",				"EFFormatter>>#initialize",				"EdgeGripMorph>>#initialize",				"EditableList>>#initialize",				"EditorFindReplaceDialogWindow>>#initialize",				"EmbeddedFreeTypeFontInstaller>>#initialize",				"EmbossedStringMorph>>#initialize",				"EncodedCharSet class>>#initialize",				"EpBehaviorCategoryChange>>#initializeOldCategory:newCategory:class:",				"EpBehaviorCommentChange>>#initializeWithBehavior:oldComment:newComment:oldStamp:newStamp:",				"EpBehaviorCopy>>#initializeWithBehavior:newName:",				"EpBehaviorNameChange>>#initializeOldName:newName:class:",				"EpCategoryChange>>#initializeNamed:packageName:",				"EpClassAddition>>#initializeClass:",				"EpClassModification>>#initializeOldClass:newClass:",				"EpClassRemoval>>#initializeClassRemoved:",				"EpCompositeRefactoring>>#initializeWith:",				"EpEntryAdded>>#initializeWith:",				"EpExpressionEvaluation>>#initializeExpression:",				"EpFileLogNode>>#initializeWithEntry:",				"EpGenericRefactoring>>#initializeWith:",				"EpHasImpactVisitor>>#initializeWith:",				"EpLog>>#initializeWith:",				"EpLogBrowserOperation>>#initializeWith:",				"EpLogBrowserOperationVisitor>>#initializeWith:",				"EpLogBrowserPresenter>>#initialize",				"EpLogNode>>#initialize",				"EpLostChangesDetector>>#initializeWithLog:",				"EpMethodAddition>>#initializeMethod:",				"EpMethodModification>>#initializeWithOldMethod:newMethod:",				"EpMethodRemoval>>#initializeWithMethod:",				"EpMonitor>>#initializeWithLog:",				"EpMonticelloVersionSave>>#initializeWithVersionName:repositoryDescription:",				"EpMonticelloVersionsLoad>>#initializeWith:",				"EpPropagateRefactoring>>#initializeWith:",				"EpProtocolChange>>#initializeWithBehavior:protocol:",				"EpRBPropagateRefactoring>>#initializeWith:",				"EpReferenceFixerVisitor>>#initializeWithMap:",				"EpRenameClassRefactoring>>#initializeFrom:to:",				"EpRenameInstanceVariableRefactoring>>#initializeIn:from:to:",				"EpRenameMethodRefactoring>>#initializeFrom:to:in:",				"EpSessionEvent>>#initializeWith:",				"EpTraitAddition>>#initializeWithTrait:",				"EpTraitModification>>#initializeOldTrait:newTrait:",				"EpTraitRemoval>>#initializeWithTrait:",				"EpUnknownRefactoring>>#initializeWith:",				"EphemeronRegistry>>#initialize",				"ExceptionSet>>#initialize",				"ExceptionSetWithExclusions>>#initialize",				"ExecutionCounter>>#initialize",				"ExecutionEnvironmentStub>>#initialize",				"ExpanderMorph>>#defaultTitleMorph",				"ExpanderMorph>>#initialize",				"ExpanderTitleMorph>>#initialize",				"ExternalBrowser class>>#openOn:",				"ExternalData class>>#compileFields",				"ExternalType class>>#initializeFFIConstants",				"FBDExamples>>#initialize",				"FFIAbstract64BitsArgumentReader>>#initialize",				"FFIArchitecture class>>#uniqueInstance",				"FFICallbackArgumentReader>>#initialize",				"FFICallbackArgumentReader class>>#forCallback:inContext:",				"FFICallout>>#initialize",				"FFICalloutAPI>>#initializeUFFIContext:",				"FFICalloutAPI>>#initialize",				"FFICalloutAPI>>#initializeContext:",				"FFICalloutMethodBuilder>>#initializeCalloutAPI:",				"FFICalloutMethodBuilder>>#initialize",				"FFIConstantArgument>>#initialize",				"FFIExternalArray>>#initializeType:size:handleProducer:",				"FFIExternalObjectType>>#initialize",				"FFIExternalReference>>#initialize",				"FFIExternalResourceExecutor>>#initialize",				"FFIExternalStructureFieldSpec>>#initialize",				"FFIExternalStructureFlatLayout>>#initialize",				"FFIExternalStructureReferenceHandle>>#initializeHandle:offset:",				"FFIExternalStructureType>>#initializeObjectClass:",				"FFIExternalType>>#initialize",				"FFIExternalValueHolder>>#initialize",				"FFIFunctionParser>>#initialize",				"FFIFunctionSpec>>#initialize",				"FFIMethodRegistry>>#initialize",				"FFIStructure class>>#fromHandle:",				"FFISystemV64CallbackArgumentReader>>#initialize",				"FFIUnknownLibrary>>#initializeName:",				"FFIWin64CallbackArgumentReader>>#initialize",				"FLAnalysis>>#initializeWith:private:root:",				"FLAnalyzer>>#initialize",				"FLBufferedWriteStream>>#initializeOn:bufferSize:",				"FLCluster>>#initializeAnalyzing",				"FLCluster>>#initializeMaterializing",				"FLClusterization>>#initialize",				"FLCompiledMethodCluster class>>#cleanUp",				"FLDecoder>>#initializeOn:migrations:globalEnvironment:",				"FLEncoder>>#initializeOn:globalEnvironment:",				"FLFileReferenceStreamStrategy>>#initialize",				"FLGZipStrategy>>#initializeWith:",				"FLGlobalSendMock>>#initializeWith:",				"FLIndexStream>>#initializeOn:digits:",				"FLLargeIdentityDictionary>>#initialize",				"FLLargeIdentitySet>>#initialize",				"FLLightGlobalMapper>>#initializeWith:",				"FLMaterialization>>#initializeWith:",				"FLMaterializer>>#initialize",				"FLMigration>>#initializeClassNamed:toClass:variables:",				"FLPluggableSubstitutionMapper>>#initializeWith:substitutionFactory:",				"FLProxyThatBecomesItsContent>>#initializeWith:",				"FLSerialization>>#initializeWith:root:analyzer:",				"FLSerializer>>#initialize",				"FLVariablesMapping>>#initializeWithClass:",				"FLVariablesMapping>>#initializeWithClass:references:",				"FTCellMorph>>#initialize",				"FTColumn>>#initialize",				"FTColumnResizerMorph>>#initializeContainer:left:right:",				"FTEasyListMorph>>#initialize",				"FTExampleClassInfoTableDataSource>>#initialize",				"FTExampleDropDataSource>>#initialize",				"FTExampleMethodListDataSource>>#initializeClass:",				"FTExampleMethodListGeneratorDataSource>>#initializeClass:",				"FTExampleMethodModel>>#initializeMethod:",				"FTExampleMethodTableDataSource>>#initializeClass:",				"FTFilterFunction>>#initialize",				"FTFunction>>#initializeTable:",				"FTIndentedCellMorph>>#initialize",				"FTPluggableIconListMorphAdaptor>>#initialize",				"FTSelectableMorph>>#initialize",				"FTStateBasedColumnSortingStrategy>>#initialize",				"FTTableContainerMorph>>#initialize",				"FTTableMorph>>#initialize",				"FTTableMorph>>#initializeWithHorizontalScrollBar",				"FTTableRowMorph>>#initializeTable:",				"FTTableRowMorph>>#initialize",				"FadingMorph>>#initialize",				"FastTablePresenter>>#initialize",				"FileDialogWindow>>#initializeOn:",				"FileDialogWindow>>#initialize",				"FileList>>#initialize",				"FileLocator>>#initializeWithOrigin:path:",				"FileSystemDirectoryEntry>>#initializeWithReference:",				"FileSystemGuide>>#initializeWithVisitor:",				"FileSystemGuide>>#initialize",				"FileSystemPermission>>#initialize:",				"FilteredMorphTreeModel>>#initialize",				"Finder>>#initialize",				"FinderUI>>#initialize",				"FixedFaceFont>>#initialize",				"FluidBuilder>>#initialize",				"FluidClassBuilder>>#initialize",				"FontChooser>>#initialize",				"ForEventTestMock>>#initialize",				"FreeTypeCache>>#initialize",				"FreeTypeFontFamily>>#initialize",				"FreeTypeFontFamilyMember>>#initialize",				"FreeTypeFontProvider>>#initialize",				"FreeTypeFontProvider>>#prepareForRelease",				"FreeTypeFontProvider class>>#resetCurrent",				"FreeTypeFontProvider class>>#initialize",				"FreeTypeNameParser>>#initialize",				"FullscreenMorph>>#initialize",				"FuzzyLabelMorph>>#initialize",				"FuzzyMatcher>>#initialize",				"FuzzyMatcherExample>>#initialize",				"GCoordinates>>#initialize",				"GLMOSWindowWorldMorph>>#initialize",				"GeneralScrollBarMorph>>#initialize",				"GeneralScrollPaneMorph>>#initialize",				"GlobalIdentifier>>#initialize",				"GlobalIdentifier class>>#initializeUniqueInstance",				"GlobalIdentifierTest>>#setUp",				"GoferOperation>>#initializeOn:",				"GoferReinitialize>>#execute:",				"GoferWorking>>#initialize",				"GradientPaint>>#initialize",				"GroupWindowMorph>>#initialize",				"GroupboxMorph>>#initialize",				"GrowlMorph>>#initialize",				"HDTestReport>>#initialize",				"HEExtendedInstaller>>#initialize",				"HSVAColorSelectorMorph>>#initialize",				"HSVColorSelectorMorph>>#initialize",				"HaloMorph>>#initialize",				"HandMorph>>#initialize",				"HandMorph>>#releaseCachedState",				"HandleMorph>>#initialize",				"HelpBrowser>>#initialize",				"HelpBuilder>>#initialize",				"HelpTopic>>#initialize",				"HiBranchMapping>>#initializeWith:",				"HiColumnController>>#initialize",				"HiFastTableExample>>#initialize",				"HiLink>>#initializeWithOrigin:target:intermediatePoints:",				"HiNode>>#initializeWithValue:rulerPoint:",				"HiRuler>>#initializeWithValues:",				"HiRulerBuilder>>#initialize",				"HiSimpleRenderer>>#initialize",				"HiUniformColorStrategy>>#initialize",				"IRBytecodeGenerator>>#initialize",				"IRBytecodeGenerator class>>#newWithEncoderClass:",				"IRClosureStackCount>>#initialize",				"IRFix>>#initialize",				"IRReconstructor>>#initialize",				"IRTranslator class>>#context:trailer:",				"IceAnnouncer>>#initialize",				"IceBasicProject>>#initialize",				"IceBasicProject class>>#onProperties:commitish:",				"IceBasicProject class>>#onRepository:withSourceDirectory:",				"IceBasicProject class>>#onRepository:",				"IceCherrypicker>>#initialize",				"IceCredentialStore>>#initialize",				"IceCritiquesVisitor>>#initialize",				"IceExternalJob>>#initialize",				"IceGitCheckoutProgress>>#initialize",				"IceGitHubAPI>>#initialize",				"IceGitHubCreatePullRequestModel>>#initializeRepository:credentials:headRemote:",				"IceGitHubNewBranchFromIssuePanel>>#initialize",				"IceGitHubPullRequest>>#initializeWithJSON:",				"IceGitHubPullRequest>>#initialize",				"IceGitHubRemoveBranchesAction>>#initialize",				"IceGitHubRemoveBranchesModel>>#initialize",				"IceGitHubSelectItem>>#initializeList:item:",				"IceGitHubTipPullRequestBrowser class>>#on:pullRequest:",				"IceGitIndex>>#initialize",				"IceGitTransferProgress>>#initialize",				"IceLibgitTreeBuilder>>#initialize",				"IceLog>>#initializeRepository:",				"IceMCVersionInfo>>#initialize",				"IceMetacelloLoadSession>>#initialize",				"IceMetacelloRepositoryType>>#initializeLocation:",				"IceNode>>#initialize",				"IceNodeQuery>>#initialize",				"IcePackage>>#initialize",				"IcePackageDefinition>>#initialize",				"IcePharoPlugin class>>#addProjectNamed:commit:baselines:",				"IcePluginManager>>#initializeRepository:",				"IcePushTransferProgress>>#initialize",				"IceRemoteDesynchronized>>#initialize",				"IceRepository>>#initialize",				"IceRepositoryCommand>>#initialize",				"IceRepositoryCreator>>#initialize",				"IceRootDefinition>>#initialize",				"IceSortingStrategy>>#initialize",				"IceTipAbstractCredentialsModel>>#initialize",				"IceTipBrowser>>#initialize",				"IceTipCache>>#initialize",				"IceTipCachedModel>>#initializeObject:",				"IceTipCheckoutModel>>#initialize",				"IceTipCommitBrowser>>#initialize",				"IceTipCommitInfoPresenter>>#initialize",				"IceTipCredentialsStoreBrowser>>#initialize",				"IceTipDiffPanel>>#initialize",				"IceTipDiffSelectingPanel>>#initialize",				"IceTipEditProjectDialog>>#initialize",				"IceTipEntityModel>>#initializeEntity:",				"IceTipMergeSelectingPanel>>#initialize",				"IceTipMergeType class>>#uniqueInstance",				"IceTipReadOnlyFormBuilder>>#initialize",				"IceTipRepositoriesBrowser class>>#newOnRepositoryProvider:",				"IceTipSpCommand>>#initialize",				"IceTipWorkingCopyModel>>#initializeRepositoryModel:",				"IceUndefinedRemote>>#initialize",				"IceUnknownCommit>>#initialize",				"IceWorkingCopy>>#initialize",				"IceWorkingCopy class>>#repository:",				"IceWorkingCopy class>>#fromWorkingCopy:",				"IceWorkingCopyPatcherVisitor>>#initialize",				"IconListPresenter>>#initialize",				"IconStyler>>#initialize",				"IconicButtonMorph>>#initialize",				"IconicListItemMorph>>#initialize",				"IdentifierChooserMorph>>#initialize",				"ImageCleaner>>#cleanUpMethods",				"ImageFillStyle>>#initialize",				"ImageMorph>>#initialize",				"ImagePresenter>>#initialize",				"ImagePreviewMorph>>#initialize",				"ImmediateLayout>>#initialize",				"IncrementalSliderMorph>>#initialize",				"IndentingListItemMorph>>#initialize",				"Job>>#initialize",				"JobProgressBarMorph>>#initialize",				"JobProgressMorph>>#initializeJob:",				"JobProgressMorph>>#initialize",				"JoinSection>>#initialize",				"JoinSide>>#initialize",				"KMAltModifier>>#initialize",				"KMCatcherMorph>>#initialize",				"KMCategory>>#initialize",				"KMCommandModifier>>#initialize",				"KMComposedModifier>>#initialize",				"KMCtrlModifier>>#initialize",				"KMMetaModifier>>#initialize",				"KMNoModifier>>#initialize",				"KMShiftModifier>>#initialize",				"KeyboardEvent>>#initialize",				"LGitAbstractError>>#initialize",				"LGitId class>>#fromByteArray:",				"LGitPathSpec>>#initializeWithAll:",				"LGitReadStream>>#initialize",				"LGitRepository class>>#on:",				"LGitRepositoryObject class>>#of:",				"LGitStructWithDefaults>>#initialize",				"LRUCache>>#initialize",				"LabelMorph>>#initialize",				"LabelPresenter>>#initialize",				"LayoutProperties>>#initialize",				"LazyListMorph>>#initialize",				"LazyMorphListMorph>>#initialize",				"LazyMorphTreeNodeMorph>>#initialize",				"LessonView>>#initialize",				"ListDialogWindow>>#initialize",				"ListPresenter>>#initialize",				"LocalVariable>>#initialize",				"LogicalFontManager>>#initialize",				"LogicalFontManager class>>#unload",				"MCAncestry>>#initialize",				"MCCacheRepository>>#initialize",				"MCConfiguration>>#initialize",				"MCDataStream class>>#cleanUp",				"MCDefinitionIndex>>#initialize",				"MCDependencySorter>>#initialize",				"MCDictionaryRepository>>#initialize",				"MCDirectoryRepository>>#initialize",				"MCFileInTest>>#tearDown",				"MCFileRepositoryInspector>>#initialize",				"MCGitRemoteRepository>>#initialize",				"MCLazyVersionInfo>>#initialize",				"MCMczWriter>>#initialize",				"MCMethodDefinition>>#postloadOver:",				"MCMethodDefinition>>#isInitializer",				"MCPackageCache>>#initialize",				"MCPackageLoader>>#initialize",				"MCPackageManager>>#initializeWithPackage:",				"MCPackageManager>>#initialize",				"MCPackageTest>>#tearDown",				"MCPatchOperation>>#initialize",				"MCRepositoryGroup>>#initialize",				"MCServerRegistry>>#initialize",				"MCThreeWayMerger>>#initialize",				"MCVersionLoader>>#initialize",				"MCVersionMerger>>#initialize",				"MCVersionSaved>>#initializeWithVersion:repository:",				"MCVersionSorter>>#initialize",				"MCWorkingCopy>>#initialize",				"MCWorkingCopyBrowser>>#initialize",				"MD5>>#hashStream:",				"MWHandlerCounting>>#initialize",				"MWHandlerMemoing>>#initialize",				"MWHandlerObjectCentric>>#initialize",				"MWHandlerProfiling>>#initialize",				"MWHandlerReceiverArgumentsCopying>>#initialize",				"MWHandlerSuspendPlugging>>#initialize",				"MWHandlerToggling>>#initialize",				"MWSession>>#initialize",				"MailMessage>>#initialize",				"MalCircuitSpanningEdges>>#initialize",				"MalCseEdge>>#initialize",				"MalCyclesCoverage>>#initialize",				"MalDijkstraEdge>>#initialize",				"MalDisjointSetsNextNode>>#initialize",				"MalDominanceNode>>#initialize",				"MalGraphReducer>>#initialize",				"MalHalNode>>#initialize",				"MalHits>>#initialize",				"MalKruskal>>#initialize",				"MalLongestPath>>#initialize",				"MalNodeWithNext>>#initialize",				"MalNodeWithPreviousAndNext>>#initialize",				"MalSccEdgeDecomposition>>#initialize",				"MalSccExtractor>>#initialize",				"MalTarjan>>#initialize",				"MalTarjanNode>>#initialize",				"MalTopologicalSorting>>#initialize",				"ManifestASTCore class>>#ruleLongMethodsRuleV1FalsePositive",				"ManifestOpalCompilerCore class>>#ruleBadMessageRuleV1FalsePositive",				"ManifestSpec2Core class>>#ruleLongMethodsRuleV1FalsePositive",				"ManifestSpecCore class>>#ruleLongMethodsRuleV1FalsePositive",				"Margin>>#initialize",				"MarginBorderStyle>>#initialize",				"MemoryFileSystemDirectory>>#initialize",				"MemoryFileSystemEntry>>#initialize",				"MemoryFileSystemFile>>#initialize",				"MemoryLogger>>#initialize",				"MenuGroupPresenter>>#initialize",				"MenuItemMorph>>#initialize",				"MenuItemPresenter>>#initialize",				"MenuLineMorph>>#initialize",				"MenuMorph>>#initialize",				"MenuPresenter>>#initialize",				"MenuRegistration>>#initialize",				"MenuTitleMorph>>#initialize",				"MenubarMorph>>#initialize",				"MenubarSeparatorMorph>>#initialize",				"MergeDiffMorph>>#initialize",				"MergeJoinSection>>#initialize",				"MeshGradientPaint>>#initialize",				"MessageBrowser>>#initialize",				"MessageDialogWindow>>#initialize",				"MessageList>>#initialize",				"MessageNotUnderstood>>#initialize",				"MetacelloMCPartiallyLoadedStatus>>#initialize",				"MetacelloMCPartiallyLoadedStatus class>>#new",				"Metaclass>>#fileOutOn:initializing:",				"Metaclass>>#fileOutInitializerOn:",				"MethodToolbar>>#initialize",				"MethodsTemperaturesPresenter>>#initialize",				"MicAbstractAnnotatedBlock>>#initialize",				"MicAbstractBlock>>#initialize",				"MicAbstractMicrodownTextualBuilder>>#initialize",				"MicAnnotationBlock>>#initialize",				"MicCodeBlock>>#initialize",				"MicElement>>#initialize",				"MicInlineElement>>#initialize",				"MicInlineParser>>#initialize",				"MicMicrodownSnippetFactory>>#initialize",				"MicMicrodownTextualBuilder>>#initialize",				"MicMinimalConfiguration>>#initialize",				"MicOutputStream>>#initialize",				"MicPathResolver>>#initialize",				"MicRichTextCanvas>>#initialize",				"MicRichTextComposer>>#initialize",				"MicStartStopMarkupBlock>>#initialize",				"MicTableBlock>>#initialize",				"MicroDownParser>>#initialize",				"Microdown>>#initialize",				"MicrodownBackSlasher>>#initialize",				"MillerScrollPane>>#initialize",				"MockObject>>#initialize",				"MockSocketStream>>#initialize",				"MockSocketStream class>>#on:",				"MockSourceEditor>>#initialize",				"MockWithComplexSlot>>#initialize",				"Monitor>>#initialize",				"Morph>>#initialize",				"MorphHandlingMiddleButton>>#initialize",				"MorphTreeListManager>>#initialize",				"MorphTreeMorph>>#initialize",				"MorphTreeNodeMorph>>#initialize",				"MorphTreeTransformMorph>>#initialize",				"MorphicDialogWindowAdapter>>#buildWidget",				"MorphicTreeAdapter>>#initialize",				"MorphicWindowAdapter>>#initialize",				"MultistateButtonMorph>>#initialize",				"Mutex>>#initialize",				"NECDetailMorph>>#initialize",				"NECMenuMorph>>#initialize",				"NSLinearScale>>#initialize",				"NSLnScale>>#initialize",				"NSLogScale>>#initialize",				"NSOrdinalScale>>#initialize",				"NSPerlinNoise>>#initialize",				"NSPerlinNoise2>>#initialize",				"NSPerlinNoise3>>#initialize",				"NSPowScale>>#initialize",				"NSSymLogScale>>#initialize",				"NewHandleMorph>>#initialize",				"NewValueHolder>>#initialize",				"NonInteractiveTranscript>>#initialize",				"NullStream class>>#new",				"OCOptimizedBlockScope>>#initialize",				"OCScopesCollector>>#initialize",				"OSEnvironment>>#initializeWith:",				"OSKeyboardEvent>>#initialize",				"OSMouseEvent>>#initialize",				"OSNullBackendWindow>>#initialize",				"OSSDL2AthensRenderer>>#initialize",				"OSSDL2AthensRenderer>>#initializeWindowHandle:",				"OSSDL2BackendWindow>>#initialize",				"OSSDL2FormRenderer>>#initialize",				"OSTextInputEvent>>#initialize",				"OSTouchGestureDetector class>>#reinitializeAllSubclasses",				"OSTouchGestureNeedingThresholdDetector>>#initialize",				"OSTouchGestureNeedingThresholdDetector class>>#initialize",				"OSTouchHoldDetector>>#initialize",				"OSTouchHoldDetector class>>#initialize",				"OSTouchOneFingerDoubleTapDetector>>#initialize",				"OSTouchOneFingerDoubleTapDetector class>>#initialize",				"OSTouchPinchDetector>>#initialize",				"OSTouchPinchDetector class>>#initialize",				"OSTouchRotationDetector>>#initialize",				"OSTouchScrollDetector>>#initialize",				"OSTouchScrollDetector class>>#initialize",				"OSTouchStateGestureDetector>>#initialize",				"OSTouchSwipeDetector>>#initialize",				"OSTouchSwipeDetector class>>#initialize",				"OSWindow>>#initWithAttributes:eventHandler:",				"OSWindowAthensRenderer>>#initialize",				"OSWindowJoystickExample>>#initialize",				"OSWindowMorphicEventHandler class>>#initialize",				"OSWindowRenderThread>>#initialize",				"OSWindowWorldMorph>>#initialize",				"OSWorldRenderer>>#initialize",				"ObjectStringConverter>>#initialize",				"ObjectWithSettableHash>>#initialize",				"ObservablePoint>>#initialize",				"ObservableValueHolder>>#initialize",				"OkCancelToolbar>>#initialize",				"OkToolbar>>#initialize",				"OmBlock>>#initializeWithStore:startPosition:endPosition:firstEntryReference:",				"OmBlockFileStore>>#refresh",				"OmBlockFileStore>>#initialize",				"OmDeferrer>>#initializeWithSelector:object:duration:",				"OmEntry>>#initializeWithContent:",				"OmEntryReader>>#initializeWithStore:",				"OmEntryWriter>>#initializeWithStore:",				"OmFileStore>>#refresh",				"OmFileStore>>#initializeWithGlobalName:fileReference:",				"OmFileStore>>#initialize",				"OmFuelEntryReader>>#initialize",				"OmFuelEntryWriter>>#initialize",				"OmMemoryStore>>#initializeWithGlobalName:",				"OmReference>>#initializeWithLocalName:globalName:",				"OmSTONEntryWriter>>#initialize",				"OmSessionStore>>#initializeWithBaseLocator:",				"OmStoreFactory>>#initialize",				"OupsSingleDebuggerSelector>>#initialize",				"OverflowRowMorph>>#initialize",				"PSMCChangesGrouper>>#initialize",				"PSMCMergeMorph>>#initialize",				"PanelMorph>>#initialize",				"PanelMorphWithSplitters>>#initialize",				"Paragraph>>#initialize",				"ParametrizedTestMatrix>>#initialize",				"PasteUpMorph>>#initialize",				"PathShape>>#initialize",				"PharoBootstrapInitialization class>>#initializeCommandLineHandlerAndErrorHandling",				"PharoBootstrapInitialization class>>#initializeFileSystem",				"PharoCommonTools>>#initialize",				"PharoDarkTheme>>#initialize",				"PharoLightTheme>>#initialize",				"PickListPresenter>>#initialize",				"PlainGroupboxMorph>>#initialize",				"PluggableButtonMorph>>#initialize",				"PluggableButtonMorphExample>>#initialize",				"PluggableDialogWindow>>#initialize",				"PluggableListMorph>>#initialize",				"PluggableSliderMorph>>#initialize",				"PluggableToggleButtonMorph>>#initialize",				"PolygonMorph>>#initialize",				"PolygonMorph>>#vertices:color:borderWidth:borderColor:",				"PopupChoiceDialogWindow>>#initialize",				"PragmaCollector>>#initialize",				"PragmaMenuAndShortcutRegistration>>#initialize",				"PragmaMenuAndShortcutRegistrationItem>>#initialize",				"PragmaMenuBuilder>>#initialize",				"PreDebugAction>>#initialize",				"PreDebugDoesNotUnderstandAction>>#initialize",				"PreDebugResumeDebugAction>>#initialize",				"Process>>#initialize",				"ProcessBrowser>>#initialize",				"ProcessMonitorTestService>>#initialize",				"ProgressBarMorph>>#initialize",				"ProportionalSplitterMorph>>#initialize",				"Protocol>>#initialize",				"ProtocolOrganizer>>#initialize",				"QuoRemComplementary class>>#a:b:",				"QuoRemMinimal>>#initialize",				"QuoRemStandard>>#initialize",				"QuotedPrintableMimeConverter>>#initialize",				"RBAbstractClass>>#initialize",				"RBAbstractInstanceVariableParametrizedTest>>#testAbstractInstanceVariable",				"RBArrayNode>>#initialize",				"RBBasicDummyLintRuleTest>>#initialize",				"RBBasicDummyLintRuleTest class>>#superMessages",				"RBBasicLintRule>>#initialize",				"RBBasicLintRuleTestData>>#initialize",				"RBBasicLintRuleTestData class>>#superMessages",				"RBBlockNode>>#initialize",				"RBBlockReplaceRule>>#initialize",				"RBBrowserEnvironmentWrapper class>>#onEnvironment:",				"RBCategoryEnvironment>>#initialize",				"RBChildrenToSiblingsParametrizedTest>>#testModelChildrenToSibling",				"RBClass>>#initialize",				"RBClassEnvironment>>#initialize",				"RBClassRegexRefactoring>>#initialize",				"RBClassTransformation>>#initialize",				"RBCompositeRefactoryChange>>#initialize",				"RBCompositeTransformation>>#initialize",				"RBDeprecateClassRefactoring>>#initialize",				"RBEnglobingErrorNode>>#initialize",				"RBEntity>>#initialize",				"RBFindAndReplaceRefactoring>>#initialize",				"RBLiteralNode>>#initialize",				"RBMatchVisitor>>#initialize",				"RBMethodArgumentsSelector>>#initializeWith:and:in:",				"RBMethodNameEditor>>#initializeOn:",				"RBMethodNameEditor>>#initialize",				"RBMultiEnvironment>>#initialize",				"RBNamespace>>#initialize",				"RBNamespace class>>#onEnvironment:",				"RBPackageEnvironment>>#initialize",				"RBParseTreeLintRule>>#initialize",				"RBParseTreeSearcher>>#initialize",				"RBParser>>#scanner:",				"RBPragmaEnvironment>>#initialize",				"RBPragmaNode>>#initialize",				"RBReadBeforeWrittenTester>>#initialize",				"RBRefactoryChange>>#initialize",				"RBRefactoryChangeManager>>#initialize",				"RBRefactoryChangeManager class>>#instance",				"RBRefactoryPackageChange>>#initialize",				"RBRegexRefactoring>>#initialize",				"RBRemoveClassChange>>#initialize",				"RBRemoveClassChange class>>#removeClassName:",				"RBRemoveDirectAccessToVariableTransformationTest>>#testClassVariable",				"RBRemoveDirectAccessToVariableTransformationTest>>#testRefactoring",				"RBRenameInstanceVariableParametrizedTest>>#testRenameInstVar",				"RBRenameInstanceVariableRefactoring>>#initialize",				"RBReplaceRule>>#initialize",				"RBReturnNode>>#initialize",				"RBSearchTest>>#buildMethodTitleSearch",				"RBSelectorEnvironment>>#initialize",				"RBSequenceNode>>#initialize",				"RBSimpleFormatter>>#initialize",				"RBSlotInitializationNode>>#initialize",				"RBSplitCascadeParametrizedTest>>#methodWithCascades",				"RBTransformation>>#initialize",				"RBTransformationRule>>#initialize",				"RBTransformationsTest>>#testRenameVariableTransform",				"RBVariableEnvironment>>#initialize",				"RBVariableNode>>#initialize",				"RFMetaContext class>>#current",				"RGAbstractContainer>>#initialize",				"RGBehavior>>#initialize",				"RGBehavior class>>#named:parent:behaviorStrategy:",				"RGBehavior class>>#named:behaviorStrategy:",				"RGBehavior class>>#parent:behaviorStrategy:",				"RGBehavior class>>#unnamedWithBehaviorStrategy:",				"RGBehaviorDefinition>>#initialize",				"RGChunkImporter>>#initialize",				"RGClassDefinition>>#initialize",				"RGClassDescriptionDefinition>>#initialize",				"RGClassDescriptionStrategy>>#initialize",				"RGClassInstanceVariableDefinition>>#initialize",				"RGClassStrategy>>#initialize",				"RGComment>>#initialize",				"RGContainer>>#initialize",				"RGEnvironment>>#initialize",				"RGEnvironmentBackend>>#initialize",				"RGMetaclassStrategy>>#initialize",				"RGMetaclassTraitV2Strategy>>#initialize",				"RGMethod>>#initialize",				"RGNamespace>>#initialize",				"RGObject>>#initialize",				"RGObject class>>#parent:",				"RGObject class>>#named:parent:",				"RGOrganization>>#initialize",				"RGPackage>>#initialize",				"RGPackageDefinition>>#initialize",				"RGPointerLayout>>#initialize",				"RGTraitAlias>>#initialize",				"RGTraitComposition>>#initialize",				"RGTraitDescriptionStrategy>>#initialize",				"RGTraitExclusion>>#initialize",				"RGTraitStrategy>>#initialize",				"RGTraitTransformation>>#initialize",				"RGTraitV2DescriptionStrategy>>#initialize",				"RGTraitV2Strategy>>#initialize",				"RGUnknownSlot>>#initialize",				"RPackage>>#initialize",				"RPackageOrganizer>>#initialize",				"RPackageOrganizer class>>#resetDefault",				"RPackageOrganizerTest>>#setUp",				"RPackageSet>>#initialize:",				"RPackageTag>>#initializePackage:name:",				"RPackageTag>>#initialize",				"RPackageTestCase>>#setupOrganizer",				"RPackageWithDoTest>>#testWithDoIsCorrectlyReinstallingDefault",				"RPackageWithDoTest>>#testWithDoIsCorrectlyReinstallingDefaultEvenIfHalt",				"RSAbstractAnimation>>#initialize",				"RSAbstractBarPlot>>#initialize",				"RSAbstractCanvasMonitorInteraction>>#initialize",				"RSAbstractCircleLayout>>#initialize",				"RSAbstractCompactTreeLayout>>#initialize",				"RSAbstractConnection>>#initialize",				"RSAbstractContextInteraction>>#initialize",				"RSAbstractDualLine>>#initialize",				"RSAbstractFlowLayout>>#initialize",				"RSAbstractGraphLayout>>#initialize",				"RSAbstractGridLayout>>#initialize",				"RSAbstractHorizontalTreeLayout>>#initialize",				"RSAbstractLabelDecoration>>#initialize",				"RSAbstractLine>>#initialize",				"RSAbstractLineLayout>>#initialize",				"RSAbstractMarkerDecoration>>#initialize",				"RSAbstractPlot>>#initialize",				"RSAbstractRegularTreeLayout>>#initialize",				"RSAbstractScaleInteraction>>#initialize",				"RSAbstractSunburstLayout>>#initialize",				"RSAbstractTreeBuilder>>#initialize",				"RSAbstractVerticalTreeLayout>>#initialize",				"RSAbstractWrapStrategy>>#initialize",				"RSAlgoritmia>>#initialize",				"RSAlpharo>>#initialize",				"RSArrowedLine>>#initialize",				"RSAthensMorph>>#initialize",				"RSAttachPoint>>#initialize",				"RSBackInterpolator>>#initialize",				"RSBasicUMLClassRenderer>>#initialize",				"RSBezier>>#initialize",				"RSBimetricLine>>#initialize",				"RSBorder>>#initialize",				"RSBorderAttachPoint>>#initialize",				"RSBounceInterpolator>>#initialize",				"RSBoundingShape>>#initialize",				"RSBoxPlot>>#initialize",				"RSCamera>>#initialize",				"RSCanvas>>#initialize",				"RSCanvasController>>#initialize",				"RSCat>>#initialize",				"RSCellLayout>>#initialize",				"RSChannel>>#initialize",				"RSChart>>#initialize",				"RSChartPopupDecoration>>#initialize",				"RSChartTitleDecoration>>#initialize",				"RSClusterLayout>>#initialize",				"RSClusteringLayout>>#initialize",				"RSColorPerlinGenerator>>#initialize",				"RSColoredTreePalette>>#initialize",				"RSComposite>>#initialize",				"RSContextInteraction>>#initialize",				"RSControlConfiguration>>#initialize",				"RSCornerRadius>>#initialize",				"RSDarkUMLClassRenderer>>#initialize",				"RSDelaunayExample>>#initialize",				"RSDraggableCanvasInteraction>>#initialize",				"RSEasingInterpolator>>#initialize",				"RSElasticBoxInteraction>>#initialize",				"RSElasticInterpolator>>#initialize",				"RSEvent>>#initialize",				"RSExpandingBoxes>>#initialize",				"RSFlowCanvas>>#initialize",				"RSFlowLayout>>#initialize",				"RSForceBasedLayout>>#initialize",				"RSForceBuilder>>#initialize",				"RSForceLayoutInSpacesBuilder>>#initialize",				"RSForceLayoutSteppingInteraction>>#initialize",				"RSGaussianJitterVanDerPloegTreeLayout>>#initialize",				"RSGraphCanvasMonitorInteraction>>#initialize",				"RSHierarchyPackerInteraction>>#initialize",				"RSHighlightable>>#initialize",				"RSHistogramPlot>>#initialize",				"RSHorizontalFlowLayout>>#initialize",				"RSHorizontalGaussianJitterVanDerPloegTreeLayout>>#initialize",				"RSHorizontalLineLayout>>#initialize",				"RSInspectableInteraction>>#initialize",				"RSInterference>>#initialize",				"RSKeyNavigationCanvasInteraction>>#initialize",				"RSKeyboardEvent>>#initialize",				"RSLabel>>#initialize",				"RSLabelGenerator>>#initialize",				"RSLabeled>>#initialize",				"RSLayout>>#initialize",				"RSLayoutBuilder>>#initialize",				"RSLegend>>#initialize",				"RSLineBuilder>>#initialize",				"RSLineDrivenLayout class>>#withEdges:",				"RSLissajous>>#initialize",				"RSLocation>>#initialize",				"RSMarker>>#initialize",				"RSMockShape>>#initialize",				"RSMondrian>>#initialize",				"RSMorphicPopupInteraction>>#initialize",				"RSMouseDragging>>#initialize",				"RSMultilineLabelBuilder>>#initialize",				"RSNiceLabel>>#initialize",				"RSNiceStepSizeGenerator>>#initialize",				"RSNormalizer>>#initialize",				"RSOffsetAttachPoint>>#initialize",				"RSParticleD>>#initialize",				"RSPie>>#initialize",				"RSPieLabeledInteraction>>#initialize",				"RSPieSlice>>#initialize",				"RSPieTitleInteraction>>#initialize",				"RSPolyInterpolator>>#initialize",				"RSPolygon>>#initialize",				"RSPopup>>#initialize",				"RSPopupDecoration>>#initialize",				"RSPunchCardBuilder>>#initialize",				"RSQuadTreeF>>#initialize",				"RSRectangleForceLayout>>#initialize",				"RSRectanglePackLayout>>#initialize",				"RSResizeParentWhenChildMoves>>#initialize",				"RSRoassalExporter>>#initialize",				"RSRotated>>#initialize",				"RSSVGExporter>>#initialize",				"RSSVGPathLine>>#initialize",				"RSSankey>>#initialize",				"RSScrollBarsCanvasInteraction>>#initialize",				"RSSearchInCanvasInteraction>>#initialize",				"RSSelectionPresentationInteraction>>#initialize",				"RSShape>>#initialize",				"RSShapeBuilder>>#initialize",				"RSShowProgressLabelDecorator>>#initialize",				"RSSimpleChartPopupBuilder>>#initialize",				"RSSimplePopupBuilder>>#initialize",				"RSStrokeStyle>>#initialize",				"RSSunburstBuilder>>#initialize",				"RSSunburstConstantWidthLayout>>#initialize",				"RSSunburstExtentLayout>>#initialize",				"RSSunburstFadeInteraction>>#initialize",				"RSTickConfiguration>>#initialize",				"RSTimeLinePlot>>#initialize",				"RSTransitionAnimation>>#initialize",				"RSUMLAbstractModelDescriptor>>#initialize",				"RSUMLClassBuilder>>#initialize",				"RSUMLPackageBuilder>>#initialize",				"RSUserInputEvent>>#initialize",				"RSVariableTimer>>#initialize",				"RSVerticalLineLayout>>#initialize",				"RSXLabelDecoration>>#initialize",				"RSXmasBranch>>#initialize",				"RSXmasFrontier>>#initialize",				"RSXmasTree>>#initialize",				"RSYLabelDecoration>>#initialize",				"RadioButtonGroup>>#initialize",				"RadioButtonGroupPresenter>>#initialize",				"RadioButtonModelExample>>#initialize",				"RadioButtonPresenter>>#initialize",				"RandomBernoulli>>#initialize",				"RandomBinomial>>#initialize",				"RandomExponential>>#initialize",				"RandomGaussian>>#initialize",				"RbScriptingSetBeforeModel>>#initialize",				"ReAllAnyNoneSatisfyRule>>#initialize",				"ReAnySatisfyRule>>#initialize",				"ReAsClassRule>>#initialize",				"ReAsOrderedCollectionNotNeededRule>>#initialize",				"ReAssertEqualSignIntoAssertEqualsRule>>#initialize",				"ReAssignmentInBlockRule>>#initialize",				"ReAssignmentInIfTrueRule>>#initialize",				"ReAssignmentWithoutEffectRule>>#initialize",				"ReAtIfAbsentRule>>#initialize",				"ReBetweenAndRule>>#initialize",				"ReBooleanPrecedenceRule>>#initialize",				"ReCascadedNextPutAllsRule>>#initialize",				"ReCodeCruftLeftInMethodsRule>>#initialize",				"ReCollectionAtCollectionSizeRule>>#initialize",				"ReCollectionMessagesToExternalObjectRule>>#initialize",				"ReCollectionProtocolRule>>#initialize",				"ReDeprecateWithFirstCharacterDownshiftedRule>>#initialize",				"ReDetectContainsRule>>#initialize",				"ReDetectIfNoneRule>>#initialize",				"ReDoNotSendSuperInitializeInClassSideRule>>#afterCheck:mappings:",				"ReDoNotSendSuperInitializeInClassSideRule>>#initialize",				"ReEmptyExceptionHandlerRule>>#initialize",				"ReEndTrueFalseRule>>#initialize",				"ReEqualNilRule>>#initialize",				"ReEquivalentSuperclassMethodsRule>>#ignoredSelectors",				"ReFileBlocksRule>>#initialize",				"ReFloatEqualityComparisonRule>>#initialize",				"ReGuardClauseRule>>#initialize",				"ReGuardingClauseRule>>#initialize",				"ReIconHardcodedMessageRule>>#initialize",				"ReIfNotNilDoRule>>#initialize",				"ReInvocationSequenceRule>>#initialize",				"ReInvocationSequenceRule class>>#noteCompilationOf:meta:",				"ReIsNilAndConditionalRule>>#initialize",				"ReJustSendsSuperRule>>#initialize",				"ReKeysDoRule>>#initialize",				"ReMinMaxRule>>#initialize",				"ReMissingMethodCritique>>#initialize",				"ReMissingSuperSendsRule>>#methodsRequiringSuper",				"ReModifiesCollectionRule>>#initialize",				"ReNoNilAssignationInInitializeRule>>#check:forCritiquesDo:",				"ReNodeMatchRule>>#initialize",				"ReNodeRewriteRule>>#initialize",				"ReNotEliminationRule>>#initialize",				"RePatternCodeRule class>>#noteCompilationOf:meta:",				"RePlatformDependentUserInteractionRule>>#initialize",				"ReProperty>>#initializeSourceAnchor:",				"ReRemoveAssignmentWithoutEffectRule>>#initialize",				"ReReturnInEnsureRule>>#initialize",				"ReReturnsIfTrueRule>>#initialize",				"ReSearchingLiteralRule>>#initialize",				"ReShouldTransformedIntoAssertRule>>#initialize",				"ReShouldntRaiseErrorRule>>#initialize",				"ReSizeCheckRule>>#initialize",				"ReSmalllintChecker>>#initialize",				"ReSmalltalkGlobalsRule>>#initialize",				"ReStringConcatenationRule>>#initialize",				"ReSuperSendsNewRule>>#initialize",				"ReSuperSendsRule>>#initialize",				"ReTestCaseShouldNotUseInitializeRule>>#basicCheck:",				"ReTestCaseShouldNotUseInitializeRuleTest>>#tearDown",				"ReThemeAPIUpdateRule>>#initialize",				"ReToDoCollectRule>>#initialize",				"ReToDoRule>>#initialize",				"ReToDoWithIncrementRule>>#initialize",				"ReTrueFalseDuplicationRule>>#initialize",				"ReUnconditionalRecursionRule>>#initialize",				"ReUnoptimizedAndOrRule>>#initialize",				"ReUnoptimizedToDoRule>>#initialize",				"ReUnwindBlocksRule>>#initialize",				"ReUseIsEmptyNotSizeRule>>#initialize",				"ReWhileTrueRule>>#initialize",				"RecursionStopper>>#initialize",				"ReflectivityCodeMorph>>#initialize",				"ReflectivityExamples>>#exampleLazyInit",				"ReflectivitySourceCodeAgroupation>>#initialize",				"RegisterableTranslatorMock>>#initialize",				"ResumeDebugAction>>#initialize",				"RewriteRuleChangesBrowser>>#initialize",				"RingChunkImporter>>#initialize",				"RoundedBorderStyle>>#initialize",				"RubAbstractTextArea>>#initialize",				"RubAnnotationDisplayer>>#initialize",				"RubCharacterScanner>>#initialize",				"RubDropListButtonRuler>>#initialize",				"RubEditingMode>>#initialize",				"RubFindReplaceService>>#initialize",				"RubFloatingEditorBuilder>>#initialize",				"RubHoverHighlightSegmentMorph>>#initialize",				"RubParagraph>>#initialize",				"RubPluggableTextMorph>>#initialize",				"RubPrimarySelectionMorph>>#initialize",				"RubScrolledTextExtra>>#initialize",				"RubScrolledTextMorph>>#initialize",				"RubSegmentMorph>>#initialize",				"RubSegmentMorph>>#vertices:color:borderWidth:borderColor:",				"RubSmalltalkEditor>>#initialize",				"RubTextFieldMorph>>#initialize",				"RubTextScrollPane>>#initialize",				"RubTextSegmentIconDisplayer>>#initialize",				"RubTextSegmentMorph>>#initialize",				"RubWorkspaceBarRuler>>#initialize",				"RubWorkspaceExample>>#initialize",				"RxmBranch>>#initialize",				"RxmLookahaed>>#initialize",				"RxmSubstring>>#initialize",				"RxsLookaround>>#initializePiece:",				"SDL2 class>>#createRGBSurfaceForCairoWidth:height:",				"SDL2AthensDrawingExample>>#initialize",				"SDL2TouchExample>>#initialize",				"SDL2TouchGestureExample>>#initialize",				"SDL2TouchGestureExample2>>#initialize",				"SDL_Event>>#initialize",				"SDL_Event class>>#initialize",				"SDL_Window>>#createRenderer:flags:",				"SQSurfaceDispatch>>#initialize",				"STONReader>>#initialize",				"STONStreamWriter>>#initialize",				"STONTestKnownObject>>#initialize",				"STONTestUser>>#initialize",				"STONWriter>>#initialize",				"SUnitTestsCounter>>#initialize",				"SVColorSelectorMorph>>#initialize",				"ScrollBarMorph>>#initialize",				"ScrollPane>>#initialize",				"SearchMorph>>#initialize",				"SearchableTree>>#initialize",				"SelectEntity>>#initialize",				"SelectPackageBrowser>>#initialize",				"SelectRuleBrowser>>#initialize",				"SelectionMorph>>#initialize",				"SelectionValueHolder>>#initialize",				"SerialPort>>#initialize",				"SessionCategory>>#initialize",				"SessionManager>>#initialize",				"SettingDeclaration>>#initialize",				"SettingDontTranslateDescriptionRule>>#initialize",				"SettingsStonWriter>>#initialize",				"ShAbstractClassChangeDetector>>#initialize",				"ShClassInstallerTest>>#testClassWithSlotHasInitializeMethodWithInitializeSlots",				"ShClassSlotChangeDetector>>#initialize",				"ShLayoutChangeDetector>>#initialize",				"ShLayoutDefinition>>#initialize",				"ShMetaclassChangeDetector>>#initialize",				"ShSharedPoolChangeDetector>>#initialize",				"ShSharedVariablesChangeDetector>>#initialize",				"ShSlotChangeDetector>>#initialize",				"ShSmalltalkGlobalsEnvironment>>#initialize",				"ShSuperclassChangedDetector>>#initialize",				"SharedQueue>>#initialize",				"SharedQueue class>>#new",				"SharedRandom>>#initialize",				"ShiftClassBuilder>>#initialize",				"ShiftClassInstaller>>#initialize",				"SignalLogger>>#initialize",				"SimpleBalloonMorph>>#initialize",				"SimpleBorderStyle>>#initialize",				"SimpleButtonMorph>>#initialize",				"SimpleHierarchicalListMorph>>#initialize",				"SimpleServiceEntry>>#initialize",				"SimpleSwitchMorph>>#initialize",				"SindarinDebugSession>>#initialize",				"SindarinDebugger>>#restart",				"SingleCodeCriticResultList>>#initialize",				"SliderMorph>>#initialize",				"SliderPresenter>>#initialize",				"Slot>>#ensureInitalizeMethodExists:",				"Slot>>#ensureSlotInitializationFor:",				"Slot>>#sendsInitializeSlots:",				"SlotClassVariableTest>>#testWantsInitializationAddsInitializeSlot",				"SlotClassVariableTest>>#testWantsInitializationSkipInitializeSlotIfAlreadyInHierarchy",				"SlotExampleMovie>>#initialize",				"SlotExamplePerson>>#initialize",				"SmallDictionary>>#removeAll",				"SmallDictionary>>#initialize",				"SmallDictionary class>>#new:",				"SmalllintManifestChecker>>#initialize",				"SocketStream>>#initialize",				"SocketStream class>>#on:",				"SoundTheme>>#initialize",				"Sp1RoassalPresenter>>#initialize",				"SpAbstractButtonPresenter>>#initialize",				"SpAbstractFormButtonPresenter>>#initialize",				"SpAbstractListPresenter>>#initialize",				"SpAbstractPresenter>>#initialize",				"SpAbstractPresenter class>>#owner:",				"SpAbstractSelectionMode>>#initialize",				"SpAbstractTextPresenter>>#initialize",				"SpAbstractTreePresenter>>#initialize",				"SpAbstractTreeSelectionMode>>#initialize",				"SpAbstractWidgetPresenter>>#initialize",				"SpActionBarPresenter>>#initialize",				"SpActionBarPresenterBuilder>>#initialize",				"SpAdapterBindings>>#initialize",				"SpApplicationBackend>>#initialize",				"SpAthensPresenter>>#initialize",				"SpBoxConstraints>>#initialize",				"SpBoxLayout>>#initialize",				"SpButtonBarPresenter>>#initialize",				"SpButtonPresenter>>#initialize",				"SpChangeSorterPresenter>>#initialize",				"SpClassStyle>>#initialize",				"SpCodePresenter>>#initialize",				"SpCollectionListModel>>#initialize",				"SpCommand>>#initialize",				"SpCommandGroup>>#initialize",				"SpCompositeIconProvider>>#initialize",				"SpCompositeOutputPort>>#initialize",				"SpCompositeTableColumn>>#initialize",				"SpConfirmDialog>>#initialize",				"SpDatePresenter>>#initialize",				"SpDemo class>>#on:",				"SpDemoFormModel>>#initialize",				"SpDemoFormPresenter>>#initialize",				"SpDemoTablePresenter>>#initialize",				"SpDialogWindow>>#initialize",				"SpDialogWindowPresenter>>#initialize",				"SpDiffPresenter>>#initialize",				"SpDropListItem>>#initialize",				"SpDropListPresenter>>#initialize",				"SpDualChangeSorterPresenter>>#initialize",				"SpDynamicSpecExample>>#initialize",				"SpDynamicWidgetChange>>#initialize",				"SpEditableListPresenter>>#initialize",				"SpEventHandler>>#initializePresenter:",				"SpEventHandler>>#initialize",				"SpExecutableLayout>>#initialize",				"SpFilteringSelectableListPresenter>>#initialize",				"SpFixedProgressBarState>>#initialize",				"SpGeneratorListModel>>#initialize",				"SpGridConstraints>>#initialize",				"SpGridLayout>>#initialize",				"SpGridLayoutBuilder>>#initialize",				"SpHeaderCellMorph>>#initialize",				"SpImagePresenter>>#initialize",				"SpIndeterminatedProgressBarMorph>>#initialize",				"SpInformDialog>>#initialize",				"SpInitializeWindowExample>>#initialize",				"SpKMCategoryBuilder>>#initialize",				"SpLabelPresenter>>#initialize",				"SpLayoutConstraints>>#initialize",				"SpLayoutDirection class>>#uniqueInstance",				"SpLayoutFrame>>#initialize",				"SpLayoutWidgetAlignment class>>#uniqueInstance",				"SpLinkPresenter>>#initialize",				"SpListPresenter>>#initialize",				"SpLocationIconProvider>>#initialize",				"SpMenuButtonPresenter>>#initialize",				"SpMenuGroupPresenter>>#initialize",				"SpMenuItemPresenter>>#initialize",				"SpMenuPresenter>>#initialize",				"SpMenuPresenterBuilder>>#initialize",				"SpMethodToolbarPresenter>>#initialize",				"SpMillerColumnPresenter>>#initialize",				"SpMillerLayout>>#initialize",				"SpMockMenu>>#initialize",				"SpMockMenuPresenter>>#initialize",				"SpModalWindowPresenter>>#initialize",				"SpMorphicBackendForTest>>#initialize",				"SpMorphicBaseTextAdapter>>#initialize",				"SpMorphicBoxLayout>>#initialize",				"SpMorphicBoxLayoutCalculator>>#initializeProperties:",				"SpMorphicBoxLayoutTest>>#initialize",				"SpMorphicCodeCompletionEngine>>#initialize",				"SpMorphicCodeTextStyler>>#initializeAttributeTable:",				"SpMorphicGridLayout>>#initialize",				"SpMorphicGridLayoutComputation>>#initializeLayout:",				"SpMorphicMillerAdapter>>#initialize",				"SpMorphicNotebookAdapter>>#initialize",				"SpMorphicPaginatorAdapter>>#initialize",				"SpMorphicPanedAdapter>>#initialize",				"SpMorphicPatchLineVisitor>>#initialize",				"SpMorphicStatusBarAdapter>>#initialize",				"SpMorphicToolbarMenuButtonMorph>>#initializeButton:menuButton:",				"SpMorphicToolbarMenuButtonMorph>>#initialize",				"SpMultipleSelectionMode>>#initialize",				"SpNotebookMorph>>#initialize",				"SpNotebookPage>>#initialize",				"SpNotebookPresenter>>#initialize",				"SpNumberInputFieldPresenter>>#initialize",				"SpObservablePoint>>#initialize",				"SpOverlayLayout>>#initialize",				"SpPaginatorEdgeGripMorph>>#initialize",				"SpPaginatorMorph>>#initialize",				"SpPaginatorPageMorph>>#initialize",				"SpPaginatorPresenter>>#initialize",				"SpPaginatorSelectionMorph>>#initialize",				"SpPanedConstraints>>#initialize",				"SpPanedLayout>>#initialize",				"SpPanedResizerMorph>>#initialize",				"SpPanedResizerMorph class>>#newHorizontal",				"SpPanedResizerMorph class>>#newVertical",				"SpPanelMorphWithSplitters>>#initialize",				"SpPatchPresenter>>#initialize",				"SpPopoverMorph>>#initialize",				"SpPopoverPosition class>>#uniqueInstance",				"SpPopoverPresenter>>#initialize",				"SpPresenter>>#initialize",				"SpPresenter class>>#newApplication:",				"SpPresenter class>>#owner:on:",				"SpPresenter class>>#newApplication:model:",				"SpPresenter class>>#newApplication:owner:",				"SpPresenter class>>#newApplication:owner:model:",				"SpPresenterSelectorPresenter>>#initialize",				"SpProgressBarPresenter>>#initialize",				"SpProgressDialog>>#initialize",				"SpProgressingProgressBarState>>#initialize",				"SpRadioButtonPresenter>>#initialize",				"SpRequestDialog>>#initialize",				"SpRoassal3InspectorPresenter>>#initialize",				"SpRoassalPresenter>>#initialize",				"SpRoassalPresenter class>>#on:withCanvas:",				"SpRubFindReplaceService>>#initialize",				"SpRubTextFieldMorph>>#initialize",				"SpRunCommandLineHandler>>#runApplication",				"SpScrollSyncExample>>#initialize",				"SpSelectDialog>>#initialize",				"SpSelectEntity>>#initialize",				"SpSingleSelectionMode>>#initialize",				"SpSliderPresenter>>#initialize",				"SpSpinnerMorph>>#initialize",				"SpStringTableColumn>>#initialize",				"SpTContextMenu>>#initialize",				"SpTSearchable>>#initialize",				"SpTabLayout>>#initialize",				"SpTableColumn>>#initialize",				"SpTablePresenter>>#initialize",				"SpTestApplicationWithLocale>>#initialize",				"SpTestLocalizedString>>#initialize",				"SpTextInputFieldPresenter>>#initialize",				"SpTextPresenter>>#initialize",				"SpToggleButtonPresenter>>#initialize",				"SpTokenTreeFilter>>#initialize",				"SpToolCommand>>#initialize",				"SpToolbarButtonPresenter>>#initialize",				"SpToolbarDisplayMode class>>#uniqueInstance",				"SpToolbarItemPosition class>>#uniqueInstance",				"SpToolbarMenuButtonPresenter>>#initialize",				"SpToolbarMorph>>#initialize",				"SpToolbarPresenter>>#initialize",				"SpToolbarPresenterBuilder>>#initialize",				"SpToolbarToggleButtonMorphTest>>#initialize",				"SpToolbarToggleButtonPresenter>>#initialize",				"SpTransferMorph>>#initialize",				"SpTreePresenter>>#initialize",				"SpTreeTablePresenter>>#initialize",				"SpUIThemeDecorator>>#initialize",				"SpValueHolder>>#initialize",				"SpVersatileDialogPresenter>>#initialize",				"SpVerticalAlignment>>#initialize",				"SpWeakValueHolder class>>#new",				"SpWindowPresenter>>#initialize",				"SpaceTallyResult>>#initialize",				"SpecAdapterBindings>>#initialize",				"SpecDialogWindow>>#initialize",				"SpecFocusOrder>>#initialize",				"SpecLayout>>#initialize",				"SpecLayoutAdd>>#initialize",				"SpecLayoutFrame>>#initialize",				"SpecLayoutProperties>>#initialize",				"SpecSplitterHorizontal>>#initialize",				"SpecSplitterVertical>>#initialize",				"SpecTableLayout>>#initialize",				"SpecTableLayoutAdd>>#initialize",				"SpecTableLayoutAddSpacer>>#initialize",				"SpecTableLayoutProperties>>#initialize",				"SpecTransferMorph>>#initialize",				"SpecWrapperTableLayout>>#initialize",				"StBaseFilter>>#initialize",				"StCollectionIterator class>>#on:",				"StDebugger>>#initialize",				"StDebuggerActionModel>>#initialize",				"StDebuggerActionModel class>>#on:",				"StDebuggerCommand>>#initialize",				"StDebuggerContextPredicate>>#initialize",				"StDebuggerInspectorModel>>#initialize",				"StDebuggerTest>>#debuggerOn:",				"StDebuggerTest>>#replaceMethodWithQuickMethodStepping",				"StDebuggerTest>>#testSaveCodeModification",				"StDebuggerTest>>#testUpdateLayoutForContextsIfAssertionFailure",				"StDebuggerTest>>#testAcceptCodeChangesForContext",				"StDebuggerTest>>#initializedDebugger",				"StDebuggerToolCommandTreeBuilderTest>>#setUp",				"StDebuggerTreeTablePresenter>>#initialize",				"StDefineMissingEntityCommand>>#initialize",				"StFailingAssertionInspector class>>#diffInspectorsFromActual:expected:application:",				"StGeneratorBlockIterator class>>#on:",				"StGenericGenerator>>#initialize",				"StHaltCacheTest>>#testScanAllSystemEnabled",				"StHelpBrowserPresenter class>>#openOnHelpFolder:",				"StHelpBrowserPresenter class>>#openOnCustomHelp:",				"StIconBookBuilder>>#initialize",				"StInspectionContext>>#initialize",				"StInspectorBaseTest>>#setUp",				"StInspectorCommand>>#initialize",				"StInspectorRefreshService>>#initialize",				"StInspectorRefreshService class>>#uniqueInstance",				"StMicrodownClassAPIHelpBuilder>>#initialize",				"StMockCandidatesList>>#initialize",				"StMockDebuggerActionModel>>#initialize",				"StNodeCollector>>#initializeObject:",				"StNodeHelpTopic>>#initialize",				"StObjectBreakpointInspection>>#initialize",				"StObjectInspectorPresenter>>#initialize",				"StPharoApplication>>#initialize",				"StPharoDefaultIconProvider>>#initialize",				"StPlaygroundBaseTest>>#setUp",				"StPlaygroundPage>>#initialize",				"StQuery>>#initialize",				"StRemoveBindingCommand>>#initialize",				"StReporter>>#initialize",				"StSizeReporter>>#initialize",				"StSpotter>>#initialize",				"StSpotterCandidatesList>>#initialize",				"StSpotterContext>>#initialize",				"StSpotterHeaderPresenter>>#initialize",				"StSpotterModel>>#initializeOrigin:",				"StSpotterModel>>#initialize",				"StSpotterPragmaBasedProcessor>>#initialize",				"StSpotterProcessor>>#initialize",				"StSpotterQuery>>#initialize",				"StTopicBuilderVisitor>>#initialize",				"StWithoutDuplicatesDecorator>>#initialize",				"StandardWindow>>#initialize",				"StandardWindow class>>#newWithTheme:",				"StartupPreferencesHandler>>#initialize",				"StartupPreferencesLoader>>#initialize",				"StartupPreferencesLoader class>>#default",				"StoredSettingsMerger>>#initialize",				"StringMorph>>#initialize",				"StringMorph>>#initWithContents:font:emphasis:",				"StringMorphAttributeScanner>>#initialize",				"SycRemoveMethodCommand>>#initialize",				"SystemAnnouncement>>#initialize",				"SystemNavigation>>#initialize",				"SystemOrganizer>>#initialize",				"SystemProgressMorph>>#initialize",				"SystemVersion>>#initialize",				"SystemWindow>>#initialize",				"TFCallback>>#initialize",				"TFCallbackQueue>>#initialize",				"TFCallbackSameProcessRunStrategy class>>#uniqueInstance",				"TFExternalAsyncCall class>>#forFunction:",				"TFExternalSemaphore>>#initialize",				"TFMainThreadRunner class>>#uniqueInstance",				"TFPool>>#initializeProvider:size:releaseBlock:",				"TFPool>>#initialize",				"TFSameThreadRunner class>>#uniqueInstance",				"TFTestCallbackExceptionHandler>>#initialize",				"TFVariadicFunctionDefinition>>#initialize",				"TFWorker>>#initialize",				"TKTAbstractExecutor>>#initialize",				"TKTCommonQueueWorkerPool>>#initialize",				"TKTFuture>>#initialize",				"TKTFutureExecution>>#initialize",				"TKTMockService>>#initialize",				"TKTParameterizableService>>#initialize",				"TKTProfile class>>#on:",				"TKTQueueTaskScheduler>>#initialize",				"TKTService>>#initialize",				"TKTServiceManager>>#initialize",				"TKTTaskExecution>>#initialize",				"TKTWatchDog>>#initialize",				"TKTWatchDog>>#privateStart",				"TKTWorker>>#initialize",				"TKTWorkerPool>>#initialize",				"TMockWithComplexSlot>>#initialize",				"TTLCache>>#initialize",				"TaSequence>>#initialize",				"TabAction>>#initialize",				"TabBarMorph>>#initialize",				"TabBuildingIconMorph>>#initialize",				"TabExample>>#initialize",				"TabGroupMorph>>#initialize",				"TabLabelMorph>>#initialize",				"TabManagerMorph>>#initialize",				"TabManagerPresenter>>#initialize",				"TabMorph>>#initialize",				"TabPresenter>>#initialize",				"TabSelectorMorph>>#initialize",				"TableLayoutProperties>>#initialize",				"TaskListMorph>>#initialize",				"TaskbarItemMorph>>#initialize",				"TaskbarMorph>>#initialize",				"TestExecutionEnvironment>>#initialize",				"TestExecutionService>>#initialize",				"TestInWorldMorph>>#initialize",				"TestResource class>>#new",				"TestResult>>#initialize",				"TestRunner>>#initialize",				"TestServiceExample>>#initialize",				"TestWorkingSession>>#initialize",				"TextAction>>#initialize",				"TextAnchorTest>>#setUp",				"TextEditorDialogWindow>>#initialize",				"TextHighlightByBounds>>#initialize",				"TextInputFieldPresenter>>#initialize",				"TextMethodLink>>#initialize",				"TextMorph>>#initialize",				"TextMorphTest>>#testInitialize",				"TextPresenter>>#initialize",				"ThemeSettings>>#initialize",				"ThreadSafeTranscript>>#initialize",				"ThreePhaseButtonMorph>>#initialize",				"ThumbnailMorph>>#initialize",				"TickDialogWindow class>>#itemsList:itemsHeaderName:title:defaultValue:",				"TickDialogWindow class>>#itemsList:itemsHeaderName:wrapBlockOrSelector:title:defaultValue:",				"TickDialogWindow class>>#itemsList:itemsHeaderName:title:",				"TickDialogWindow class>>#itemsList:itemsHeaderName:wrapBlockOrSelector:title:",				"TickSelectionListNode>>#selectedMorph",				"TimeMeasuringTest>>#initialize",				"ToggleMenuItemShortcut>>#initializeOwner:keyText:",				"TokenTreeFilter>>#initialize",				"TonelSTONWriter>>#initialize",				"TonelScanner>>#initializeStream:",				"TraitChange>>#initialize",				"TraitMethodDescription>>#initialize",				"TraitMethodDescription class>>#new",				"TraitedMetaclass>>#initialize",				"TransferMorph>>#initialize",				"TransferPresenter>>#initialize",				"TransformMorph>>#initialize",				"TreeChunkPagerMorph>>#initialize",				"TreeColumnButtonMorph>>#initialize",				"TreeColumnPresenter>>#initialize",				"TreeNavigationBarMorph>>#initialize",				"TreeNodePresenter>>#initialize",				"TreePresenter>>#initialize",				"UITheme>>#newExpanderIn:label:forAll:",				"UITheme>>#newDropListIn:for:list:getSelected:setSelected:getEnabled:useIndex:help:",				"UITheme>>#initialize",				"UITheme>>#chooseExistingFileReferenceIn:title:extensions:path:preview:",				"UITheme>>#chooseFileIn:title:extensions:path:preview:",				"UITheme>>#chooseFullFileNameIn:title:patterns:path:preview:",				"UIThemeDecorator>>#initialize",				"UUID>>#initialize",				"UUIDGenerator>>#initialize",				"UndefinedSortFunction>>#initialize",				"VTermOutputDriver>>#initialize",				"VTermOutputStyleElement>>#initialize",				"VariableBreakpoint>>#initialize",				"VariableBreakpointMockSubclass>>#initialize",				"VariableBreakpointTest>>#nodesForV1InFieldWatchpointMockClass",				"VariableBreakpointTest>>#nodesForV2InVariableBreakpointMockSubclass",				"Watch>>#initialize",				"WatchesWindow class>>#on:",				"WeakAnnouncementSubscription class>>#new",				"WeakRegistry>>#initialize",				"WhereIsDebugAction>>#initialize",				"WideCharacterSet>>#initialize",				"WindowPresenter>>#initialize",				"WorkingSession>>#initialize",				"Workspace>>#initialize",				"WorldMorph>>#initialize",				"WorldState>>#initialize",				"WriteBarrierTest class>>#restartMethods",				"ZdcAbstractSocketStream class>>#on:",				"ZdcByteArrayManager>>#initialize",				"ZdcSecureSMTPClient>>#initialize",				"ZdcSecureSocketStream>>#initialize",				"ZipArchive>>#initialize",				"ZipArchiveMember>>#initialize",				"ZipDirectoryMember>>#initialize",				"ZipFileMember>>#initialize",				"ZipNewFileMember>>#initialize",				"ZipStore>>#initializeWithReference:",				"ZipStore>>#initialize",				"ZipStringMember>>#initialize",				"ZipWriteStream>>#initialize",				"ZnApplicationFormUrlEncodedEntity>>#initialize",				"ZnBase64Encoder>>#initialize",				"ZnBasicAuthenticator class>>#new",				"ZnBufferedReadStream>>#initialize",				"ZnChunkedReadStream class>>#on:",				"ZnChunkedReadStream class>>#new",				"ZnChunkedWriteStream>>#initialize",				"ZnCommonLogFormat>>#initialize",				"ZnCrPortableWriteStream>>#initialize",				"ZnCrPortableWriteStream class>>#on:",				"ZnDefaultServerDelegate class>>#new",				"ZnDigestAuthenticator class>>#md5Hash:",				"ZnEntity class>>#new",				"ZnFastLineReader>>#initialize",				"ZnLogEvent>>#initialize",				"ZnMultiPartFormDataEntity>>#initialize",				"ZnNetworkingUtils>>#initialize",				"ZnNewLineWriterStream>>#initialize",				"ZnNewLineWriterStream class>>#on:",				"ZnPositionableReadStream>>#initialize",				"ZnServerLogEvent>>#initialize",				"ZnServerSession>>#initialize",				"ZnServerSessionManager>>#initialize",				"ZnServerTransactionTiming>>#initialize",				"ZnSimplifiedByteEncoder>>#initialize",				"ZnSimplifiedClientTransactionEvent>>#initialize"			],			"implementors" : {				"FTColumn" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself disableSort"					],					"body" : [						"super initialize.",						"self disableSort"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1529961,					"argumentNames" : [ ]				},				"ClyClassHierarchyScope" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tlocalScopeClass := ClyClassScope \"By default we only look at own class meta level\""					],					"body" : [						"super initialize.",						"",						"localScopeClass := ClyClassScope \"By default we only look at own class meta level\""					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5733023,					"argumentNames" : [ ]				},				"String class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeTypeTable.",						"",						"\tAsciiOrder := self newAsciiOrder.",						"\tCaseInsensitiveOrder := self newCaseInsensitiveOrder.",						"\tCaseSensitiveOrder := self newCaseSensitiveOrder.",						"\tLowercasingTable := self newLowercasingTable.",						"\tUppercasingTable := self newUppercasingTable.",						"\tTokenish := self newTokenish.",						"\tCSLineEnders := self newCSLineEnders.",						"",						"\t\"separators and non-separators\"",						"\tCSSeparators := CharacterSet separators.",						"\tCSNonSeparators := CSSeparators complement"					],					"body" : [						"self initializeTypeTable.",						"",						"AsciiOrder := self newAsciiOrder.",						"CaseInsensitiveOrder := self newCaseInsensitiveOrder.",						"CaseSensitiveOrder := self newCaseSensitiveOrder.",						"LowercasingTable := self newLowercasingTable.",						"UppercasingTable := self newUppercasingTable.",						"Tokenish := self newTokenish.",						"CSLineEnders := self newCSLineEnders.",						"",						"\"separators and non-separators\"",						"CSSeparators := CharacterSet separators.",						"CSNonSeparators := CSSeparators complement"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1603248,					"argumentNames" : [ ]				},				"SpaceTallyResult" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\titems := OrderedCollection new"					],					"body" : [						"super initialize.",						"items := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3994649,					"argumentNames" : [ ]				},				"AthensCompositeStrokePaint" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\twithInset := true"					],					"body" : [						"super initialize.",						"withInset := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4210632,					"argumentNames" : [ ]				},				"SpOverlayLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\toverlays := OrderedCollection new"					],					"body" : [						"super initialize.",						"overlays := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 2943518,					"argumentNames" : [ ]				},				"SpecLayoutFrame" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tbottomFraction := 1.",						"\tbottomOffset := 0.",						"\tleftFraction := 0.",						"\tleftOffset := 0.",						"\trightFraction := 1.",						"\trightOffset := 0.",						"\ttopFraction := 0.",						"\ttopOffset := 0"					],					"body" : [						"super initialize.",						"",						"bottomFraction := 1.",						"bottomOffset := 0.",						"leftFraction := 0.",						"leftOffset := 0.",						"rightFraction := 1.",						"rightOffset := 0.",						"topFraction := 0.",						"topOffset := 0"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 1744542,					"argumentNames" : [ ]				},				"ClyQuery" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself resetScope.",						"\tself requiredResult: self defaultResult"					],					"body" : [						"super initialize.",						"self resetScope.",						"self requiredResult: self defaultResult"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5644821,					"argumentNames" : [ ]				},				"IceGitHubPullRequest" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfetched := false"					],					"body" : [						"super initialize.",						"fetched := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7275466,					"argumentNames" : [ ]				},				"CoSession" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tvocabularyCache := LRUCache new maximumWeight: 1000"					],					"body" : [						"super initialize.",						"vocabularyCache := LRUCache new maximumWeight: 1000"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6117618,					"argumentNames" : [ ]				},				"RSLabel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpaint := Color gray.",						"\tself font: self class defaultFont"					],					"body" : [						"super initialize.",						"paint := Color gray.",						"self font: self class defaultFont"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6472055,					"argumentNames" : [ ]				},				"ChronologyConstants class" : {					"sourceCode" : [						"initialize",						"",						"\t\"ChronologyConstants initialize\"",						"",						"\tSqueakEpoch := 2415386. \"Julian day number of 1 Jan 1901\"",						"\tSecondsInDay := 86400.",						"\tMicrosecondsInDay := SecondsInDay * 1e6.",						"\tSecondsInHour := 3600.",						"\tSecondsInMinute := 60.",						"\tMinutesInHour := 60.",						"\tHoursInDay := 24.",						"\tNanosInSecond := 10 raisedTo: 9.",						"\tNanosInMillisecond := 10 raisedTo: 6.",						"\tDayNames := #( Sunday Monday Tuesday Wednesday Thursday Friday Saturday ).",						"",						"\tMonthNames := #( January February March April May June July August",						"\t                 September October November December ).",						"\tDaysInMonth := #( 31 28 31 30 31 30 31 31 30 31 30 31 )"					],					"body" : [						"SqueakEpoch := 2415386. \"Julian day number of 1 Jan 1901\"",						"SecondsInDay := 86400.",						"MicrosecondsInDay := SecondsInDay * 1e6.",						"SecondsInHour := 3600.",						"SecondsInMinute := 60.",						"MinutesInHour := 60.",						"HoursInDay := 24.",						"NanosInSecond := 10 raisedTo: 9.",						"NanosInMillisecond := 10 raisedTo: 6.",						"DayNames := #( Sunday Monday Tuesday Wednesday Thursday Friday Saturday ).",						"",						"MonthNames := #( January February March April May June July August",						"                 September October November December ).",						"DaysInMonth := #( 31 28 31 30 31 30 31 31 30 31 30 31 )"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"ChronologyConstants initialize"					],					"hash" : 1604453,					"argumentNames" : [ ]				},				"MalNodeWithNext" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tnextNodes := OrderedCollection new"					],					"body" : [						"super initialize.",						"nextNodes := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2564122,					"argumentNames" : [ ]				},				"TextPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttextHolder := '' asValueHolder.",						"\tbehaviorHolder := nil asValueHolder.",						"\taboutToStyleHolder := [ false ] asValueHolder.",						"\tactionToPerformHolder := [ :text |  ] asValueHolder.",						"\treadSelectionHolder := [ selection value ] asValueHolder.",						"\tactionPerformedHolder := '' asValueHolder.",						"\tisCodeCompletionAllowedHolder := false asValueHolder.",						"\tisForSmalltalkCodeHolder := false asValueHolder.",						"\tdoItContext := nil asValueHolder.",						"\tdoItReceiver := nil asValueHolder.",						"\thasUnacceptedEdits := false asValueHolder.",						"\tselection := (1 to: 0) asValueHolder.",						"\tscrollValue := (0 @ 0) asValueHolder.",						"\tmenuHolder := [ :menu :shifted |  ] asValueHolder.",						"\tautoAccept := false asValueHolder.",						"\twantsVisualFeedback := true asValueHolder.",						"\taskBeforeDiscardingEdits := true asValueHolder.",						"\tself beForText.",						"\tself registerEvents.",						"\tself registerEventsForShout"					],					"body" : [						"super initialize.",						"textHolder := '' asValueHolder.",						"behaviorHolder := nil asValueHolder.",						"aboutToStyleHolder := [ false ] asValueHolder.",						"actionToPerformHolder := [ :text |  ] asValueHolder.",						"readSelectionHolder := [ selection value ] asValueHolder.",						"actionPerformedHolder := '' asValueHolder.",						"isCodeCompletionAllowedHolder := false asValueHolder.",						"isForSmalltalkCodeHolder := false asValueHolder.",						"doItContext := nil asValueHolder.",						"doItReceiver := nil asValueHolder.",						"hasUnacceptedEdits := false asValueHolder.",						"selection := (1 to: 0) asValueHolder.",						"scrollValue := (0 @ 0) asValueHolder.",						"menuHolder := [ :menu :shifted |  ] asValueHolder.",						"autoAccept := false asValueHolder.",						"wantsVisualFeedback := true asValueHolder.",						"askBeforeDiscardingEdits := true asValueHolder.",						"self beForText.",						"self registerEvents.",						"self registerEventsForShout"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1703653,					"argumentNames" : [ ]				},				"RBRefactoryChangeManager class" : {					"sourceCode" : [						"initialize",						"",						"\tself nuke.",						"\tUndoSize := 20"					],					"body" : [						"self nuke.",						"UndoSize := 20"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 3992189,					"argumentNames" : [ ]				},				"IconListPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ticonHolder := [ :item | nil ] asValueHolder"					],					"body" : [						"super initialize.",						"",						"iconHolder := [ :item | nil ] asValueHolder"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1690219,					"argumentNames" : [ ]				},				"OCScopesCollector" : {					"sourceCode" : [						"initialize",						"",						"\tscopes := OrderedCollection new.",						"\tsuper initialize"					],					"body" : [						"scopes := OrderedCollection new.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4543264,					"argumentNames" : [ ]				},				"SpPopoverMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\thResizing: #shrinkWrap;",						"\t\tvResizing: #shrinkWrap;",						"\t\tborderWidth: 10;",						"\t\tborderColor: Color transparent;",						"\t\tlistCentering: #center;",						"\t\tbeSticky.",						"\tself bePositionBottom.",						"\tself showArrow"					],					"body" : [						"super initialize.",						"self",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\thResizing: #shrinkWrap;",						"\tvResizing: #shrinkWrap;",						"\tborderWidth: 10;",						"\tborderColor: Color transparent;",						"\tlistCentering: #center;",						"\tbeSticky.",						"self bePositionBottom.",						"self showArrow"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3363966,					"argumentNames" : [ ]				},				"AthensPathBuilder class" : {					"sourceCode" : [						"initialize",						"",						"\tZeroPoint := 0 @ 0"					],					"body" : [						"ZeroPoint := 0 @ 0"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 3852190,					"argumentNames" : [ ]				},				"OSTouchStateGestureDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmodeActivated := false"					],					"body" : [						"super initialize.",						"modeActivated := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4843211,					"argumentNames" : [ ]				},				"StObjectBreakpointInspection" : {					"sourceCode" : [						"initialize",						"",						"\tbreakpointController := StHaltAndBreakpointController new.",						"\tsuper initialize"					],					"body" : [						"breakpointController := StHaltAndBreakpointController new.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6349151,					"argumentNames" : [ ]				},				"ClassAnnotationRegistry" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tannotations := IdentityDictionary new.",						"\tannotatedClasses := IdentityDictionary new"					],					"body" : [						"super initialize.",						"annotations := IdentityDictionary new.",						"annotatedClasses := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2868082,					"argumentNames" : [ ]				},				"CacheWeight" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttotal := 0.",						"\tmaximum := 16.",						"\tcompute := [ 1 ]"					],					"body" : [						"super initialize.",						"total := 0.",						"maximum := 16.",						"compute := [ 1 ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2405281,					"argumentNames" : [ ]				},				"AbstractCache" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tweight := CacheWeight new.",						"\tstatistics := CacheStatistics new"					],					"body" : [						"super initialize.",						"weight := CacheWeight new.",						"statistics := CacheStatistics new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2402950,					"argumentNames" : [ ]				},				"ReAnySatisfyRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny:",						"\t\t#( '(`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [nil]) isNil'",						"\t\t   '(`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [nil]) notNil'",						"\t\t   '(`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [nil]) = nil'",						"\t\t   '(`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [nil]) == nil'",						"\t\t   '(`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [nil]) ~= nil'",						"\t\t   '(`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [nil]) ~~ nil'",						"\t\t   '`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [| `@temps1 | `@.Statements2. ^`@anything]' )"					],					"body" : [						"super initialize.",						"self matchesAny:",						"\t#( '(`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [nil]) isNil'",						"\t   '(`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [nil]) notNil'",						"\t   '(`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [nil]) = nil'",						"\t   '(`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [nil]) == nil'",						"\t   '(`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [nil]) ~= nil'",						"\t   '(`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [nil]) ~~ nil'",						"\t   '`@object detect: [:`each | | `@temps| `@.Statements] ifNone: [| `@temps1 | `@.Statements2. ^`@anything]' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4737965,					"argumentNames" : [ ]				},				"LocalVariable" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tescaping := false"					],					"body" : [						"super initialize.",						"escaping := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2040265,					"argumentNames" : [ ]				},				"MalDisjointSetsNextNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself makeSet.",						"\tnextNodes := OrderedCollection new"					],					"body" : [						"super initialize.",						"self makeSet.",						"nextNodes := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2563541,					"argumentNames" : [ ]				},				"ClyMethodEditorToolMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tmethodTags := #(  )"					],					"body" : [						"super initialize.",						"",						"methodTags := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5912297,					"argumentNames" : [ ]				},				"LGitLibrary class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Required to reset the Initialized flag on image startup.",						"\tForce libgit initialization since we just installed libgit.",						"\tOtherwise this would cause a libgit crash\"",						"",						"\tSmalltalk addToStartUpList: self.",						"\tself uniqueInstance initializeLibGit2"					],					"body" : [						"Smalltalk addToStartUpList: self.",						"self uniqueInstance initializeLibGit2"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Required to reset the Initialized flag on image startup.",						"\tForce libgit initialization since we just installed libgit.",						"\tOtherwise this would cause a libgit crash"					],					"hash" : 6891974,					"argumentNames" : [ ]				},				"OSWindow class" : {					"sourceCode" : [						"initialize",						"",						"\tself traceEvents: false"					],					"body" : [						"self traceEvents: false"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4836515,					"argumentNames" : [ ]				},				"MCMczWriter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tzip := ZipArchive new"					],					"body" : [						"super initialize.",						"zip := ZipArchive new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1095706,					"argumentNames" : [ ]				},				"OSWindowGLAttributes" : {					"sourceCode" : [						"initialize",						"",						"\tredSize := DefaultRedSize.",						"\tgreenSize := DefaultGreenSize.",						"\tblueSize := DefaultBlueSize.",						"\talphaSize := DefaultAlphaSize.",						"\tdepthSize := DefaultDepthSize.",						"\tstencilSize := DefaultStencilSize.",						"\tdoubleBuffer := DefaultDoubleBuffer.",						"\tswapControl := DefaultSwapControl.",						"\tminorVersion := DefaultMinorVersion.",						"\tmajorVersion := DefaultMajorVersion.",						"\tprofileType := DefaultProfileType.",						"\tsrgbFramebuffer := DefaultSRGBFramebuffer"					],					"body" : [						"redSize := DefaultRedSize.",						"greenSize := DefaultGreenSize.",						"blueSize := DefaultBlueSize.",						"alphaSize := DefaultAlphaSize.",						"depthSize := DefaultDepthSize.",						"stencilSize := DefaultStencilSize.",						"doubleBuffer := DefaultDoubleBuffer.",						"swapControl := DefaultSwapControl.",						"minorVersion := DefaultMinorVersion.",						"majorVersion := DefaultMajorVersion.",						"profileType := DefaultProfileType.",						"srgbFramebuffer := DefaultSRGBFramebuffer"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4853176,					"argumentNames" : [ ]				},				"CompilationContext" : {					"sourceCode" : [						"initialize",						"",						"\toptions := Set new.",						"\tastTransformPlugins := OrderedCollection withAll:",						"\t\t                       self class defaultTransformationPlugins"					],					"body" : [						"options := Set new.",						"astTransformPlugins := OrderedCollection withAll:",						"\t                       self class defaultTransformationPlugins"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2038332,					"argumentNames" : [ ]				},				"CoNarrowHistoryFetcher" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcurrentResults := OrderedCollection new.",						"\tcurrentKey := ''.",						"\tcurrentFinished := false.",						"\thistory := Dictionary new"					],					"body" : [						"super initialize.",						"currentResults := OrderedCollection new.",						"currentKey := ''.",						"currentFinished := false.",						"history := Dictionary new"					],					"isTestMethod" : false,					"category" : "enumerating",					"comment" : [ ],					"hash" : 6107563,					"argumentNames" : [ ]				},				"FTSelectableMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tselectionColor := self defaultColor"					],					"body" : [						"super initialize.",						"selectionColor := self defaultColor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1365087,					"argumentNames" : [ ]				},				"ClyConstantMethodQuery" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tdescription := 'Methods'"					],					"body" : [						"super initialize.",						"",						"description := 'Methods'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5708974,					"argumentNames" : [ ]				},				"ReReturnInEnsureRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny: #( '`@rcv ensure: [| `@temps | `@.Stmts]'",						"\t\t   '`@rcv ifCurtailed: [| `@temps | `@.Stmts]' )"					],					"body" : [						"super initialize.",						"self matchesAny: #( '`@rcv ensure: [| `@temps | `@.Stmts]'",						"\t   '`@rcv ifCurtailed: [| `@temps | `@.Stmts]' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4744621,					"argumentNames" : [ ]				},				"ReDetectContainsRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny: #( '`@collection do: [:`each | | `@temps | ",						"\t\t\t\t`@.Statements1. ",						"\t\t\t\t`@condition ifFalse: [| `@BlockTemps | `@.BlockStatements1. ^`each]. ",						"\t\t\t\t`@.Statements2]' '`@collection do: [:`each | | `@temps | ",						"\t\t\t\t`@.Statements1. ",						"\t\t\t\t`@condition ifTrue: [| `@BlockTemps | `@.BlockStatements1.  ^`each]. ",						"\t\t\t\t`@.Statements2]' '`@collection do: [:`each | | `@temps | ",						"\t\t\t\t`@.Statements1. ",						"\t\t\t\t`@condition ifFalse: [| `@BlockTemps | `@.BlockStatements1. ^true]. ",						"\t\t\t\t`@.Statements2]' '`@Collection do: [:`each | | `@temps | ",						"\t\t\t\t`@.Statements1. ",						"\t\t\t\t`@condition ifTrue: [| `@BlockTemps | `@.BlockStatements1.  ^true]. ",						"\t\t\t\t`@.Statements2]' '`@collection do: [:`each | | `@temps | ",						"\t\t\t\t`@.Statements1. ",						"\t\t\t\t`@condition ifFalse: [| `@BlockTemps | `@.BlockStatements1. ^false]. ",						"\t\t\t\t`@.Statements2]' '`@collection do: [:`each | | `@temps | ",						"\t\t\t\t`@.Statements1. ",						"\t\t\t\t`@condition ifTrue: [| `@BlockTemps | `@.BlockStatements1.  ^false]. ",						"\t\t\t\t`@.Statements2]' )"					],					"body" : [						"super initialize.",						"self matchesAny: #( '`@collection do: [:`each | | `@temps | ",						"\t\t\t\t`@.Statements1. ",						"\t\t\t\t`@condition ifFalse: [| `@BlockTemps | `@.BlockStatements1. ^`each]. ",						"\t\t\t\t`@.Statements2]' '`@collection do: [:`each | | `@temps | ",						"\t\t\t\t`@.Statements1. ",						"\t\t\t\t`@condition ifTrue: [| `@BlockTemps | `@.BlockStatements1.  ^`each]. ",						"\t\t\t\t`@.Statements2]' '`@collection do: [:`each | | `@temps | ",						"\t\t\t\t`@.Statements1. ",						"\t\t\t\t`@condition ifFalse: [| `@BlockTemps | `@.BlockStatements1. ^true]. ",						"\t\t\t\t`@.Statements2]' '`@Collection do: [:`each | | `@temps | ",						"\t\t\t\t`@.Statements1. ",						"\t\t\t\t`@condition ifTrue: [| `@BlockTemps | `@.BlockStatements1.  ^true]. ",						"\t\t\t\t`@.Statements2]' '`@collection do: [:`each | | `@temps | ",						"\t\t\t\t`@.Statements1. ",						"\t\t\t\t`@condition ifFalse: [| `@BlockTemps | `@.BlockStatements1. ^false]. ",						"\t\t\t\t`@.Statements2]' '`@collection do: [:`each | | `@temps | ",						"\t\t\t\t`@.Statements1. ",						"\t\t\t\t`@condition ifTrue: [| `@BlockTemps | `@.BlockStatements1.  ^false]. ",						"\t\t\t\t`@.Statements2]' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4741549,					"argumentNames" : [ ]				},				"RSAbstractLine" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\twithBorder;",						"\t\tnoPaint;",						"\t\twithCenteredAttachPoint"					],					"body" : [						"super initialize.",						"self",						"\twithBorder;",						"\tnoPaint;",						"\twithCenteredAttachPoint"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6465004,					"argumentNames" : [ ]				},				"TFAbiTypes class" : {					"sourceCode" : [						"initialize",						"",						"\t\"The default ABI is marked with a nil. The primitive will use the correct ABI depending on the platform\"",						"",						"\tDEFAULT_ABI := nil.",						"",						"\tWIN_X86_64_WIN64 := 1.",						"\tWIN_X86_64_GNUW64 := 2.",						"",						"\tDARWIN_X86_64_UNIX64 := 2.",						"\tDARWIN_X86_64_WIN64 := 3.",						"\tDARWIN_X86_64_GNUW64 := 4.",						"",						"\tUNIX_X86_64_UNIX64 := 2.",						"\tUNIX_X86_64_WIN64 := 3.",						"\tUNIX_X86_64_GNUW64 := 4.",						"",						"",						"\tWIN_X86_32_SYSV := 1.",						"\tWIN_X86_32_STDCALL := 2.",						"\tWIN_X86_32_THISCALL := 3.",						"\tWIN_X86_32_FASTCALL := 4.",						"\tWIN_X86_32_MS_CDECL := 5.",						"\tWIN_X86_32_PASCAL := 6.",						"\tWIN_X86_32_REGISTER := 7.",						"",						"\tUNIX_X86_32_SYSV := 1.",						"\tUNIX_X86_32_THISCALL := 3.",						"\tUNIX_X86_32_FASTCALL := 4.",						"\tUNIX_X86_32_STDCALL := 5.",						"\tUNIX_X86_32_PASCAL := 6.",						"\tUNIX_X86_32_REGISTER := 7.",						"\tUNIX_X86_32_MS_CDECL := 8"					],					"body" : [						"DEFAULT_ABI := nil.",						"",						"WIN_X86_64_WIN64 := 1.",						"WIN_X86_64_GNUW64 := 2.",						"",						"DARWIN_X86_64_UNIX64 := 2.",						"DARWIN_X86_64_WIN64 := 3.",						"DARWIN_X86_64_GNUW64 := 4.",						"",						"UNIX_X86_64_UNIX64 := 2.",						"UNIX_X86_64_WIN64 := 3.",						"UNIX_X86_64_GNUW64 := 4.",						"",						"",						"WIN_X86_32_SYSV := 1.",						"WIN_X86_32_STDCALL := 2.",						"WIN_X86_32_THISCALL := 3.",						"WIN_X86_32_FASTCALL := 4.",						"WIN_X86_32_MS_CDECL := 5.",						"WIN_X86_32_PASCAL := 6.",						"WIN_X86_32_REGISTER := 7.",						"",						"UNIX_X86_32_SYSV := 1.",						"UNIX_X86_32_THISCALL := 3.",						"UNIX_X86_32_FASTCALL := 4.",						"UNIX_X86_32_STDCALL := 5.",						"UNIX_X86_32_PASCAL := 6.",						"UNIX_X86_32_REGISTER := 7.",						"UNIX_X86_32_MS_CDECL := 8"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"The default ABI is marked with a nil. The primitive will use the correct ABI depending on the platform"					],					"hash" : 2808625,					"argumentNames" : [ ]				},				"IceTipCommitBrowser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsaveAction := IceTipSaveImageAction new"					],					"body" : [						"super initialize.",						"saveAction := IceTipSaveImageAction new"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 7086680,					"argumentNames" : [ ]				},				"WindowPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tmodel := nil asValueHolder.",						"\tinitialExtent := nil asValueHolder.",						"\ttitle := self class title asValueHolder.",						"\tisClosedHolder := false asValueHolder.",						"\tisResizeable := true asValueHolder.",						"",						"\tmodel whenChangedDo: [ :m | self updateTitle ]"					],					"body" : [						"super initialize.",						"",						"model := nil asValueHolder.",						"initialExtent := nil asValueHolder.",						"title := self class title asValueHolder.",						"isClosedHolder := false asValueHolder.",						"isResizeable := true asValueHolder.",						"",						"model whenChangedDo: [ :m | self updateTitle ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1712083,					"argumentNames" : [ ]				},				"StSpotterModel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tscheduler := TKTWorkerPool new.",						"\tscheduler poolMaxSize: 5.",						"\tscheduler start.",						"",						"\tmutex := Mutex new"					],					"body" : [						"super initialize.",						"",						"scheduler := TKTWorkerPool new.",						"scheduler poolMaxSize: 5.",						"scheduler start.",						"",						"mutex := Mutex new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6304449,					"argumentNames" : [ ]				},				"SettingsStonWriter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstoredSettings := OrderedCollection new"					],					"body" : [						"super initialize.",						"storedSettings := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2673178,					"argumentNames" : [ ]				},				"RGTraitAlias" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\taliases := self unresolvedValue: self defaultAliases"					],					"body" : [						"super initialize.",						"",						"aliases := self unresolvedValue: self defaultAliases"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 6062670,					"argumentNames" : [ ]				},				"MenuGroupPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\titems := OrderedCollection new asValueHolder.",						"\tautoRefresh := nil asValueHolder.",						"\tautoRefresh whenChangedDo: [ :aBoolean | ",						"\t\tself menuItems do: [ :each | each autoRefresh: aBoolean ] ]"					],					"body" : [						"super initialize.",						"items := OrderedCollection new asValueHolder.",						"autoRefresh := nil asValueHolder.",						"autoRefresh whenChangedDo: [ :aBoolean | ",						"\tself menuItems do: [ :each | each autoRefresh: aBoolean ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1694558,					"argumentNames" : [ ]				},				"SpAbstractTreeSelectionMode" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tselection := #(  ).",						"\tsuper initialize"					],					"body" : [						"self class initializeSlots: self.",						"selection := #(  ).",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3226378,					"argumentNames" : [ ]				},				"ClyQueryResult" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tneedsRebuild := true"					],					"body" : [						"super initialize.",						"needsRebuild := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5648589,					"argumentNames" : [ ]				},				"StPlaygroundPage" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcontentReceived := false.",						"\tcreationTime := DateAndTime now.",						"\tmutex := Mutex new"					],					"body" : [						"super initialize.",						"contentReceived := false.",						"creationTime := DateAndTime now.",						"mutex := Mutex new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6248890,					"argumentNames" : [ ]				},				"SVColorSelectorMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself locationMorph: self newLocationMorph.",						"\tself",						"\t\tclipSubmorphs: true;",						"\t\tcolor: Color blue;",						"\t\tborderStyle: (BorderStyle inset width: 1);",						"\t\taddMorphBack: self locationMorph;",						"\t\taddMorphBack: self blackGradientMorph"					],					"body" : [						"super initialize.",						"self locationMorph: self newLocationMorph.",						"self",						"\tclipSubmorphs: true;",						"\tcolor: Color blue;",						"\tborderStyle: (BorderStyle inset width: 1);",						"\taddMorphBack: self locationMorph;",						"\taddMorphBack: self blackGradientMorph"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1403161,					"argumentNames" : [ ]				},				"SDL2AthensDrawingExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcurrentStroke := OrderedCollection new.",						"\tstrokes := OrderedCollection new"					],					"body" : [						"super initialize.",						"currentStroke := OrderedCollection new.",						"strokes := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4911992,					"argumentNames" : [ ]				},				"STONWriter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstonCharacters := STONCharacters.",						"\tprettyPrint := false.",						"\tnewLine := String cr.",						"\tlevel := 0.",						"\treferencePolicy := #normal.",						"\tjsonMode := keepNewLines := asciiOnly := false.",						"\tobjects := IdentityDictionary new"					],					"body" : [						"super initialize.",						"stonCharacters := STONCharacters.",						"prettyPrint := false.",						"newLine := String cr.",						"level := 0.",						"referencePolicy := #normal.",						"jsonMode := keepNewLines := asciiOnly := false.",						"objects := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1137981,					"argumentNames" : [ ]				},				"PolygonMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tvertices := Array with: 5 @ 0 with: 20 @ 10 with: 0 @ 20.",						"\tclosed := true.",						"\tsmoothCurve := false.",						"\tarrows := #none.",						"\tself computeBounds.",						"\tself beSmoothCurve.",						"\tself diamondOval"					],					"body" : [						"super initialize.",						"vertices := Array with: 5 @ 0 with: 20 @ 10 with: 0 @ 20.",						"closed := true.",						"smoothCurve := false.",						"arrows := #none.",						"self computeBounds.",						"self beSmoothCurve.",						"self diamondOval"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2755242,					"argumentNames" : [ ]				},				"ChunkFileFormatParser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tparsedDeclarations := OrderedCollection new.",						"\tclassSelector := self defaultClassSelector.",						"\tclassTraitSelector := self defaultClassTraitSelector.",						"\tcommentStampSelector := self defaultCommentStampSelector.",						"\tmethodsForSelector := self defaultMethodsForSelector.",						"\treorganizeSelector := self defaultReorganizeSelector"					],					"body" : [						"super initialize.",						"parsedDeclarations := OrderedCollection new.",						"classSelector := self defaultClassSelector.",						"classTraitSelector := self defaultClassTraitSelector.",						"commentStampSelector := self defaultCommentStampSelector.",						"methodsForSelector := self defaultMethodsForSelector.",						"reorganizeSelector := self defaultReorganizeSelector"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2062218,					"argumentNames" : [ ]				},				"ClyBrowserItem" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tdepth := 0.",						"\tproperties := OrderedCollection new.",						"\tisPrepared := false"					],					"body" : [						"super initialize.",						"",						"depth := 0.",						"properties := OrderedCollection new.",						"isPrepared := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5634390,					"argumentNames" : [ ]				},				"FFIEnumeration class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeEnumeration"					],					"body" : [						"self initializeEnumeration"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1271620,					"argumentNames" : [ ]				},				"RSChart" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tplots := OrderedCollection new.",						"\tself extent: 200 @ 200.",						"\tself initializeDecorations.",						"\tcolors := self defaultPlotColors"					],					"body" : [						"super initialize.",						"plots := OrderedCollection new.",						"self extent: 200 @ 200.",						"self initializeDecorations.",						"colors := self defaultPlotColors"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6600728,					"argumentNames" : [ ]				},				"HelpTopic" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initializes the receiver\"",						"",						"\tsuper initialize.",						"\tself title: self defaultTitle.",						"\tself contents: ''.",						"\tself key: ''"					],					"body" : [						"super initialize.",						"self title: self defaultTitle.",						"self contents: ''.",						"self key: ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initializes the receiver"					],					"hash" : 3808076,					"argumentNames" : [ ]				},				"CTSlotDescriptorsVisitorCollect" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself rootDescriptor:",						"\t\t(blockClosure value: slotDescriptorsContext rootDescriptor)"					],					"body" : [						"super initialize.",						"",						"self rootDescriptor:",						"\t(blockClosure value: slotDescriptorsContext rootDescriptor)"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3655821,					"argumentNames" : [ ]				},				"RSLissajous" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcanvas := RSCanvas new.",						"\tcolor := NSScale category20.",						"\tnCircles := 7.",						"",						"\tgap := 10.",						"\tcircleSize := 50.",						"\tdotSize := 10.",						"\tcell := gap + circleSize"					],					"body" : [						"super initialize.",						"canvas := RSCanvas new.",						"color := NSScale category20.",						"nCircles := 7.",						"",						"gap := 10.",						"circleSize := 50.",						"dotSize := 10.",						"cell := gap + circleSize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3090386,					"argumentNames" : [ ]				},				"MCVersionSorter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstepparents := Dictionary new.",						"\troots := OrderedCollection new"					],					"body" : [						"super initialize.",						"stepparents := Dictionary new.",						"roots := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1094794,					"argumentNames" : [ ]				},				"CoAvoidRepeatedFetcher" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\telements := Set new"					],					"body" : [						"super initialize.",						"elements := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6105116,					"argumentNames" : [ ]				},				"ResumeDebugAction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\t\"No need to update the debgger as it will anyway be closed.\"",						"\tself needsUpdate: false"					],					"body" : [						"super initialize.",						"\"No need to update the debgger as it will anyway be closed.\"",						"self needsUpdate: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3782856,					"argumentNames" : [ ]				},				"SpObservablePoint" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself class initializeSlots: self"					],					"body" : [						"super initialize.",						"self class initializeSlots: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2934618,					"argumentNames" : [ ]				},				"ClyNotebookPageAction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ticon := ImageMorph new"					],					"body" : [						"super initialize.",						"icon := ImageMorph new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5904410,					"argumentNames" : [ ]				},				"CmBlockCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself canBeExecutedBlock: [ :ctxt | true ]"					],					"body" : [						"super initialize.",						"self canBeExecutedBlock: [ :ctxt | true ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1627016,					"argumentNames" : [ ]				},				"ClyOldMessageBrowserQuery" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\textraMethods := IdentitySet new"					],					"body" : [						"super initialize.",						"extraMethods := IdentitySet new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6031133,					"argumentNames" : [ ]				},				"PluggableDialogWindow" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself buttons: super newButtons"					],					"body" : [						"super initialize.",						"self buttons: super newButtons"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2743757,					"argumentNames" : [ ]				},				"FTTableContainerMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tneedsRefreshExposedRows := false.",						"\tstartColumnIndex := 0"					],					"body" : [						"super initialize.",						"needsRefreshExposedRows := false.",						"startColumnIndex := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1368346,					"argumentNames" : [ ]				},				"MorphTreeTransformMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself smoothingOn"					],					"body" : [						"super initialize.",						"self smoothingOn"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1409641,					"argumentNames" : [ ]				},				"KMCommandModifier" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tidentifier := #k.",						"\tname := 'Cmd'"					],					"body" : [						"super initialize.",						"identifier := #k.",						"name := 'Cmd'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1574570,					"argumentNames" : [ ]				},				"TokenTreeFilter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttoken := ''"					],					"body" : [						"super initialize.",						"",						"token := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1721516,					"argumentNames" : [ ]				},				"FFIMethodRegistry" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcompiledMethods := WeakSet new"					],					"body" : [						"super initialize.",						"compiledMethods := WeakSet new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2370329,					"argumentNames" : [ ]				},				"ReModifiesCollectionRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny:",						"\t\t#( '`@collection do: [:`each | | `@temps | `@.Statements]'",						"\t\t   '`@collection collect: [:`each | | `@temps | `@.Statements]'",						"\t\t   '`@collection select: [:`each | | `@temps | `@.Statements]'",						"\t\t   '`@collection reject: [:`each | | `@temps | `@.Statements]'",						"\t\t   '`@collection inject: `@value into: [:`sum :`each | | `@temps | `@.Statements]' )"					],					"body" : [						"super initialize.",						"self matchesAny:",						"\t#( '`@collection do: [:`each | | `@temps | `@.Statements]'",						"\t   '`@collection collect: [:`each | | `@temps | `@.Statements]'",						"\t   '`@collection select: [:`each | | `@temps | `@.Statements]'",						"\t   '`@collection reject: [:`each | | `@temps | `@.Statements]'",						"\t   '`@collection inject: `@value into: [:`sum :`each | | `@temps | `@.Statements]' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4743597,					"argumentNames" : [ ]				},				"StObjectInspectorPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tactivateOnSingleClick := false.",						"\tsuper initialize.",						"\t\"I keep the presenters I'm showing in this variable because they can change (and they are ",						"\t initialized lazily in the notebook)\"",						"\talivePresentersByPage := WeakSet new"					],					"body" : [						"activateOnSingleClick := false.",						"super initialize.",						"\"I keep the presenters I'm showing in this variable because they can change (and they are ",						"\t initialized lazily in the notebook)\"",						"alivePresentersByPage := WeakSet new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6194354,					"argumentNames" : [ ]				},				"Float class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Float initialize\"",						"",						"\t\"Constants from Computer Approximations, pp. 182-183:",						"\t\tPi = 3.14159265358979323846264338327950288",						"\t\tPi/2 = 1.57079632679489661923132169163975144",						"\t\tPi*2 = 6.28318530717958647692528676655900576",						"\t\tPi/180 = 0.01745329251994329576923690768488612",						"\t\t2.0 ln = 0.69314718055994530941723212145817657",						"\t\t2.0 sqrt = 1.41421356237309504880168872420969808\"",						"",						"\tPi := 3.14159265358979323846264338327950288.",						"\tHalfpi := Pi / 2.0.",						"\tTwopi := Pi * 2.0.",						"\tThreePi := Pi * 3.0.",						"\tRadiansPerDegree := Pi / 180.0.",						"",						"\tLn2 := 0.69314718055994530941723212145817657.",						"\tLn10 := 10.0 ln.",						"\tSqrt2 := 1.41421356237309504880168872420969808.",						"\tE := 2.718281828459045235360287471353.",						"",						"\tEpsilon := 0.000000000001. \"Defines precision of mathematical functions\"",						"",						"\tMaxVal := 1.7976931348623157e308.",						"\tMaxValLn := 709.782712893384.",						"\tMinValLogBase2 := -1074.",						"",						"\tInfinity := MaxVal * MaxVal.",						"\tNegativeInfinity := 0.0 - Infinity.",						"\tNaN := Infinity - Infinity.",						"\tNegativeZero := 1.0 / Infinity negated"					],					"body" : [						"Pi := 3.14159265358979323846264338327950288.",						"Halfpi := Pi / 2.0.",						"Twopi := Pi * 2.0.",						"ThreePi := Pi * 3.0.",						"RadiansPerDegree := Pi / 180.0.",						"",						"Ln2 := 0.69314718055994530941723212145817657.",						"Ln10 := 10.0 ln.",						"Sqrt2 := 1.41421356237309504880168872420969808.",						"E := 2.718281828459045235360287471353.",						"",						"Epsilon := 0.000000000001. \"Defines precision of mathematical functions\"",						"",						"MaxVal := 1.7976931348623157e308.",						"MaxValLn := 709.782712893384.",						"MinValLogBase2 := -1074.",						"",						"Infinity := MaxVal * MaxVal.",						"NegativeInfinity := 0.0 - Infinity.",						"NaN := Infinity - Infinity.",						"NegativeZero := 1.0 / Infinity negated"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Float initialize"					],					"hash" : 1669929,					"argumentNames" : [ ]				},				"IceMCVersionInfo" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdate := Date today.",						"\ttime := Time now"					],					"body" : [						"super initialize.",						"date := Date today.",						"time := Time now"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7012799,					"argumentNames" : [ ]				},				"IceCherrypicker" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdependencies := Set new"					],					"body" : [						"super initialize.",						"dependencies := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6966809,					"argumentNames" : [ ]				},				"SDL_Surface" : {					"sourceCode" : [						"initialize",						"",						"\tself autoRelease"					],					"body" : [						"self autoRelease"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4895556,					"argumentNames" : [ ]				},				"GoferWorking" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tworkingCopies := OrderedCollection new"					],					"body" : [						"super initialize.",						"workingCopies := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2259483,					"argumentNames" : [ ]				},				"StDebugger" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself debuggerActionModel updateContextPredicate.",						"\tself setSessionHolderSubscriptions.",						"\tself forceSessionUpdate.",						"\tself subscribeToMethodAddedAnnouncement.",						"",						"\tprogrammaticallyClosed := false"					],					"body" : [						"super initialize.",						"self debuggerActionModel updateContextPredicate.",						"self setSessionHolderSubscriptions.",						"self forceSessionUpdate.",						"self subscribeToMethodAddedAnnouncement.",						"",						"programmaticallyClosed := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6323856,					"argumentNames" : [ ]				},				"RadioButtonPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcanDeselectByClick := false asValueHolder"					],					"body" : [						"super initialize.",						"canDeselectByClick := false asValueHolder"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1676195,					"argumentNames" : [ ]				},				"OmFileStore" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tentryCount := 0.",						"\tentryPositionsByLocalName := Dictionary new.",						"\theadReference := OmNullReference uniqueInstance"					],					"body" : [						"super initialize.",						"",						"entryCount := 0.",						"entryPositionsByLocalName := Dictionary new.",						"headReference := OmNullReference uniqueInstance"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4973757,					"argumentNames" : [ ]				},				"ReNodeRewriteRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmatches := Dictionary new"					],					"body" : [						"super initialize.",						"matches := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2520089,					"argumentNames" : [ ]				},				"StSpotterHeaderPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tcandidatePresentersList := OrderedCollection new.",						"\tnested := false.",						"\tsuper initialize"					],					"body" : [						"candidatePresentersList := OrderedCollection new.",						"nested := false.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6289337,					"argumentNames" : [ ]				},				"SystemWindow class" : {					"sourceCode" : [						"initialize",						"",						"\tCollapseBoxImage := nil.",						"\tCloseBoxImage := nil"					],					"body" : [						"CollapseBoxImage := nil.",						"CloseBoxImage := nil"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2731061,					"argumentNames" : [ ]				},				"ObjectStringConverter" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tobjectTransformBlock: [ :obj | obj ];",						"\t\tstringTransformBlock: [ :string | string ]"					],					"body" : [						"super initialize.",						"self",						"\tobjectTransformBlock: [ :obj | obj ];",						"\tstringTransformBlock: [ :string | string ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2648151,					"argumentNames" : [ ]				},				"FFIWin64CallbackArgumentReader" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcurrentParameterIndex := 1"					],					"body" : [						"super initialize.",						"currentParameterIndex := 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1283026,					"argumentNames" : [ ]				},				"TKTMockService" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tisStarted := false.",						"\tisShutDown := false.",						"\thasRun := false"					],					"body" : [						"super initialize.",						"isStarted := false.",						"isShutDown := false.",						"hasRun := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1235254,					"argumentNames" : [ ]				},				"RSBackInterpolator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tovershoot := 1.70158"					],					"body" : [						"super initialize.",						"overshoot := 1.70158"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6504878,					"argumentNames" : [ ]				},				"RGClassInstanceVariableDefinition" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself isMetaSide: true"					],					"body" : [						"super initialize.",						"self isMetaSide: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2120903,					"argumentNames" : [ ]				},				"StringMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"\temphasis := 0.",						"\thasFocus := false.",						"\tbackgroundColor := Color transparent"					],					"body" : [						"super initialize.",						"emphasis := 0.",						"hasFocus := false.",						"backgroundColor := Color transparent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 1400526,					"argumentNames" : [ ]				},				"IRSequence" : {					"sourceCode" : [						"initialize",						"",						"\tsequence := OrderedCollection new"					],					"body" : [						"sequence := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2040308,					"argumentNames" : [ ]				},				"FFIExternalObjectType" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpointerArity := self class naturalPointerArity"					],					"body" : [						"super initialize.",						"pointerArity := self class naturalPointerArity"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1294061,					"argumentNames" : [ ]				},				"SDL2ScanCodeConstants class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeScanCodes"					],					"body" : [						"self initializeScanCodes"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4859972,					"argumentNames" : [ ]				},				"DictionaryValueHolder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself value: Dictionary new"					],					"body" : [						"super initialize.",						"",						"self value: Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1481457,					"argumentNames" : [ ]				},				"RSArrowedLine" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself markerEnd: self defaultHead"					],					"body" : [						"super initialize.",						"self markerEnd: self defaultHead"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6467418,					"argumentNames" : [ ]				},				"IRFix" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tstorePopToFix := OrderedCollection new.",						"\tretToFix := OrderedCollection new"					],					"body" : [						"super initialize.",						"",						"storePopToFix := OrderedCollection new.",						"retToFix := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2047860,					"argumentNames" : [ ]				},				"STONTestKnownObject" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself id: UUID new.",						"\tself class addKnownObject: self"					],					"body" : [						"super initialize.",						"self id: UUID new.",						"self class addKnownObject: self"					],					"isTestMethod" : false,					"category" : "initalize",					"comment" : [ ],					"hash" : 5178312,					"argumentNames" : [ ]				},				"CmdWorldMenuRegistration class" : {					"sourceCode" : [						"initialize",						"",						"\tself enableWorldShortcuts"					],					"body" : [						"self enableWorldShortcuts"					],					"isTestMethod" : false,					"category" : "world menu",					"comment" : [ ],					"hash" : 5525828,					"argumentNames" : [ ]				},				"StDebuggerTreeTablePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcounter := 0"					],					"body" : [						"super initialize.",						"counter := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6323490,					"argumentNames" : [ ]				},				"CmFakeCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tname: 'Fake command';",						"\t\tdescription: 'I am a fake command for testing purposes.'"					],					"body" : [						"super initialize.",						"self",						"\tname: 'Fake command';",						"\tdescription: 'I am a fake command for testing purposes.'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1669301,					"argumentNames" : [ ]				},				"RSNoWrapStrategy" : {					"sourceCode" : [						"initialize",						"",						"\t\"Subclasses should redefine this method to perform initializations on instance creation\"",						"",						"\t"					],					"body" : [ ],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Subclasses should redefine this method to perform initializations on instance creation"					],					"hash" : 6525832,					"argumentNames" : [ ]				},				"OkCancelToolbar" : {					"sourceCode" : [						"initialize",						"",						"\tcancelled := false asValueHolder.",						"\tcancelAction := [ true ] asValueHolder.",						"\tsuper initialize"					],					"body" : [						"cancelled := false asValueHolder.",						"cancelAction := [ true ] asValueHolder.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1719353,					"argumentNames" : [ ]				},				"MalDominanceNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpreviousNodes := OrderedCollection new.",						"\tuniqueSource := false"					],					"body" : [						"super initialize.",						"previousNodes := OrderedCollection new.",						"uniqueSource := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2563894,					"argumentNames" : [ ]				},				"ZnServerSessionManager" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsessions := Dictionary new"					],					"body" : [						"super initialize.",						"sessions := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2217497,					"argumentNames" : [ ]				},				"ThemeSettings" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tautoSelectionColor: true;",						"\t\twindowColor: self defaultWindowColor;",						"\t\tselectionColor: self defaultSelectionColor;",						"\t\tbuttonColor: self defaultButtonColor;",						"\t\tscrollbarColor: self defaultScrollbarColor;",						"\t\tstandardColorsOnly: false"					],					"body" : [						"super initialize.",						"self",						"\tautoSelectionColor: true;",						"\twindowColor: self defaultWindowColor;",						"\tselectionColor: self defaultSelectionColor;",						"\tbuttonColor: self defaultButtonColor;",						"\tscrollbarColor: self defaultScrollbarColor;",						"\tstandardColorsOnly: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1494483,					"argumentNames" : [ ]				},				"SpecSplitterVertical" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tselector := #newVSplitterAt:.",						"\tlayoutFrame := (0 @ 0 corner: 0 @ 0) asSpecLayoutFrame rightOffset: 1"					],					"body" : [						"super initialize.",						"",						"selector := #newVSplitterAt:.",						"layoutFrame := (0 @ 0 corner: 0 @ 0) asSpecLayoutFrame rightOffset: 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1762245,					"argumentNames" : [ ]				},				"ReRemoveAssignmentWithoutEffectRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself replace: '`var := `var' with: ''"					],					"body" : [						"super initialize.",						"",						"self replace: '`var := `var' with: ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4734450,					"argumentNames" : [ ]				},				"ReUseIsEmptyNotSizeRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny:",						"\t\t#( '`@object size == 0' '`@object size = 0' '`@object size > 0'",						"\t\t   '`@object size >= 1' )"					],					"body" : [						"super initialize.",						"self matchesAny:",						"\t#( '`@object size == 0' '`@object size = 0' '`@object size > 0'",						"\t   '`@object size >= 1' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4750765,					"argumentNames" : [ ]				},				"AthensFlakeDemo" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself extent: self defaultExtent.",						"",						"\tsurface := AthensCairoSurface extent: self extent.",						"",						"\tcircle := surface createPath: [ :builder | ",						"\t\t          builder",						"\t\t\t          absolute;",						"\t\t\t          moveTo: -1 @ 0;",						"\t\t\t          ccwArcTo: 0 @ 1 angle: 90 degreesToRadians;",						"\t\t\t          ccwArcTo: 1 @ 0 angle: 90 degreesToRadians;",						"\t\t\t          ccwArcTo: 0 @ -1 angle: 90 degreesToRadians;",						"\t\t\t          ccwArcTo: -1 @ 0 angle: 90 degreesToRadians ].",						"",						"\tspike := surface createPath: [ :builder | ",						"\t\t         builder",						"\t\t\t         absolute;",						"\t\t\t         moveTo: -0.1 @ 0;",						"\t\t\t         lineTo: -0.05 @ 1;",						"\t\t\t         lineTo: 0.05 @ 1;",						"\t\t\t         lineTo: 0.1 @ 0 ].",						"",						"\tframe := 1.",						"\tself startStepping"					],					"body" : [						"super initialize.",						"self extent: self defaultExtent.",						"",						"surface := AthensCairoSurface extent: self extent.",						"",						"circle := surface createPath: [ :builder | ",						"\t          builder",						"\t\t          absolute;",						"\t\t          moveTo: -1 @ 0;",						"\t\t          ccwArcTo: 0 @ 1 angle: 90 degreesToRadians;",						"\t\t          ccwArcTo: 1 @ 0 angle: 90 degreesToRadians;",						"\t\t          ccwArcTo: 0 @ -1 angle: 90 degreesToRadians;",						"\t\t          ccwArcTo: -1 @ 0 angle: 90 degreesToRadians ].",						"",						"spike := surface createPath: [ :builder | ",						"\t         builder",						"\t\t         absolute;",						"\t\t         moveTo: -0.1 @ 0;",						"\t\t         lineTo: -0.05 @ 1;",						"\t\t         lineTo: 0.05 @ 1;",						"\t\t         lineTo: 0.1 @ 0 ].",						"",						"frame := 1.",						"self startStepping"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4221966,					"argumentNames" : [ ]				},				"ImageMorph class" : {					"sourceCode" : [						"initialize",						"",						"\t\"ImageMorph initialize\"",						"",						"\t| h p d |",						"\tDefaultForm := Form extent: 80 @ 40 depth: 16.",						"\th := DefaultForm height // 2.",						"\t0 to: h - 1 do: [ :i | ",						"\t\tp := i * 2 @ i.",						"\t\td := i asFloat / h asFloat.",						"\t\tDefaultForm",						"\t\t\tfill: (p corner: DefaultForm extent - p)",						"\t\t\tfillColor: (Color r: d g: 0.5 b: 1.0 - d) ]"					],					"body" : [						"| h p d |",						"DefaultForm := Form extent: 80 @ 40 depth: 16.",						"h := DefaultForm height // 2.",						"0 to: h - 1 do: [ :i | ",						"\tp := i * 2 @ i.",						"\td := i asFloat / h asFloat.",						"\tDefaultForm",						"\t\tfill: (p corner: DefaultForm extent - p)",						"\t\tfillColor: (Color r: d g: 0.5 b: 1.0 - d) ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"ImageMorph initialize"					],					"hash" : 2687165,					"argumentNames" : [ ]				},				"OSWindowDriver class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4838304,					"argumentNames" : [ ]				},				"HDTestReport" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tshouldSerializeError := true.",						"\tsuiteTime := 0 asDuration.",						"\tsuitePosition := suiteFailures := suiteErrors := 0.",						"\tprogressFileName := 'progress.log'.",						"\tstageName := self class currentStageName.",						"\tnodeName := self calculateNodeName"					],					"body" : [						"super initialize.",						"shouldSerializeError := true.",						"suiteTime := 0 asDuration.",						"suitePosition := suiteFailures := suiteErrors := 0.",						"progressFileName := 'progress.log'.",						"stageName := self class currentStageName.",						"nodeName := self calculateNodeName"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1262050,					"argumentNames" : [ ]				},				"CornerGripMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself extent: self defaultWidth @ self defaultHeight.",						"\tself layoutFrame: self gripLayoutFrame"					],					"body" : [						"super initialize.",						"self extent: self defaultWidth @ self defaultHeight.",						"self layoutFrame: self gripLayoutFrame"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1360216,					"argumentNames" : [ ]				},				"RSHorizontalGaussianJitterVanDerPloegTreeLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself initializeRSTWalkBasedRegularTreeLayoutRandomizedGaps"					],					"body" : [						"super initialize.",						"",						"self initializeRSTWalkBasedRegularTreeLayoutRandomizedGaps"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3120489,					"argumentNames" : [ ]				},				"SpDynamicSpecExample" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tsuper initialize"					],					"body" : [						"self class initializeSlots: self.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3241832,					"argumentNames" : [ ]				},				"CTHeapQ" : {					"sourceCode" : [						"initialize",						"",						"\ttally := 0.",						"\theap := Array new: self defaultSize.",						"\tindexes := IdentityDictionary new"					],					"body" : [						"tally := 0.",						"heap := Array new: self defaultSize.",						"indexes := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3162204,					"argumentNames" : [ ]				},				"HelpBuilder" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initializes the receiver\"",						"",						"\tsuper initialize.",						"\ttopicToBuild := self topicClass new"					],					"body" : [						"super initialize.",						"topicToBuild := self topicClass new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initializes the receiver"					],					"hash" : 3803352,					"argumentNames" : [ ]				},				"MCMethodDefinition class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1063328,					"argumentNames" : [ ]				},				"IceExternalJob" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstarted := false"					],					"body" : [						"super initialize.",						"started := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6985673,					"argumentNames" : [ ]				},				"JoinSection" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tsrc: JoinSide new;",						"\t\tdst: JoinSide new;",						"\t\tshape: Polygon new;",						"\t\twidth: 0;",						"\t\tborderWidth: 0;",						"\t\tborderColor: Color transparent;",						"\t\ttype: #modification"					],					"body" : [						"super initialize.",						"self",						"\tsrc: JoinSide new;",						"\tdst: JoinSide new;",						"\tshape: Polygon new;",						"\twidth: 0;",						"\tborderWidth: 0;",						"\tborderColor: Color transparent;",						"\ttype: #modification"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 4151285,					"argumentNames" : [ ]				},				"RBLintRuleTestData" : {					"sourceCode" : [						"initialize",						"",						"\tname := ''"					],					"body" : [						"name := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4938375,					"argumentNames" : [ ]				},				"AnnotationUserExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tisSimulatedActiveAnnotation := true"					],					"body" : [						"super initialize.",						"",						"isSimulatedActiveAnnotation := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2872775,					"argumentNames" : [ ]				},				"MalKruskal" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself minSpanningTree"					],					"body" : [						"super initialize.",						"self minSpanningTree"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2553961,					"argumentNames" : [ ]				},				"OSWindowMorphicEventHandler class" : {					"sourceCode" : [						"initialize",						"",						"\t\"",						"\tself initialize",						"\t\"",						"",						"\tsuper initialize.",						"\tSymbolCharacterMapping := Dictionary new.",						"\t{ ",						"\t\tOSK_RETURN.",						"\t\tCharacter cr.",						"\t\tOSK_BACKSPACE.",						"\t\tCharacter backspace.",						"\t\tOSK_TAB.",						"\t\tCharacter tab.",						"\t\tOSK_HOME.",						"\t\tCharacter home.",						"\t\tOSK_LEFT.",						"\t\tCharacter arrowLeft.",						"\t\tOSK_UP.",						"\t\tCharacter arrowUp.",						"\t\tOSK_RIGHT.",						"\t\tCharacter arrowRight.",						"\t\tOSK_DOWN.",						"\t\tCharacter arrowDown.",						"\t\tOSK_END.",						"\t\tCharacter end.",						"\t\tOSK_INSERT.",						"\t\tCharacter insert.",						"\t\tOSK_PAGEUP.",						"\t\tCharacter pageUp.",						"\t\tOSK_PAGEDOWN.",						"\t\tCharacter pageDown.",						"\t\tOSK_DELETE.",						"\t\tCharacter delete.",						"",						"\t\tOSK_KP_0.",						"\t\t$0.",						"\t\tOSK_KP_1.",						"\t\t$1.",						"\t\tOSK_KP_2.",						"\t\t$2.",						"\t\tOSK_KP_3.",						"\t\t$3.",						"\t\tOSK_KP_4.",						"\t\t$4.",						"\t\tOSK_KP_5.",						"\t\t$5.",						"\t\tOSK_KP_6.",						"\t\t$6.",						"\t\tOSK_KP_7.",						"\t\t$7.",						"\t\tOSK_KP_8.",						"\t\t$8.",						"\t\tOSK_KP_9.",						"\t\t$9.",						"\t\tOSK_KP_DIVIDE.",						"\t\t$/.",						"\t\tOSK_KP_MULTIPLY.",						"\t\t$*.",						"\t\tOSK_KP_PLUS.",						"\t\t$+.",						"\t\tOSK_KP_MINUS.",						"\t\t$-.",						"\t\tOSK_KP_ENTER.",						"\t\tCharacter cr.",						"\t\tOSK_KP_PERIOD.",						"\t\t$. } pairsDo: [ :key :val | ",						"\t\tSymbolCharacterMapping at: key put: val charCode ]"					],					"body" : [						"super initialize.",						"SymbolCharacterMapping := Dictionary new.",						"{ ",						"\tOSK_RETURN.",						"\tCharacter cr.",						"\tOSK_BACKSPACE.",						"\tCharacter backspace.",						"\tOSK_TAB.",						"\tCharacter tab.",						"\tOSK_HOME.",						"\tCharacter home.",						"\tOSK_LEFT.",						"\tCharacter arrowLeft.",						"\tOSK_UP.",						"\tCharacter arrowUp.",						"\tOSK_RIGHT.",						"\tCharacter arrowRight.",						"\tOSK_DOWN.",						"\tCharacter arrowDown.",						"\tOSK_END.",						"\tCharacter end.",						"\tOSK_INSERT.",						"\tCharacter insert.",						"\tOSK_PAGEUP.",						"\tCharacter pageUp.",						"\tOSK_PAGEDOWN.",						"\tCharacter pageDown.",						"\tOSK_DELETE.",						"\tCharacter delete.",						"",						"\tOSK_KP_0.",						"\t$0.",						"\tOSK_KP_1.",						"\t$1.",						"\tOSK_KP_2.",						"\t$2.",						"\tOSK_KP_3.",						"\t$3.",						"\tOSK_KP_4.",						"\t$4.",						"\tOSK_KP_5.",						"\t$5.",						"\tOSK_KP_6.",						"\t$6.",						"\tOSK_KP_7.",						"\t$7.",						"\tOSK_KP_8.",						"\t$8.",						"\tOSK_KP_9.",						"\t$9.",						"\tOSK_KP_DIVIDE.",						"\t$/.",						"\tOSK_KP_MULTIPLY.",						"\t$*.",						"\tOSK_KP_PLUS.",						"\t$+.",						"\tOSK_KP_MINUS.",						"\t$-.",						"\tOSK_KP_ENTER.",						"\tCharacter cr.",						"\tOSK_KP_PERIOD.",						"\t$. } pairsDo: [ :key :val | ",						"\tSymbolCharacterMapping at: key put: val charCode ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"",						"\tself initialize",						"\t"					],					"hash" : 4853342,					"argumentNames" : [ ]				},				"MorphTreeListManager" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlastKeystrokeTime := 0.",						"\tlastKeystrokes := ''.",						"\tlastSelection := 0.",						"\tremoveOnlyLastSelected := false"					],					"body" : [						"super initialize.",						"lastKeystrokeTime := 0.",						"lastKeystrokes := ''.",						"lastSelection := 0.",						"removeOnlyLastSelected := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2642375,					"argumentNames" : [ ]				},				"DiffMapMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself mappings: #(  )"					],					"body" : [						"super initialize.",						"self mappings: #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 4150189,					"argumentNames" : [ ]				},				"SpMenuItemPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\taction := [  ].",						"\tname := ''.",						"\tautoRefresh := false"					],					"body" : [						"super initialize.",						"",						"action := [  ].",						"name := ''.",						"autoRefresh := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3278028,					"argumentNames" : [ ]				},				"RSMondrian" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tshapeBuilder := RSShapeBuilder new.",						"\tlayoutBuilder := RSLayoutBuilder new.",						"\tcanvas := RSCanvas new @ RSCanvasController.",						"\tnodesForLayout := RSGroup new.",						"\tdepth := 0"					],					"body" : [						"super initialize.",						"shapeBuilder := RSShapeBuilder new.",						"layoutBuilder := RSLayoutBuilder new.",						"canvas := RSCanvas new @ RSCanvasController.",						"nodesForLayout := RSGroup new.",						"depth := 0"					],					"isTestMethod" : false,					"category" : "building - graph",					"comment" : [ ],					"hash" : 3076370,					"argumentNames" : [ ]				},				"ZnMimeType class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Last forced update: 20170829\"",						"",						"\tself initializeTextSubTypeFragments"					],					"body" : [						"self initializeTextSubTypeFragments"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Last forced update: 20170829"					],					"hash" : 2111300,					"argumentNames" : [ ]				},				"FFIExternalType" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpointerArity := 0"					],					"body" : [						"super initialize.",						"pointerArity := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1289162,					"argumentNames" : [ ]				},				"AthensCurveFlattener class" : {					"sourceCode" : [						"initialize",						"",						"\tCurveCollinearityEpsilon := 1e-30 asFloat.",						"\tCurveDistanceEpsilon := 1e-30 asFloat.",						"\tCurveAngleToleranceEpsilon := 0.01.",						"\tSubdivisionLimit := 10"					],					"body" : [						"CurveCollinearityEpsilon := 1e-30 asFloat.",						"CurveDistanceEpsilon := 1e-30 asFloat.",						"CurveAngleToleranceEpsilon := 0.01.",						"SubdivisionLimit := 10"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 3860867,					"argumentNames" : [ ]				},				"FreeTypeCache class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default",						"\t\tregisterGuiClassNamed: self name",						"\t\tatPriority: 10"					],					"body" : [						"SessionManager default registerGuiClassNamed: self name atPriority: 10"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 2696934,					"argumentNames" : [ ]				},				"LazyListMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself color: self theme textColor.",						"\tfont := StandardFonts listFont.",						"\tlistItems := #(  ).",						"\tselectedRows := PluggableSet integerSet.",						"\tself adjustHeight"					],					"body" : [						"super initialize.",						"self color: self theme textColor.",						"font := StandardFonts listFont.",						"listItems := #(  ).",						"selectedRows := PluggableSet integerSet.",						"self adjustHeight"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1381378,					"argumentNames" : [ ]				},				"DTFilterableListPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tinitialItems := #(  )"					],					"body" : [						"super initialize.",						"initialItems := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3743465,					"argumentNames" : [ ]				},				"RFCondition" : {					"sourceCode" : [						"initialize",						"",						"\tcondition := true"					],					"body" : [						"condition := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3824035,					"argumentNames" : [ ]				},				"SpMorphicPatchLineVisitor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlineNumber := 0.",						"\tlineMarks := OrderedCollection new.",						"\tstream := String new writeStream"					],					"body" : [						"super initialize.",						"lineNumber := 0.",						"lineMarks := OrderedCollection new.",						"stream := String new writeStream"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6171701,					"argumentNames" : [ ]				},				"OSSDL2Driver" : {					"sourceCode" : [						"initialize",						"",						"\tinputSemaphore := Semaphore new.",						"\tglobalListeners := WeakSet new.",						"\tself",						"\t\tinitializeWindowMap;",						"\t\tinitializeJoystickMap.",						"\tSDL2 initEverything.",						"\t\"\t\tinitVideo;",						"\t\tinitJoystick;",						"\t\tinitGameController;",						"\"",						"\tself setupEventLoop"					],					"body" : [						"inputSemaphore := Semaphore new.",						"globalListeners := WeakSet new.",						"self",						"\tinitializeWindowMap;",						"\tinitializeJoystickMap.",						"SDL2 initEverything.",						"\"\t\tinitVideo;",						"\t\tinitJoystick;",						"\t\tinitGameController;",						"\"",						"self setupEventLoop"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4860206,					"argumentNames" : [ ]				},				"MessageList" : {					"sourceCode" : [						"initialize",						"",						"\ttopologySort := true.",						"\tmodel := AbstractTool new.",						"\tsuper initialize"					],					"body" : [						"topologySort := true.",						"model := AbstractTool new.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6184624,					"argumentNames" : [ ]				},				"MCWorkingCopy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tancestry := MCWorkingAncestry new"					],					"body" : [						"super initialize.",						"ancestry := MCWorkingAncestry new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1058589,					"argumentNames" : [ ]				},				"ProportionalSplitterMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself hResizing: #spaceFill.",						"\tself vResizing: #spaceFill.",						"\tsplitsTopAndBottom := false.",						"",						"\tleftOrTop := OrderedCollection new.",						"\trightOrBottom := OrderedCollection new"					],					"body" : [						"super initialize.",						"",						"self hResizing: #spaceFill.",						"self vResizing: #spaceFill.",						"splitsTopAndBottom := false.",						"",						"leftOrTop := OrderedCollection new.",						"rightOrBottom := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1365266,					"argumentNames" : [ ]				},				"RBArrayNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstatements := OrderedCollection new.",						"\tperiods := #(  ).",						"\tleft := right := 0"					],					"body" : [						"super initialize.",						"statements := OrderedCollection new.",						"periods := #(  ).",						"left := right := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1971511,					"argumentNames" : [ ]				},				"ClapContext" : {					"sourceCode" : [						"initialize",						"",						"\targuments := #(  ).",						"\tobeyingExits := false"					],					"body" : [						"arguments := #(  ).",						"obeyingExits := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1188002,					"argumentNames" : [ ]				},				"RGClassDefinition" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tclassVariables := OrderedCollection new.",						"\tsharedPools := OrderedCollection new"					],					"body" : [						"super initialize.",						"classVariables := OrderedCollection new.",						"sharedPools := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2124504,					"argumentNames" : [ ]				},				"RubCharacterScanner class" : {					"sourceCode" : [						"initialize",						"",						"\t\"",						"\tRubCharacterScanner initialize",						"\"",						"",						"\t| a |",						"\ta := RubTextStopConditions new.",						"\ta at: 1 + 1 put: #embeddedObject.",						"\ta at: Character tab asciiValue + 1 put: #tab.",						"\ta at: Character cr asciiValue + 1 put: #cr.",						"\ta at: Character lf asciiValue + 1 put: #cr.",						"",						"\tNilCondition := a copy.",						"\tDefaultStopConditions := a copy.",						"",						"\tPaddedSpaceCondition := a copy.",						"\tPaddedSpaceCondition",						"\t\tat: Character space asciiValue + 1",						"\t\tput: #paddedSpace.",						"",						"\tSpaceCondition := a copy.",						"\tSpaceCondition at: Character space asciiValue + 1 put: #space"					],					"body" : [						"| a |",						"a := RubTextStopConditions new.",						"a at: 1 + 1 put: #embeddedObject.",						"a at: Character tab asciiValue + 1 put: #tab.",						"a at: Character cr asciiValue + 1 put: #cr.",						"a at: Character lf asciiValue + 1 put: #cr.",						"",						"NilCondition := a copy.",						"DefaultStopConditions := a copy.",						"",						"PaddedSpaceCondition := a copy.",						"PaddedSpaceCondition",						"\tat: Character space asciiValue + 1",						"\tput: #paddedSpace.",						"",						"SpaceCondition := a copy.",						"SpaceCondition at: Character space asciiValue + 1 put: #space"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"",						"\tRubCharacterScanner initialize"					],					"hash" : 2915441,					"argumentNames" : [ ]				},				"StInspector class" : {					"sourceCode" : [						"initialize",						"",						"\tself register"					],					"body" : [						"self register"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 6192196,					"argumentNames" : [ ]				},				"RBRefactoryChange" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tonSystemDictionary := Smalltalk globals.",						"\tchangeFactory := RBRefactoryChangeManager changeFactory"					],					"body" : [						"super initialize.",						"onSystemDictionary := Smalltalk globals.",						"changeFactory := RBRefactoryChangeManager changeFactory"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3978679,					"argumentNames" : [ ]				},				"IceGitHubAction" : {					"sourceCode" : [						"initialize",						"",						"\tretries := 3"					],					"body" : [						"retries := 3"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7255435,					"argumentNames" : [ ]				},				"UIManagerSessionHandler class" : {					"sourceCode" : [						"initialize",						"",						"\t\"has to be executed at the end of the user category\"",						"",						"\tSessionManager default",						"\t\tregister: self uniqueInstance",						"\t\tinCategory: SessionManager default userCategory",						"\t\tatPriority: SmallInteger maxVal"					],					"body" : [						"SessionManager default",						"\tregister: self uniqueInstance",						"\tinCategory: SessionManager default userCategory",						"\tatPriority: SmallInteger maxVal"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"has to be executed at the end of the user category"					],					"hash" : 1952528,					"argumentNames" : [ ]				},				"NonInteractiveTranscript" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\taccessSemaphore := Mutex new"					],					"body" : [						"super initialize.",						"accessSemaphore := Mutex new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1715227,					"argumentNames" : [ ]				},				"ZipWriteStream class" : {					"sourceCode" : [						"initialize",						"",						"\t\"ZipWriteStream initialize\"",						"",						"\tVerboseLevel := 0"					],					"body" : [						"VerboseLevel := 0"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"ZipWriteStream initialize"					],					"hash" : 2140129,					"argumentNames" : [ ]				},				"PreDebugResumeDebugAction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself needsUpdate: false.",						"\tself needsValidation: false"					],					"body" : [						"super initialize.",						"self needsUpdate: false.",						"self needsValidation: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3783905,					"argumentNames" : [ ]				},				"QuotedPrintableMimeConverter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tnewline := String cr"					],					"body" : [						"super initialize.",						"newline := String cr"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2163762,					"argumentNames" : [ ]				},				"RSAbstractContextInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself propagateToChildren: true"					],					"body" : [						"super initialize.",						"self propagateToChildren: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6587847,					"argumentNames" : [ ]				},				"HandleMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself extent: 8 @ 8"					],					"body" : [						"super initialize.",						"self extent: 8 @ 8"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2709307,					"argumentNames" : [ ]				},				"RSLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttranslator := RSLayoutTranslator default"					],					"body" : [						"super initialize.",						"translator := RSLayoutTranslator default"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6542896,					"argumentNames" : [ ]				},				"OSEvent" : {					"sourceCode" : [						"initialize",						"",						"\tsuppressDefaultAction := false"					],					"body" : [						"suppressDefaultAction := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4798629,					"argumentNames" : [ ]				},				"RSVerticalLineLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself alignLeft"					],					"body" : [						"super initialize.",						"self alignLeft"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6550633,					"argumentNames" : [ ]				},				"TestServiceExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tforkedProcesses := OrderedCollection new.",						"\tsignaledExceptions := OrderedCollection new.",						"\tisCleanUpDone := false.",						"\tisCompletedTestHandled := false"					],					"body" : [						"super initialize.",						"",						"forkedProcesses := OrderedCollection new.",						"signaledExceptions := OrderedCollection new.",						"isCleanUpDone := false.",						"isCompletedTestHandled := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1153967,					"argumentNames" : [ ]				},				"RSDelaunay class" : {					"sourceCode" : [						"initialize",						"",						"\tepsilon := 1.0 / 1048576.0"					],					"body" : [						"epsilon := 1.0 / 1048576.0"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 3078232,					"argumentNames" : [ ]				},				"ReUnoptimizedToDoRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matches: '(`@a to: `@b) do: `@c'"					],					"body" : [						"super initialize.",						"self matches: '(`@a to: `@b) do: `@c'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4750253,					"argumentNames" : [ ]				},				"RxParser class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tself",						"\t\tinitializeBackslashConstants;",						"\t\tinitializeBackslashSpecials"					],					"body" : [						"self",						"\tinitializeBackslashConstants;",						"\tinitializeBackslashSpecials"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self initialize"					],					"hash" : 2236676,					"argumentNames" : [ ]				},				"AthensStrokePaint" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself setDefaults"					],					"body" : [						"super initialize.",						"self setDefaults"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3846761,					"argumentNames" : [ ]				},				"DatePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdisplayBlockHolder := [ :object | ",						"\t                      object",						"\t\t                      ifNotNil: [ object asStringOrText ]",						"\t\t                      ifNil: '' ] asValueHolder.",						"\tdisplayBlockHolder whenChangedDo: [ self date: self date ].",						"\tself date: self defaultDate"					],					"body" : [						"super initialize.",						"displayBlockHolder := [ :object | ",						"                      object",						"\t                      ifNotNil: [ object asStringOrText ]",						"\t                      ifNil: '' ] asValueHolder.",						"displayBlockHolder whenChangedDo: [ self date: self date ].",						"self date: self defaultDate"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2895524,					"argumentNames" : [ ]				},				"ExceptionSetWithExclusions" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\texclusions := OrderedCollection new"					],					"body" : [						"super initialize.",						"exclusions := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1750554,					"argumentNames" : [ ]				},				"FLFileReferenceStreamStrategy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\treference := FileSystem memory / 'aFile'"					],					"body" : [						"super initialize.",						"",						"reference := FileSystem memory / 'aFile'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5048527,					"argumentNames" : [ ]				},				"LGitStructWithDefaults" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\t\"Options are only ever used during a single setup function call.",						"\tThe contents of the struct are then copied to a libgit2 internal",						"\tstruct.\"",						"\tself autoRelease"					],					"body" : [						"super initialize.",						"",						"\"Options are only ever used during a single setup function call.",						"\tThe contents of the struct are then copied to a libgit2 internal",						"\tstruct.\"",						"self autoRelease"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6823529,					"argumentNames" : [ ]				},				"MicAnnotationBlock" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\targuments := OrderedDictionary new"					],					"body" : [						"super initialize.",						"arguments := OrderedDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7346720,					"argumentNames" : [ ]				},				"IceBasicProject" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize",						"\t\"\trepositoryProperties := self readProperties.",						"\trepositoryProperties properties",						"\t\tat: #format",						"\t\tifAbsent: [ \trepositoryProperties fileFormat: self backwardsCompatibleFormat ]\""					],					"body" : [						"super initialize",						"\"\trepositoryProperties := self readProperties.",						"\trepositoryProperties properties",						"\t\tat: #format",						"\t\tifAbsent: [ \trepositoryProperties fileFormat: self backwardsCompatibleFormat ]\""					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6959280,					"argumentNames" : [ ]				},				"STONTestDomainObject" : {					"sourceCode" : [						"initialize",						"",						"\tcreated := modified := DateAndTime now"					],					"body" : [						"created := modified := DateAndTime now"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 5176576,					"argumentNames" : [ ]				},				"RSAbstractConnection" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tnumberOfCreatedCanvases := 0.",						"\toutputs := OrderedCollection new.",						"\tcanvasOpenings := OrderedCollection new.",						"\tself openWindow"					],					"body" : [						"super initialize.",						"numberOfCreatedCanvases := 0.",						"outputs := OrderedCollection new.",						"canvasOpenings := OrderedCollection new.",						"self openWindow"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3071821,					"argumentNames" : [ ]				},				"DAAbstractItemDiff" : {					"sourceCode" : [						"initialize",						"",						"\tnew := false.",						"\tremoved := false.",						"\tunderteminate := false"					],					"body" : [						"new := false.",						"removed := false.",						"underteminate := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2570201,					"argumentNames" : [ ]				},				"DiskStore class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2083232,					"argumentNames" : [ ]				},				"TabGroupMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tborderWidth: 0;",						"\t\tchangeTableLayout;",						"\t\tcellPositioning: #topLeft;",						"\t\tcellInset: 0 @ -1;",						"\t\treverseTableCells: true;",						"\t\tpageMorphs: OrderedCollection new;",						"\t\ttabSelectorMorph: self newTabSelectorMorph;",						"\t\tcontentMorph: self newContentMorph;",						"\t\taddMorph: self tabSelectorMorph;",						"\t\taddMorph: self contentMorph.",						"\tself tabSelectorMorph addDependent: self"					],					"body" : [						"super initialize.",						"self",						"\tborderWidth: 0;",						"\tchangeTableLayout;",						"\tcellPositioning: #topLeft;",						"\tcellInset: 0 @ -1;",						"\treverseTableCells: true;",						"\tpageMorphs: OrderedCollection new;",						"\ttabSelectorMorph: self newTabSelectorMorph;",						"\tcontentMorph: self newContentMorph;",						"\taddMorph: self tabSelectorMorph;",						"\taddMorph: self contentMorph.",						"self tabSelectorMorph addDependent: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2749412,					"argumentNames" : [ ]				},				"OmStoreFactory class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4975264,					"argumentNames" : [ ]				},				"StHaltCache" : {					"sourceCode" : [						"initialize",						"",						"\tmethodsWithHalts := Dictionary new.",						"\tself buildCache.",						"\tself class initializeSlots: self.",						"\tself property: #isActive whenChangedDo: [ self updateSubscriptions ]"					],					"body" : [						"methodsWithHalts := Dictionary new.",						"self buildCache.",						"self class initializeSlots: self.",						"self property: #isActive whenChangedDo: [ self updateSubscriptions ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6356096,					"argumentNames" : [ ]				},				"RoundedBorderStyle" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself cornerRadius: 0"					],					"body" : [						"super initialize.",						"self cornerRadius: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1454282,					"argumentNames" : [ ]				},				"ProcessMonitorTestService" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself enableBackgroudFailuresSuspension.",						"\tself useDefaultFailingStrategyForRunningProcesses.",						"\tself useDefaultTerminationStrategyForRunningProcesses.",						"\tforkedProcesses := WeakSet new.",						"\ttestFailures := OrderedIdentityDictionary new"					],					"body" : [						"super initialize.",						"",						"self enableBackgroudFailuresSuspension.",						"self useDefaultFailingStrategyForRunningProcesses.",						"self useDefaultTerminationStrategyForRunningProcesses.",						"forkedProcesses := WeakSet new.",						"testFailures := OrderedIdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1154236,					"argumentNames" : [ ]				},				"RGClassStrategy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tcomment := self unresolvedValue: self defaultComment.",						"\tclassVariables := self unresolvedValue: self defaultClassVariables.",						"\tpackage := self unresolvedValue: self defaultPackage.",						"\tsharedPools := self unresolvedValue: self defaultSharedPools"					],					"body" : [						"super initialize.",						"",						"comment := self unresolvedValue: self defaultComment.",						"classVariables := self unresolvedValue: self defaultClassVariables.",						"package := self unresolvedValue: self defaultPackage.",						"sharedPools := self unresolvedValue: self defaultSharedPools"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6041596,					"argumentNames" : [ ]				},				"RSNiceLabel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tscore := 0"					],					"body" : [						"super initialize.",						"score := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6597581,					"argumentNames" : [ ]				},				"TaSequence" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmembers := OrderedCollection new"					],					"body" : [						"super initialize.",						"members := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2096153,					"argumentNames" : [ ]				},				"OSTouchFingerTracker" : {					"sourceCode" : [						"initialize",						"",						"\tmove := OrderedCollection new"					],					"body" : [						"move := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4836089,					"argumentNames" : [ ]				},				"FLLargeIdentityDictionary" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tkeys := Array new: 4096.",						"\tvalues := Array new: 4096"					],					"body" : [						"super initialize.",						"keys := Array new: 4096.",						"values := Array new: 4096"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1353167,					"argumentNames" : [ ]				},				"TKTAbstractExecutor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbusy := false.",						"\texceptionHandler := TKTConfiguration errorHandler"					],					"body" : [						"super initialize.",						"busy := false.",						"exceptionHandler := TKTConfiguration errorHandler"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1203017,					"argumentNames" : [ ]				},				"SystemWindow" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize a system window. Add label, stripes, etc., if desired\"",						"",						"\tsuper initialize.",						"\tlabelString ifNil: [ labelString := 'Untitled Window' ].",						"\tisCollapsed := false.",						"\tpaneMorphs := Array new.",						"\tself layoutPolicy: ProportionalLayout new.",						"\tself clipSubmorphs: true.",						"\tself theme",						"\t\tconfigureWindowBorderFor: self;",						"\t\tconfigureWindowDropShadowFor: self.",						"\tself initializeLabelArea.",						"",						"\tself cellPositioning: #topLeft. \"make the offsets easy to calculate!\"",						"\tself addGripsIfWanted.",						"",						"\tself extent: (300 @ 200) scaledByDisplayScaleFactor.",						"\tmustNotClose := false.",						"\tupdatablePanes := Array new"					],					"body" : [						"super initialize.",						"labelString ifNil: [ labelString := 'Untitled Window' ].",						"isCollapsed := false.",						"paneMorphs := Array new.",						"self layoutPolicy: ProportionalLayout new.",						"self clipSubmorphs: true.",						"self theme",						"\tconfigureWindowBorderFor: self;",						"\tconfigureWindowDropShadowFor: self.",						"self initializeLabelArea.",						"",						"self cellPositioning: #topLeft. \"make the offsets easy to calculate!\"",						"self addGripsIfWanted.",						"",						"self extent: (300 @ 200) scaledByDisplayScaleFactor.",						"mustNotClose := false.",						"updatablePanes := Array new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize a system window. Add label, stripes, etc., if desired"					],					"hash" : 2733439,					"argumentNames" : [ ]				},				"OSWindowAthensRenderer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsession := Smalltalk session"					],					"body" : [						"super initialize.",						"session := Smalltalk session"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4854067,					"argumentNames" : [ ]				},				"VariableBreakpointMockSubclass" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tv2 := 0"					],					"body" : [						"super initialize.",						"v2 := 0"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 4327115,					"argumentNames" : [ ]				},				"RandomBinomial" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself n: 1"					],					"body" : [						"super initialize.",						"",						"self n: 1"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 3117003,					"argumentNames" : [ ]				},				"SpAthensPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself surfaceExtent: self class defaultSurfaceExtent"					],					"body" : [						"super initialize.",						"self surfaceExtent: self class defaultSurfaceExtent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3011567,					"argumentNames" : [ ]				},				"MicInlineElement" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tchildren := #(  )"					],					"body" : [						"super initialize.",						"children := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7345584,					"argumentNames" : [ ]				},				"SettingDontTranslateDescriptionRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself",						"\t\treplace: '`@recv description: `#str translated'",						"\t\twith: '`@recv description: `#str'"					],					"body" : [						"super initialize.",						"",						"self",						"\treplace: '`@recv description: `#str translated'",						"\twith: '`@recv description: `#str'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4933618,					"argumentNames" : [ ]				},				"IceTipDiffSelectingPanel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcheckedIceNodes := Set new.",						"\tself model treeRoots do: [ :root | ",						"\t\tcheckedIceNodes add: root.",						"\t\troot allChildrenDo: [ :child | checkedIceNodes add: child ] ]"					],					"body" : [						"super initialize.",						"checkedIceNodes := Set new.",						"self model treeRoots do: [ :root | ",						"\tcheckedIceNodes add: root.",						"\troot allChildrenDo: [ :child | checkedIceNodes add: child ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7108659,					"argumentNames" : [ ]				},				"FTPluggableIconListMorphAdaptor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeSelections.",						"\tself hideColumnHeaders.",						"\tself dataSource: FTPluggableIconListMorphAdaptorDataSource new"					],					"body" : [						"super initialize.",						"self initializeSelections.",						"self hideColumnHeaders.",						"self dataSource: FTPluggableIconListMorphAdaptorDataSource new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1371281,					"argumentNames" : [ ]				},				"FastTablePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcolumns := { SpecFTColumn new }"					],					"body" : [						"super initialize.",						"columns := { SpecFTColumn new }"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1688790,					"argumentNames" : [ ]				},				"SpFixedProgressBarState" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tsuper initialize.",						"\tvalue := 0"					],					"body" : [						"self class initializeSlots: self.",						"super initialize.",						"value := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2984578,					"argumentNames" : [ ]				},				"ParametrizedTestMatrix" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\toptions := OrderedCollection new.",						"\tcases := OrderedCollection new"					],					"body" : [						"super initialize.",						"options := OrderedCollection new.",						"cases := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1169268,					"argumentNames" : [ ]				},				"MWHandlerReceiverArgumentsCopying" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttable := Dictionary new.",						"",						"\tself copier: [ :each | each copy ]"					],					"body" : [						"super initialize.",						"",						"table := Dictionary new.",						"",						"self copier: [ :each | each copy ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4177140,					"argumentNames" : [ ]				},				"OSWindowAttributes" : {					"sourceCode" : [						"initialize",						"",						"\tvisible := self class defaultVisible.",						"\tposition := self class defaultPosition.",						"\textent := self class defaultExtent.",						"\tfullscreen := self class defaultFullscreen.",						"\ttitle := self class defaultTitle.",						"\twindowCentered := self class defaultWindowCentered.",						"",						"\tborderless := self class defaultBorderless.",						"\tresizable := self class defaultResizable.",						"\tminimized := self class defaultMinimized.",						"\tmaximized := self class defaultMaximized"					],					"body" : [						"visible := self class defaultVisible.",						"position := self class defaultPosition.",						"extent := self class defaultExtent.",						"fullscreen := self class defaultFullscreen.",						"title := self class defaultTitle.",						"windowCentered := self class defaultWindowCentered.",						"",						"borderless := self class defaultBorderless.",						"resizable := self class defaultResizable.",						"minimized := self class defaultMinimized.",						"maximized := self class defaultMaximized"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4840578,					"argumentNames" : [ ]				},				"RSBorder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpaint := Color gray.",						"\twidth := 1"					],					"body" : [						"super initialize.",						"paint := Color gray.",						"width := 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6480717,					"argumentNames" : [ ]				},				"NSPerlinNoise3" : {					"sourceCode" : [						"initialize",						"",						"\t| r |",						"\tsuper initialize.",						"\tfallOff := 0.5.",						"\tself octaves: 1.",						"\tr := Random new.",						"\tp := Dictionary new.",						"\t0 to: 511 do: [ :i | p at: i put: (r next * 256) asInteger ]"					],					"body" : [						"| r |",						"super initialize.",						"fallOff := 0.5.",						"self octaves: 1.",						"r := Random new.",						"p := Dictionary new.",						"0 to: 511 do: [ :i | p at: i put: (r next * 256) asInteger ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6952185,					"argumentNames" : [ ]				},				"SystemProgressMorph class" : {					"sourceCode" : [						"initialize",						"",						"\t\"SystemProgressMorph initialize\"",						"",						"\tself reset"					],					"body" : [						"self reset"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"SystemProgressMorph initialize"					],					"hash" : 2757956,					"argumentNames" : [ ]				},				"MCPackageCache" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsorter := MCVersionSorter new.",						"\tfileNames := Dictionary new"					],					"body" : [						"super initialize.",						"sorter := MCVersionSorter new.",						"fileNames := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1075332,					"argumentNames" : [ ]				},				"LabelPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlabelHolder := '' asValueHolder.",						"\temphasis := #(  ).",						"\tlabelHolder whenChangedDo: [ self changed: #getText ]"					],					"body" : [						"super initialize.",						"labelHolder := '' asValueHolder.",						"emphasis := #(  ).",						"labelHolder whenChangedDo: [ self changed: #getText ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1687124,					"argumentNames" : [ ]				},				"SmallInteger class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default",						"\t\tregisterSystemClassNamed: self name",						"\t\tatPriority: 10.",						"\tself startUp: true"					],					"body" : [						"SessionManager default",						"\tregisterSystemClassNamed: self name",						"\tatPriority: 10.",						"self startUp: true"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1583873,					"argumentNames" : [ ]				},				"SHRBTextStyler class" : {					"sourceCode" : [						"initialize",						"",						"\tstyleTable := nil.",						"\ttextAttributesByPixelHeight := nil"					],					"body" : [						"styleTable := nil.",						"textAttributesByPixelHeight := nil"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2479911,					"argumentNames" : [ ]				},				"SpecLayoutProperties" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thResizing := vResizing := #rigid.",						"\tdisableLayout := false"					],					"body" : [						"super initialize.",						"hResizing := vResizing := #rigid.",						"disableLayout := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1772732,					"argumentNames" : [ ]				},				"PermaLink" : {					"sourceCode" : [						"initialize",						"",						"\tisInstanceSpecific := false"					],					"body" : [						"isInstanceSpecific := false"					],					"isTestMethod" : false,					"category" : "initalize",					"comment" : [ ],					"hash" : 3823014,					"argumentNames" : [ ]				},				"ClyBrowserMock" : {					"sourceCode" : [						"initialize",						"",						"\thasSpawned := false"					],					"body" : [						"hasSpawned := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6028964,					"argumentNames" : [ ]				},				"RubWorkspaceExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttextModel := RubScrolledTextModel new",						"\t\t             interactionModel: self;",						"\t\t             yourself.",						"\tmustDeclareVariables := false"					],					"body" : [						"super initialize.",						"textModel := RubScrolledTextModel new",						"\t             interactionModel: self;",						"\t             yourself.",						"mustDeclareVariables := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2669543,					"argumentNames" : [ ]				},				"RSSVGExporter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tinitializeSpecialCharacters;",						"\t\tmaxSize: 500;",						"\t\tdoNotUsePathLabel;",						"\t\tenableFontDefs;",						"\t\tfontURLServer: 'https://fonts.googleapis.com/css2?family='"					],					"body" : [						"super initialize.",						"self",						"\tinitializeSpecialCharacters;",						"\tmaxSize: 500;",						"\tdoNotUsePathLabel;",						"\tenableFontDefs;",						"\tfontURLServer: 'https://fonts.googleapis.com/css2?family='"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3111684,					"argumentNames" : [ ]				},				"SpPanedResizerMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #spaceFill;",						"\t\tsetLayoutSizing;",						"\t\textent: self defaultWidth @ self defaultHeight"					],					"body" : [						"super initialize.",						"self",						"\thResizing: #spaceFill;",						"\tvResizing: #spaceFill;",						"\tsetLayoutSizing;",						"\textent: self defaultWidth @ self defaultHeight"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 3376495,					"argumentNames" : [ ]				},				"RSYLabelDecoration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself vertical.",						"\tself left"					],					"body" : [						"super initialize.",						"self vertical.",						"self left"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6611491,					"argumentNames" : [ ]				},				"CoASTNodeFetcherHeuristic" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tnext := CoNullFetcherHeuristic new"					],					"body" : [						"super initialize.",						"next := CoNullFetcherHeuristic new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6090265,					"argumentNames" : [ ]				},				"StSpotter" : {					"sourceCode" : [						"initialize",						"",						"\tmutex ifNil: [ mutex := Mutex new ].",						"\tqueue := OrderedCollection new.",						"\tupdating := false.",						"\tcategories := Dictionary new.",						"\tsuper initialize"					],					"body" : [						"mutex ifNil: [ mutex := Mutex new ].",						"queue := OrderedCollection new.",						"updating := false.",						"categories := Dictionary new.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6289336,					"argumentNames" : [ ]				},				"SpVerticalAlignment" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tsuper initialize.",						"\tdesiredVisibleRow := 1"					],					"body" : [						"self class initializeSlots: self.",						"super initialize.",						"desiredVisibleRow := 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3256610,					"argumentNames" : [ ]				},				"RubFindReplaceService" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttextAreaHolder := WeakArray new: 1"					],					"body" : [						"super initialize.",						"",						"textAreaHolder := WeakArray new: 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1464480,					"argumentNames" : [ ]				},				"RBBlockReplaceRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\treplaceBlock := [ :aNode | aNode ]"					],					"body" : [						"super initialize.",						"replaceBlock := [ :aNode | aNode ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1955722,					"argumentNames" : [ ]				},				"RBCategoryEnvironment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcategories := IdentitySet new"					],					"body" : [						"super initialize.",						"categories := IdentitySet new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3926602,					"argumentNames" : [ ]				},				"MalCircuitSpanningEdges" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcircuits := OrderedCollection new. \"use that instead of Set\"",						"\tdijkstra := MalDijkstra new"					],					"body" : [						"super initialize.",						"circuits := OrderedCollection new. \"use that instead of Set\"",						"dijkstra := MalDijkstra new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2555786,					"argumentNames" : [ ]				},				"SpIndeterminatedProgressBarMorph" : {					"sourceCode" : [						"initialize",						"",						"\tself flag: #pharoTodo. \"I think this class should be merged in ProgressBarMorph in Pharo 8.\"",						"\tsuper initialize.",						"\toddPassage := true"					],					"body" : [						"self flag: #pharoTodo. \"I think this class should be merged in ProgressBarMorph in Pharo 8.\"",						"super initialize.",						"oddPassage := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3381001,					"argumentNames" : [ ]				},				"RBPragmaNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\targuments := #(  ).",						"\tkeywordsPositions := #(  ).",						"\tleft := 0.",						"\tright := 0"					],					"body" : [						"super initialize.",						"",						"arguments := #(  ).",						"keywordsPositions := #(  ).",						"left := 0.",						"right := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1955549,					"argumentNames" : [ ]				},				"EpLostChangesDetector class" : {					"sourceCode" : [						"initialize",						"",						"\t\"",						"\tself initialize",						"\t\"",						"",						"\tSessionManager default registerToolClassNamed: self name"					],					"body" : [						"SessionManager default registerToolClassNamed: self name"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"",						"\tself initialize",						"\t"					],					"hash" : 5026976,					"argumentNames" : [ ]				},				"RewriteRuleChangesBrowser" : {					"sourceCode" : [						"initialize",						"",						"\tchanges := #(  ).",						"\tsuper initialize"					],					"body" : [						"changes := #(  ).",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2485742,					"argumentNames" : [ ]				},				"UITheme class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tself current class = UITheme ifTrue: [ ",						"\t\tself current: nil",						"\t\t\"due to change to being abstract\" ]"					],					"body" : [						"self current class = UITheme ifTrue: [ ",						"\tself current: nil",						"\t\"due to change to being abstract\" ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self initialize"					],					"hash" : 1492089,					"argumentNames" : [ ]				},				"Margin" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tsetTop: 0",						"\t\tleft: 0",						"\t\tbottom: 0",						"\t\tright: 0"					],					"body" : [						"super initialize.",						"self",						"\tsetTop: 0",						"\tleft: 0",						"\tbottom: 0",						"\tright: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1852707,					"argumentNames" : [ ]				},				"DailyNonInteractiveTranscript" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdate := Date today"					],					"body" : [						"super initialize.",						"date := Date today"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1714739,					"argumentNames" : [ ]				},				"RSUMLPackageBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tmodelDescriptor: RSUMLPackageDescriptor new;",						"\t\trenderer: RSBasicUMLPackageRenderer new"					],					"body" : [						"super initialize.",						"self",						"\tmodelDescriptor: RSUMLPackageDescriptor new;",						"\trenderer: RSBasicUMLPackageRenderer new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6581135,					"argumentNames" : [ ]				},				"CalendarMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttouchPoints := Dictionary new"					],					"body" : [						"super initialize.",						"touchPoints := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2707532,					"argumentNames" : [ ]				},				"ReNotEliminationRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: '``@object not not' with: '``@object';",						"\t\treplace: '``@object isEmpty not' with: '``@object isNotEmpty';",						"\t\treplace: '``@object not ifTrue: ``@block'",						"\t\twith: '``@object ifFalse: ``@block';",						"\t\treplace: '``@object not ifFalse: ``@block'",						"\t\twith: '``@object ifTrue: ``@block';",						"\t\treplace:",						"\t\t\t'``@collection select: [:`each | | `@temps | ``@.Statements. ``@object not]'",						"\t\twith:",						"\t\t\t'``@collection reject: [:`each | | `@temps | ``@.Statements. ``@object]';",						"\t\treplace:",						"\t\t\t'``@collection reject: [:`each | | `@temps | ``@.Statements. ``@object not]'",						"\t\twith:",						"\t\t\t'``@collection select: [:`each | | `@temps | ``@.Statements. ``@object]';",						"\t\treplace:",						"\t\t\t'[| `@temps | ``@.Statements. ``@object not] whileTrue: ``@block'",						"\t\twith: '[| `@temps | ``@.Statements. ``@object] whileFalse: ``@block';",						"\t\treplace:",						"\t\t\t'[| `@temps | ``@.Statements. ``@object not] whileFalse: ``@block'",						"\t\twith: '[| `@temps | ``@.Statements. ``@object] whileTrue: ``@block';",						"\t\treplace: '[| `@temps | ``@.Statements. ``@object not] whileTrue'",						"\t\twith: '[| `@temps | ``@.Statements. ``@object] whileFalse';",						"\t\treplace: '[| `@temps | ``@.Statements. ``@object not] whileFalse'",						"\t\twith: '[| `@temps | ``@.Statements. ``@object] whileTrue';",						"\t\treplace: '(``@a <= ``@b) not' with: '``@a > ``@b';",						"\t\treplace: '(``@a < ``@b) not' with: '``@a >= ``@b';",						"\t\treplace: '(``@a = ``@b) not' with: '``@a ~= ``@b';",						"\t\treplace: '(``@a == ``@b) not' with: '``@a ~~ ``@b';",						"\t\treplace: '(``@a ~= ``@b) not' with: '``@a = ``@b';",						"\t\treplace: '(``@a ~~ ``@b) not' with: '``@a == ``@b';",						"\t\treplace: '(``@a >= ``@b) not' with: '``@a < ``@b';",						"\t\treplace: '(``@a > ``@b) not' with: '``@a <= ``@b'"					],					"body" : [						"super initialize.",						"self",						"\treplace: '``@object not not' with: '``@object';",						"\treplace: '``@object isEmpty not' with: '``@object isNotEmpty';",						"\treplace: '``@object not ifTrue: ``@block'",						"\twith: '``@object ifFalse: ``@block';",						"\treplace: '``@object not ifFalse: ``@block'",						"\twith: '``@object ifTrue: ``@block';",						"\treplace:",						"\t\t'``@collection select: [:`each | | `@temps | ``@.Statements. ``@object not]'",						"\twith:",						"\t\t'``@collection reject: [:`each | | `@temps | ``@.Statements. ``@object]';",						"\treplace:",						"\t\t'``@collection reject: [:`each | | `@temps | ``@.Statements. ``@object not]'",						"\twith:",						"\t\t'``@collection select: [:`each | | `@temps | ``@.Statements. ``@object]';",						"\treplace:",						"\t\t'[| `@temps | ``@.Statements. ``@object not] whileTrue: ``@block'",						"\twith: '[| `@temps | ``@.Statements. ``@object] whileFalse: ``@block';",						"\treplace:",						"\t\t'[| `@temps | ``@.Statements. ``@object not] whileFalse: ``@block'",						"\twith: '[| `@temps | ``@.Statements. ``@object] whileTrue: ``@block';",						"\treplace: '[| `@temps | ``@.Statements. ``@object not] whileTrue'",						"\twith: '[| `@temps | ``@.Statements. ``@object] whileFalse';",						"\treplace: '[| `@temps | ``@.Statements. ``@object not] whileFalse'",						"\twith: '[| `@temps | ``@.Statements. ``@object] whileTrue';",						"\treplace: '(``@a <= ``@b) not' with: '``@a > ``@b';",						"\treplace: '(``@a < ``@b) not' with: '``@a >= ``@b';",						"\treplace: '(``@a = ``@b) not' with: '``@a ~= ``@b';",						"\treplace: '(``@a == ``@b) not' with: '``@a ~~ ``@b';",						"\treplace: '(``@a ~= ``@b) not' with: '``@a = ``@b';",						"\treplace: '(``@a ~~ ``@b) not' with: '``@a == ``@b';",						"\treplace: '(``@a >= ``@b) not' with: '``@a < ``@b';",						"\treplace: '(``@a > ``@b) not' with: '``@a <= ``@b'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4735389,					"argumentNames" : [ ]				},				"Monitor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmutex := Semaphore forMutualExclusion.",						"\tqueuesMutex := Semaphore forMutualExclusion.",						"\tnestingLevel := 0"					],					"body" : [						"super initialize.",						"mutex := Semaphore forMutualExclusion.",						"queuesMutex := Semaphore forMutualExclusion.",						"nestingLevel := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1861295,					"argumentNames" : [ ]				},				"Delay class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Delay initialize\"",						"",						"\tself scheduler ifNotNil: [ self scheduler stopTimerEventLoop ].",						"\tself scheduler: DelaySemaphoreScheduler new.",						"\tself scheduler startTimerEventLoop.",						"\tSessionManager default",						"\t\tregisterSystemClassNamed: self name",						"\t\tatPriority: 20"					],					"body" : [						"self scheduler ifNotNil: [ self scheduler stopTimerEventLoop ].",						"self scheduler: DelaySemaphoreScheduler new.",						"self scheduler startTimerEventLoop.",						"SessionManager default",						"\tregisterSystemClassNamed: self name",						"\tatPriority: 20"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [						"Delay initialize"					],					"hash" : 1723477,					"argumentNames" : [ ]				},				"FullscreenMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tchangeProportionalLayout;",						"\t\tbounds: self currentWorld clearArea;",						"\t\tbeSticky"					],					"body" : [						"super initialize.",						"self",						"\tchangeProportionalLayout;",						"\tbounds: self currentWorld clearArea;",						"\tbeSticky"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1372022,					"argumentNames" : [ ]				},				"ZnPositionableReadStream" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcount := index := delta := 0"					],					"body" : [						"super initialize.",						"count := index := delta := 0"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 2011325,					"argumentNames" : [ ]				},				"FloatPrintPolicy" : {					"sourceCode" : [						"initialize",						"",						"\tdefault := ExactFloatPrintPolicy new"					],					"body" : [						"default := ExactFloatPrintPolicy new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1764341,					"argumentNames" : [ ]				},				"RSHistogramPlot" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself binningStrategy: RSDefaultBinning new"					],					"body" : [						"super initialize.",						"self binningStrategy: RSDefaultBinning new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6607130,					"argumentNames" : [ ]				},				"AbstractFormButtonPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tactionWhenActivatedHolder := [  ] asValueHolder.",						"\tactionWhenDeactivatedHolder := [  ] asValueHolder.",						"\tenabledHolder := true asValueHolder.",						"\tstateHolder := false asValueHolder.",						"\tlabelClickableHolder := true asValueHolder.",						"\tlabelHolder := '' asValueHolder.",						"\tstateHolder whenChangedDo: [ :bool | ",						"\t\tbool",						"\t\t\tifTrue: actionWhenActivatedHolder value",						"\t\t\tifFalse: actionWhenDeactivatedHolder value.",						"\t\tself changed: #state ].",						"",						"\tlabelClickableHolder whenChangedDo: [ :aBoolean | ",						"\t\tself changed: { ",						"\t\t\t\t#labelClickable:.",						"\t\t\t\taBoolean } ].",						"\tlabelHolder whenChangedDo: [ :label | ",						"\t\tself changed: { ",						"\t\t\t\t#label:.",						"\t\t\t\tlabel } ]"					],					"body" : [						"super initialize.",						"actionWhenActivatedHolder := [  ] asValueHolder.",						"actionWhenDeactivatedHolder := [  ] asValueHolder.",						"enabledHolder := true asValueHolder.",						"stateHolder := false asValueHolder.",						"labelClickableHolder := true asValueHolder.",						"labelHolder := '' asValueHolder.",						"stateHolder whenChangedDo: [ :bool | ",						"\tbool",						"\t\tifTrue: actionWhenActivatedHolder value",						"\t\tifFalse: actionWhenDeactivatedHolder value.",						"\tself changed: #state ].",						"",						"labelClickableHolder whenChangedDo: [ :aBoolean | ",						"\tself changed: { ",						"\t\t\t#labelClickable:.",						"\t\t\taBoolean } ].",						"labelHolder whenChangedDo: [ :label | ",						"\tself changed: { ",						"\t\t\t#label:.",						"\t\t\tlabel } ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1677559,					"argumentNames" : [ ]				},				"HaloMorph class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tself installHaloTheme: #iconicHaloSpecifications"					],					"body" : [						"self installHaloTheme: #iconicHaloSpecifications"					],					"isTestMethod" : false,					"category" : "halo theme",					"comment" : [						"self initialize"					],					"hash" : 1373575,					"argumentNames" : [ ]				},				"TaskbarItemMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself borderStyle: (self theme taskbarItemNormalBorderStyleFor: self)"					],					"body" : [						"super initialize.",						"self borderStyle: (self theme taskbarItemNormalBorderStyleFor: self)"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2707532,					"argumentNames" : [ ]				},				"CoMockClass" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmethodDictionary := OrderedDictionary new"					],					"body" : [						"super initialize.",						"methodDictionary := OrderedDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6138396,					"argumentNames" : [ ]				},				"ReSizeCheckRule" : {					"sourceCode" : [						"initialize",						"",						"\t| patterns |",						"\tsuper initialize.",						"\tpatterns := OrderedCollection new.",						"\tpatterns addAll: (self selectors collect: [ :each | ",						"\t\t\t '`@object size > 0 ifTrue: [`@object'",						"\t\t\t , (self genericPatternForSelector: each) , '. `@.Statements2]' ]).",						"\tpatterns addAll: (self selectors collect: [ :each | ",						"\t\t\t '`@object isEmpty ifFalse: [`@object'",						"\t\t\t , (self genericPatternForSelector: each) , '. `@.Statements2]' ]).",						"\tpatterns addAll: (self selectors collect: [ :each | ",						"\t\t\t '`@object notEmpty ifTrue: [`@object'",						"\t\t\t , (self genericPatternForSelector: each) , '. `@.Statements2]' ]).",						"\tpatterns addAll: (self selectors collect: [ :each | ",						"\t\t\t '`@object size = 0 ifFalse: [`@object'",						"\t\t\t , (self genericPatternForSelector: each) , '. `@.Statements2]' ]).",						"\tself matchesAny: patterns"					],					"body" : [						"| patterns |",						"super initialize.",						"patterns := OrderedCollection new.",						"patterns addAll: (self selectors collect: [ :each | ",						"\t\t '`@object size > 0 ifTrue: [`@object'",						"\t\t , (self genericPatternForSelector: each) , '. `@.Statements2]' ]).",						"patterns addAll: (self selectors collect: [ :each | ",						"\t\t '`@object isEmpty ifFalse: [`@object'",						"\t\t , (self genericPatternForSelector: each) , '. `@.Statements2]' ]).",						"patterns addAll: (self selectors collect: [ :each | ",						"\t\t '`@object notEmpty ifTrue: [`@object'",						"\t\t , (self genericPatternForSelector: each) , '. `@.Statements2]' ]).",						"patterns addAll: (self selectors collect: [ :each | ",						"\t\t '`@object size = 0 ifFalse: [`@object'",						"\t\t , (self genericPatternForSelector: each) , '. `@.Statements2]' ]).",						"self matchesAny: patterns"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5010032,					"argumentNames" : [ ]				},				"RBDumpVisitor" : {					"sourceCode" : [						"initialize",						"",						"\tstream := String new writeStream"					],					"body" : [						"stream := String new writeStream"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1944967,					"argumentNames" : [ ]				},				"SocketStream" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tautoFlush := true.",						"\tshouldSignal := true.",						"\trecentlyRead := 0.",						"\tbufferSize := 4096.",						"\tself ascii"					],					"body" : [						"super initialize.",						"autoFlush := true.",						"shouldSignal := true.",						"recentlyRead := 0.",						"bufferSize := 4096.",						"self ascii"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2162501,					"argumentNames" : [ ]				},				"RSCornerRadius" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself radius: 0"					],					"body" : [						"super initialize.",						"self radius: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6481098,					"argumentNames" : [ ]				},				"StSpotter class" : {					"sourceCode" : [						"initialize",						"",						"\tself showPreview.",						"\tself showTips"					],					"body" : [						"self showPreview.",						"self showTips"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 6287101,					"argumentNames" : [ ]				},				"SindarinDebugger" : {					"sourceCode" : [						"initialize",						"",						"\tstepHooks := OrderedCollection new"					],					"body" : [						"stepHooks := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6171893,					"argumentNames" : [ ]				},				"SDL2TouchGestureExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcircleCenter := (self defaultExtent x / 2) asFloat",						"\t                @ (self defaultExtent y / 2) asFloat.",						"\tcircleSize := 10.0"					],					"body" : [						"super initialize.",						"circleCenter := (self defaultExtent x / 2) asFloat",						"                @ (self defaultExtent y / 2) asFloat.",						"circleSize := 10.0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4914145,					"argumentNames" : [ ]				},				"SDL2Constants class" : {					"sourceCode" : [						"initialize",						"",						"\t\"",						"\tself initialize",						"\t\"",						"",						"\tself",						"\t\tinitializeAudio;",						"\t\tinitializeCommon;",						"\t\tinitializeEvent;",						"\t\tinitializeGameController;",						"\t\tinitializeKeyboard;",						"\t\tinitializeKeycodes;",						"\t\tinitializeKeycodes2;",						"\t\tinitializeKeycodes3;",						"\t\tinitializeMouse;",						"\t\tinitializeOpenGL;",						"\t\tinitializeOpenGLProfile;",						"\t\tinitializePixelFormat;",						"\t\tinitializeRenderer;",						"\t\tinitializeTexture;",						"\t\tinitializeWindow;",						"\t\tinitializeWM"					],					"body" : [						"self",						"\tinitializeAudio;",						"\tinitializeCommon;",						"\tinitializeEvent;",						"\tinitializeGameController;",						"\tinitializeKeyboard;",						"\tinitializeKeycodes;",						"\tinitializeKeycodes2;",						"\tinitializeKeycodes3;",						"\tinitializeMouse;",						"\tinitializeOpenGL;",						"\tinitializeOpenGLProfile;",						"\tinitializePixelFormat;",						"\tinitializeRenderer;",						"\tinitializeTexture;",						"\tinitializeWindow;",						"\tinitializeWM"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"",						"\tself initialize",						"\t"					],					"hash" : 4860684,					"argumentNames" : [ ]				},				"ClyOldMessageBrowserAdapter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttitle := 'MessageBrowser'"					],					"body" : [						"super initialize.",						"",						"title := 'MessageBrowser'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6030509,					"argumentNames" : [ ]				},				"SHTextStyler" : {					"sourceCode" : [						"initialize",						"",						"\tstylingEnabled := true"					],					"body" : [						"stylingEnabled := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2479271,					"argumentNames" : [ ]				},				"ReToDoRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matches:",						"\t\t'1 to: ``@object size do: [:`each | | `@temps | `@.Statements]'"					],					"body" : [						"super initialize.",						"self matches:",						"\t'1 to: ``@object size do: [:`each | | `@temps | `@.Statements]'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4748205,					"argumentNames" : [ ]				},				"DropListItem" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tactionHolder := [  ] asValueHolder.",						"\tdisplayBlock := [ :e | e printString ]"					],					"body" : [						"super initialize.",						"",						"actionHolder := [  ] asValueHolder.",						"displayBlock := [ :e | e printString ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1723894,					"argumentNames" : [ ]				},				"RSAbstractGridLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tgapSize := self defaultGapSize.",						"\tlineItemsCountBlock := self defaultLineItemsCount"					],					"body" : [						"super initialize.",						"gapSize := self defaultGapSize.",						"lineItemsCountBlock := self defaultLineItemsCount"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6547974,					"argumentNames" : [ ]				},				"SpPaginatorPageMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tcolor: Color transparent;",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\tcellInset: self class defaultInset;",						"\t\tcellSpacing: self class defaultInset;",						"\t\thResizing: #rigid;",						"\t\tvResizing: #spaceFill;",						"\t\twidth: self class baseWidth.",						"",						"\tself addMorphBack: self newContentMorph"					],					"body" : [						"super initialize.",						"self",						"\tcolor: Color transparent;",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\tcellInset: self class defaultInset;",						"\tcellSpacing: self class defaultInset;",						"\thResizing: #rigid;",						"\tvResizing: #spaceFill;",						"\twidth: self class baseWidth.",						"",						"self addMorphBack: self newContentMorph"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3363187,					"argumentNames" : [ ]				},				"OSTouchScrollDetector class" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tPersistentDirection := false"					],					"body" : [						"super initialize.",						"PersistentDirection := false"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4845060,					"argumentNames" : [ ]				},				"MetaLinkRegistry" : {					"sourceCode" : [						"initialize",						"",						"\tlinks := WeakKeyDictionary new.",						"\tpermalinks := WeakKeyDictionary new.",						"\tslotSources := WeakKeyDictionary new.",						"\tpermanentTargets := WeakKeyDictionary new"					],					"body" : [						"links := WeakKeyDictionary new.",						"permalinks := WeakKeyDictionary new.",						"slotSources := WeakKeyDictionary new.",						"permanentTargets := WeakKeyDictionary new"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 3823615,					"argumentNames" : [ ]				},				"TextContainer class" : {					"sourceCode" : [						"initialize",						"",						"\tOuterMargin := 2"					],					"body" : [						"OuterMargin := 2"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2685635,					"argumentNames" : [ ]				},				"SDL_Renderer" : {					"sourceCode" : [						"initialize",						"",						"\tself autoRelease"					],					"body" : [						"self autoRelease"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4869956,					"argumentNames" : [ ]				},				"BalloonMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the state of the receiver\"",						"",						"\tballoonColor := self class balloonColor.",						"\tsuper initialize.",						"\tself beSmoothCurve.",						"\toffsetFromTarget := 0 @ 0"					],					"body" : [						"balloonColor := self class balloonColor.",						"super initialize.",						"self beSmoothCurve.",						"offsetFromTarget := 0 @ 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the state of the receiver"					],					"hash" : 2753799,					"argumentNames" : [ ]				},				"FTTreeDataSource class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tSearchStrategies := nil"					],					"body" : [						"SearchStrategies := nil"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self initialize"					],					"hash" : 1536224,					"argumentNames" : [ ]				},				"RSHighlightable" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself highlightShapes: [ :shape | Array with: shape ]"					],					"body" : [						"super initialize.",						"self highlightShapes: [ :shape | Array with: shape ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6528136,					"argumentNames" : [ ]				},				"EditorFindReplaceDialogWindow" : {					"sourceCode" : [						"initialize",						"",						"\t\"Set the initial position based on usable screen area.\"",						"",						"\tsuper initialize.",						"\tself position: RealEstateAgent maximumUsableArea topLeft"					],					"body" : [						"super initialize.",						"self position: RealEstateAgent maximumUsableArea topLeft"					],					"isTestMethod" : false,					"category" : "*Polymorph-Widgets",					"comment" : [						"Set the initial position based on usable screen area."					],					"hash" : 2735048,					"argumentNames" : [ ]				},				"AbstractResizerMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself color: Color transparent"					],					"body" : [						"super initialize.",						"self color: Color transparent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1358642,					"argumentNames" : [ ]				},				"IceAnnouncer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsuspendAll := false.",						"\tsuspendedConditions := OrderedCollection new: 5"					],					"body" : [						"super initialize.",						"suspendAll := false.",						"suspendedConditions := OrderedCollection new: 5"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7013737,					"argumentNames" : [ ]				},				"MicRichTextComposer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmonospaceBackgroundColor := self theme settings windowColor.",						"\tsuperscriptColor := self defaultSuperscriptColor.",						"\tsubscriptColor := TextColor red.",						"\tannotatedParagraphColor := self defaultAnnotatedParagraphColor.",						"\tannotatedParagraphAnnotationColor := TextEmphasis bold.",						"\tannotatedParagraphAlignment := TextAlignment leftFlush"					],					"body" : [						"super initialize.",						"monospaceBackgroundColor := self theme settings windowColor.",						"superscriptColor := self defaultSuperscriptColor.",						"subscriptColor := TextColor red.",						"annotatedParagraphColor := self defaultAnnotatedParagraphColor.",						"annotatedParagraphAnnotationColor := TextEmphasis bold.",						"annotatedParagraphAlignment := TextAlignment leftFlush"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7379866,					"argumentNames" : [ ]				},				"ChangeSet" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver to be empty.\"",						"",						"\tsuper initialize.",						"\tname ifNil: [ ",						"\t\t^ self error:",						"\t\t\t  #'All changeSets must be registered, as in ChangeSorter newChangeSet' ].",						"\tself clear"					],					"body" : [						"super initialize.",						"name ifNil: [ ",						"\t^ self error:",						"\t\t  #'All changeSets must be registered, as in ChangeSorter newChangeSet' ].",						"self clear"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver to be empty."					],					"hash" : 2116233,					"argumentNames" : [ ]				},				"GlobalIdentifier class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default",						"\t\tregister: (ClassSessionHandler forClassNamed: self name)",						"\t\tinCategory: SessionManager default systemCategory",						"\t\tatPriority: SessionManager default defaultPriority - 80"					],					"body" : [						"SessionManager default",						"\tregister: (ClassSessionHandler forClassNamed: self name)",						"\tinCategory: SessionManager default systemCategory",						"\tatPriority: SessionManager default defaultPriority - 80"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1556726,					"argumentNames" : [ ]				},				"RBParseTreeLintRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmatcher := RBParseTreeSearcher new"					],					"body" : [						"super initialize.",						"matcher := RBParseTreeSearcher new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2490906,					"argumentNames" : [ ]				},				"MicAbstractMicrodownTextualBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstream := (String new: 1000) writeStream.",						"\tparserClass := MicroDownParser.",						"\tnewLineCharacterString := String cr.",						"\tlastIsNewLine := true"					],					"body" : [						"super initialize.",						"stream := (String new: 1000) writeStream.",						"parserClass := MicroDownParser.",						"newLineCharacterString := String cr.",						"lastIsNewLine := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7331425,					"argumentNames" : [ ]				},				"ReStringConcatenationRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny:",						"\t\t#( '``@collection do: ``@argument' '``@collection do: ``@argument separatedBy: ``@argument2'",						"\t\t   '``@start to: ``@stop do: ``@argument'",						"\t\t   '``@collection detect: ``@argument'",						"\t\t   '``@collection detect: ``@argument ifNone: ``@argument2'",						"\t\t   '``@collection select: ``@argument'",						"\t\t   '``@collection reject: ``@argument'",						"\t\t   '``@collection inject: ``@value into: ``@argument'",						"\t\t   '``@collection anySatisfy: ``@argument'",						"\t\t   '``@collection allSatisfy: ``@argument'",						"\t\t   '``@collection noneSatisfy: ``@argument' )"					],					"body" : [						"super initialize.",						"self matchesAny:",						"\t#( '``@collection do: ``@argument' '``@collection do: ``@argument separatedBy: ``@argument2'",						"\t   '``@start to: ``@stop do: ``@argument'",						"\t   '``@collection detect: ``@argument'",						"\t   '``@collection detect: ``@argument ifNone: ``@argument2'",						"\t   '``@collection select: ``@argument'",						"\t   '``@collection reject: ``@argument'",						"\t   '``@collection inject: ``@value into: ``@argument'",						"\t   '``@collection anySatisfy: ``@argument'",						"\t   '``@collection allSatisfy: ``@argument'",						"\t   '``@collection noneSatisfy: ``@argument' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4746669,					"argumentNames" : [ ]				},				"RBBasicDummyLintRuleTest" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself anInstVar: 1.",						"\tclassBlock := [ :context :aResult |  ].",						"\tmethodBlock := [ :context :aResult |  ].",						"\tself resultClass: RBSelectorEnvironment"					],					"body" : [						"super initialize.",						"self anInstVar: 1.",						"classBlock := [ :context :aResult |  ].",						"methodBlock := [ :context :aResult |  ].",						"self resultClass: RBSelectorEnvironment"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5400929,					"argumentNames" : [ ]				},				"SettingDeclaration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tdefault := UniqueObject"					],					"body" : [						"super initialize.",						"",						"default := UniqueObject"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1484245,					"argumentNames" : [ ]				},				"RSBounceInterpolator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tb1 := 4 / 11.",						"\tb2 := 6 / 11.",						"\tb3 := 8 / 11.",						"\tb4 := 3 / 4.",						"\tb5 := 9 / 11.",						"\tb6 := 10 / 11.",						"\tb7 := 15 / 16.",						"\tb8 := 21 / 22.",						"\tb9 := 63 / 64.",						"\tb0 := 1 / b1 / b1"					],					"body" : [						"super initialize.",						"b1 := 4 / 11.",						"b2 := 6 / 11.",						"b3 := 8 / 11.",						"b4 := 3 / 4.",						"b5 := 9 / 11.",						"b6 := 10 / 11.",						"b7 := 15 / 16.",						"b8 := 21 / 22.",						"b9 := 63 / 64.",						"b0 := 1 / b1 / b1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6506639,					"argumentNames" : [ ]				},				"SelectPackageBrowser" : {					"sourceCode" : [						"initialize",						"",						"\t| wrappingBlock |",						"\tsuper initialize.",						"\ttoSelectModel := self instantiate: ListPresenter.",						"\tselectedModel := self instantiate: ListPresenter.",						"\tselectedModel beMultipleSelection.",						"\ttoSelectModel beMultipleSelection.",						"\ttestPackage := OrderedCollection new.",						"\twrappingBlock := [ :package | package packageName ].",						"\ttoSelectModel displayBlock: wrappingBlock.",						"\tselectedModel displayBlock: wrappingBlock"					],					"body" : [						"| wrappingBlock |",						"super initialize.",						"toSelectModel := self instantiate: ListPresenter.",						"selectedModel := self instantiate: ListPresenter.",						"selectedModel beMultipleSelection.",						"toSelectModel beMultipleSelection.",						"testPackage := OrderedCollection new.",						"wrappingBlock := [ :package | package packageName ].",						"toSelectModel displayBlock: wrappingBlock.",						"selectedModel displayBlock: wrappingBlock"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2765455,					"argumentNames" : [ ]				},				"SpLocationIconProvider" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlocations := #(  ).",						"\ticons := Dictionary new.",						"\tself initializeBlankIcon"					],					"body" : [						"super initialize.",						"locations := #(  ).",						"icons := Dictionary new.",						"self initializeBlankIcon"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2979026,					"argumentNames" : [ ]				},				"ClySubstringPattern" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tisCaseSensitive := false"					],					"body" : [						"super initialize.",						"",						"isCaseSensitive := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5659337,					"argumentNames" : [ ]				},				"RubPrimarySelectionMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself beExtendable"					],					"body" : [						"super initialize.",						"self beExtendable"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1397353,					"argumentNames" : [ ]				},				"DefaultExternalDropHandler class" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the receiver\"",						"",						"\tExternalDropHandler defaultHandler: self new"					],					"body" : [						"ExternalDropHandler defaultHandler: self new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the receiver"					],					"hash" : 2445300,					"argumentNames" : [ ]				},				"OSTouchOneFingerDoubleTapDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdoubleTouchSpeed := self class doubleTouchSpeed.",						"\tmaxDistanceBetweenEachTouch := self class maxDistance.",						"\tself reinitialize"					],					"body" : [						"super initialize.",						"doubleTouchSpeed := self class doubleTouchSpeed.",						"maxDistanceBetweenEachTouch := self class maxDistance.",						"self reinitialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4843997,					"argumentNames" : [ ]				},				"SpAbstractTreePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeTSearchable.",						"\tself initializeTHaveWrappingScrollBars"					],					"body" : [						"super initialize.",						"self initializeTSearchable.",						"self initializeTHaveWrappingScrollBars"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3009571,					"argumentNames" : [ ]				},				"FFIExternalValueHolder" : {					"sourceCode" : [						"initialize",						"",						"\tdata := ByteArray new: self type typeSize.",						"\tsuper initialize"					],					"body" : [						"data := ByteArray new: self type typeSize.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1308069,					"argumentNames" : [ ]				},				"AthensBalloonSurface" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpathTransform := AthensAffineTransform new.",						"\tpaintTransform := AthensAffineTransform new.",						"",						"\timageTransform := AthensAffineTransform new. \" AthensGenericTransform new\"",						"\tfillTransform := AthensAffineTransform new.",						"\tstrokeTransform := AthensAffineTransform new.",						"\tmaskEnabled := false"					],					"body" : [						"super initialize.",						"pathTransform := AthensAffineTransform new.",						"paintTransform := AthensAffineTransform new.",						"",						"imageTransform := AthensAffineTransform new. \" AthensGenericTransform new\"",						"fillTransform := AthensAffineTransform new.",						"strokeTransform := AthensAffineTransform new.",						"maskEnabled := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2628827,					"argumentNames" : [ ]				},				"RSPieSlice" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcornerRadii := innerRadius := externalRadius := betaAngle := alphaAngle := segmentSpacing := 0"					],					"body" : [						"super initialize.",						"cornerRadii := innerRadius := externalRadius := betaAngle := alphaAngle := segmentSpacing := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6472985,					"argumentNames" : [ ]				},				"KMCategory" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself class methods",						"\t\tselect: [ :m | m isShortcutDeclaration ]",						"\t\tthenDo: [ :m | self buildKeymapOnMethod: m ]"					],					"body" : [						"super initialize.",						"self class methods",						"\tselect: [ :m | m isShortcutDeclaration ]",						"\tthenDo: [ :m | self buildKeymapOnMethod: m ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1568213,					"argumentNames" : [ ]				},				"CriticsCache" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfalsePositives := Dictionary new.",						"\ttoDos := Dictionary new.",						"\tcritics := Dictionary new.",						"\tfalsePositiveRules := Dictionary new.",						"\tfalsePositiveClasses := IdentitySet new.",						"\tchange := false"					],					"body" : [						"super initialize.",						"falsePositives := Dictionary new.",						"toDos := Dictionary new.",						"critics := Dictionary new.",						"falsePositiveRules := Dictionary new.",						"falsePositiveClasses := IdentitySet new.",						"change := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2503906,					"argumentNames" : [ ]				},				"RSStrokeStyle" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdashOffset := 0"					],					"body" : [						"super initialize.",						"dashOffset := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6486477,					"argumentNames" : [ ]				},				"ShMetaclassChangeDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbuilderAccessor := [ :e | e metaclassClass ].",						"\tclassAccessor := [ :e | e class class ].",						"\tcomparer := [ :a :b | a name = b name ]"					],					"body" : [						"super initialize.",						"builderAccessor := [ :e | e metaclassClass ].",						"classAccessor := [ :e | e class class ].",						"comparer := [ :a :b | a name = b name ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1622084,					"argumentNames" : [ ]				},				"RSBimetricLine" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\twidthFrom := widthTo := 0.",						"\tself initializeSVG"					],					"body" : [						"super initialize.",						"widthFrom := widthTo := 0.",						"self initializeSVG"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3092930,					"argumentNames" : [ ]				},				"RSAbstractMarkerDecoration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\t\"Per default, mark the max value\"",						"\tself max.",						"\tmarkerColor := self defaultMarkerColor"					],					"body" : [						"super initialize.",						"",						"\"Per default, mark the max value\"",						"self max.",						"markerColor := self defaultMarkerColor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6611990,					"argumentNames" : [ ]				},				"RubTextScrollPane" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself scroller extent: self textArea extent.",						"\tself wrapped ifTrue: [ self fitScrollTarget ].",						"\tdrawFocusBorder := true"					],					"body" : [						"super initialize.",						"self scroller extent: self textArea extent.",						"self wrapped ifTrue: [ self fitScrollTarget ].",						"drawFocusBorder := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1374020,					"argumentNames" : [ ]				},				"RSPunchCardBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmetrics := OrderedDictionary new.",						"\tsize := 10"					],					"body" : [						"super initialize.",						"metrics := OrderedDictionary new.",						"size := 10"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6460189,					"argumentNames" : [ ]				},				"MethodToolbar" : {					"sourceCode" : [						"initialize",						"",						"\tmethodHolder := nil asValueHolder.",						"\tmodel := AbstractTool new.",						"",						"\tsuper initialize"					],					"body" : [						"methodHolder := nil asValueHolder.",						"model := AbstractTool new.",						"",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2900042,					"argumentNames" : [ ]				},				"ScrollBarMorph class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeImagesCache"					],					"body" : [						"self initializeImagesCache"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2727748,					"argumentNames" : [ ]				},				"SpToolbarToggleButtonMorphTest" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeSemaphore"					],					"body" : [						"super initialize.",						"self initializeSemaphore"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3733097,					"argumentNames" : [ ]				},				"CircleMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\treferencePosition := self center"					],					"body" : [						"super initialize.",						"referencePosition := self center"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2708618,					"argumentNames" : [ ]				},				"TabLabelMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself fillStyle: self fillStyleToUse.",						"\tself borderStyle: self borderStyleToUse"					],					"body" : [						"super initialize.",						"self fillStyle: self fillStyleToUse.",						"self borderStyle: self borderStyleToUse"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2752008,					"argumentNames" : [ ]				},				"MacRomanTextConverter class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeTables"					],					"body" : [						"self initializeTables"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3031620,					"argumentNames" : [ ]				},				"ZipNewFileMember" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\texternalFileName := ''.",						"\tcompressionMethod := CompressionStored.",						"\tself mapPermissionsFromUnix: DefaultFilePermissions"					],					"body" : [						"super initialize.",						"externalFileName := ''.",						"compressionMethod := CompressionStored.",						"self mapPermissionsFromUnix: DefaultFilePermissions"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2139854,					"argumentNames" : [ ]				},				"TKTService" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself stepDelay: 500 milliSeconds"					],					"body" : [						"super initialize.",						"self stepDelay: 500 milliSeconds"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1213250,					"argumentNames" : [ ]				},				"RGNamespace" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself globalVariables: IdentityDictionary new.",						"\tself pools: IdentityDictionary new"					],					"body" : [						"super initialize.",						"self globalVariables: IdentityDictionary new.",						"self pools: IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2129524,					"argumentNames" : [ ]				},				"MCDataStream class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeTypeMap"					],					"body" : [						"self initializeTypeMap"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 2149444,					"argumentNames" : [ ]				},				"EDDebuggingAPI" : {					"sourceCode" : [						"initialize",						"",						"\tchangesForMethods := Dictionary new"					],					"body" : [						"changesForMethods := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4918262,					"argumentNames" : [ ]				},				"ScrollPane" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"\thasFocus := false.",						"\tself initializeScrollBars.",						"\tself extent: self defaultExtent.",						"\tself hideOrShowScrollBars"					],					"body" : [						"super initialize.",						"hasFocus := false.",						"self initializeScrollBars.",						"self extent: self defaultExtent.",						"self hideOrShowScrollBars"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 2721311,					"argumentNames" : [ ]				},				"IceGitTransferProgress" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tjob := IceExternalJob new",						"\t\t       title: 'Fetching Git objects...';",						"\t\t       yourself.",						"",						"\tself initializeBlock"					],					"body" : [						"super initialize.",						"",						"job := IceExternalJob new",						"\t       title: 'Fetching Git objects...';",						"\t       yourself.",						"",						"self initializeBlock"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7015543,					"argumentNames" : [ ]				},				"Morph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"\tsubmorphs := EmptyArray.",						"\tbounds := self defaultBounds.",						"\tcolor := self defaultColor"					],					"body" : [						"super initialize.",						"submorphs := EmptyArray.",						"bounds := self defaultBounds.",						"color := self defaultColor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 2447607,					"argumentNames" : [ ]				},				"IceSortingStrategy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfirst := #modified.",						"\tlast := #notLoaded"					],					"body" : [						"super initialize.",						"first := #modified.",						"last := #notLoaded"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7046826,					"argumentNames" : [ ]				},				"MCPackageManager" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmodified := false"					],					"body" : [						"super initialize.",						"modified := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1057995,					"argumentNames" : [ ]				},				"ExternalSemaphoreTable class" : {					"sourceCode" : [						"initialize",						"",						"\tProtectAdd := Semaphore forMutualExclusion.",						"\tProtectRemove := Semaphore forMutualExclusion"					],					"body" : [						"ProtectAdd := Semaphore forMutualExclusion.",						"ProtectRemove := Semaphore forMutualExclusion"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 1756385,					"argumentNames" : [ ]				},				"SpPopoverPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself bePositionBottom"					],					"body" : [						"super initialize.",						"self bePositionBottom"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3016297,					"argumentNames" : [ ]				},				"FTEasyListMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself dataSource: FTEasyListDataSource new"					],					"body" : [						"super initialize.",						"self dataSource: FTEasyListDataSource new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1369882,					"argumentNames" : [ ]				},				"ClyFullBrowserMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmetaLevelScope := ClyInstanceSideScope"					],					"body" : [						"super initialize.",						"metaLevelScope := ClyInstanceSideScope"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5955291,					"argumentNames" : [ ]				},				"MenubarMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself cellInset: 7"					],					"body" : [						"super initialize.",						"self cellInset: 7"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2701485,					"argumentNames" : [ ]				},				"IRReconstructor" : {					"sourceCode" : [						"initialize",						"",						"\ttemps := Dictionary new.",						"\tremoteTemps := Dictionary new.",						"\tclosureCopiedValues := Dictionary new.",						"\tsourceMapByteIndex := 0.",						"\tsuper initialize"					],					"body" : [						"temps := Dictionary new.",						"remoteTemps := Dictionary new.",						"closureCopiedValues := Dictionary new.",						"sourceMapByteIndex := 0.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2047576,					"argumentNames" : [ ]				},				"MemoryFileSystemFile" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbytes := #[  ].",						"\tsize := 0.",						"\tclosed := false"					],					"body" : [						"super initialize.",						"bytes := #[  ].",						"size := 0.",						"closed := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2232298,					"argumentNames" : [ ]				},				"FFICallout class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeTypeAliases"					],					"body" : [						"self initializeTypeAliases"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1283396,					"argumentNames" : [ ]				},				"AthensWrappedWorldDisplay" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\trealDisplay := Display"					],					"body" : [						"super initialize.",						"",						"realDisplay := Display"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4208540,					"argumentNames" : [ ]				},				"MenuTitleMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself",						"\t\tlistDirection: #leftToRight;",						"\t\tvResizing: #shrinkWrap;",						"\t\twrapCentering: #topLeft;",						"\t\tcellPositioning: #center;",						"\t\tcellSpacing: #none;",						"\t\tlayoutInset: 2;",						"\t\tclipSubmorphs: true"					],					"body" : [						"super initialize.",						"",						"self",						"\tlistDirection: #leftToRight;",						"\tvResizing: #shrinkWrap;",						"\twrapCentering: #topLeft;",						"\tcellPositioning: #center;",						"\tcellSpacing: #none;",						"\tlayoutInset: 2;",						"\tclipSubmorphs: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2708263,					"argumentNames" : [ ]				},				"ZnBase64Encoder class" : {					"sourceCode" : [						"initialize",						"",						"\tDefaultAlphabet := String withAll:",						"\t\t                   ($A to: $Z) , ($a to: $z) , ($0 to: $9)",						"\t\t                   , #( $+ $/ ).",						"\tDefaultInverse := Array new: 128.",						"\t0 to: 127 do: [ :each | ",						"\t\t| offset |",						"\t\toffset := DefaultAlphabet",						"\t\t\t          indexOf: each asCharacter",						"\t\t\t          ifAbsent: [ nil ].",						"\t\tDefaultInverse at: each + 1 put: (offset ifNotNil: [ offset - 1 ]) ]"					],					"body" : [						"DefaultAlphabet := String withAll:",						"\t                   ($A to: $Z) , ($a to: $z) , ($0 to: $9)",						"\t                   , #( $+ $/ ).",						"DefaultInverse := Array new: 128.",						"0 to: 127 do: [ :each | ",						"\t| offset |",						"\toffset := DefaultAlphabet indexOf: each asCharacter ifAbsent: [ nil ].",						"\tDefaultInverse at: each + 1 put: (offset ifNotNil: [ offset - 1 ]) ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2516939,					"argumentNames" : [ ]				},				"PickListPresenter" : {					"sourceCode" : [						"initialize",						"",						"\twrapHolder := [ :i | i printString ] asValueHolder.",						"\tpickedItemsHolder := OrderedCollection new asValueHolder.",						"\tassociationsWrapperToItem := Dictionary new asValueHolder.",						"\tassociationsItemToWrapper := Dictionary new asValueHolder.",						"\tassociationsIndexToWrapper := Dictionary new asValueHolder.",						"\tlabelClickableHolder := true asValueHolder.",						"\tdefaultValueHolder := false asValueHolder.",						"\tblockToPerformOnWrappers := [ :wrapper |  ] asValueHolder.",						"",						"\tsuper initialize"					],					"body" : [						"wrapHolder := [ :i | i printString ] asValueHolder.",						"pickedItemsHolder := OrderedCollection new asValueHolder.",						"associationsWrapperToItem := Dictionary new asValueHolder.",						"associationsItemToWrapper := Dictionary new asValueHolder.",						"associationsIndexToWrapper := Dictionary new asValueHolder.",						"labelClickableHolder := true asValueHolder.",						"defaultValueHolder := false asValueHolder.",						"blockToPerformOnWrappers := [ :wrapper |  ] asValueHolder.",						"",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2902018,					"argumentNames" : [ ]				},				"TestResult" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpassed := OrderedCollection new.",						"\tfailures := Set new.",						"\terrors := OrderedCollection new.",						"\tskipped := OrderedCollection new.",						"\ttimeStamp := DateAndTime now"					],					"body" : [						"super initialize.",						"passed := OrderedCollection new.",						"failures := Set new.",						"errors := OrderedCollection new.",						"skipped := OrderedCollection new.",						"timeStamp := DateAndTime now"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1155009,					"argumentNames" : [ ]				},				"ProcessorScheduler class" : {					"sourceCode" : [						"initialize",						"",						"\t\"ProcessorScheduler initialize.\"",						"",						"\tSystemRockBottomPriority := 10.",						"\tSystemBackgroundPriority := 20.",						"\tUserBackgroundPriority := 30.",						"\tUserSchedulingPriority := 40.",						"\tUserInterruptPriority := 50.",						"\tLowIOPriority := 60.",						"\tHighIOPriority := 70.",						"\tTimingPriority := 80.",						"\tIdleTime := 50000.",						"",						"\tSessionManager default",						"\t\tregisterSystemClassNamed: self name",						"\t\tatPriority: 30"					],					"body" : [						"SystemRockBottomPriority := 10.",						"SystemBackgroundPriority := 20.",						"UserBackgroundPriority := 30.",						"UserSchedulingPriority := 40.",						"UserInterruptPriority := 50.",						"LowIOPriority := 60.",						"HighIOPriority := 70.",						"TimingPriority := 80.",						"IdleTime := 50000.",						"",						"SessionManager default",						"\tregisterSystemClassNamed: self name",						"\tatPriority: 30"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"ProcessorScheduler initialize."					],					"hash" : 1597495,					"argumentNames" : [ ]				},				"SpPanedConstraints" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself beResizable.",						"\tself beShrinkable"					],					"body" : [						"super initialize.",						"self beResizable.",						"self beShrinkable"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2948643,					"argumentNames" : [ ]				},				"RBRefactoring class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeRefactoringOptions"					],					"body" : [						"self initializeRefactoringOptions"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 3937092,					"argumentNames" : [ ]				},				"SpTransferMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tdragHand := self activeHand"					],					"body" : [						"super initialize.",						"",						"dragHand := self activeHand"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3413903,					"argumentNames" : [ ]				},				"CollectionElement class" : {					"sourceCode" : [						"initialize",						"",						"\tNilElement := self with: nil"					],					"body" : [						"NilElement := self with: nil"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1701584,					"argumentNames" : [ ]				},				"CPUWatcher class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerToolClassNamed: self name"					],					"body" : [						"SessionManager default registerToolClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4001440,					"argumentNames" : [ ]				},				"ProcessBrowser class" : {					"sourceCode" : [						"initialize",						"",						"\tSuspendedProcesses ifNil: [ ",						"\t\tSuspendedProcesses := IdentityDictionary new ].",						"\tself registerWellKnownProcesses"					],					"body" : [						"SuspendedProcesses ifNil: [ ",						"\tSuspendedProcesses := IdentityDictionary new ].",						"self registerWellKnownProcesses"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4010135,					"argumentNames" : [ ]				},				"GroupboxMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\troundedCorners: #( 2 3 4 );",						"\t\tborderWidth: 0;",						"\t\tchangeTableLayout;",						"\t\tcellPositioning: #topLeft;",						"\t\tcellInset: 0 @ -1;",						"\t\treverseTableCells: true;",						"\t\tlabelMorph: self newLabelMorph;",						"\t\tcontentMorph: self newContentMorph;",						"\t\taddMorphBack: self contentMorph;",						"\t\taddMorphBack: self labelMorph"					],					"body" : [						"super initialize.",						"self",						"\troundedCorners: #( 2 3 4 );",						"\tborderWidth: 0;",						"\tchangeTableLayout;",						"\tcellPositioning: #topLeft;",						"\tcellInset: 0 @ -1;",						"\treverseTableCells: true;",						"\tlabelMorph: self newLabelMorph;",						"\tcontentMorph: self newContentMorph;",						"\taddMorphBack: self contentMorph;",						"\taddMorphBack: self labelMorph"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2720739,					"argumentNames" : [ ]				},				"NSPowScale" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlinear := self class linear.",						"\texponent := 1.",						"\tdomain := #( 0 1 ).",						"\tpowp := NSPowPowScale exponent: exponent.",						"\tpowb := NSPowPowScale exponent: 1 / exponent"					],					"body" : [						"super initialize.",						"linear := self class linear.",						"exponent := 1.",						"domain := #( 0 1 ).",						"powp := NSPowPowScale exponent: exponent.",						"powb := NSPowPowScale exponent: 1 / exponent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6423931,					"argumentNames" : [ ]				},				"RingChunkImporter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpackage := RGPackageDefinition named: 'ChangeSet'.",						"\tdoIts := Set new"					],					"body" : [						"super initialize.",						"package := RGPackageDefinition named: 'ChangeSet'.",						"doIts := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2108898,					"argumentNames" : [ ]				},				"ClyNotebookManager" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttools := SortedCollection sortBlock: [ :a :b | ",						"\t\t         a tabOrder <= b tabOrder ].",						"\tselectionPriorities := IdentityDictionary new.",						"\tdesiredSelection := IdentitySet new.",						"\tshouldSkipCurrentDesiredSelection := false.",						"\tupdatingStarted := false.",						"\ttabMorph := ClyNotebookMorph new.",						"\ttabMorph useSortedTabsBy: [ :a :b | ",						"\t\t(self tabOrderOf: a) <= (self tabOrderOf: b) ].",						"\ttabMorph announcer",						"\t\twhen: SpNotebookPageChanged",						"\t\tsend: #pageChanged:",						"\t\tto: self.",						"\ttabMorph",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #spaceFill"					],					"body" : [						"super initialize.",						"",						"tools := SortedCollection sortBlock: [ :a :b | ",						"\t         a tabOrder <= b tabOrder ].",						"selectionPriorities := IdentityDictionary new.",						"desiredSelection := IdentitySet new.",						"shouldSkipCurrentDesiredSelection := false.",						"updatingStarted := false.",						"tabMorph := ClyNotebookMorph new.",						"tabMorph useSortedTabsBy: [ :a :b | ",						"\t(self tabOrderOf: a) <= (self tabOrderOf: b) ].",						"tabMorph announcer",						"\twhen: SpNotebookPageChanged",						"\tsend: #pageChanged:",						"\tto: self.",						"tabMorph",						"\thResizing: #spaceFill;",						"\tvResizing: #spaceFill"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5905783,					"argumentNames" : [ ]				},				"DelaySchedulerBackgroundWorkerMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"DelaySchedulerBackgroundWorkerMorph new openInWorld\"",						"",						"\t| workerProcess controllerProcess |",						"\tsuper initialize.",						"\tself extent: 300 @ 50.",						"\tself color: Color red.",						"\tself addMorphBack: (stringMorph := StringMorph new).",						"\tmorphDeleted := false. \"see #delete\"",						"",						"\tworkerProcess := [ ",						"\t                 work := 0.",						"\t                 [ ",						"\t                 10 milliSeconds asDelay wait.",						"\t                 work := work + 1.",						"\t                 morphDeleted ] whileFalse ] newProcess name:",						"\t\t                 'Background worker'.",						"",						"\tcontrollerProcess := [ ",						"\t                     [ ",						"\t                     workerProcess resume.",						"\t                     self color: Color green.",						"\t                     10 milliSeconds asDelay wait.",						"\t                     workerProcess suspend.",						"\t                     self color: Color red.",						"\t                     10 milliSeconds asDelay wait.",						"\t                     morphDeleted ] whileFalse ] newProcess name:",						"\t\t                     'Controller'.",						"",						"\tcontrollerProcess resume"					],					"body" : [						"| workerProcess controllerProcess |",						"super initialize.",						"self extent: 300 @ 50.",						"self color: Color red.",						"self addMorphBack: (stringMorph := StringMorph new).",						"morphDeleted := false. \"see #delete\"",						"",						"workerProcess := [ ",						"                 work := 0.",						"                 [ ",						"                 10 milliSeconds asDelay wait.",						"                 work := work + 1.",						"                 morphDeleted ] whileFalse ] newProcess name:",						"\t                 'Background worker'.",						"",						"controllerProcess := [ ",						"                     [ ",						"                     workerProcess resume.",						"                     self color: Color green.",						"                     10 milliSeconds asDelay wait.",						"                     workerProcess suspend.",						"                     self color: Color red.",						"                     10 milliSeconds asDelay wait.",						"                     morphDeleted ] whileFalse ] newProcess name:",						"\t                     'Controller'.",						"",						"controllerProcess resume"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"DelaySchedulerBackgroundWorkerMorph new openInWorld"					],					"hash" : 5670168,					"argumentNames" : [ ]				},				"AthensDemoMorph" : {					"sourceCode" : [						"initialize",						"",						"\t| ref loadFileFailBlock |",						"\tsuper initialize.",						"\tself extent: self defaultExtent.",						"\tself color: self backColor.",						"\tsurface := AthensCairoSurface extent: self extent.",						"\tcurrent := 1.",						"\tframe := 0.",						"\tloadFileFailBlock := AthensCairoSurface fromForm:",						"\t\t                     (Form fromDisplay: (0 @ 0 extent: 300 @ 150)).",						"\tref := 'Pharo.png' asFileReference.",						"\tpharoLogo := AthensCairoSurface",						"\t\t             createFromFile: ref fullName",						"\t\t             ifFailed: [ loadFileFailBlock ].",						"",						"\tref := 'esug-balloon.png' asFileReference.",						"\tesugBallon := AthensCairoSurface",						"\t\t              createFromFile: ref fullName",						"\t\t              ifFailed: [ loadFileFailBlock ].",						"",						"\tself startStepping"					],					"body" : [						"| ref loadFileFailBlock |",						"super initialize.",						"self extent: self defaultExtent.",						"self color: self backColor.",						"surface := AthensCairoSurface extent: self extent.",						"current := 1.",						"frame := 0.",						"loadFileFailBlock := AthensCairoSurface fromForm:",						"\t                     (Form fromDisplay: (0 @ 0 extent: 300 @ 150)).",						"ref := 'Pharo.png' asFileReference.",						"pharoLogo := AthensCairoSurface",						"\t             createFromFile: ref fullName",						"\t             ifFailed: [ loadFileFailBlock ].",						"",						"ref := 'esug-balloon.png' asFileReference.",						"esugBallon := AthensCairoSurface",						"\t              createFromFile: ref fullName",						"\t              ifFailed: [ loadFileFailBlock ].",						"",						"self startStepping"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4744591,					"argumentNames" : [ ]				},				"SpGridConstraints" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself position: 1 @ 1.",						"\tself span: 1 @ 1"					],					"body" : [						"super initialize.",						"self position: 1 @ 1.",						"self span: 1 @ 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2948195,					"argumentNames" : [ ]				},				"TabExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tmanager := TabManagerMorph new.",						"\tmanager when: #tabManagerDeleted send: #delete to: self.",						"\tlistModel := SpListPresenter new.",						"\tlistModel items: (1 to: 1000) asOrderedCollection"					],					"body" : [						"super initialize.",						"",						"manager := TabManagerMorph new.",						"manager when: #tabManagerDeleted send: #delete to: self.",						"listModel := SpListPresenter new.",						"listModel items: (1 to: 1000) asOrderedCollection"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1492370,					"argumentNames" : [ ]				},				"SpMorphicBackendForTest" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeSemaphore"					],					"body" : [						"super initialize.",						"self initializeSemaphore"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3711337,					"argumentNames" : [ ]				},				"RubSmalltalkEditor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tnotificationStrategy := RubTextInsertionStrategy new editor: self"					],					"body" : [						"super initialize.",						"notificationStrategy := RubTextInsertionStrategy new editor: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2666252,					"argumentNames" : [ ]				},				"SpGeneratorListModel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself collection: OrderedCollection new.",						"\tsize := 10000"					],					"body" : [						"super initialize.",						"self collection: OrderedCollection new.",						"size := 10000"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2974748,					"argumentNames" : [ ]				},				"LogicalFont class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerGuiClassNamed: self name"					],					"body" : [						"SessionManager default registerGuiClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1418912,					"argumentNames" : [ ]				},				"LabelMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tdisabledStyle: #plain;",						"\t\tenabled: true"					],					"body" : [						"super initialize.",						"self",						"\tdisabledStyle: #plain;",						"\tenabled: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1402061,					"argumentNames" : [ ]				},				"FFIBackend class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default",						"\t\tregisterSystemClassNamed: self name",						"\t\tatPriority: 60"					],					"body" : [						"SessionManager default",						"\tregisterSystemClassNamed: self name",						"\tatPriority: 60"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 1758694,					"argumentNames" : [ ]				},				"RSLocation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdirection := 0 @ 0.",						"\tself",						"\t\toffset: 0;",						"\t\tinner;",						"\t\tmiddle;",						"\t\tcenter"					],					"body" : [						"super initialize.",						"direction := 0 @ 0.",						"self",						"\toffset: 0;",						"\tinner;",						"\tmiddle;",						"\tcenter"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6565353,					"argumentNames" : [ ]				},				"FFITestStructure class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self rebuildFieldAccessors\"",						"",						"\t"					],					"body" : [ ],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self rebuildFieldAccessors"					],					"hash" : 2441096,					"argumentNames" : [ ]				},				"RSColorPerlinGenerator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tperlin := NSPerlinNoise3 new octaves: 5"					],					"body" : [						"super initialize.",						"perlin := NSPerlinNoise3 new octaves: 5"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 3078642,					"argumentNames" : [ ]				},				"ZipStringMember" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself contents: ''.",						"\tcompressionMethod := desiredCompressionMethod := CompressionStored"					],					"body" : [						"super initialize.",						"self contents: ''.",						"compressionMethod := desiredCompressionMethod := CompressionStored"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2140319,					"argumentNames" : [ ]				},				"TaskListMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tinitializeTasks;",						"\t\tinitializeLayout;",						"\t\tinitializeAppearance;",						"\t\taddMorphs;",						"\t\tupdateButtonsAndPreview;",						"\t\tadoptPaneColor: self color"					],					"body" : [						"super initialize.",						"self",						"\tinitializeTasks;",						"\tinitializeLayout;",						"\tinitializeAppearance;",						"\taddMorphs;",						"\tupdateButtonsAndPreview;",						"\tadoptPaneColor: self color"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1410606,					"argumentNames" : [ ]				},				"CmUICommandGroup" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself displayStrategy: self class defaultDisplayStrategy.",						"\tself isRoot: false"					],					"body" : [						"super initialize.",						"self displayStrategy: self class defaultDisplayStrategy.",						"self isRoot: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1661962,					"argumentNames" : [ ]				},				"STONWriter class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Modification timestamp 20170131\"",						"",						"\tself initializeSTONCharacters.",						"\tself initializeSTONSimpleSymbolCharacters"					],					"body" : [						"self initializeSTONCharacters.",						"self initializeSTONSimpleSymbolCharacters"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Modification timestamp 20170131"					],					"hash" : 1135357,					"argumentNames" : [ ]				},				"OSWindowRenderer" : {					"sourceCode" : [						"initialize",						"",						"\tlastExposeTime := 0"					],					"body" : [						"lastExposeTime := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4852902,					"argumentNames" : [ ]				},				"HandMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initForEvents.",						"\tbounds := 0 @ 0 extent: Cursor normal extent.",						"\tdamageRecorder := DamageRecorder new.",						"\tcachedCanvasHasHoles := false.",						"\tsupressNextKeyPress := false.",						"\tself initForEvents"					],					"body" : [						"super initialize.",						"self initForEvents.",						"bounds := 0 @ 0 extent: Cursor normal extent.",						"damageRecorder := DamageRecorder new.",						"cachedCanvasHasHoles := false.",						"supressNextKeyPress := false.",						"self initForEvents"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2451503,					"argumentNames" : [ ]				},				"RSEvent" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself timeStamp"					],					"body" : [						"super initialize.",						"self timeStamp"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6440041,					"argumentNames" : [ ]				},				"RSAbstractSunburstLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\thasCenter: true;",						"\t\tradialSpacing: 5"					],					"body" : [						"super initialize.",						"self",						"\thasCenter: true;",						"\tradialSpacing: 5"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6582477,					"argumentNames" : [ ]				},				"RSFlowLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself alignTop"					],					"body" : [						"super initialize.",						"self alignTop"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6546537,					"argumentNames" : [ ]				},				"CoverageDemo" : {					"sourceCode" : [						"initialize",						"",						"\tcoverageCode := [ CoverageDemo exampleMethod ].",						"\tcompiledMethods := OrderedCollection new.",						"\tcompiledMethods add: CoverageDemo class >> #exampleMethod.",						"",						"\tsuper initialize"					],					"body" : [						"coverageCode := [ CoverageDemo exampleMethod ].",						"compiledMethods := OrderedCollection new.",						"compiledMethods add: CoverageDemo class >> #exampleMethod.",						"",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4315831,					"argumentNames" : [ ]				},				"DamageRecorder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself reset"					],					"body" : [						"super initialize.",						"self reset"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2445417,					"argumentNames" : [ ]				},				"EncodedCharSet class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tEncodedCharSets := Array new: 256.",						"\tself allSubclassesDo: [ :each | each initialize ]"					],					"body" : [						"EncodedCharSets := Array new: 256.",						"self allSubclassesDo: [ :each | each initialize ]"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [						"self initialize"					],					"hash" : 1875009,					"argumentNames" : [ ]				},				"ReAsOrderedCollectionNotNeededRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\t#( 'addAll:' 'removeAll:' 'includesAll:' 'copyWithoutAll:' ) do: [ ",						"\t\t:collectionMessage | ",						"\t\t#( 'asArray' 'asOrderedCollection' 'asSortedCollection' ) do: [ ",						"\t\t\t:conversionMessage | ",						"\t\t\t| baseString |",						"\t\t\tbaseString := '``@receiver ' , collectionMessage , ' ``@arg '.",						"\t\t\tself replace: baseString , conversionMessage with: baseString ] ]"					],					"body" : [						"super initialize.",						"#( 'addAll:' 'removeAll:' 'includesAll:' 'copyWithoutAll:' ) do: [ ",						"\t:collectionMessage | ",						"\t#( 'asArray' 'asOrderedCollection' 'asSortedCollection' ) do: [ ",						"\t\t:conversionMessage | ",						"\t\t| baseString |",						"\t\tbaseString := '``@receiver ' , collectionMessage , ' ``@arg '.",						"\t\tself replace: baseString , conversionMessage with: baseString ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3678279,					"argumentNames" : [ ]				},				"ClyQueryViewMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself changeTableLayout.",						"\tself initializeTable.",						"\tself whenDoubleClickDo: [ self triggerDoubleClickCommands ].",						"",						"\tshouldRestoreSelection := true.",						"\tchangesWasInitiatedByUser := true.",						"\ttreeStructure := #(  ).",						"\tself setUpDataSource: ClyDataSource empty"					],					"body" : [						"super initialize.",						"self changeTableLayout.",						"self initializeTable.",						"self whenDoubleClickDo: [ self triggerDoubleClickCommands ].",						"",						"shouldRestoreSelection := true.",						"changesWasInitiatedByUser := true.",						"treeStructure := #(  ).",						"self setUpDataSource: ClyDataSource empty"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5888857,					"argumentNames" : [ ]				},				"FFICalloutAPI" : {					"sourceCode" : [						"initialize",						"",						"\tcallingConvention := #cdecl.",						"\toptions := #(  ).",						"\tfixedArgumentCount := 0.",						"",						"\tsuper initialize"					],					"body" : [						"callingConvention := #cdecl.",						"options := #(  ).",						"fixedArgumentCount := 0.",						"",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1285078,					"argumentNames" : [ ]				},				"PragmaMenuBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tisGroup := true.",						"\tcurrentRoot := self.",						"\tpragmaKeywords := OrderedCollection new"					],					"body" : [						"super initialize.",						"isGroup := true.",						"currentRoot := self.",						"pragmaKeywords := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2460036,					"argumentNames" : [ ]				},				"Variable class" : {					"sourceCode" : [						"initialize",						"",						"\tProperties := Properties",						"\t\t              ifNil: [ WeakIdentityKeyDictionary new ]",						"\t\t              ifNotNil: [ ",						"\t\t              (WeakIdentityKeyDictionary newFrom: Properties) rehash ]"					],					"body" : [						"Properties := Properties",						"\t              ifNil: [ WeakIdentityKeyDictionary new ]",						"\t              ifNotNil: [ ",						"\t              (WeakIdentityKeyDictionary newFrom: Properties) rehash ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1637356,					"argumentNames" : [ ]				},				"CoStatisticsCompletionEngine" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstatistics := CoStatistics uniqueInstance.",						"\tcompletionBuilder := CoStatisticsASTHeuristicsResultSetBuilder new",						"\t\t                     statistics: statistics;",						"\t\t                     yourself.",						"\tcontextClass := CoStatisticsCompletionContext"					],					"body" : [						"super initialize.",						"statistics := CoStatistics uniqueInstance.",						"completionBuilder := CoStatisticsASTHeuristicsResultSetBuilder new",						"\t                     statistics: statistics;",						"\t                     yourself.",						"contextClass := CoStatisticsCompletionContext"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6124811,					"argumentNames" : [ ]				},				"FFICalloutMethodBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfunctionResolutionStrategies := FFIFunctionResolutionStrategy",						"\t\t                                allSubclasses collect: [ :aClass | ",						"\t\t                                aClass new ].",						"\tfixedArgumentCount := 0"					],					"body" : [						"super initialize.",						"functionResolutionStrategies := FFIFunctionResolutionStrategy",						"\t                                allSubclasses collect: [ :aClass | ",						"\t                                aClass new ].",						"fixedArgumentCount := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1285898,					"argumentNames" : [ ]				},				"FontChooser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttitle := 'Choose A Font'"					],					"body" : [						"super initialize.",						"title := 'Choose A Font'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3789230,					"argumentNames" : [ ]				},				"MalHalNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpreviousNodes := Set new"					],					"body" : [						"super initialize.",						"previousNodes := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2567712,					"argumentNames" : [ ]				},				"RPackageOrganizer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tpackages := IdentityDictionary new.",						"\tclassPackageMapping := IdentityDictionary new.",						"\tclassExtendingPackagesMapping := IdentityDictionary new.",						"\tdebuggingName := ''.",						"",						"\tself defineUnpackagedClassesPackage"					],					"body" : [						"super initialize.",						"",						"packages := IdentityDictionary new.",						"classPackageMapping := IdentityDictionary new.",						"classExtendingPackagesMapping := IdentityDictionary new.",						"debuggingName := ''.",						"",						"self defineUnpackagedClassesPackage"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1896839,					"argumentNames" : [ ]				},				"RSPopupDecoration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpopup := RSChartPopupDecoration new",						"\t\t         chartPopupBuilder: RSSimpleChartPopupBuilder new;",						"\t\t         markersPopupBuilder: RSSimpleMarkerPopupBuilder new;",						"\t\t         yourself"					],					"body" : [						"super initialize.",						"popup := RSChartPopupDecoration new",						"\t         chartPopupBuilder: RSSimpleChartPopupBuilder new;",						"\t         markersPopupBuilder: RSSimpleMarkerPopupBuilder new;",						"\t         yourself"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6614942,					"argumentNames" : [ ]				},				"AbstractFontSelectorDialogWindow" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tself",						"\t\tisBold: false;",						"\t\tisItalic: false;",						"\t\tisUnderlined: false;",						"\t\tisStruckOut: false;",						"\t\tpreviewText: self defaultPreviewText;",						"\t\tfontFamilyIndex: 0;",						"\t\tfontSizeIndex: 0.",						"\tsuper initialize"					],					"body" : [						"self",						"\tisBold: false;",						"\tisItalic: false;",						"\tisUnderlined: false;",						"\tisStruckOut: false;",						"\tpreviewText: self defaultPreviewText;",						"\tfontFamilyIndex: 0;",						"\tfontSizeIndex: 0.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 3791979,					"argumentNames" : [ ]				},				"MCLazyVersionInfo class" : {					"sourceCode" : [						"initialize",						"",						"\tself install"					],					"body" : [						"self install"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1059652,					"argumentNames" : [ ]				},				"IconicButtonMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself useSquareCorners"					],					"body" : [						"super initialize.",						"self useSquareCorners"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2755689,					"argumentNames" : [ ]				},				"IceTipCache" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself reset"					],					"body" : [						"super initialize.",						"self reset"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7055465,					"argumentNames" : [ ]				},				"ZnCookie" : {					"sourceCode" : [						"initialize",						"",						"\tattributes := Dictionary new"					],					"body" : [						"attributes := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2201588,					"argumentNames" : [ ]				},				"CmdMenu" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\trootGroup := CmdRootMenuGroup new"					],					"body" : [						"super initialize.",						"",						"rootGroup := CmdRootMenuGroup new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2885145,					"argumentNames" : [ ]				},				"StartupPreferencesLoader" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tactions := Dictionary new.",						"\terrors := OrderedCollection new"					],					"body" : [						"super initialize.",						"actions := Dictionary new.",						"errors := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2249092,					"argumentNames" : [ ]				},				"ClyQueryResultMetadata" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tproperties := OrderedCollection new"					],					"body" : [						"super initialize.",						"",						"properties := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5653273,					"argumentNames" : [ ]				},				"OSWindowRenderThread" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself createRenderThread.",						"\tRenderSession := Smalltalk session"					],					"body" : [						"super initialize.",						"self createRenderThread.",						"RenderSession := Smalltalk session"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4853034,					"argumentNames" : [ ]				},				"SpToolbarMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #rigid;",						"\t\twrapCentering: #center;",						"\t\tcolor: self defaultColor;",						"\t\textent: 0 @ 0.",						"",						"\tself initializePanels"					],					"body" : [						"super initialize.",						"",						"self",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\thResizing: #spaceFill;",						"\tvResizing: #rigid;",						"\twrapCentering: #center;",						"\tcolor: self defaultColor;",						"\textent: 0 @ 0.",						"",						"self initializePanels"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3367178,					"argumentNames" : [ ]				},				"ReAtIfAbsentRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: '``@dictionary at: ``@key ",						"\t\t\t\t\tifAbsent: [| `@temps | ",						"\t\t\t\t\t\t\t``@.Statements1.",						"\t\t\t\t\t\t\t``@dictionary at: ``@key put: ``@object.",						"\t\t\t\t\t\t\t``@.Statements2.",						"\t\t\t\t\t\t\t``@object]'",						"\t\twith: '``@dictionary at: ``@key",						"\t\t\t\t\tifAbsentPut: [| `@temps |",						"\t\t\t\t\t\t\t``@.Statements1.",						"\t\t\t\t\t\t\t``@.Statements2.",						"\t\t\t\t\t\t\t``@object]';",						"\t\treplace: '``@dictionary at: ``@key",						"\t\t\t\t\tifAbsent: [| `@temps |",						"\t\t\t\t\t\t\t``@.Statements.",						"\t\t\t\t\t\t\t``@dictionary at: ``@key put: ``@object]'",						"\t\twith: '``@dictionary at: ``@key",						"\t\t\t\t\tifAbsentPut: [| `@temps |",						"\t\t\t\t\t\t\t``@.Statements.",						"\t\t\t\t\t\t\t``@object]'"					],					"body" : [						"super initialize.",						"self",						"\treplace: '``@dictionary at: ``@key ",						"\t\t\t\t\tifAbsent: [| `@temps | ",						"\t\t\t\t\t\t\t``@.Statements1.",						"\t\t\t\t\t\t\t``@dictionary at: ``@key put: ``@object.",						"\t\t\t\t\t\t\t``@.Statements2.",						"\t\t\t\t\t\t\t``@object]'",						"\twith: '``@dictionary at: ``@key",						"\t\t\t\t\tifAbsentPut: [| `@temps |",						"\t\t\t\t\t\t\t``@.Statements1.",						"\t\t\t\t\t\t\t``@.Statements2.",						"\t\t\t\t\t\t\t``@object]';",						"\treplace: '``@dictionary at: ``@key",						"\t\t\t\t\tifAbsent: [| `@temps |",						"\t\t\t\t\t\t\t``@.Statements.",						"\t\t\t\t\t\t\t``@dictionary at: ``@key put: ``@object]'",						"\twith: '``@dictionary at: ``@key",						"\t\t\t\t\tifAbsentPut: [| `@temps |",						"\t\t\t\t\t\t\t``@.Statements.",						"\t\t\t\t\t\t\t``@object]'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4727856,					"argumentNames" : [ ]				},				"SpPaginatorSelectionMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\thResizing: #rigid;",						"\t\tvResizing: #spaceFill.",						"\tself addResizingEdges"					],					"body" : [						"super initialize.",						"self",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\thResizing: #rigid;",						"\tvResizing: #spaceFill.",						"self addResizingEdges"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3363143,					"argumentNames" : [ ]				},				"TKTWorkerPool" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tworkers := Set new.",						"\tfreeWorkers := AtomicSharedQueue new.",						"",						"\tpoolWorker := TKTWorker new.",						"\tself name: 'Worker' , self identityHash asString"					],					"body" : [						"super initialize.",						"",						"workers := Set new.",						"freeWorkers := AtomicSharedQueue new.",						"",						"poolWorker := TKTWorker new.",						"self name: 'Worker' , self identityHash asString"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1222431,					"argumentNames" : [ ]				},				"RSDelaunayExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tuseFill := false.",						"\tallParticles := OrderedCollection new"					],					"body" : [						"super initialize.",						"useFill := false.",						"allParticles := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "running",					"comment" : [ ],					"hash" : 3079731,					"argumentNames" : [ ]				},				"ReAssignmentInBlockRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny:",						"\t\t#( '`@cursor showWhile: [| `@temps | `@.Statements1. `var := `@object]'",						"\t\t   '`@cursor showWhile: [| `@temps | `@.Statements1. ^`@object]'",						"\t\t   '[| `@temps | `@.Statements. `var := `@object] ensure: `@block'",						"\t\t   '[| `@temps | `@.Statements. ^`@object] ensure: `@block'",						"\t\t   '[| `@temps | `@.Statements. `var := `@object] ifCurtailed: `@block'",						"\t\t   '[| `@temps | `@.Statements. ^`@object] ifCurtailed: `@block' )"					],					"body" : [						"super initialize.",						"self matchesAny:",						"\t#( '`@cursor showWhile: [| `@temps | `@.Statements1. `var := `@object]'",						"\t   '`@cursor showWhile: [| `@temps | `@.Statements1. ^`@object]'",						"\t   '[| `@temps | `@.Statements. `var := `@object] ensure: `@block'",						"\t   '[| `@temps | `@.Statements. ^`@object] ensure: `@block'",						"\t   '[| `@temps | `@.Statements. `var := `@object] ifCurtailed: `@block'",						"\t   '[| `@temps | `@.Statements. ^`@object] ifCurtailed: `@block' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4738477,					"argumentNames" : [ ]				},				"EmbossedStringMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tstyle: #inset;",						"\t\ttrackPaneColor: true"					],					"body" : [						"super initialize.",						"self",						"\tstyle: #inset;",						"\ttrackPaneColor: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1401037,					"argumentNames" : [ ]				},				"SpMenuGroupPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\titems := OrderedCollection new asValueHolder.",						"\tself property: #autoRefresh whenChangedDo: [ :aBoolean | ",						"\t\tself menuItems do: [ :each | each autoRefresh: aBoolean ] ]"					],					"body" : [						"super initialize.",						"",						"items := OrderedCollection new asValueHolder.",						"self property: #autoRefresh whenChangedDo: [ :aBoolean | ",						"\tself menuItems do: [ :each | each autoRefresh: aBoolean ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3014677,					"argumentNames" : [ ]				},				"MergeJoinSection" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tself",						"\t\tallowClick: true;",						"\t\tselected: false;",						"\t\tselectionState: #dst;",						"\t\tstateIcons: self defaultStateIcons;",						"\t\tselectedBorderColor: Color black.",						"\tsuper initialize"					],					"body" : [						"self",						"\tallowClick: true;",						"\tselected: false;",						"\tselectionState: #dst;",						"\tstateIcons: self defaultStateIcons;",						"\tselectedBorderColor: Color black.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 4150658,					"argumentNames" : [ ]				},				"ClyBrowserContext" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tselectedItems := #(  )"					],					"body" : [						"super initialize.",						"selectedItems := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5907373,					"argumentNames" : [ ]				},				"ReNoPrintStringInPrintOnRule class" : {					"sourceCode" : [						"initialize",						"",						"\tReRuleManager cleanUp"					],					"body" : [						"ReRuleManager cleanUp"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2516250,					"argumentNames" : [ ]				},				"ZnServerLogEvent" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tprocessId := ZnUtils currentProcessID"					],					"body" : [						"super initialize.",						"processId := ZnUtils currentProcessID"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 2182195,					"argumentNames" : [ ]				},				"MalTarjan" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tnodes := Dictionary new"					],					"body" : [						"super initialize.",						"nodes := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2556953,					"argumentNames" : [ ]				},				"DTMockPlugin" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thasBeenRun := false"					],					"body" : [						"super initialize.",						"hasBeenRun := false"					],					"isTestMethod" : false,					"category" : "api",					"comment" : [ ],					"hash" : 3772873,					"argumentNames" : [ ]				},				"CTBlockSlotDescriptor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself",						"\t\toneToOne;",						"\t\theaderWithAllSuperclasses;",						"\t\tinline: [ :anObject :level :aBoolean | aBoolean ];",						"\t\tselectorHasBeenGiven"					],					"body" : [						"super initialize.",						"",						"self",						"\toneToOne;",						"\theaderWithAllSuperclasses;",						"\tinline: [ :anObject :level :aBoolean | aBoolean ];",						"\tselectorHasBeenGiven"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3655121,					"argumentNames" : [ ]				},				"MenuLineMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #spaceFill"					],					"body" : [						"super initialize.",						"self",						"\thResizing: #spaceFill;",						"\tvResizing: #spaceFill"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1381537,					"argumentNames" : [ ]				},				"HashTableSizes class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Throw away any previously-cached sizes, then compute and cache the sizes.\"",						"",						"\t\"self initialize\"",						"",						"\tsizes := nil.",						"\tself sizes.",						"",						"\tsmallSizesLookupTable := nil.",						"\tself smallSizesLookupTable"					],					"body" : [						"sizes := nil.",						"self sizes.",						"",						"smallSizesLookupTable := nil.",						"self smallSizesLookupTable"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Throw away any previously-cached sizes, then compute and cache the sizes."					],					"hash" : 1595288,					"argumentNames" : [ ]				},				"PluggableListMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initForKeystrokes"					],					"body" : [						"super initialize.",						"self initForKeystrokes"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2722409,					"argumentNames" : [ ]				},				"ReToDoWithIncrementRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny:",						"\t\t#( '`@i to: `@j do: [:`e | | `@temps | `@.Stmts. `x := `x + 1. `@.Stmts2]'",						"\t\t   '`@i to: `@j by: `@k do: [:`e | | `@temps | `@.Stmts. `x := `x + `@k. `@.Stmts2]'",						"\t\t   '`@i to: `@j do: [:`e | | `@temps | `@.Stmts. `x := `x - 1. `@.Stmts2]'",						"\t\t   '`@i to: `@j by: `@k do: [:`e | | `@temps | `@.Stmts. `x := `x - `@k. `@.Stmts2]' )"					],					"body" : [						"super initialize.",						"self matchesAny:",						"\t#( '`@i to: `@j do: [:`e | | `@temps | `@.Stmts. `x := `x + 1. `@.Stmts2]'",						"\t   '`@i to: `@j by: `@k do: [:`e | | `@temps | `@.Stmts. `x := `x + `@k. `@.Stmts2]'",						"\t   '`@i to: `@j do: [:`e | | `@temps | `@.Stmts. `x := `x - 1. `@.Stmts2]'",						"\t   '`@i to: `@j by: `@k do: [:`e | | `@temps | `@.Stmts. `x := `x - `@k. `@.Stmts2]' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4748717,					"argumentNames" : [ ]				},				"TextInputFieldPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tghostText := '' asValueHolder.",						"\tacceptOnCR := true asValueHolder.",						"\tentryCompletion := nil asValueHolder.",						"\tisEncrypted := false asValueHolder.",						"",						"\tghostText whenChangedDo: [ :txt | ",						"\t\tself changed: #ghostText: with: { txt } ].",						"\tacceptOnCR whenChangedDo: [ :bool | ",						"\t\tself changed: #acceptOnCR: with: { bool } ].",						"\tisEncrypted whenChangedDo: [ :bool | ",						"\t\tself changed: #encrypted: with: { bool } ]"					],					"body" : [						"super initialize.",						"",						"ghostText := '' asValueHolder.",						"acceptOnCR := true asValueHolder.",						"entryCompletion := nil asValueHolder.",						"isEncrypted := false asValueHolder.",						"",						"ghostText whenChangedDo: [ :txt | ",						"\tself changed: #ghostText: with: { txt } ].",						"acceptOnCR whenChangedDo: [ :bool | ",						"\tself changed: #acceptOnCR: with: { bool } ].",						"isEncrypted whenChangedDo: [ :bool | ",						"\tself changed: #encrypted: with: { bool } ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1703702,					"argumentNames" : [ ]				},				"SingleCodeCriticResultList class" : {					"sourceCode" : [						"initialize",						"",						"\ticons := IdentityDictionary new"					],					"body" : [						"icons := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2499880,					"argumentNames" : [ ]				},				"RePlatformDependentUserInteractionRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny:",						"\t\t#( 'PopUpMenu confirm: `@object1 orCancel: `@object2'",						"\t\t   'PopUpMenu confirm: `@object1 trueChoice: `@object2 falseChoice: `@object3'",						"\t\t   'PopUpMenu confirm: `@object1' 'PopUpMenu inform: `@object1'",						"\t\t   'PopUpMenu initialize' 'PopUpMenu labelArray: `@object1 lines: `@object2'",						"\t\t   'PopUpMenu labelArray: `@object1'",						"\t\t   'PopUpMenu labels: `@object1 lines: `@object2'",						"\t\t   'PopUpMenu labels: `@object1' 'PopUpMenu withCaption: `@object1 chooseFrom: `@object2' )"					],					"body" : [						"super initialize.",						"self matchesAny:",						"\t#( 'PopUpMenu confirm: `@object1 orCancel: `@object2'",						"\t   'PopUpMenu confirm: `@object1 trueChoice: `@object2 falseChoice: `@object3'",						"\t   'PopUpMenu confirm: `@object1' 'PopUpMenu inform: `@object1'",						"\t   'PopUpMenu initialize' 'PopUpMenu labelArray: `@object1 lines: `@object2'",						"\t   'PopUpMenu labelArray: `@object1'",						"\t   'PopUpMenu labels: `@object1 lines: `@object2'",						"\t   'PopUpMenu labels: `@object1' 'PopUpMenu withCaption: `@object1 chooseFrom: `@object2' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4744109,					"argumentNames" : [ ]				},				"SpMorphicCodeCompletionEngine" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcontextClass := CoCompletionContext"					],					"body" : [						"super initialize.",						"contextClass := CoCompletionContext"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6167196,					"argumentNames" : [ ]				},				"BracketSliderMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tfillStyle: self defaultFillStyle;",						"\t\tborderStyle: (BorderStyle inset",						"\t\t\t\t baseColor: self paneColor;",						"\t\t\t\t width: 1);",						"\t\tsliderColor: Color black;",						"\t\tclipSubmorphs: true"					],					"body" : [						"super initialize.",						"self",						"\tfillStyle: self defaultFillStyle;",						"\tborderStyle: (BorderStyle inset",						"\t\t\t baseColor: self paneColor;",						"\t\t\t width: 1);",						"\tsliderColor: Color black;",						"\tclipSubmorphs: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2730090,					"argumentNames" : [ ]				},				"TFVariadicFunctionDefinition" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfixedArgumentCount := 0"					],					"body" : [						"super initialize.",						"fixedArgumentCount := 0"					],					"isTestMethod" : false,					"category" : "private",					"comment" : [ ],					"hash" : 2815694,					"argumentNames" : [ ]				},				"MorphExtension" : {					"sourceCode" : [						"initialize",						"",						"\tlocked := false.",						"\tvisible := true.",						"\tsticky := false"					],					"body" : [						"locked := false.",						"visible := true.",						"sticky := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2450390,					"argumentNames" : [ ]				},				"SpProgressBarPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself fixedAt: 0"					],					"body" : [						"super initialize.",						"self fixedAt: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3016906,					"argumentNames" : [ ]				},				"LIFOQueue" : {					"sourceCode" : [						"initialize",						"",						"\t| dummy |",						"\tdummy := self newItem.",						"\tdummy",						"\t\tnext: nil;",						"\t\tobject: dummy.",						"\thead := dummy"					],					"body" : [						"| dummy |",						"dummy := self newItem.",						"dummy",						"\tnext: nil;",						"\tobject: dummy.",						"head := dummy"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2151781,					"argumentNames" : [ ]				},				"RSIdentityMatrix" : {					"sourceCode" : [						"initialize",						"",						"\trows := IdentityDictionary new"					],					"body" : [						"rows := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6533620,					"argumentNames" : [ ]				},				"AbstractWorldRenderer" : {					"sourceCode" : [						"initialize",						"",						"\talreadyActivated := false"					],					"body" : [						"alreadyActivated := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2442661,					"argumentNames" : [ ]				},				"IceMetacelloLoadSession" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tchoices := Set new"					],					"body" : [						"super initialize.",						"choices := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7036441,					"argumentNames" : [ ]				},				"RSSankey" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tboxShape := RSBox new.",						"\tboxShape @ RSDraggable.",						"\tlabelShape := RSLabel new.",						"\tlineShape := RSBezier new.",						"\tlineShape color: Color lightGray translucent.",						"\tlineShape controlPointsController: RSSankeyCPController new.",						"\tself nodePadding: 0"					],					"body" : [						"super initialize.",						"boxShape := RSBox new.",						"boxShape @ RSDraggable.",						"labelShape := RSLabel new.",						"lineShape := RSBezier new.",						"lineShape color: Color lightGray translucent.",						"lineShape controlPointsController: RSSankeyCPController new.",						"self nodePadding: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3087121,					"argumentNames" : [ ]				},				"ReShouldntRaiseErrorRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: 'self shouldnt: [ `@statements ] raise: Error'",						"\t\twith: '`@statements';",						"\t\treplace: 'self shouldnt: [ `@statements ] raise: Exception'",						"\t\twith: '`@statements'"					],					"body" : [						"super initialize.",						"self",						"\treplace: 'self shouldnt: [ `@statements ] raise: Error'",						"\twith: '`@statements';",						"\treplace: 'self shouldnt: [ `@statements ] raise: Exception'",						"\twith: '`@statements'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4735516,					"argumentNames" : [ ]				},				"ShortcutReminder" : {					"sourceCode" : [						"initialize",						"",						"\tcountDict := Dictionary new.",						"\tlimit := self defaultLimit.",						"\tsize := #small.",						"\tposition := #bottomLeft.",						"\tbackgroundColor := self defaultBackgroundColor.",						"\ttextColor := self defaultTextColor"					],					"body" : [						"countDict := Dictionary new.",						"limit := self defaultLimit.",						"size := #small.",						"position := #bottomLeft.",						"backgroundColor := self defaultBackgroundColor.",						"textColor := self defaultTextColor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2676480,					"argumentNames" : [ ]				},				"KeyboardKey class" : {					"sourceCode" : [						"initialize",						"",						"\tself",						"\t\tinitializeKeyTable;",						"\t\tinitializeMacOSVirtualKeyTable;",						"\t\tinitializeUnixVirtualKeyTable;",						"\t\tinitializeWindowsVirtualKeyTable;",						"\t\tinitializeKeyFromCharacterCompatibilityTable"					],					"body" : [						"self",						"\tinitializeKeyTable;",						"\tinitializeMacOSVirtualKeyTable;",						"\tinitializeUnixVirtualKeyTable;",						"\tinitializeWindowsVirtualKeyTable;",						"\tinitializeKeyFromCharacterCompatibilityTable"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1811786,					"argumentNames" : [ ]				},				"ImageFillStyle" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\torigin: 0 @ 0;",						"\t\toffset: 0 @ 0"					],					"body" : [						"super initialize.",						"self",						"\torigin: 0 @ 0;",						"\toffset: 0 @ 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2413926,					"argumentNames" : [ ]				},				"ClassAnnotation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tpriority := 0.",						"\tactiveContext := NullAnnotationContext instance"					],					"body" : [						"super initialize.",						"",						"priority := 0.",						"activeContext := NullAnnotationContext instance"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2866511,					"argumentNames" : [ ]				},				"ReEmptyExceptionHandlerRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matches: '`@block ",						"\t\t\ton: `exception",						"\t\t\tdo: [ :`@err | | `@temps | ]'"					],					"body" : [						"super initialize.",						"self matches: '`@block ",						"\t\t\ton: `exception",						"\t\t\tdo: [ :`@err | | `@temps | ]'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4742061,					"argumentNames" : [ ]				},				"RFMetaContext" : {					"sourceCode" : [						"initialize",						"",						"\tlevel := 0"					],					"body" : [						"level := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3824550,					"argumentNames" : [ ]				},				"SpCollectionListModel" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tsuper initialize"					],					"body" : [						"self class initializeSlots: self.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2974056,					"argumentNames" : [ ]				},				"ReRuleManager class" : {					"sourceCode" : [						"initialize",						"",						"\tself reset.",						"\tself subscribe"					],					"body" : [						"self reset.",						"self subscribe"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2532605,					"argumentNames" : [ ]				},				"Context class" : {					"sourceCode" : [						"initialize",						"",						"\t\"A unique object to be returned when a primitive fails during simulation\"",						"",						"\tPrimitiveFailToken := Object new.",						"\tself initializeTryNamedPrimitiveTemplateMethod.",						"\tSpecialPrimitiveSimulators := nil"					],					"body" : [						"PrimitiveFailToken := Object new.",						"self initializeTryNamedPrimitiveTemplateMethod.",						"SpecialPrimitiveSimulators := nil"					],					"isTestMethod" : false,					"category" : "simulation",					"comment" : [						"A unique object to be returned when a primitive fails during simulation"					],					"hash" : 1589825,					"argumentNames" : [ ]				},				"StBaseFilter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself filteredItems: self defaultFilteredItems"					],					"body" : [						"super initialize.",						"",						"self filteredItems: self defaultFilteredItems"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6295386,					"argumentNames" : [ ]				},				"RBTransformation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpreconditionChecking := false"					],					"body" : [						"super initialize.",						"preconditionChecking := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5260490,					"argumentNames" : [ ]				},				"RSCanvasController" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself interactions: (self defaultInteractions collect: #new).",						"\tself",						"\t\twithLegend;",						"\t\tconfiguration: RSControlConfiguration new"					],					"body" : [						"super initialize.",						"self interactions: (self defaultInteractions collect: #new).",						"self",						"\twithLegend;",						"\tconfiguration: RSControlConfiguration new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6522221,					"argumentNames" : [ ]				},				"SpMorphicToolbarMenuButtonMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\thResizing: #shrinkWrap;",						"\t\tvResizing: #spaceFill;",						"\t\tcolor: Color transparent;",						"\t\tborderColor: Color transparent;",						"\t\tclipSubmorphs: true;",						"\t\tborderWidth: 0;",						"\t\textent: 0 @ 0"					],					"body" : [						"super initialize.",						"self",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\thResizing: #shrinkWrap;",						"\tvResizing: #spaceFill;",						"\tcolor: Color transparent;",						"\tborderColor: Color transparent;",						"\tclipSubmorphs: true;",						"\tborderWidth: 0;",						"\textent: 0 @ 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3360776,					"argumentNames" : [ ]				},				"Paragraph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself positionWhenComposed: 0 @ 0"					],					"body" : [						"super initialize.",						"self positionWhenComposed: 0 @ 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2648455,					"argumentNames" : [ ]				},				"ReWhileTrueRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny: #( '| `@temps | ",						"\t\t\t`@.Statements1. ",						"\t\t\t[`index <= `@stop] ",						"\t\t\t\twhileTrue: ",						"\t\t\t\t\t[| `@blockTemps | ",						"\t\t\t\t\t`@.BlockStmts1. ",						"\t\t\t\t\t`index := `index + 1].",						"\t\t\t`@.Statements2' '| `@temps | ",						"\t\t\t`@.Statements1. ",						"\t\t\t[`index < `@stop] ",						"\t\t\t\twhileTrue: ",						"\t\t\t\t\t[| `@blockTemps | ",						"\t\t\t\t\t`@.BlockStmts1. ",						"\t\t\t\t\t`index := `index + 1].",						"\t\t\t`@.Statements2' '| `@temps | ",						"\t\t\t`@.Statements1. ",						"\t\t\t[`index >= `@stop] ",						"\t\t\t\twhileTrue: ",						"\t\t\t\t\t[| `@blockTemps | ",						"\t\t\t\t\t`@.BlockStmts1. ",						"\t\t\t\t\t`index := `index - 1].",						"\t\t\t`@.Statements2' '| `@temps | ",						"\t\t\t`@.Statements1. ",						"\t\t\t[`index > `@stop] ",						"\t\t\t\twhileTrue: ",						"\t\t\t\t\t[| `@blockTemps | ",						"\t\t\t\t\t`@.BlockStmts1. ",						"\t\t\t\t\t`index := `index - 1].",						"\t\t\t`@.Statements2' )"					],					"body" : [						"super initialize.",						"self matchesAny: #( '| `@temps | ",						"\t\t\t`@.Statements1. ",						"\t\t\t[`index <= `@stop] ",						"\t\t\t\twhileTrue: ",						"\t\t\t\t\t[| `@blockTemps | ",						"\t\t\t\t\t`@.BlockStmts1. ",						"\t\t\t\t\t`index := `index + 1].",						"\t\t\t`@.Statements2' '| `@temps | ",						"\t\t\t`@.Statements1. ",						"\t\t\t[`index < `@stop] ",						"\t\t\t\twhileTrue: ",						"\t\t\t\t\t[| `@blockTemps | ",						"\t\t\t\t\t`@.BlockStmts1. ",						"\t\t\t\t\t`index := `index + 1].",						"\t\t\t`@.Statements2' '| `@temps | ",						"\t\t\t`@.Statements1. ",						"\t\t\t[`index >= `@stop] ",						"\t\t\t\twhileTrue: ",						"\t\t\t\t\t[| `@blockTemps | ",						"\t\t\t\t\t`@.BlockStmts1. ",						"\t\t\t\t\t`index := `index - 1].",						"\t\t\t`@.Statements2' '| `@temps | ",						"\t\t\t`@.Statements1. ",						"\t\t\t[`index > `@stop] ",						"\t\t\t\twhileTrue: ",						"\t\t\t\t\t[| `@blockTemps | ",						"\t\t\t\t\t`@.BlockStmts1. ",						"\t\t\t\t\t`index := `index - 1].",						"\t\t\t`@.Statements2' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4751277,					"argumentNames" : [ ]				},				"MCLazyVersionInfo" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tancestors := WeakArray new.",						"\tstepChildren := WeakArray new"					],					"body" : [						"super initialize.",						"ancestors := WeakArray new.",						"stepChildren := WeakArray new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1060722,					"argumentNames" : [ ]				},				"MCMockClassA class" : {					"sourceCode" : [						"initialize",						"",						"\tCVar := #initialized.",						"\tInitializationOrder := 1"					],					"body" : [						"CVar := #initialized.",						"InitializationOrder := 1"					],					"isTestMethod" : false,					"category" : "as yet unclassified",					"comment" : [ ],					"hash" : 5082139,					"argumentNames" : [ ]				},				"SpScrollSyncExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcurrentVerticalScrollPosition := 0"					],					"body" : [						"super initialize.",						"currentVerticalScrollPosition := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2366983,					"argumentNames" : [ ]				},				"FFIFunctionSpec" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\targuments := OrderedCollection new"					],					"body" : [						"super initialize.",						"arguments := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1314843,					"argumentNames" : [ ]				},				"SpMenuButtonPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize"					],					"body" : [						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3001520,					"argumentNames" : [ ]				},				"ReImplementedNotSentRule class" : {					"sourceCode" : [						"initialize",						"",						"\t\"we do not want to register if the rule is disabled\"",						"",						"\tself enabled ifFalse: [ ^ self ].",						"\tself reset.",						"\tself subscribe.",						"\tSessionManager default registerToolClassNamed: self name"					],					"body" : [						"self enabled ifFalse: [ ^ self ].",						"self reset.",						"self subscribe.",						"SessionManager default registerToolClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"we do not want to register if the rule is disabled"					],					"hash" : 4761889,					"argumentNames" : [ ]				},				"CriticToolbar" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcriticHolder := nil asValueHolder.",						"\truleHolder := nil asValueHolder.",						"\tbrowseModel := self instantiate: ButtonPresenter.",						"\ttransformModel := self instantiate: ButtonPresenter.",						"\tfalsepositiveModel := self instantiate: ButtonPresenter.",						"\tself setFocusOrder.",						"\tself setBrowseModel.",						"\tself setTransformModel.",						"\tself setFalsepositiveModel.",						"\tself registerForChanges"					],					"body" : [						"super initialize.",						"criticHolder := nil asValueHolder.",						"ruleHolder := nil asValueHolder.",						"browseModel := self instantiate: ButtonPresenter.",						"transformModel := self instantiate: ButtonPresenter.",						"falsepositiveModel := self instantiate: ButtonPresenter.",						"self setFocusOrder.",						"self setBrowseModel.",						"self setTransformModel.",						"self setFalsepositiveModel.",						"self registerForChanges"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2499798,					"argumentNames" : [ ]				},				"AthensTigerPart" : {					"sourceCode" : [						"initialize",						"",						"\tfill := stroke := false"					],					"body" : [						"fill := stroke := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4216996,					"argumentNames" : [ ]				},				"OSWindowWorldMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself color: Color veryLightGray.",						"\tisResizeable := true.",						"\tself extent: 640 @ 480.",						"\tself addHand: HandMorph new"					],					"body" : [						"super initialize.",						"self color: Color veryLightGray.",						"isResizeable := true.",						"self extent: 640 @ 480.",						"self addHand: HandMorph new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4796059,					"argumentNames" : [ ]				},				"ClyTableFilterFactory" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tstringPattern := ClySubstringPattern with: '' caseSensitive: false"					],					"body" : [						"super initialize.",						"",						"stringPattern := ClySubstringPattern with: '' caseSensitive: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5907157,					"argumentNames" : [ ]				},				"SpUIThemeDecorator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tthemeOverrideDict := Dictionary new"					],					"body" : [						"super initialize.",						"themeOverrideDict := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3357466,					"argumentNames" : [ ]				},				"RxsPredicate class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tself",						"\t\tinitializeNamedClassSelectors;",						"\t\tinitializeEscapedLetterSelectors"					],					"body" : [						"self",						"\tinitializeNamedClassSelectors;",						"\tinitializeEscapedLetterSelectors"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self initialize"					],					"hash" : 2245892,					"argumentNames" : [ ]				},				"SpMethodToolbarPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tmodel := AbstractTool new.",						"",						"\tsuper initialize"					],					"body" : [						"model := AbstractTool new.",						"",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2356576,					"argumentNames" : [ ]				},				"ClyCursorPositionLabelMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself setBalloonText:",						"\t\t'Current line number/Total line number [Current character number]'.",						"\tlabelMorph := '' asStringMorph.",						"\tself addMorph: labelMorph"					],					"body" : [						"super initialize.",						"self setBalloonText:",						"\t'Current line number/Total line number [Current character number]'.",						"labelMorph := '' asStringMorph.",						"self addMorph: labelMorph"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5889053,					"argumentNames" : [ ]				},				"ImagePreviewMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tchangeTableLayout;",						"\t\tcolor: Color transparent;",						"\t\thResizing: #shrinkWrap;",						"\t\tvResizing: #shrinkWrap;",						"\t\tcellInset: 16;",						"\t\timageMorph: self newImageMorph;",						"\t\ttextMorph: self newTextMorph;",						"\t\taddMorphBack: self imageMorph;",						"\t\taddMorphBack: self textMorph"					],					"body" : [						"super initialize.",						"self",						"\tchangeTableLayout;",						"\tcolor: Color transparent;",						"\thResizing: #shrinkWrap;",						"\tvResizing: #shrinkWrap;",						"\tcellInset: 16;",						"\timageMorph: self newImageMorph;",						"\ttextMorph: self newTextMorph;",						"\taddMorphBack: self imageMorph;",						"\taddMorphBack: self textMorph"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1379952,					"argumentNames" : [ ]				},				"HiFastTableExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thiedraColumnController := HiColumnController new.",						"\thiedraColumnController renderer",						"\t\tarrowSize: 1;",						"\t\tnodeConnectionOffset: 2;",						"\t\tcellWidth: 7"					],					"body" : [						"super initialize.",						"hiedraColumnController := HiColumnController new.",						"hiedraColumnController renderer",						"\tarrowSize: 1;",						"\tnodeConnectionOffset: 2;",						"\tcellWidth: 7"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5011356,					"argumentNames" : [ ]				},				"RBDummyLintRuleTest" : {					"sourceCode" : [						"initialize",						"",						"\tname := ''"					],					"body" : [						"name := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5398151,					"argumentNames" : [ ]				},				"IRPushArray" : {					"sourceCode" : [						"initialize",						"",						"\tsize := 0.",						"\tcons := false"					],					"body" : [						"size := 0.",						"cons := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2044613,					"argumentNames" : [ ]				},				"MetaLinkAnonymousClassBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tclasses := Dictionary new.",						"\tmigratedObjects := WeakIdentityKeyDictionary new"					],					"body" : [						"classes := Dictionary new.",						"migratedObjects := WeakIdentityKeyDictionary new"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 3821406,					"argumentNames" : [ ]				},				"JobProgressBarMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tprogressBar := ProgressBarMorph new.",						"\tprogressBar hResizing: #spaceFill.",						"\tself extent: 200 @ 20.",						"\tself",						"\t\tcolor: Color transparent;",						"\t\tlayoutPolicy: TableLayout new;",						"\t\tlistDirection: #leftToRight;",						"\t\tcellPositioning: #leftCenter;",						"\t\tcellInset: 3;",						"\t\tlistCentering: #center;",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #shrinkWrap.",						"",						"\tself",						"\t\taddMorphBack: progressBar;",						"\t\taddInterruptionButton"					],					"body" : [						"super initialize.",						"progressBar := ProgressBarMorph new.",						"progressBar hResizing: #spaceFill.",						"self extent: 200 @ 20.",						"self",						"\tcolor: Color transparent;",						"\tlayoutPolicy: TableLayout new;",						"\tlistDirection: #leftToRight;",						"\tcellPositioning: #leftCenter;",						"\tcellInset: 3;",						"\tlistCentering: #center;",						"\thResizing: #spaceFill;",						"\tvResizing: #shrinkWrap.",						"",						"self",						"\taddMorphBack: progressBar;",						"\taddInterruptionButton"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1380814,					"argumentNames" : [ ]				},				"RBMatchVisitor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\targuments := 0.",						"\ttemporaries := 0.",						"\tdifference := 0"					],					"body" : [						"super initialize.",						"arguments := 0.",						"temporaries := 0.",						"difference := 0"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 4013057,					"argumentNames" : [ ]				},				"MetacelloLoaderPolicy" : {					"sourceCode" : [						"initialize",						"",						"\tself",						"\t\trepositoryMap;",						"\t\tcacheRepository;",						"\t\tensuredMap.",						"\tignoreImage := false"					],					"body" : [						"self",						"\trepositoryMap;",						"\tcacheRepository;",						"\tensuredMap.",						"ignoreImage := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1126114,					"argumentNames" : [ ]				},				"FastInflateStream class" : {					"sourceCode" : [						"initialize",						"",						"\t\"FastInflateStream initialize\"",						"",						"\t| low high |",						"\t\"Init literal/length map\"",						"\tlow := #( 3 4 5 6 7 8 9 10 11 13 15 17 19 23 27 31 35 43 51 59 67 83",						"\t          99 115 131 163 195 227 258 ).",						"\thigh := #( 0 0 0 0 0 0 0 0 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 0",						"\t           0 ).",						"\tLiteralLengthMap := WordArray new: 256 + 32.",						"\t1 to: 257 do: [ :i | LiteralLengthMap at: i put: i - 1 ].",						"\t1 to: 29 do: [ :i | ",						"\t\tLiteralLengthMap",						"\t\t\tat: 257 + i",						"\t\t\tput: (low at: i) + ((high at: i) + 1 << 16) ].",						"",						"\t\"Init distance map\"",						"\thigh := #( 0 0 0 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12",						"\t           12 13 13 ).",						"\tlow := #( 1 2 3 4 5 7 9 13 17 25 33 49 65 97 129 193 257 385 513 769",						"\t          1025 1537 2049 3073 4097 6145 8193 12289 16385 24577 ).",						"\tDistanceMap := WordArray new: 32.",						"\t1 to: 30 do: [ :i | ",						"\tDistanceMap at: i put: (low at: i) + ((high at: i) << 16) ].",						"",						"\t\"Init fixed block huffman tables\"",						"\tFixedLitTable := self basicNew",						"\t\t                 huffmanTableFrom: FixedLitCodes",						"\t\t                 mappedBy: LiteralLengthMap.",						"\tFixedDistTable := self basicNew",						"\t\t                  huffmanTableFrom: FixedDistCodes",						"\t\t                  mappedBy: DistanceMap"					],					"body" : [						"| low high |",						"\"Init literal/length map\"",						"low := #( 3 4 5 6 7 8 9 10 11 13 15 17 19 23 27 31 35 43 51 59 67 83",						"          99 115 131 163 195 227 258 ).",						"high := #( 0 0 0 0 0 0 0 0 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 0 0 ).",						"LiteralLengthMap := WordArray new: 256 + 32.",						"1 to: 257 do: [ :i | LiteralLengthMap at: i put: i - 1 ].",						"1 to: 29 do: [ :i | ",						"\tLiteralLengthMap",						"\t\tat: 257 + i",						"\t\tput: (low at: i) + ((high at: i) + 1 << 16) ].",						"",						"\"Init distance map\"",						"high := #( 0 0 0 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12",						"           12 13 13 ).",						"low := #( 1 2 3 4 5 7 9 13 17 25 33 49 65 97 129 193 257 385 513 769",						"          1025 1537 2049 3073 4097 6145 8193 12289 16385 24577 ).",						"DistanceMap := WordArray new: 32.",						"1 to: 30 do: [ :i | ",						"DistanceMap at: i put: (low at: i) + ((high at: i) << 16) ].",						"",						"\"Init fixed block huffman tables\"",						"FixedLitTable := self basicNew",						"\t                 huffmanTableFrom: FixedLitCodes",						"\t                 mappedBy: LiteralLengthMap.",						"FixedDistTable := self basicNew",						"\t                  huffmanTableFrom: FixedDistCodes",						"\t                  mappedBy: DistanceMap"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"FastInflateStream initialize"					],					"hash" : 2919475,					"argumentNames" : [ ]				},				"Behavior class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Behavior initialize\"",						"",						"\t\"Never called for real\"",						"",						"\tObsoleteSubclasses",						"\t\tifNil: [ self initializeObsoleteSubclasses ]",						"\t\tifNotNil: [ ",						"\t\t\t| newDict |",						"\t\t\tnewDict := WeakKeyToCollectionDictionary newFrom:",						"\t\t\t\t           ObsoleteSubclasses.",						"\t\t\tnewDict rehash.",						"\t\t\tObsoleteSubclasses := newDict ].",						"",						"\tClassProperties",						"\t\tifNil: [ self initializeClassProperties ]",						"\t\tifNotNil: [ ",						"\t\t\t| newDict |",						"\t\t\tnewDict := WeakIdentityKeyDictionary newFrom: ClassProperties.",						"\t\t\tnewDict rehash.",						"\t\t\tClassProperties := newDict ]"					],					"body" : [						"ObsoleteSubclasses",						"\tifNil: [ self initializeObsoleteSubclasses ]",						"\tifNotNil: [ ",						"\t\t| newDict |",						"\t\tnewDict := WeakKeyToCollectionDictionary newFrom: ObsoleteSubclasses.",						"\t\tnewDict rehash.",						"\t\tObsoleteSubclasses := newDict ].",						"",						"ClassProperties",						"\tifNil: [ self initializeClassProperties ]",						"\tifNotNil: [ ",						"\t\t| newDict |",						"\t\tnewDict := WeakIdentityKeyDictionary newFrom: ClassProperties.",						"\t\tnewDict rehash.",						"\t\tClassProperties := newDict ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Behavior initialize"					],					"hash" : 1927794,					"argumentNames" : [ ]				},				"FreeTypeFontProvider class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Ensure that other classes have also been initialized by forcefully initializing them now.",						"\t It then does not matter which order they are initialized in during the package load\"",						"",						"\tFT2Constants initialize.",						"\tFreeTypeCache initialize.",						"\tFreeTypeCacheConstants initialize.",						"\tFreeTypeSettings initialize.",						"",						"\tcurrent := nil.",						"\tself current \"this creates an instance of me, and updates from the system\""					],					"body" : [						"FT2Constants initialize.",						"FreeTypeCache initialize.",						"FreeTypeCacheConstants initialize.",						"FreeTypeSettings initialize.",						"",						"current := nil.",						"self current \"this creates an instance of me, and updates from the system\""					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Ensure that other classes have also been initialized by forcefully initializing them now.",						"\t It then does not matter which order they are initialized in during the package load"					],					"hash" : 1508004,					"argumentNames" : [ ]				},				"KMCtrlModifier" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tidentifier := #c.",						"\tname := 'Ctrl'"					],					"body" : [						"super initialize.",						"identifier := #c.",						"name := 'Ctrl'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1575594,					"argumentNames" : [ ]				},				"HSVColorSelectorMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tborderWidth: 0;",						"\t\tchangeTableLayout;",						"\t\tcellInset: 4;",						"\t\tlistDirection: #leftToRight;",						"\t\tcellPositioning: #topLeft;",						"\t\tsvMorph: self newSVColorMorph;",						"\t\thMorph: self newHColorMorph;",						"\t\taddMorphBack: self svMorph;",						"\t\taddMorphBack: self hMorph;",						"\t\textent: 192 @ 152;",						"\t\thue: 0.5"					],					"body" : [						"super initialize.",						"self",						"\tborderWidth: 0;",						"\tchangeTableLayout;",						"\tcellInset: 4;",						"\tlistDirection: #leftToRight;",						"\tcellPositioning: #topLeft;",						"\tsvMorph: self newSVColorMorph;",						"\thMorph: self newHColorMorph;",						"\taddMorphBack: self svMorph;",						"\taddMorphBack: self hMorph;",						"\textent: 192 @ 152;",						"\thue: 0.5"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1376787,					"argumentNames" : [ ]				},				"DropListPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tlistHolder := OrderedCollection new asValueHolder.",						"\tselectionHolder := SelectionValueHolder new.",						"",						"\tlistHolder whenChangedDo: [ ",						"\t\tself changed: #getList.",						"\t\tself changed: #getIconFor:.",						"\t\tself internalResetSelection ].",						"",						"\tselectionHolder whenChangedDo: [ self changed: #getIndex ].",						"\tdisplayBlock := [ :model :item | item label ] asValueHolder.",						"\ticonHolder := [ :model :item | item icon ] asValueHolder.",						"",						"\tself whenSelectedItemChanged: [ :item | item value ]"					],					"body" : [						"super initialize.",						"",						"listHolder := OrderedCollection new asValueHolder.",						"selectionHolder := SelectionValueHolder new.",						"",						"listHolder whenChangedDo: [ ",						"\tself changed: #getList.",						"\tself changed: #getIconFor:.",						"\tself internalResetSelection ].",						"",						"selectionHolder whenChangedDo: [ self changed: #getIndex ].",						"displayBlock := [ :model :item | item label ] asValueHolder.",						"iconHolder := [ :model :item | item icon ] asValueHolder.",						"",						"self whenSelectedItemChanged: [ :item | item value ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1685039,					"argumentNames" : [ ]				},				"MalTarjanNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tnextNodes := Set new.",						"\tindex := -1.",						"\tinStack := false"					],					"body" : [						"super initialize.",						"nextNodes := Set new.",						"index := -1.",						"inStack := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2567733,					"argumentNames" : [ ]				},				"ClyLongExampleQuery" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\texecutionSemaphore := Semaphore new"					],					"body" : [						"super initialize.",						"executionSemaphore := Semaphore new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5660956,					"argumentNames" : [ ]				},				"SpActionBarPresenterBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself actionBarPresenter: SpActionBarPresenter new"					],					"body" : [						"super initialize.",						"self actionBarPresenter: SpActionBarPresenter new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3191578,					"argumentNames" : [ ]				},				"ClapValidationReport" : {					"sourceCode" : [						"initialize",						"",						"\tproblems := OrderedCollection new"					],					"body" : [						"problems := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1197044,					"argumentNames" : [ ]				},				"AthensShadowPaint" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself setDefaults"					],					"body" : [						"super initialize.",						"self setDefaults"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3846249,					"argumentNames" : [ ]				},				"CustomQuestionDialogWindow" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tself",						"\t\tyesButton: self defaultYesButton;",						"\t\tnoButton: self defaultNoButton;",						"\t\tcancelButton: self defaultCancelButton.",						"\tsuper initialize"					],					"body" : [						"self",						"\tyesButton: self defaultYesButton;",						"\tnoButton: self defaultNoButton;",						"\tcancelButton: self defaultCancelButton.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2742002,					"argumentNames" : [ ]				},				"Sp1RoassalPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tscript := [ :v |  ] asValueHolder.",						"\tscript whenChangedDo: [ :s | self refresh ]"					],					"body" : [						"super initialize.",						"script := [ :v |  ] asValueHolder.",						"script whenChangedDo: [ :s | self refresh ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2778603,					"argumentNames" : [ ]				},				"AlignmentMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tlayoutPolicy: TableLayout new;",						"\t\tlistDirection: #leftToRight;",						"\t\twrapCentering: #topLeft;",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #spaceFill;",						"\t\tlayoutInset: 2;",						"\t\trubberBandCells: true"					],					"body" : [						"super initialize.",						"self",						"\tlayoutPolicy: TableLayout new;",						"\tlistDirection: #leftToRight;",						"\twrapCentering: #topLeft;",						"\thResizing: #spaceFill;",						"\tvResizing: #spaceFill;",						"\tlayoutInset: 2;",						"\trubberBandCells: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2703741,					"argumentNames" : [ ]				},				"ToolRegistry" : {					"sourceCode" : [						"initialize",						"",						"\t\"symbols used as keys \"",						"",						"\ttools := IdentityDictionary new.",						"",						"\tself initDefaultToolSet"					],					"body" : [						"tools := IdentityDictionary new.",						"",						"self initDefaultToolSet"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"symbols used as keys "					],					"hash" : 2423213,					"argumentNames" : [ ]				},				"DiffBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself comparator: [ :a :b | a = b ]"					],					"body" : [						"super initialize.",						"self comparator: [ :a :b | a = b ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6153096,					"argumentNames" : [ ]				},				"EdgeGripMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tfitTargetOwner: false;",						"\t\tedgeName: #right;",						"\t\textent: self defaultWidth @ self defaultHeight;",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #spaceFill"					],					"body" : [						"super initialize.",						"self",						"\tfitTargetOwner: false;",						"\tedgeName: #right;",						"\textent: self defaultWidth @ self defaultHeight;",						"\thResizing: #spaceFill;",						"\tvResizing: #spaceFill"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1364198,					"argumentNames" : [ ]				},				"TFExternalAsyncCall" : {					"sourceCode" : [						"initialize",						"",						"\tsemaphore := Semaphore new"					],					"body" : [						"semaphore := Semaphore new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2823925,					"argumentNames" : [ ]				},				"MalSccExtractor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcircuits := Set new"					],					"body" : [						"super initialize.",						"circuits := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2554908,					"argumentNames" : [ ]				},				"DTRerunCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself name: 'Re-run tests'"					],					"body" : [						"super initialize.",						"self name: 'Re-run tests'"					],					"isTestMethod" : false,					"category" : "hooks",					"comment" : [ ],					"hash" : 3762349,					"argumentNames" : [ ]				},				"CoMockFetcherToRecordResets" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tresetingCount := 0"					],					"body" : [						"super initialize.",						"resetingCount := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6136780,					"argumentNames" : [ ]				},				"ProcessSpecificVariable class" : {					"sourceCode" : [						"initialize",						"",						"\tself resetSoleInstance"					],					"body" : [						"self resetSoleInstance"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1712708,					"argumentNames" : [ ]				},				"TextStyle class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeStyleDecoder"					],					"body" : [						"self initializeStyleDecoder"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2436932,					"argumentNames" : [ ]				},				"MergeDiffMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself allowJoinClicks: true"					],					"body" : [						"super initialize.",						"self allowJoinClicks: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 4138439,					"argumentNames" : [ ]				},				"SpDiffPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tleftText := ''.",						"\trightText := ''.",						"\tshowOptions := true.",						"\tshowOnlyDestination := false.",						"\tshowOnlySource := false.",						"\tbeWrapped := true.",						"",						"\tself",						"\t\tproperty: #beWrapped",						"\t\twhenChangedDo: [ :aBoolean | ",						"\t\tself changed: #beWrapped: with: { aBoolean } ].",						"\tself",						"\t\tproperty: #leftText",						"\t\twhenChangedDo: [ :newText | ",						"\t\tself changed: #leftText: with: { newText } ].",						"\tself",						"\t\tproperty: #rightText",						"\t\twhenChangedDo: [ :newText | ",						"\t\tself changed: #rightText: with: { newText } ].",						"\tself",						"\t\tproperty: #contextClass",						"\t\twhenChangedDo: [ :newClass | ",						"\t\tself changed: #contextClass: with: { newClass } ].",						"\tself",						"\t\tproperty: #showOptions",						"\t\twhenChangedDo: [ :aBoolean | ",						"\t\tself changed: #showOptions: with: { aBoolean } ].",						"\tself",						"\t\tproperty: #showOnlyDestination",						"\t\twhenChangedDo: [ :aBoolean | ",						"\t\tself changed: #showOnlyDestination: with: { aBoolean } ].",						"\tself",						"\t\tproperty: #showOnlySource",						"\t\twhenChangedDo: [ :aBoolean | ",						"\t\tself changed: #showOnlySource: with: { aBoolean } ].",						"\tself",						"\t\tproperty: #leftLabel",						"\t\twhenChangedDo: [ :newText | ",						"\t\tself changed: #leftLabel: with: { newText } ].",						"\tself",						"\t\tproperty: #rightLabel",						"\t\twhenChangedDo: [ :newText | ",						"\t\tself changed: #rightLabel: with: { newText } ]"					],					"body" : [						"super initialize.",						"",						"leftText := ''.",						"rightText := ''.",						"showOptions := true.",						"showOnlyDestination := false.",						"showOnlySource := false.",						"beWrapped := true.",						"",						"self",						"\tproperty: #beWrapped",						"\twhenChangedDo: [ :aBoolean | ",						"\tself changed: #beWrapped: with: { aBoolean } ].",						"self",						"\tproperty: #leftText",						"\twhenChangedDo: [ :newText | ",						"\tself changed: #leftText: with: { newText } ].",						"self",						"\tproperty: #rightText",						"\twhenChangedDo: [ :newText | ",						"\tself changed: #rightText: with: { newText } ].",						"self",						"\tproperty: #contextClass",						"\twhenChangedDo: [ :newClass | ",						"\tself changed: #contextClass: with: { newClass } ].",						"self",						"\tproperty: #showOptions",						"\twhenChangedDo: [ :aBoolean | ",						"\tself changed: #showOptions: with: { aBoolean } ].",						"self",						"\tproperty: #showOnlyDestination",						"\twhenChangedDo: [ :aBoolean | ",						"\tself changed: #showOnlyDestination: with: { aBoolean } ].",						"self",						"\tproperty: #showOnlySource",						"\twhenChangedDo: [ :aBoolean | ",						"\tself changed: #showOnlySource: with: { aBoolean } ].",						"self",						"\tproperty: #leftLabel",						"\twhenChangedDo: [ :newText | ",						"\tself changed: #leftLabel: with: { newText } ].",						"self",						"\tproperty: #rightLabel",						"\twhenChangedDo: [ :newText | ",						"\tself changed: #rightLabel: with: { newText } ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3276008,					"argumentNames" : [ ]				},				"TypingVisitor" : {					"sourceCode" : [						"initialize",						"",						"\ttypeStack := Stack new.",						"\ttypeStack push: Dictionary new"					],					"body" : [						"typeStack := Stack new.",						"typeStack push: Dictionary new"					],					"isTestMethod" : false,					"category" : "visiting",					"comment" : [ ],					"hash" : 4013074,					"argumentNames" : [ ]				},				"FTIndentedCellMorph" : {					"sourceCode" : [						"initialize",						"",						"\tindentation := 0. \"must be before super\"",						"",						"\tsuper initialize.",						"",						"\tself cellInset: 2"					],					"body" : [						"indentation := 0. \"must be before super\"",						"",						"super initialize.",						"",						"self cellInset: 2"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1367032,					"argumentNames" : [ ]				},				"FTCellMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttopSeparator := false.",						"\tself",						"\t\tclipSubmorphs: true;",						"\t\tlayoutPolicy: TableLayout new;",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #spaceFill;",						"\t\tlistDirection: #leftToRight;",						"\t\tlistCentering: #topLeft;",						"\t\twrapCentering: #center"					],					"body" : [						"super initialize.",						"topSeparator := false.",						"self",						"\tclipSubmorphs: true;",						"\tlayoutPolicy: TableLayout new;",						"\thResizing: #spaceFill;",						"\tvResizing: #spaceFill;",						"\tlistDirection: #leftToRight;",						"\tlistCentering: #topLeft;",						"\twrapCentering: #center"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1369241,					"argumentNames" : [ ]				},				"TKTWorker" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself name: ('Worker-{ID}' format: { (#ID -> UUID new) } asDictionary).",						"\tself ensureIsBeingWatched"					],					"body" : [						"super initialize.",						"self name: ('Worker-{ID}' format: { (#ID -> UUID new) } asDictionary).",						"self ensureIsBeingWatched"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1214103,					"argumentNames" : [ ]				},				"MCPatchOperation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself beNonConflict"					],					"body" : [						"super initialize.",						"self beNonConflict"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1078121,					"argumentNames" : [ ]				},				"TimeMeasuringTest" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tshouldProfile := false"					],					"body" : [						"super initialize.",						"shouldProfile := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4023755,					"argumentNames" : [ ]				},				"RSRoassalExporter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself withFixedShapes.",						"\tself zoomToCurrentCamera"					],					"body" : [						"super initialize.",						"self withFixedShapes.",						"self zoomToCurrentCamera"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3107107,					"argumentNames" : [ ]				},				"ReUnwindBlocksRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace:",						"\t\t\t'[| `@temps | ``@.Statements. `var := ``@object] ensure: ``@block'",						"\t\twith:",						"\t\t\t'`var := [| `@temps | ``@.Statements. ``@object] ensure: ``@block';",						"\t\treplace: '[| `@temps | ``@.Statements. ^``@object] ensure: ``@block'",						"\t\twith: '^[| `@temps | ``@.Statements. ``@object] ensure: ``@block';",						"\t\treplace:",						"\t\t\t'[| `@temps | ``@.Statements. `var := ``@object] ifCurtailed: ``@block'",						"\t\twith:",						"\t\t\t'`var := [| `@temps | ``@.Statements. ``@object] ifCurtailed: ``@block';",						"\t\treplace:",						"\t\t\t'[| `@temps | ``@.Statements. ^``@object] ifCurtailed: ``@block'",						"\t\twith:",						"\t\t\t'^[| `@temps | ``@.Statements. ``@object] ifCurtailed: ``@block'"					],					"body" : [						"super initialize.",						"self",						"\treplace:",						"\t\t'[| `@temps | ``@.Statements. `var := ``@object] ensure: ``@block'",						"\twith:",						"\t\t'`var := [| `@temps | ``@.Statements. ``@object] ensure: ``@block';",						"\treplace: '[| `@temps | ``@.Statements. ^``@object] ensure: ``@block'",						"\twith: '^[| `@temps | ``@.Statements. ``@object] ensure: ``@block';",						"\treplace:",						"\t\t'[| `@temps | ``@.Statements. `var := ``@object] ifCurtailed: ``@block'",						"\twith:",						"\t\t'`var := [| `@temps | ``@.Statements. ``@object] ifCurtailed: ``@block';",						"\treplace:",						"\t\t'[| `@temps | ``@.Statements. ^``@object] ifCurtailed: ``@block'",						"\twith:",						"\t\t'^[| `@temps | ``@.Statements. ``@object] ifCurtailed: ``@block'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4739256,					"argumentNames" : [ ]				},				"BitBlt class" : {					"sourceCode" : [						"initialize",						"",						"\tself recreateColorMaps"					],					"body" : [						"self recreateColorMaps"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1263428,					"argumentNames" : [ ]				},				"ClyInheritanceAnalysisEnvironmentPlugin" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tcacheGuard := Mutex new.",						"\tlittleHierarchyMaxSize := 10"					],					"body" : [						"super initialize.",						"",						"cacheGuard := Mutex new.",						"littleHierarchyMaxSize := 10"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5820698,					"argumentNames" : [ ]				},				"SpMorphicMillerAdapter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tneedRecalculatePages := false"					],					"body" : [						"super initialize.",						"needRecalculatePages := false"					],					"isTestMethod" : false,					"category" : "private",					"comment" : [ ],					"hash" : 3399932,					"argumentNames" : [ ]				},				"IceNodeQuery" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tresults := Set new"					],					"body" : [						"super initialize.",						"results := Set new"					],					"isTestMethod" : false,					"category" : "visiting",					"comment" : [ ],					"hash" : 7005211,					"argumentNames" : [ ]				},				"RSShapeBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself box.",						"\tcolor := Color gray"					],					"body" : [						"super initialize.",						"self box.",						"color := Color gray"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3076332,					"argumentNames" : [ ]				},				"KMBuffer" : {					"sourceCode" : [						"initialize",						"",						"\tbuffer := OrderedCollection new"					],					"body" : [						"buffer := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1566196,					"argumentNames" : [ ]				},				"MeshGradientPaint" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpatches := OrderedCollection new"					],					"body" : [						"super initialize.",						"patches := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3848729,					"argumentNames" : [ ]				},				"SpProgressDialog" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself title: 'Progress'.",						"\tmaxValue := 1.0"					],					"body" : [						"super initialize.",						"self title: 'Progress'.",						"maxValue := 1.0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3130861,					"argumentNames" : [ ]				},				"MCWorkingCopyBrowser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\torder := self class order.",						"\tshowOnlyRepositoriesFromWorkingCopy := true.",						"\tself registerToAnnouncer.",						"\tworkingCopyPattern := ''.",						"\trepositoryPattern := ''"					],					"body" : [						"super initialize.",						"order := self class order.",						"showOnlyRepositoriesFromWorkingCopy := true.",						"self registerToAnnouncer.",						"workingCopyPattern := ''.",						"repositoryPattern := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4010624,					"argumentNames" : [ ]				},				"TextDiffBuilder class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeTextAttributes"					],					"body" : [						"self initializeTextAttributes"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2686276,					"argumentNames" : [ ]				},				"OSMouseEvent" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmodifiers := OSStateModifiers new"					],					"body" : [						"super initialize.",						"modifiers := OSStateModifiers new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4805405,					"argumentNames" : [ ]				},				"MorphTreeNodeMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tlayoutPolicy: TableLayout new;",						"\t\tcellPositioning: #leftCenter;",						"\t\tlistDirection: #leftToRight;",						"\t\tcellSpacing: #none;",						"\t\thResizing: #shrinkWrap;",						"\t\tvResizing: #shrinkWrap;",						"\t\tcolor: Color transparent"					],					"body" : [						"super initialize.",						"self",						"\tlayoutPolicy: TableLayout new;",						"\tcellPositioning: #leftCenter;",						"\tlistDirection: #leftToRight;",						"\tcellSpacing: #none;",						"\thResizing: #shrinkWrap;",						"\tvResizing: #shrinkWrap;",						"\tcolor: Color transparent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 1385472,					"argumentNames" : [ ]				},				"KMNoModifier" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tidentifier := #''.",						"\tname := ''"					],					"body" : [						"super initialize.",						"identifier := #''.",						"name := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1576618,					"argumentNames" : [ ]				},				"RSSelectionPresentationInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself padding: 10"					],					"body" : [						"super initialize.",						"self padding: 10"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6589869,					"argumentNames" : [ ]				},				"RBMultiEnvironment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tenvironmentDictionaries := Dictionary new.",						"\tenvironment := RBSelectorEnvironment new"					],					"body" : [						"super initialize.",						"environmentDictionaries := Dictionary new.",						"environment := RBSelectorEnvironment new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2489275,					"argumentNames" : [ ]				},				"FLLargeIdentitySet" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tarray := Array new: 4096.",						"\tincludesNil := false"					],					"body" : [						"super initialize.",						"array := Array new: 4096.",						"includesNil := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1353579,					"argumentNames" : [ ]				},				"SpToggleButtonPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\taction := [  ]"					],					"body" : [						"super initialize.",						"action := [  ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3267111,					"argumentNames" : [ ]				},				"DeflateStream" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tblockPosition := 0.",						"\thashValue := 0.",						"\tself initializeHashTables"					],					"body" : [						"super initialize.",						"blockPosition := 0.",						"hashValue := 0.",						"self initializeHashTables"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2141098,					"argumentNames" : [ ]				},				"GB2312 class" : {					"sourceCode" : [						"initialize",						"",						"\t\"",						"\tGB2312 initialize",						"\"",						"",						"\tself initializeUcsTable.",						"\tEncodedCharSet declareEncodedCharSet: self atIndex: 2 + 1.",						"\tEncodedCharSet declareEncodedCharSet: self atIndex: 8 + 1.",						"\tcompoundTextSequence := String streamContents: [ :stream | ",						"\t\t                        stream nextPut: Character escape.",						"\t\t                        stream nextPut: $$.",						"\t\t                        stream nextPut: $(.",						"\t\t                        stream nextPut: $A ]"					],					"body" : [						"self initializeUcsTable.",						"EncodedCharSet declareEncodedCharSet: self atIndex: 2 + 1.",						"EncodedCharSet declareEncodedCharSet: self atIndex: 8 + 1.",						"compoundTextSequence := String streamContents: [ :stream | ",						"\t                        stream nextPut: Character escape.",						"\t                        stream nextPut: $$.",						"\t                        stream nextPut: $(.",						"\t                        stream nextPut: $A ]"					],					"isTestMethod" : false,					"category" : "class methods",					"comment" : [						"",						"\tGB2312 initialize"					],					"hash" : 3036366,					"argumentNames" : [ ]				},				"MillerScrollPane" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tupdating := false.",						"\tkeepShowingPage := false"					],					"body" : [						"super initialize.",						"updating := false.",						"keepShowingPage := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3415624,					"argumentNames" : [ ]				},				"TreePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tchildrenBlockHolder := [ {  } ] asValueHolder.",						"\thasChildrenBlockHolder := [ :item | ",						"\t                          (self childrenFor: item) notEmpty ]",						"\t\t                          asValueHolder.",						"\trootsHolder := {  } asValueHolder.",						"\tselectionHolder := {  } asValueHolder.",						"\tmenuBlockHolder := [  ] asValueHolder.",						"\tdisplayBlock := [ :item | item asString ] asValueHolder.",						"",						"\tremoveOnlyLastSelected := false asValueHolder.",						"\tautoDeselection := true asValueHolder.",						"\tautoMultiSelection := false asValueHolder.",						"\tcolumnInset := 5 asValueHolder.",						"\tdoubleClick := [  ] asValueHolder.",						"\tallowMenuOnNoItem := false asValueHolder.",						"\tisCheckList := false asValueHolder.",						"\tkeyStroke := [ :key |  ] asValueHolder.",						"\tmultiSelection := false asValueHolder.",						"\tevenRowColor := self theme backgroundColor asValueHolder.",						"\toddRowColor := self theme backgroundColor asValueHolder.",						"\tpreferedPaneColor := self theme backgroundColor asValueHolder.",						"\tresizerWidth := 2 asValueHolder.",						"\trowInset := 2 asValueHolder.",						"\ticonBlock := [ :each :node | node icon ] asValueHolder.",						"\thighlightedItem := nil asValueHolder.",						"\trootNodeHolder := [ :item | ",						"\t                  TreeNodePresenter new",						"\t\t                  content: item;",						"\t\t                  children: [ self childrenFor: item ] ]",						"\t\t                  asValueHolder.",						"",						"\tcolumns := { (TreeColumnPresenter new displayBlock: [ :node | ",						"\t\t            self wrapItem: node content ]) } asValueHolder.",						"",						"\tautoRefreshOnExpand := false asValueHolder.",						"",						"\t\"Since my nodes are already morphs, dragging them will actually extract them from their owner\"",						"\tdragTransformationBlock := [ :item :source | item complexContents ]",						"\t\t                           asValueHolder.",						"",						"\ttreeUpdated := nil asValueHolder.",						"",						"\tself registerEvents"					],					"body" : [						"super initialize.",						"",						"childrenBlockHolder := [ {  } ] asValueHolder.",						"hasChildrenBlockHolder := [ :item | (self childrenFor: item) notEmpty ]",						"\t                          asValueHolder.",						"rootsHolder := {  } asValueHolder.",						"selectionHolder := {  } asValueHolder.",						"menuBlockHolder := [  ] asValueHolder.",						"displayBlock := [ :item | item asString ] asValueHolder.",						"",						"removeOnlyLastSelected := false asValueHolder.",						"autoDeselection := true asValueHolder.",						"autoMultiSelection := false asValueHolder.",						"columnInset := 5 asValueHolder.",						"doubleClick := [  ] asValueHolder.",						"allowMenuOnNoItem := false asValueHolder.",						"isCheckList := false asValueHolder.",						"keyStroke := [ :key |  ] asValueHolder.",						"multiSelection := false asValueHolder.",						"evenRowColor := self theme backgroundColor asValueHolder.",						"oddRowColor := self theme backgroundColor asValueHolder.",						"preferedPaneColor := self theme backgroundColor asValueHolder.",						"resizerWidth := 2 asValueHolder.",						"rowInset := 2 asValueHolder.",						"iconBlock := [ :each :node | node icon ] asValueHolder.",						"highlightedItem := nil asValueHolder.",						"rootNodeHolder := [ :item | ",						"                  TreeNodePresenter new",						"\t                  content: item;",						"\t                  children: [ self childrenFor: item ] ]",						"\t                  asValueHolder.",						"",						"columns := { (TreeColumnPresenter new displayBlock: [ :node | ",						"\t            self wrapItem: node content ]) } asValueHolder.",						"",						"autoRefreshOnExpand := false asValueHolder.",						"",						"\"Since my nodes are already morphs, dragging them will actually extract them from their owner\"",						"dragTransformationBlock := [ :item :source | item complexContents ]",						"\t                           asValueHolder.",						"",						"treeUpdated := nil asValueHolder.",						"",						"self registerEvents"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1709633,					"argumentNames" : [ ]				},				"DAPackageCycle" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpackages := OrderedCollection new"					],					"body" : [						"super initialize.",						"packages := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2576921,					"argumentNames" : [ ]				},				"RSLegend" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself reset"					],					"body" : [						"super initialize.",						"self reset"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6568553,					"argumentNames" : [ ]				},				"TaskbarMorph class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tself showTaskbarPreferenceChanged"					],					"body" : [						"self showTaskbarPreferenceChanged"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1407812,					"argumentNames" : [ ]				},				"ClyNotebookPageMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcloseable := false.",						"\tlabelPresenter := ClyNotebookPageHeaderPresenter on: self.",						"\tself flag: #TODO. \"I'm hardcoding this width because I need to keep this sizes consistent. ",						"\tBut this is not good, think a better way.\"",						"\tlabelMorph := labelPresenter buildWithSpec",						"\t\t              hResizing: #rigid;",						"\t\t              width: 120;",						"\t\t              yourself"					],					"body" : [						"super initialize.",						"closeable := false.",						"labelPresenter := ClyNotebookPageHeaderPresenter on: self.",						"self flag: #TODO. \"I'm hardcoding this width because I need to keep this sizes consistent. ",						"\tBut this is not good, think a better way.\"",						"labelMorph := labelPresenter buildWithSpec",						"\t              hResizing: #rigid;",						"\t              width: 120;",						"\t              yourself"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5898346,					"argumentNames" : [ ]				},				"NECPreferences class" : {					"sourceCode" : [						"initialize",						"",						"\tenabled := true.",						"\tcaseSensitive := true.",						"\tsmartCharacters := true.",						"\texpandPrefixes := true.",						"\tcaptureNavigationKeys := true.",						"\tuseEnterToAccept := self defaultUseEnterToAccept.",						"\tsmartCharactersMapping := Dictionary new.",						"\tsmartCharactersMapping",						"\t\tat: $( put: $) -> true;",						"\t\tat: $[ put: $] -> true;",						"\t\tat: ${ put: $} -> true;",						"\t\tat: $\" put: $\" -> true;",						"\t\tat: $' put: $' -> true;",						"\t\tat: $< put: $> -> false;",						"\t\tat: $| put: $| -> false.",						"",						"\tsmartCharactersWithSingleSpace := ''.",						"\tsmartCharactersWithDoubleSpace := '[]{}'.",						"\tbackgroundColor := self defaultBackgroundColor.",						"\tpopupShowWithShortcut := self defaultPopupShortcut.",						"\tpopupShowAutomatic := self defaultPopupShowAutomatic.",						"\tpopupAutomaticDelay := self defaultPopupDelay.",						"\tNECEntry spaceAfterCompletion: true"					],					"body" : [						"enabled := true.",						"caseSensitive := true.",						"smartCharacters := true.",						"expandPrefixes := true.",						"captureNavigationKeys := true.",						"useEnterToAccept := self defaultUseEnterToAccept.",						"smartCharactersMapping := Dictionary new.",						"smartCharactersMapping",						"\tat: $( put: $) -> true;",						"\tat: $[ put: $] -> true;",						"\tat: ${ put: $} -> true;",						"\tat: $\" put: $\" -> true;",						"\tat: $' put: $' -> true;",						"\tat: $< put: $> -> false;",						"\tat: $| put: $| -> false.",						"",						"smartCharactersWithSingleSpace := ''.",						"smartCharactersWithDoubleSpace := '[]{}'.",						"backgroundColor := self defaultBackgroundColor.",						"popupShowWithShortcut := self defaultPopupShortcut.",						"popupShowAutomatic := self defaultPopupShowAutomatic.",						"popupAutomaticDelay := self defaultPopupDelay.",						"NECEntry spaceAfterCompletion: true"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 3923466,					"argumentNames" : [ ]				},				"ReMissingMethodCritique" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsource := ''"					],					"body" : [						"super initialize.",						"source := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2505651,					"argumentNames" : [ ]				},				"Workspace" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttextModel := self defaultTextModel.",						"\tencoding := 'utf8'.",						"\tself initializeBindings"					],					"body" : [						"super initialize.",						"textModel := self defaultTextModel.",						"encoding := 'utf8'.",						"self initializeBindings"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3792665,					"argumentNames" : [ ]				},				"SpListPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeTSearchable.",						"\tautoDeselect := true.",						"\tallowToSelect := true.",						"\tdisplay := [ :object | object asStringOrText ]"					],					"body" : [						"super initialize.",						"self initializeTSearchable.",						"autoDeselect := true.",						"allowToSelect := true.",						"display := [ :object | object asStringOrText ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3271528,					"argumentNames" : [ ]				},				"ReAssignmentWithoutEffectRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matches: '`var := `var'"					],					"body" : [						"super initialize.",						"self matches: '`var := `var'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4738989,					"argumentNames" : [ ]				},				"AtomicQueueItem" : {					"sourceCode" : [						"initialize",						"",						"\t\"make circular\"",						"",						"\tsuper initialize.",						"\tnext := self"					],					"body" : [						"super initialize.",						"next := self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"make circular"					],					"hash" : 1886406,					"argumentNames" : [ ]				},				"RSLayoutBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself flow"					],					"body" : [						"super initialize.",						"self flow"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6562921,					"argumentNames" : [ ]				},				"PasteUpMorph class" : {					"sourceCode" : [						"initialize",						"",						"\tShouldSwapMenuOpenerButtons := false.",						"\tself shouldShowWorldMenu: true"					],					"body" : [						"ShouldSwapMenuOpenerButtons := false.",						"self shouldShowWorldMenu: true"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2447606,					"argumentNames" : [ ]				},				"TestExecutionEnvironment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tservices := OrderedCollection new.",						"\ttestCompleted := false"					],					"body" : [						"super initialize.",						"services := OrderedCollection new.",						"testCompleted := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1161530,					"argumentNames" : [ ]				},				"RSColoredTreePalette" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\talpha := 1.0"					],					"body" : [						"super initialize.",						"alpha := 1.0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6567342,					"argumentNames" : [ ]				},				"RSBoxPlot" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tgapRatio: 0.1;",						"\t\tbarOffset: 0"					],					"body" : [						"super initialize.",						"self",						"\tgapRatio: 0.1;",						"\tbarOffset: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6607056,					"argumentNames" : [ ]				},				"ReGuardClauseRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\taddMatchingMethod: '`@methodName: `@args ",						"\t\t\t\t\t| `@temps | ",						"\t\t\t\t\t`@.Statements. ",						"\t\t\t\t\t`@condition ifTrue: [| `@trueTemps | `.Statement1. `.Statement2. `@.Statements1]'",						"\t\trewriteTo: '`@methodName: `@args",						"\t\t\t\t\t| `@temps `@trueTemps |",						"\t\t\t\t\t`@.Statements.",						"\t\t\t\t\t`@condition ifFalse: [^self].",						"\t\t\t\t\t`.Statement1.",						"\t\t\t\t\t`.Statement2.",						"\t\t\t\t\t`@.Statements1';",						"\t\taddMatchingMethod: '`@methodName: `@args ",						"\t\t\t\t\t| `@temps | ",						"\t\t\t\t\t`@.Statements. ",						"\t\t\t\t\t`@condition ifFalse: [| `@falseTemps | `.Statement1. `.Statement2. `@.Statements1]'",						"\t\trewriteTo: '`@methodName: `@args",						"\t\t\t\t\t| `@temps `@falseTemps |",						"\t\t\t\t\t`@.Statements.",						"\t\t\t\t\t`@condition ifTrue: [^self].",						"\t\t\t\t\t`.Statement1.",						"\t\t\t\t\t`.Statement2.",						"\t\t\t\t\t`@.Statements1'"					],					"body" : [						"super initialize.",						"self",						"\taddMatchingMethod: '`@methodName: `@args ",						"\t\t\t\t\t| `@temps | ",						"\t\t\t\t\t`@.Statements. ",						"\t\t\t\t\t`@condition ifTrue: [| `@trueTemps | `.Statement1. `.Statement2. `@.Statements1]'",						"\trewriteTo: '`@methodName: `@args",						"\t\t\t\t\t| `@temps `@trueTemps |",						"\t\t\t\t\t`@.Statements.",						"\t\t\t\t\t`@condition ifFalse: [^self].",						"\t\t\t\t\t`.Statement1.",						"\t\t\t\t\t`.Statement2.",						"\t\t\t\t\t`@.Statements1';",						"\taddMatchingMethod: '`@methodName: `@args ",						"\t\t\t\t\t| `@temps | ",						"\t\t\t\t\t`@.Statements. ",						"\t\t\t\t\t`@condition ifFalse: [| `@falseTemps | `.Statement1. `.Statement2. `@.Statements1]'",						"\trewriteTo: '`@methodName: `@args",						"\t\t\t\t\t| `@temps `@falseTemps |",						"\t\t\t\t\t`@.Statements.",						"\t\t\t\t\t`@condition ifTrue: [^self].",						"\t\t\t\t\t`.Statement1.",						"\t\t\t\t\t`.Statement2.",						"\t\t\t\t\t`@.Statements1'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4731952,					"argumentNames" : [ ]				},				"SpAbstractPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tsuper initialize.",						"\tneedRebuild := true"					],					"body" : [						"self class initializeSlots: self.",						"super initialize.",						"needRebuild := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2999939,					"argumentNames" : [ ]				},				"ShSuperclassChangedDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbuilderAccessor := [ :e | e superclass ].",						"\tclassAccessor := [ :e | e superclass ]"					],					"body" : [						"super initialize.",						"builderAccessor := [ :e | e superclass ].",						"classAccessor := [ :e | e superclass ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1621076,					"argumentNames" : [ ]				},				"DAPackageRelationGraphDiff" : {					"sourceCode" : [						"initialize",						"",						"\tpackagesDiff := OrderedCollection new.",						"\tdependentPackagesDiff := OrderedCollection new"					],					"body" : [						"packagesDiff := OrderedCollection new.",						"dependentPackagesDiff := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2583376,					"argumentNames" : [ ]				},				"SpecTableLayoutProperties" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcellSpacing := listSpacing := wrapDirection := #none.",						"\tcellPositioning := #center.",						"\tlistCentering := wrapCentering := #topLeft.",						"\tlistDirection := #topToBottom.",						"\treverseTableCells := rubberBandCells := false.",						"\tlayoutInset := cellInset := minCellSize := 0.",						"\tmaxCellSize := 1073741823 \"SmallInteger maxVal\""					],					"body" : [						"super initialize.",						"cellSpacing := listSpacing := wrapDirection := #none.",						"cellPositioning := #center.",						"listCentering := wrapCentering := #topLeft.",						"listDirection := #topToBottom.",						"reverseTableCells := rubberBandCells := false.",						"layoutInset := cellInset := minCellSize := 0.",						"maxCellSize := 1073741823 \"SmallInteger maxVal\""					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1777030,					"argumentNames" : [ ]				},				"NewHandleMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"\twaitingForClickInside := true"					],					"body" : [						"super initialize.",						"waitingForClickInside := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 2709499,					"argumentNames" : [ ]				},				"EditorFindReplaceDialogWindow class" : {					"sourceCode" : [						"initialize",						"",						"\t\"EditorFindReplaceDialogWindow initialize\"",						"",						"\tSingleton := nil"					],					"body" : [						"Singleton := nil"					],					"isTestMethod" : false,					"category" : "initializing",					"comment" : [						"EditorFindReplaceDialogWindow initialize"					],					"hash" : 2733792,					"argumentNames" : [ ]				},				"SpInformDialog" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself title: 'Inform'"					],					"body" : [						"super initialize.",						"self title: 'Inform'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3130029,					"argumentNames" : [ ]				},				"TextEditor class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the keyboard shortcut maps and the shared buffers",						"\tfor copying text across views and managing again and undo.\"",						"",						"\t\"",						"\tTextEditor initialize",						"\t\"",						"",						"\tself initializeCmdKeyShortcuts.",						"\tself initializeShiftCmdKeyShortcuts"					],					"body" : [						"self initializeCmdKeyShortcuts.",						"self initializeShiftCmdKeyShortcuts"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Initialize the keyboard shortcut maps and the shared buffers",						"\tfor copying text across views and managing again and undo."					],					"hash" : 2688253,					"argumentNames" : [ ]				},				"CairoUTF8Converter" : {					"sourceCode" : [						"initialize",						"",						"\tencoder := ZnUTF8Encoder new"					],					"body" : [						"encoder := ZnUTF8Encoder new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3882485,					"argumentNames" : [ ]				},				"SimpleBorderStyle" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\twidth := 1.",						"\tcolor := Color transparent"					],					"body" : [						"super initialize.",						"width := 1.",						"color := Color transparent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1445710,					"argumentNames" : [ ]				},				"RandomGaussian" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tmagic := -0.5 exp * 4 / 2 sqrt.",						"",						"\tself",						"\t\tmu: 0;",						"\t\tsigma: 1"					],					"body" : [						"super initialize.",						"",						"magic := -0.5 exp * 4 / 2 sqrt.",						"",						"self",						"\tmu: 0;",						"\tsigma: 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3120525,					"argumentNames" : [ ]				},				"FFIAbstract64BitsArgumentReader" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcurrentRegisterIndex := 1"					],					"body" : [						"super initialize.",						"currentRegisterIndex := 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1282001,					"argumentNames" : [ ]				},				"SelectEntity" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeValueHolders"					],					"body" : [						"super initialize.",						"self initializeValueHolders"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2902633,					"argumentNames" : [ ]				},				"RBLiteralNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tstart := 0.",						"\tstop := 0"					],					"body" : [						"super initialize.",						"",						"start := 0.",						"stop := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1972715,					"argumentNames" : [ ]				},				"StMockDebuggerActionModel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself interruptedContext: (Context",						"\t\t\t sender: nil",						"\t\t\t receiver: nil",						"\t\t\t method: Object >> #doesNotUnderstand:",						"\t\t\t arguments: #( #message ))"					],					"body" : [						"super initialize.",						"self interruptedContext: (Context",						"\t\t sender: nil",						"\t\t receiver: nil",						"\t\t method: Object >> #doesNotUnderstand:",						"\t\t arguments: #( #message ))"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 6345897,					"argumentNames" : [ ]				},				"ClyBrowserQueryCache" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstartPosition := 0.",						"\titems := Array empty"					],					"body" : [						"super initialize.",						"startPosition := 0.",						"items := Array empty"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5634635,					"argumentNames" : [ ]				},				"SpNumberInputFieldPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself beInteger.",						"\tself digits: self class defaultDigits.",						"\tself climbRate: self class defaultClimbRate"					],					"body" : [						"super initialize.",						"self beInteger.",						"self digits: self class defaultDigits.",						"self climbRate: self class defaultClimbRate"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3009248,					"argumentNames" : [ ]				},				"ZnEndianSensitiveUTFEncoder" : {					"sourceCode" : [						"initialize",						"",						"\tendianness := #big"					],					"body" : [						"endianness := #big"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 2003335,					"argumentNames" : [ ]				},				"ImagePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\timageHolder := nil asValueHolder.",						"\tactionHolder := [  ] asValueHolder.",						"\tautoScaleHolder := false asValueHolder.",						"\timageHolder whenChangedDo: [ self changed: #getImage ]"					],					"body" : [						"super initialize.",						"imageHolder := nil asValueHolder.",						"actionHolder := [  ] asValueHolder.",						"autoScaleHolder := false asValueHolder.",						"imageHolder whenChangedDo: [ self changed: #getImage ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1686953,					"argumentNames" : [ ]				},				"SpRubTextFieldMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdrawKeyboardFocus := true"					],					"body" : [						"super initialize.",						"drawKeyboardFocus := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3377417,					"argumentNames" : [ ]				},				"NECTestSuperClass" : {					"sourceCode" : [						"initialize",						"",						"\tsuperInstVar := Dictionary new"					],					"body" : [						"superInstVar := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5153012,					"argumentNames" : [ ]				},				"RSAbstractRegularTreeLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttopGap := 5.",						"\tleftGap := 5.",						"\tisLayered := false.",						"\tshouldBeHorizontallyReversed := false.",						"\tshouldBeVerticallyReversed := false"					],					"body" : [						"super initialize.",						"topGap := 5.",						"leftGap := 5.",						"isLayered := false.",						"shouldBeHorizontallyReversed := false.",						"shouldBeVerticallyReversed := false"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6555381,					"argumentNames" : [ ]				},				"IceRemoteDesynchronized" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tresumable := false"					],					"body" : [						"super initialize.",						"resumable := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7029711,					"argumentNames" : [ ]				},				"ClapCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsubcommands := OrderedCollection new.",						"\tflags := OrderedCollection new"					],					"body" : [						"super initialize.",						"subcommands := OrderedCollection new.",						"flags := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1193944,					"argumentNames" : [ ]				},				"StDebuggerInspectorModel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tinspectedObject := self debuggerContextClass new"					],					"body" : [						"super initialize.",						"inspectedObject := self debuggerContextClass new"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 6324182,					"argumentNames" : [ ]				},				"FFIExternalStructureFlatLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfields := OrderedCollection new.",						"\tsize := 0.",						"\talignment := 1.",						"\tintegerRegisterCount := 0.",						"\tfloatRegisterCount := 0"					],					"body" : [						"super initialize.",						"fields := OrderedCollection new.",						"size := 0.",						"alignment := 1.",						"integerRegisterCount := 0.",						"floatRegisterCount := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1288844,					"argumentNames" : [ ]				},				"SpMenuPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tgroups := OrderedCollection new.",						"\tself property: #autoRefresh whenChangedDo: [ :aBoolean | ",						"\t\tself menuGroups do: [ :each | each autoRefresh: aBoolean ] ]"					],					"body" : [						"super initialize.",						"",						"groups := OrderedCollection new.",						"self property: #autoRefresh whenChangedDo: [ :aBoolean | ",						"\tself menuGroups do: [ :each | each autoRefresh: aBoolean ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3015550,					"argumentNames" : [ ]				},				"RBRegexRefactoring" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmatchers := OrderedCollection new"					],					"body" : [						"super initialize.",						"matchers := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3964955,					"argumentNames" : [ ]				},				"TreeNavigationBarMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #rigid;",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\tcellInset: 2 @ 0;",						"\t\tlayoutInset: 3 @ 0;",						"\t\tlistCentering: #center;",						"\t\tclipSubmorphs: true;",						"\t\tborderWidth: 0;",						"\t\tborderColor: Color lightGray"					],					"body" : [						"super initialize.",						"self",						"\thResizing: #spaceFill;",						"\tvResizing: #rigid;",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\tcellInset: 2 @ 0;",						"\tlayoutInset: 3 @ 0;",						"\tlistCentering: #center;",						"\tclipSubmorphs: true;",						"\tborderWidth: 0;",						"\tborderColor: Color lightGray"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2763393,					"argumentNames" : [ ]				},				"SharedRandom" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmutex := Semaphore forMutualExclusion"					],					"body" : [						"super initialize.",						"mutex := Semaphore forMutualExclusion"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1924661,					"argumentNames" : [ ]				},				"FreeTypeSettings class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default",						"\t\tregisterGuiClassNamed: self name",						"\t\tatPriority: 10"					],					"body" : [						"SessionManager default registerGuiClassNamed: self name atPriority: 10"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2697958,					"argumentNames" : [ ]				},				"OSPlatform class" : {					"sourceCode" : [						"initialize",						"",						"\t\"OSPlatform initialize\"",						"",						"\tSessionManager default",						"\t\tregisterSystemClassNamed: self name",						"\t\tatPriority: 50.",						"\tself startUp: true"					],					"body" : [						"SessionManager default",						"\tregisterSystemClassNamed: self name",						"\tatPriority: 50.",						"self startUp: true"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"OSPlatform initialize"					],					"hash" : 1823745,					"argumentNames" : [ ]				},				"ProgressBarMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver from the current theme.\"",						"",						"\tsuper initialize.",						"\tvalue := 0.",						"\tstart := 0.",						"\tend := 100.",						"\theight := DefaultHeight.",						"\twidth := DefaultWidth.",						"\tcachedWidth := 0.",						"\tself",						"\t\tfillStyle: (self theme progressBarFillStyleFor: self);",						"\t\tborderStyle: (self theme progressBarBorderStyleFor: self);",						"\t\tbarFillStyle: (self theme progressBarProgressFillStyleFor: self);",						"\t\textent: width @ height + (2 * self borderWidth)"					],					"body" : [						"super initialize.",						"value := 0.",						"start := 0.",						"end := 100.",						"height := DefaultHeight.",						"width := DefaultWidth.",						"cachedWidth := 0.",						"self",						"\tfillStyle: (self theme progressBarFillStyleFor: self);",						"\tborderStyle: (self theme progressBarBorderStyleFor: self);",						"\tbarFillStyle: (self theme progressBarProgressFillStyleFor: self);",						"\textent: width @ height + (2 * self borderWidth)"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver from the current theme."					],					"hash" : 2756137,					"argumentNames" : [ ]				},				"RSSimplePopupBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself labelBuilder: RSMultilineLabelBuilder new"					],					"body" : [						"super initialize.",						"self labelBuilder: RSMultilineLabelBuilder new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6530586,					"argumentNames" : [ ]				},				"AthensWrapWorldMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself extent: self defaultExtent.",						"\tself hResizing: #spaceFill.",						"\tself vResizing: #spaceFill.",						"\twrappedWorldDisplay := AthensWrappedWorldDisplay on: self.",						"\tworldmorph := AthensWorldMorph new.",						"\tworldmorph color: Color orange.",						"\tworldmorph addHand: HandMorph new.",						"\tworldmorph display: wrappedWorldDisplay.",						"\tself addMorph: worldmorph"					],					"body" : [						"super initialize.",						"self extent: self defaultExtent.",						"self hResizing: #spaceFill.",						"self vResizing: #spaceFill.",						"wrappedWorldDisplay := AthensWrappedWorldDisplay on: self.",						"worldmorph := AthensWorldMorph new.",						"worldmorph color: Color orange.",						"worldmorph addHand: HandMorph new.",						"worldmorph display: wrappedWorldDisplay.",						"self addMorph: worldmorph"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4209063,					"argumentNames" : [ ]				},				"SpTestApplicationWithLocale" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tlocale := Locale isoLanguage: 'en' isoCountry: 'US'"					],					"body" : [						"super initialize.",						"",						"locale := Locale isoLanguage: 'en' isoCountry: 'US'"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 3296961,					"argumentNames" : [ ]				},				"ReToDoCollectRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny: #( '| `@temps1 |",						"\t\t\t`@.Stmts1.",						"\t\t\t`collection := Array new: `@size.",						"\t\t\t`@.Stmts2.",						"\t\t\t1 to: `@size do: ",						"\t\t\t\t\t[:`i | ",						"\t\t\t\t\t| `@Btemps2 | ",						"\t\t\t\t\t`@.BStmts1. ",						"\t\t\t\t\t`collection at: `i put: `@obj.",						"\t\t\t\t\t`@.BStmt2].",						"\t\t\t`@.Stmts3' '| `@temps1 |",						"\t\t\t`@.Stmts1.",						"\t\t\t`collection := Array new: `@size.",						"\t\t\t`@.Stmts2.",						"\t\t\t1 to: `collection size do: ",						"\t\t\t\t\t[:`i | ",						"\t\t\t\t\t| `@Btemps2 | ",						"\t\t\t\t\t`@.BStmts1. ",						"\t\t\t\t\t`collection at: `i put: `@obj.",						"\t\t\t\t\t`@.BStmt2].",						"\t\t\t`@.Stmts3' )"					],					"body" : [						"super initialize.",						"self matchesAny: #( '| `@temps1 |",						"\t\t\t`@.Stmts1.",						"\t\t\t`collection := Array new: `@size.",						"\t\t\t`@.Stmts2.",						"\t\t\t1 to: `@size do: ",						"\t\t\t\t\t[:`i | ",						"\t\t\t\t\t| `@Btemps2 | ",						"\t\t\t\t\t`@.BStmts1. ",						"\t\t\t\t\t`collection at: `i put: `@obj.",						"\t\t\t\t\t`@.BStmt2].",						"\t\t\t`@.Stmts3' '| `@temps1 |",						"\t\t\t`@.Stmts1.",						"\t\t\t`collection := Array new: `@size.",						"\t\t\t`@.Stmts2.",						"\t\t\t1 to: `collection size do: ",						"\t\t\t\t\t[:`i | ",						"\t\t\t\t\t| `@Btemps2 | ",						"\t\t\t\t\t`@.BStmts1. ",						"\t\t\t\t\t`collection at: `i put: `@obj.",						"\t\t\t\t\t`@.BStmt2].",						"\t\t\t`@.Stmts3' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4747693,					"argumentNames" : [ ]				},				"RSResizeParentWhenChildMoves" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself padding: self defaultPadding"					],					"body" : [						"super initialize.",						"self padding: self defaultPadding"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6521946,					"argumentNames" : [ ]				},				"CmdMenuGroup" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcontents := SortedCollection sortBlock: [ :a :b | ",						"\t\t            a order = b order",						"\t\t\t            ifTrue: [ a name <= b name ]",						"\t\t\t            ifFalse: [ a order <= b order ] ]"					],					"body" : [						"super initialize.",						"contents := SortedCollection sortBlock: [ :a :b | ",						"\t            a order = b order",						"\t\t            ifTrue: [ a name <= b name ]",						"\t\t            ifFalse: [ a order <= b order ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2886993,					"argumentNames" : [ ]				},				"SpSpinnerMorph" : {					"sourceCode" : [						"initialize",						"",						"\t| wheelImageMorph |",						"\tsuper initialize.",						"\tself color: Color transparent.",						"\twheelImageMorph := self newSpinnerMorph.",						"",						"\ttransformationMorph := TransformationMorph new asFlexOf:",						"\t\t                       wheelImageMorph.",						"\ttransformationMorph",						"\t\tvResizing: #rigid;",						"\t\thResizing: #rigid.",						"",						"\tself addMorph: transformationMorph"					],					"body" : [						"| wheelImageMorph |",						"super initialize.",						"self color: Color transparent.",						"wheelImageMorph := self newSpinnerMorph.",						"",						"transformationMorph := TransformationMorph new asFlexOf:",						"\t                       wheelImageMorph.",						"transformationMorph",						"\tvResizing: #rigid;",						"\thResizing: #rigid.",						"",						"self addMorph: transformationMorph"					],					"isTestMethod" : false,					"category" : "stepping and presenter",					"comment" : [ ],					"hash" : 3627486,					"argumentNames" : [ ]				},				"StInspectionContext" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tactive := true.",						"\tevaluator := true"					],					"body" : [						"super initialize.",						"active := true.",						"evaluator := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6198756,					"argumentNames" : [ ]				},				"SpTextPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeTHaveWrappingScrollBars.",						"\tself flag: #REVIEW. \"We really need scrollValue?\"",						"\tscrollValue := 0 @ 0.",						"\tself beEditable.",						"\tself beWrapWord.",						"\tself withScrollBars.",						"\tself withEditionContextMenu.",						"\tself withUndoRedoHistory"					],					"body" : [						"super initialize.",						"self initializeTHaveWrappingScrollBars.",						"self flag: #REVIEW. \"We really need scrollValue?\"",						"scrollValue := 0 @ 0.",						"self beEditable.",						"self beWrapWord.",						"self withScrollBars.",						"self withEditionContextMenu.",						"self withUndoRedoHistory"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3274906,					"argumentNames" : [ ]				},				"FLClusterization" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tprimitivesBucket := IdentityDictionary new.",						"\tbaselevelBucket := IdentityDictionary new.",						"\tglobalsBucket := IdentityDictionary new.",						"\tmetalevelInstanceSideBucket := IdentityDictionary new.",						"\tmetalevelClassSideBucket := IdentityDictionary new.",						"\tsubstitutionsBucket := IdentityDictionary new.",						"\tpostBaselevelBucket := IdentityDictionary new"					],					"body" : [						"super initialize.",						"primitivesBucket := IdentityDictionary new.",						"baselevelBucket := IdentityDictionary new.",						"globalsBucket := IdentityDictionary new.",						"metalevelInstanceSideBucket := IdentityDictionary new.",						"metalevelClassSideBucket := IdentityDictionary new.",						"substitutionsBucket := IdentityDictionary new.",						"postBaselevelBucket := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1338942,					"argumentNames" : [ ]				},				"ReDoNotSendSuperInitializeInClassSideRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself replace: 'super initialize' with: ''"					],					"body" : [						"super initialize.",						"self replace: 'super initialize' with: ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4730354,					"argumentNames" : [ ]				},				"SDL_Event" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself setHandle: (ByteArray new: 56)"					],					"body" : [						"super initialize.",						"self setHandle: (ByteArray new: 56)"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4872272,					"argumentNames" : [ ]				},				"RSXmasBranch" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpositions := OrderedCollection new.",						"\tthickness := OrderedCollection new.",						"\tbaseIndex := OrderedCollection new.",						"\tisCandidate := false"					],					"body" : [						"super initialize.",						"positions := OrderedCollection new.",						"thickness := OrderedCollection new.",						"baseIndex := OrderedCollection new.",						"isCandidate := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3090151,					"argumentNames" : [ ]				},				"ClyClassHierarchyMap" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tparentMap := IdentityDictionary new"					],					"body" : [						"super initialize.",						"parentMap := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5691676,					"argumentNames" : [ ]				},				"SpDynamicWidgetChange" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tboolean := true"					],					"body" : [						"super initialize.",						"",						"boolean := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3263490,					"argumentNames" : [ ]				},				"RSChartPopupDecoration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\t\"this composite is created once when the mouse enter into the box shape\"",						"\tself shapeBuilder: [ :obj | RSComposite new ]"					],					"body" : [						"super initialize.",						"\"this composite is created once when the mouse enter into the box shape\"",						"self shapeBuilder: [ :obj | RSComposite new ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6600072,					"argumentNames" : [ ]				},				"ZnServerTransactionTiming" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trequestDuration := handlerDuration := responseDuration := 0"					],					"body" : [						"super initialize.",						"requestDuration := handlerDuration := responseDuration := 0"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 2218423,					"argumentNames" : [ ]				},				"ZnConstants class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Forced source code change for automatic initialization: 20170510\"",						"",						"\tself initializeHTTPStatusCodes"					],					"body" : [						"self initializeHTTPStatusCodes"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Forced source code change for automatic initialization: 20170510"					],					"hash" : 2200900,					"argumentNames" : [ ]				},				"DiffMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tshowOnlyDestination := false.",						"\tshowOnlySource := false.",						"\tshowOptions := true.",						"\tbeWrapped := false.",						"\tself",						"\t\tsrcMorph: self newSrcMorph;",						"\t\tjoinMorph: self newJoinMorph;",						"\t\tdstMorph: self newDstMorph;",						"\t\tscrollbarMorph: self newScrollbarMorph;",						"\t\tmapMorph: self newMapMorph;",						"\t\tchangeProportionalLayout.",						"\tself prettyPrint: TextDiffBuilder diffsWithPrettyPrint.",						"\tself addMorphsWithOptions.",						"\tself srcMorph scrollPane announcer",						"\t\twhen: RubVerticalScrolled send: #verticalScroll: to: self;",						"\t\twhen: RubHorizontalScrolled send: #horizontalSourceScroll: to: self.",						"\tself dstMorph scrollPane announcer",						"\t\twhen: RubVerticalScrolled send: #verticalScroll: to: self;",						"\t\twhen: RubHorizontalScrolled send: #horizontalDestScroll: to: self.",						"\tself",						"\t\tlinkSubmorphsToSplitters;",						"\t\textent: self initialExtent"					],					"body" : [						"super initialize.",						"showOnlyDestination := false.",						"showOnlySource := false.",						"showOptions := true.",						"beWrapped := false.",						"self",						"\tsrcMorph: self newSrcMorph;",						"\tjoinMorph: self newJoinMorph;",						"\tdstMorph: self newDstMorph;",						"\tscrollbarMorph: self newScrollbarMorph;",						"\tmapMorph: self newMapMorph;",						"\tchangeProportionalLayout.",						"self prettyPrint: TextDiffBuilder diffsWithPrettyPrint.",						"self addMorphsWithOptions.",						"self srcMorph scrollPane announcer",						"\twhen: RubVerticalScrolled send: #verticalScroll: to: self;",						"\twhen: RubHorizontalScrolled send: #horizontalSourceScroll: to: self.",						"self dstMorph scrollPane announcer",						"\twhen: RubVerticalScrolled send: #verticalScroll: to: self;",						"\twhen: RubHorizontalScrolled send: #horizontalDestScroll: to: self.",						"self",						"\tlinkSubmorphsToSplitters;",						"\textent: self initialExtent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 4140537,					"argumentNames" : [ ]				},				"OSTouchScrollDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpersistentDirection := self class persistentDirection.",						"\tdirectionAtBeginning := 0 @ 0"					],					"body" : [						"super initialize.",						"persistentDirection := self class persistentDirection.",						"directionAtBeginning := 0 @ 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4846033,					"argumentNames" : [ ]				},				"TabBarMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttabs := OrderedCollection new.",						"\tselectionHistory := OrderedCollection new.",						"\tmenuButton := self createMenuButton.",						"\tnumberOfSelectedTabs := 1.",						"",						"\tself changeProportionalLayout.",						"\tself addMenuButton"					],					"body" : [						"super initialize.",						"",						"tabs := OrderedCollection new.",						"selectionHistory := OrderedCollection new.",						"menuButton := self createMenuButton.",						"numberOfSelectedTabs := 1.",						"",						"self changeProportionalLayout.",						"self addMenuButton"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2752631,					"argumentNames" : [ ]				},				"SpWindowPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttitleHolder := self class defaultTitle.",						"\tisClosed := true.",						"\tisResizeable := true.",						"\tcentered := false.",						"\taskOkToClose := true.",						"\tdecorations := true.",						"",						"\t\"presenter whenChangedDo: [ :m | self updateTitle ].\"",						"\tself property: #titleHolder whenChangedDo: [ :aString | ",						"\t\tself withAdapterDo: [ :anAdapter | anAdapter title: aString ] ].",						"\tself",						"\t\tproperty: #centered",						"\t\twhenChangedDo: [ :aBoolean | ",						"\t\tself withAdapterDo: [ :anAdapter | anAdapter centered ] ]"					],					"body" : [						"super initialize.",						"",						"titleHolder := self class defaultTitle.",						"isClosed := true.",						"isResizeable := true.",						"centered := false.",						"askOkToClose := true.",						"decorations := true.",						"",						"\"presenter whenChangedDo: [ :m | self updateTitle ].\"",						"self property: #titleHolder whenChangedDo: [ :aString | ",						"\tself withAdapterDo: [ :anAdapter | anAdapter title: aString ] ].",						"self",						"\tproperty: #centered",						"\twhenChangedDo: [ :aBoolean | ",						"\tself withAdapterDo: [ :anAdapter | anAdapter centered ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3286680,					"argumentNames" : [ ]				},				"ZnSimplifiedByteEncoder class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize and cache the converters that I know of.",						"\tThis includes all of their aliases.",						"\tThis method must be changed to make sure it runs ",						"\twhen loading in images where it is already present.\"",						"",						"\tself initializeByteTextConverters"					],					"body" : [						"self initializeByteTextConverters"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Initialize and cache the converters that I know of.",						"\tThis includes all of their aliases.",						"\tThis method must be changed to make sure it runs ",						"\twhen loading in images where it is already present."					],					"hash" : 1993028,					"argumentNames" : [ ]				},				"RSNiceStepSizeGenerator" : {					"sourceCode" : [						"initialize",						"",						"\t\"Generates a NiceNumberGenerator\"",						"",						"\tsuper initialize.",						"\tniceStep := RSNiceStep new.",						"\to := 0.0.",						"\tself setQ: #( 1 5 2 2.5 4 3 ) base: 10"					],					"body" : [						"super initialize.",						"niceStep := RSNiceStep new.",						"o := 0.0.",						"self setQ: #( 1 5 2 2.5 4 3 ) base: 10"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Generates a NiceNumberGenerator"					],					"hash" : 6599621,					"argumentNames" : [ ]				},				"SpRoassalPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tscript := [ :aCanvas |  ] asValueHolder.",						"\tscript whenChangedDo: [ :s | self refresh ]"					],					"body" : [						"super initialize.",						"script := [ :aCanvas |  ] asValueHolder.",						"script whenChangedDo: [ :s | self refresh ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2776303,					"argumentNames" : [ ]				},				"RSAbstractCanvasMonitorInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeShape"					],					"body" : [						"super initialize.",						"self initializeShape"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6515049,					"argumentNames" : [ ]				},				"TTLCache" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself timeToLive: 1 hour"					],					"body" : [						"super initialize.",						"self timeToLive: 1 hour"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2403935,					"argumentNames" : [ ]				},				"SpTextInputFieldPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tmaxLength := 0.",						"\tisPassword := false.",						"\tself beEditable"					],					"body" : [						"super initialize.",						"",						"maxLength := 0.",						"isPassword := false.",						"self beEditable"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3271657,					"argumentNames" : [ ]				},				"IceUndefinedRemote" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\turl := 'No remote url'.",						"\tprojectName := 'No name'.",						"\tname := 'No remote'"					],					"body" : [						"super initialize.",						"url := 'No remote url'.",						"projectName := 'No name'.",						"name := 'No remote'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6999466,					"argumentNames" : [ ]				},				"FileLocator class" : {					"sourceCode" : [						"initialize",						"",						"\t\"FileLocator is needed to initialize SystemSettingsPersistence (call to FileLocator>>#preferences),",						"\tand could be useful for other classes.",						"\tLet initialize FileLocator before other standard system classes.\"",						"",						"\tSessionManager default",						"\t\tregisterSystemClassNamed: self name",						"\t\tatPriority: 90.",						"\tself startUp: true"					],					"body" : [						"SessionManager default",						"\tregisterSystemClassNamed: self name",						"\tatPriority: 90.",						"self startUp: true"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"FileLocator is needed to initialize SystemSettingsPersistence (call to FileLocator>>#preferences),",						"\tand could be useful for other classes.",						"\tLet initialize FileLocator before other standard system classes."					],					"hash" : 2069505,					"argumentNames" : [ ]				},				"RubTextSegmentIconDisplayer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself clipSubmorphs: false"					],					"body" : [						"super initialize.",						"self clipSubmorphs: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1392328,					"argumentNames" : [ ]				},				"SpecLayoutAdd" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself selector: #add:.",						"\tlayoutFrame := SpecLayoutFrame identity"					],					"body" : [						"super initialize.",						"self selector: #add:.",						"layoutFrame := SpecLayoutFrame identity"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1755443,					"argumentNames" : [ ]				},				"AthensTigerWindow" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsurface := AthensCairoSurface extent: self class surfaceExtent.",						"\texample := AthensTiger on: surface.",						"\tscale := surface extent x / AthensTiger tigerMaxY.",						"\trotation := 0.",						"\tframes := 0"					],					"body" : [						"super initialize.",						"surface := AthensCairoSurface extent: self class surfaceExtent.",						"example := AthensTiger on: surface.",						"scale := surface extent x / AthensTiger tigerMaxY.",						"rotation := 0.",						"frames := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4215764,					"argumentNames" : [ ]				},				"OSButtonState" : {					"sourceCode" : [						"initialize",						"",						"\tbuttons := 0"					],					"body" : [						"buttons := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4798118,					"argumentNames" : [ ]				},				"FTBasicItem" : {					"sourceCode" : [						"initialize",						"",						"\tisExpanded := false.",						"\trecentlyChanged := false"					],					"body" : [						"isExpanded := false.",						"recentlyChanged := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1551043,					"argumentNames" : [ ]				},				"ClapParameterized" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tparameters := OrderedDictionary new.",						"\tpositionals := OrderedCollection new.",						"\taliases := #(  )"					],					"body" : [						"super initialize.",						"parameters := OrderedDictionary new.",						"positionals := OrderedCollection new.",						"aliases := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1193707,					"argumentNames" : [ ]				},				"TabManagerMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttoolbar := TabBarMorph new.",						"\tprocesses := OrderedCollection new.",						"\tself registerBarActions.",						"\tself registerShortcuts.",						"",						"\tcontainer := Morph new",						"\t\t             color: self containerColor;",						"\t\t             changeProportionalLayout;",						"\t\t             yourself.",						"",						"\tcontentsWrapper := Morph new",						"\t\t                   color: self containerColor;",						"\t\t                   changeProportionalLayout;",						"\t\t                   yourself.",						"",						"\tself changeProportionalLayout.",						"\tself addMorphs"					],					"body" : [						"super initialize.",						"",						"toolbar := TabBarMorph new.",						"processes := OrderedCollection new.",						"self registerBarActions.",						"self registerShortcuts.",						"",						"container := Morph new",						"\t             color: self containerColor;",						"\t             changeProportionalLayout;",						"\t             yourself.",						"",						"contentsWrapper := Morph new",						"\t                   color: self containerColor;",						"\t                   changeProportionalLayout;",						"\t                   yourself.",						"",						"self changeProportionalLayout.",						"self addMorphs"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2753912,					"argumentNames" : [ ]				},				"ClyCriticEnvironmentPlugin" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tprovidesMethodGroup := self class providesMethodGroupByDefault"					],					"body" : [						"super initialize.",						"",						"providesMethodGroup := self class providesMethodGroupByDefault"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5807342,					"argumentNames" : [ ]				},				"RubPluggableTextMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thasUnacceptedEdits := false.",						"\thasEditingConflicts := false.",						"\taskBeforeDiscardingEdits := true"					],					"body" : [						"super initialize.",						"hasUnacceptedEdits := false.",						"hasEditingConflicts := false.",						"askBeforeDiscardingEdits := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1393728,					"argumentNames" : [ ]				},				"RBReadBeforeWrittenTester" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tscopeStack := OrderedCollection with: Dictionary new.",						"\tread := Set new.",						"\tcheckNewTemps := true"					],					"body" : [						"super initialize.",						"scopeStack := OrderedCollection with: Dictionary new.",						"read := Set new.",						"checkNewTemps := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1951336,					"argumentNames" : [ ]				},				"Clipboard class" : {					"sourceCode" : [						"initialize",						"",						"\tself startUp: true.",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"self startUp: true.",						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2444986,					"argumentNames" : [ ]				},				"AthensCurveFlattener" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttransform := AthensAffineTransform new. \"identity\"",						"\tself toleranceMultiplier: self defaultTolerance"					],					"body" : [						"super initialize.",						"",						"transform := AthensAffineTransform new. \"identity\"",						"self toleranceMultiplier: self defaultTolerance"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3861192,					"argumentNames" : [ ]				},				"ShSharedVariablesChangeDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbuilderAccessor := [ :e | ",						"\t                   e layoutDefinition sharedVariables",						"\t\t                   collect: [ :x | x key -> x class ]",						"\t\t                   as: Array ].",						"\tclassAccessor := [ :e | ",						"\t                 e classVariables",						"\t\t                 collect: [ :x | x key -> x class ]",						"\t\t                 as: Array ].",						"\tcomparer := [ :a :b | self compareFrom: a to: b ]"					],					"body" : [						"super initialize.",						"builderAccessor := [ :e | ",						"                   e layoutDefinition sharedVariables",						"\t                   collect: [ :x | x key -> x class ]",						"\t                   as: Array ].",						"classAccessor := [ :e | ",						"                 e classVariables",						"\t                 collect: [ :x | x key -> x class ]",						"\t                 as: Array ].",						"comparer := [ :a :b | self compareFrom: a to: b ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1619012,					"argumentNames" : [ ]				},				"OSStateModifiers" : {					"sourceCode" : [						"initialize",						"",						"\tleftAlt := leftCmd := leftCtrl := leftShift := rightAlt := rightCmd := rightCtrl := rightShift := capsLock := numLock := false.",						"\tbuttons := OSButtonState new"					],					"body" : [						"leftAlt := leftCmd := leftCtrl := leftShift := rightAlt := rightCmd := rightCtrl := rightShift := capsLock := numLock := false.",						"buttons := OSButtonState new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4838153,					"argumentNames" : [ ]				},				"TKTServiceManager" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tservices := Set new"					],					"body" : [						"super initialize.",						"services := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1214489,					"argumentNames" : [ ]				},				"SpTokenTreeFilter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttoken := ''"					],					"body" : [						"super initialize.",						"token := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2962348,					"argumentNames" : [ ]				},				"MCVersionMerger" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trecords := OrderedCollection new.",						"\tmerger := MCThreeWayMerger new"					],					"body" : [						"super initialize.",						"records := OrderedCollection new.",						"merger := MCThreeWayMerger new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1093764,					"argumentNames" : [ ]				},				"ReTrueFalseDuplicationRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: '",						"\t\t`.@PreStatements.",						"\t\t`@boolExp ",						"\t\t\tifTrue: [ | `@trueTemps | `@.TrueStatements. `.LastStatement ] ",						"\t\t\tifFalse: [ | `@falseTemps | `@.FalseStatements. `.LastStatement ].",						"\t\t`.@PostStatements.'",						"\t\twith: '",						"\t\t`.@PreStatements.",						"\t\t`@boolExp ",						"\t\t\tifTrue: [ | `@trueTemps | `@.TrueStatements. ] ",						"\t\t\tifFalse: [ | `@falseTemps | `@.FalseStatements. ].",						"\t\t`.LastStatement.",						"\t\t`.@PostStatements.';",						"\t\t\"false/true last common\"replace: '",						"\t\t`.@PreStatements.",						"\t\t`@boolExp ",						"\t\t\tifFalse: [ | `@falseTemps | `@.FalseStatements. `.LastStatement ] ",						"\t\t\tifTrue: [ | `@trueTemps | `@.TrueStatements. `.LastStatement ].",						"\t\t`.@PostStatements.'",						"\t\twith: '",						"\t\t`.@PreStatements.",						"\t\t`@boolExp ",						"\t\t\tifFalse: [ | `@falseTemps | `@.FalseStatements. ] ",						"\t\t\tifTrue: [ | `@trueTemps | `@.TrueStatements. ].",						"\t\t`.LastStatement.",						"\t\t`.@PostStatements.';",						"\t\t\"true/false first common\"replace: '",						"\t\t`.@PreStatements.",						"\t\t`@boolExp ",						"\t\t\tifTrue: [ | `@trueTemps | `.FirstStatement. `@.TrueStatements. ] ",						"\t\t\tifFalse: [ | `@falseTemps | `.FirstStatement. `@.FalseStatements. ].",						"\t\t`.@PostStatements.'",						"\t\twith: '",						"\t\t`.@PreStatements.",						"\t\t`.FirstStatement.",						"\t\t`@boolExp ",						"\t\t\tifTrue: [ | `@trueTemps | `@.TrueStatements. ] ",						"\t\t\tifFalse: [ | `@falseTemps | `@.FalseStatements. ].",						"\t\t`.@PostStatements.';",						"\t\t\"false/true first common\"replace: '",						"\t\t`.@PreStatements.",						"\t\t`@boolExp ",						"\t\t\tifFalse: [ | `@falseTemps | `.FirstStatement. `@.FalseStatements. ]",						"\t\t\tifTrue: [ | `@trueTemps | `.FirstStatement. `@.TrueStatements. ].",						"\t\t`.@PostStatements.'",						"\t\twith: '",						"\t\t`.@PreStatements.",						"\t\t`.FirstStatement.",						"\t\t`@boolExp ",						"\t\t\tifFalse: [ | `@falseTemps | `@.FalseStatements. ]",						"\t\t\tifTrue: [ | `@trueTemps | `@.TrueStatements. ].",						"\t\t`.@PostStatements.'",						"\t\"true/false last common\""					],					"body" : [						"super initialize.",						"self",						"\treplace: '",						"\t\t`.@PreStatements.",						"\t\t`@boolExp ",						"\t\t\tifTrue: [ | `@trueTemps | `@.TrueStatements. `.LastStatement ] ",						"\t\t\tifFalse: [ | `@falseTemps | `@.FalseStatements. `.LastStatement ].",						"\t\t`.@PostStatements.'",						"\twith: '",						"\t\t`.@PreStatements.",						"\t\t`@boolExp ",						"\t\t\tifTrue: [ | `@trueTemps | `@.TrueStatements. ] ",						"\t\t\tifFalse: [ | `@falseTemps | `@.FalseStatements. ].",						"\t\t`.LastStatement.",						"\t\t`.@PostStatements.';",						"\t\"false/true last common\"replace: '",						"\t\t`.@PreStatements.",						"\t\t`@boolExp ",						"\t\t\tifFalse: [ | `@falseTemps | `@.FalseStatements. `.LastStatement ] ",						"\t\t\tifTrue: [ | `@trueTemps | `@.TrueStatements. `.LastStatement ].",						"\t\t`.@PostStatements.'",						"\twith: '",						"\t\t`.@PreStatements.",						"\t\t`@boolExp ",						"\t\t\tifFalse: [ | `@falseTemps | `@.FalseStatements. ] ",						"\t\t\tifTrue: [ | `@trueTemps | `@.TrueStatements. ].",						"\t\t`.LastStatement.",						"\t\t`.@PostStatements.';",						"\t\"true/false first common\"replace: '",						"\t\t`.@PreStatements.",						"\t\t`@boolExp ",						"\t\t\tifTrue: [ | `@trueTemps | `.FirstStatement. `@.TrueStatements. ] ",						"\t\t\tifFalse: [ | `@falseTemps | `.FirstStatement. `@.FalseStatements. ].",						"\t\t`.@PostStatements.'",						"\twith: '",						"\t\t`.@PreStatements.",						"\t\t`.FirstStatement.",						"\t\t`@boolExp ",						"\t\t\tifTrue: [ | `@trueTemps | `@.TrueStatements. ] ",						"\t\t\tifFalse: [ | `@falseTemps | `@.FalseStatements. ].",						"\t\t`.@PostStatements.';",						"\t\"false/true first common\"replace: '",						"\t\t`.@PreStatements.",						"\t\t`@boolExp ",						"\t\t\tifFalse: [ | `@falseTemps | `.FirstStatement. `@.FalseStatements. ]",						"\t\t\tifTrue: [ | `@trueTemps | `.FirstStatement. `@.TrueStatements. ].",						"\t\t`.@PostStatements.'",						"\twith: '",						"\t\t`.@PreStatements.",						"\t\t`.FirstStatement.",						"\t\t`@boolExp ",						"\t\t\tifFalse: [ | `@falseTemps | `@.FalseStatements. ]",						"\t\t\tifTrue: [ | `@trueTemps | `@.TrueStatements. ].",						"\t\t`.@PostStatements.'",						"\"true/false last common\""					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4738744,					"argumentNames" : [ ]				},				"AbstractFont class" : {					"sourceCode" : [						"initialize",						"",						"\tTextStyle addDependent: self"					],					"body" : [						"TextStyle addDependent: self"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2423671,					"argumentNames" : [ ]				},				"SpPatchPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize"					],					"body" : [						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6158000,					"argumentNames" : [ ]				},				"CDBehaviorDefinitionNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tslotNodes := OrderedCollection new"					],					"body" : [						"super initialize.",						"slotNodes := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5463070,					"argumentNames" : [ ]				},				"MCPackageLoader" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tadditions := OrderedCollection new.",						"\tremovals := OrderedCollection new.",						"\tobsoletions := Dictionary new.",						"\tmethodAdditions := OrderedCollection new"					],					"body" : [						"super initialize.",						"additions := OrderedCollection new.",						"removals := OrderedCollection new.",						"obsoletions := Dictionary new.",						"methodAdditions := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1077059,					"argumentNames" : [ ]				},				"ExpanderTitleMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\texpanded: false;",						"\t\tchangeTableLayout;",						"\t\tborderStyle: self defaultBorderStyle;",						"\t\tlayoutInset: (self theme expanderTitleInsetFor: self);",						"\t\tlistDirection: #leftToRight;",						"\t\tlistCentering: #center;",						"\t\twrapCentering: #center;",						"\t\tbuttonMorph: self newExpandButtonMorph;",						"\t\taddMorph: self buttonMorph;",						"\t\tlabelMorph: self newLabelMorph;",						"\t\ton: #mouseUp send: #toggleExpanded to: self"					],					"body" : [						"super initialize.",						"self",						"\texpanded: false;",						"\tchangeTableLayout;",						"\tborderStyle: self defaultBorderStyle;",						"\tlayoutInset: (self theme expanderTitleInsetFor: self);",						"\tlistDirection: #leftToRight;",						"\tlistCentering: #center;",						"\twrapCentering: #center;",						"\tbuttonMorph: self newExpandButtonMorph;",						"\taddMorph: self buttonMorph;",						"\tlabelMorph: self newLabelMorph;",						"\ton: #mouseUp send: #toggleExpanded to: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2750413,					"argumentNames" : [ ]				},				"ClyClassWithScripts class" : {					"sourceCode" : [						"initialize",						"",						"\tself inform: 'it is class initialization example from ' , self name"					],					"body" : [						"self inform: 'it is class initialization example from ' , self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 5869325,					"argumentNames" : [ ]				},				"SpLinkPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself whenLabelChangedDo: [ self changed: #getText ]"					],					"body" : [						"super initialize.",						"self whenLabelChangedDo: [ self changed: #getText ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2360456,					"argumentNames" : [ ]				},				"GCoordinates" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcoordinates := Array new: self numberOfDimensions"					],					"body" : [						"super initialize.",						"coordinates := Array new: self numberOfDimensions"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6395131,					"argumentNames" : [ ]				},				"StReporter" : {					"sourceCode" : [						"initialize",						"",						"\ttopics := OrderedCollection new.",						"\tself fillTopics.",						"\tsuper initialize"					],					"body" : [						"topics := OrderedCollection new.",						"self fillTopics.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6262046,					"argumentNames" : [ ]				},				"MalGraphAlgorithm" : {					"sourceCode" : [						"initialize",						"",						"\tnodes := OrderedCollection new.",						"\tedges := OrderedCollection new"					],					"body" : [						"nodes := OrderedCollection new.",						"edges := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2549068,					"argumentNames" : [ ]				},				"ClyAllProblemMethodQuery" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcritiqueQuery := ClyAllMethodCritiqueQuery new"					],					"body" : [						"super initialize.",						"critiqueQuery := ClyAllMethodCritiqueQuery new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5799963,					"argumentNames" : [ ]				},				"RSSunburstFadeInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself highlightColor: [ :shape | shape color alpha: 0.15 ]"					],					"body" : [						"super initialize.",						"self highlightColor: [ :shape | shape color alpha: 0.15 ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6581640,					"argumentNames" : [ ]				},				"AthensCairoDefinitions class" : {					"sourceCode" : [						"initialize",						"",						"\t\"",						"\tself initialize",						"\t\"",						"",						"\tself",						"\t\tinitialize_types;",						"\t\tinitialize_cairo_format_t;",						"\t\tinitialize_cairo_font_slant_t;",						"\t\tinitialize_cairo_font_weight_t;",						"\t\tinitialize_cairo_font_type_t;",						"\t\tinitialize_cairo_operator_t;",						"\t\tinitialize_cairo_line_cap_t;",						"\t\tinitialize_cairo_line_join_t;",						"\t\tinitialize_cairo_status_t;",						"\t\tinitialize_cairo_extend_t;",						"\t\tinitialize_cairo_hint_style_t;",						"\t\tinitialize_cairo_antialias_t;",						"\t\tinit_cairo_subpixel_order_t;",						"\t\tinitialize_cairo_hint_metrics_t;",						"\t\tinitialize_cairo_fill_rule_t"					],					"body" : [						"self",						"\tinitialize_types;",						"\tinitialize_cairo_format_t;",						"\tinitialize_cairo_font_slant_t;",						"\tinitialize_cairo_font_weight_t;",						"\tinitialize_cairo_font_type_t;",						"\tinitialize_cairo_operator_t;",						"\tinitialize_cairo_line_cap_t;",						"\tinitialize_cairo_line_join_t;",						"\tinitialize_cairo_status_t;",						"\tinitialize_cairo_extend_t;",						"\tinitialize_cairo_hint_style_t;",						"\tinitialize_cairo_antialias_t;",						"\tinit_cairo_subpixel_order_t;",						"\tinitialize_cairo_hint_metrics_t;",						"\tinitialize_cairo_fill_rule_t"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"",						"\tself initialize",						"\t"					],					"hash" : 3866971,					"argumentNames" : [ ]				},				"MCVersionLoader" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tversions := OrderedCollection new"					],					"body" : [						"super initialize.",						"versions := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1092889,					"argumentNames" : [ ]				},				"ScrollBarMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tscrollDelta := 0.02.",						"\tpageDelta := 0.2"					],					"body" : [						"super initialize.",						"scrollDelta := 0.02.",						"pageDelta := 0.2"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2728738,					"argumentNames" : [ ]				},				"DynamicPresentersListBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tinstVarCount := 0.",						"\tnullPresentersInstVarNames := #(  )"					],					"body" : [						"super initialize.",						"instVarCount := 0.",						"nullPresentersInstVarNames := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1724874,					"argumentNames" : [ ]				},				"ZnSimplifiedByteEncoder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstrict := true"					],					"body" : [						"super initialize.",						"strict := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1993674,					"argumentNames" : [ ]				},				"PharoCommonTools class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerToolClassNamed: self name"					],					"body" : [						"SessionManager default registerToolClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2423456,					"argumentNames" : [ ]				},				"RSForceBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tinterferences := particles := #(  ).",						"\trandom := Random new.",						"\tself",						"\t\tforce: 10;",						"\t\tcolorGenerator: RSColorMonoGenerator new;",						"\t\tparticlesSize: 1000;",						"\t\tparticlesRadius: 100;",						"\t\tinterferencesSize: 100;",						"\t\tinterferencesRadius: 100"					],					"body" : [						"super initialize.",						"interferences := particles := #(  ).",						"random := Random new.",						"self",						"\tforce: 10;",						"\tcolorGenerator: RSColorMonoGenerator new;",						"\tparticlesSize: 1000;",						"\tparticlesRadius: 100;",						"\tinterferencesSize: 100;",						"\tinterferencesRadius: 100"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3086825,					"argumentNames" : [ ]				},				"Form class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerGuiClassNamed: self name"					],					"body" : [						"SessionManager default registerGuiClassNamed: self name"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 1225376,					"argumentNames" : [ ]				},				"RPackage class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\t\"Ensure the organizer will be the RPackageOrganizer default\"",						"",						"\tself organizer: nil.",						"\tProperties ifNil: [ self initializeProperties ] ifNotNil: [ ",						"\t\t| newDict |",						"\t\tnewDict := WeakIdentityKeyDictionary newFrom: Properties.",						"\t\tnewDict rehash.",						"\t\tProperties := newDict ]"					],					"body" : [						"self organizer: nil.",						"Properties ifNil: [ self initializeProperties ] ifNotNil: [ ",						"\t| newDict |",						"\tnewDict := WeakIdentityKeyDictionary newFrom: Properties.",						"\tnewDict rehash.",						"\tProperties := newDict ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self initialize"					],					"hash" : 2156971,					"argumentNames" : [ ]				},				"SlotExampleMovie" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself class initializeSlots: self"					],					"body" : [						"super initialize.",						"self class initializeSlots: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4260698,					"argumentNames" : [ ]				},				"RSHierarchyPackerInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\trectanglePackLayout := RSRectanglePackLayout new",						"\t\t                       doNotUseProgressBar;",						"\t\t                       yourself"					],					"body" : [						"super initialize.",						"",						"rectanglePackLayout := RSRectanglePackLayout new",						"\t                       doNotUseProgressBar;",						"\t                       yourself"					],					"isTestMethod" : false,					"category" : "private",					"comment" : [ ],					"hash" : 6564975,					"argumentNames" : [ ]				},				"StTopicBuilderVisitor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thelpTopics := StNodeHelpTopic new.",						"\tactualTopic := helpTopics"					],					"body" : [						"super initialize.",						"helpTopics := StNodeHelpTopic new.",						"actualTopic := helpTopics"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7381732,					"argumentNames" : [ ]				},				"IceRootDefinition" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tname := ''"					],					"body" : [						"super initialize.",						"name := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6978988,					"argumentNames" : [ ]				},				"EmbeddedFreeTypeFontInstaller" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tembeddedFileInfoCache := Dictionary new: 10 \"keyed by file size\""					],					"body" : [						"super initialize.",						"embeddedFileInfoCache := Dictionary new: 10 \"keyed by file size\""					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1522766,					"argumentNames" : [ ]				},				"EmbeddedFreeTypeFontInstaller class" : {					"sourceCode" : [						"initialize",						"",						"\tself",						"\t\tresetCurrent;",						"\t\tcurrent"					],					"body" : [						"self",						"\tresetCurrent;",						"\tcurrent"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1522436,					"argumentNames" : [ ]				},				"IceWorkingCopyPatcherVisitor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tloader := MCPackageLoader new"					],					"body" : [						"super initialize.",						"loader := MCPackageLoader new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7005723,					"argumentNames" : [ ]				},				"ClyHierarchicallySortedClassesResult" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\thierarchy := ClySubclassHierarchy new"					],					"body" : [						"super initialize.",						"",						"hierarchy := ClySubclassHierarchy new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5723936,					"argumentNames" : [ ]				},				"KMLog class" : {					"sourceCode" : [						"initialize",						"",						"\tdebug := false"					],					"body" : [						"debug := false"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1579224,					"argumentNames" : [ ]				},				"IconStyler" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself resetStylerClasses"					],					"body" : [						"super initialize.",						"self resetStylerClasses"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4302441,					"argumentNames" : [ ]				},				"TKTFuture" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tresult := TKTFutureNotFinished new.",						"\trunner := TKTConfiguration runner.",						"",						"\tvalueSemaphore := Semaphore new.",						"",						"\texceptionCallbacks := OrderedCollection new.",						"\tresultCallbacks := OrderedCollection new"					],					"body" : [						"super initialize.",						"result := TKTFutureNotFinished new.",						"runner := TKTConfiguration runner.",						"",						"valueSemaphore := Semaphore new.",						"",						"exceptionCallbacks := OrderedCollection new.",						"resultCallbacks := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1208282,					"argumentNames" : [ ]				},				"RSAbstractAnimation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself reset.",						"\tcanvas := RSDefaultTimer new"					],					"body" : [						"super initialize.",						"self reset.",						"canvas := RSDefaultTimer new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6498825,					"argumentNames" : [ ]				},				"SpDialogWindowPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbuttons := OrderedCollection new.",						"\tcancelled := true.",						"\tself initializeDefaultActions"					],					"body" : [						"super initialize.",						"buttons := OrderedCollection new.",						"cancelled := true.",						"self initializeDefaultActions"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3023245,					"argumentNames" : [ ]				},				"DiffJoinMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tmappings: OrderedCollection new;",						"\t\tsrcOffset: 0 @ 0;",						"\t\tdstOffset: 0 @ 0"					],					"body" : [						"super initialize.",						"self",						"\tmappings: OrderedCollection new;",						"\tsrcOffset: 0 @ 0;",						"\tdstOffset: 0 @ 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 4150235,					"argumentNames" : [ ]				},				"StSpotterProcessor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trunning := false"					],					"body" : [						"super initialize.",						"running := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6281676,					"argumentNames" : [ ]				},				"TextConstants class" : {					"sourceCode" : [						"initialize",						"",						"\tTextSharedInformation ifNil: [ ",						"\t\tTextSharedInformation := Dictionary new ].",						"\tCtrll := Character value: 153.",						"\tCtrld := Character value: 132.",						"\tESC := Character value: 160.",						"\tCtrlh := Character value: 179.",						"\tEnter := Character value: 3.",						"\tDefaultSpace := 4.",						"\tLeftFlush := 0.",						"\tDefaultRule := 3.",						"\tCtrlX := Character value: 215.",						"\tCtrlT := Character value: 240.",						"\tRightFlush := 1.",						"\tBasal := 0.",						"\tCtrlP := Character value: 202.",						"\tDefaultFontFamilySize := 3.",						"\tCtrlL := Character value: 217.",						"\tCtrlH := Character value: 243.",						"\tCtrlw := Character value: 145.",						"\tCtrlD := Character value: 196.",						"\tDefaultTab := 24.",						"\tCtrls := Character value: 19.",						"\tCtrlo := Character value: 15.",						"\tDefaultLineGrid := 16.",						"\tCtrlk := Character value: 136.",						"\tCtrlc := Character value: 228.",						"\tSpace := Character value: 32.",						"\tCtrlg := Character value: 232.",						"\tTab := Character value: 9.",						"\tCtrlW := Character value: 209.",						"\tEndOfRun := 257.",						"\tCtrlS := Character value: 211.",						"\tItalic := 2.",						"\tCentered := 2.",						"\tCrossedX := 258.",						"\tCtrlO := Character value: 216.",						"\tDefaultMarginTabsArray := #( #( 24 24 ) #( 48 48 ) #( 72 72 )",						"\t                             #( 96 96 ) #( 120 120 ) #( 144 144 )",						"\t                             #( 168 168 ) #( 192 192 ) #( 216 216 )",						"\t                             #( 240 240 ) #( 264 264 ) #( 288 288 )",						"\t                             #( 312 312 ) #( 336 336 ) #( 360 360 )",						"\t                             #( 384 384 ) #( 408 408 ) #( 432 432 )",						"\t                             #( 456 456 ) #( 480 480 ) ).",						"\tCtrlOpenBrackets := #( 201 7 218 249 219 15 ).",						"\tCtrlK := Character value: 200.",						"\tCtrlz := Character value: 167.",						"\tCtrlG := Character value: 241.",						"\tLeftMarginTab := 1.",						"\tCtrlC := Character value: 228.",						"\tCtrlv := Character value: 134.",						"\tJustified := 3.",						"\tCtrlr := Character value: 18.",						"\tDefaultTabsArray := #( 24 48 72 96 120 144 168 192 216 240 264 288",						"\t                       312 336 360 384 408 432 456 480 504 528 552",						"\t                       576 600 624 648 672 696 720 744 768 792 816",						"\t                       840 864 888 912 936 960 ).",						"\tCtrln := Character value: 14.",						"\tRightMarginTab := 2.",						"\tCtrlf := Character value: 12.",						"\tCtrlj := Character value: 165.",						"\tCtrlb := Character value: 166.",						"\tCtrlZ := Character value: 231.",						"\tCtrlV := Character value: 198.",						"\tCtrlR := Character value: 239.",						"\tClear := Character value: 173.",						"\tCtrlN := Character value: 245.",						"\tBS := Character value: 8.",						"\tCtrlJ := Character value: 229.",						"\tCtrly := Character value: 178.",						"\tCtrlF := Character value: 226.",						"\tBS2 := Character value: 158.",						"\tCtrlu := Character value: 21.",						"\tCtrlB := Character value: 230.",						"\tCtrlq := Character value: 17.",						"\tCtrlm := Character value: 182.",						"\tCtrle := Character value: 130.",						"\tCtrlDigits := #( 159 144 143 128 127 129 131 180 149 135 ).",						"\tCtrli := Character value: 150.",						"\tCtrla := Character value: 1.",						"\tBold := 1.",						"\tCtrlY := Character value: 242.",						"\tCtrlU := Character value: 197.",						"\tCR := Character value: 13.",						"\tCtrlQ := Character value: 210.",						"\tDefaultMask := Color black.",						"\tCtrlM := Character value: 246.",						"\tCtrlI := Character value: 214.",						"\tCtrlx := Character value: 151.",						"\tCtrlE := Character value: 194.",						"\tCtrlt := Character value: 11.",						"\tCtrlA := Character value: 212.",						"\tCtrlp := Character value: 138.",						"\tDefaultBaseline := 12"					],					"body" : [						"TextSharedInformation ifNil: [ ",						"\tTextSharedInformation := Dictionary new ].",						"Ctrll := Character value: 153.",						"Ctrld := Character value: 132.",						"ESC := Character value: 160.",						"Ctrlh := Character value: 179.",						"Enter := Character value: 3.",						"DefaultSpace := 4.",						"LeftFlush := 0.",						"DefaultRule := 3.",						"CtrlX := Character value: 215.",						"CtrlT := Character value: 240.",						"RightFlush := 1.",						"Basal := 0.",						"CtrlP := Character value: 202.",						"DefaultFontFamilySize := 3.",						"CtrlL := Character value: 217.",						"CtrlH := Character value: 243.",						"Ctrlw := Character value: 145.",						"CtrlD := Character value: 196.",						"DefaultTab := 24.",						"Ctrls := Character value: 19.",						"Ctrlo := Character value: 15.",						"DefaultLineGrid := 16.",						"Ctrlk := Character value: 136.",						"Ctrlc := Character value: 228.",						"Space := Character value: 32.",						"Ctrlg := Character value: 232.",						"Tab := Character value: 9.",						"CtrlW := Character value: 209.",						"EndOfRun := 257.",						"CtrlS := Character value: 211.",						"Italic := 2.",						"Centered := 2.",						"CrossedX := 258.",						"CtrlO := Character value: 216.",						"DefaultMarginTabsArray := #( #( 24 24 ) #( 48 48 ) #( 72 72 )",						"                             #( 96 96 ) #( 120 120 ) #( 144 144 )",						"                             #( 168 168 ) #( 192 192 ) #( 216 216 )",						"                             #( 240 240 ) #( 264 264 ) #( 288 288 )",						"                             #( 312 312 ) #( 336 336 ) #( 360 360 )",						"                             #( 384 384 ) #( 408 408 ) #( 432 432 )",						"                             #( 456 456 ) #( 480 480 ) ).",						"CtrlOpenBrackets := #( 201 7 218 249 219 15 ).",						"CtrlK := Character value: 200.",						"Ctrlz := Character value: 167.",						"CtrlG := Character value: 241.",						"LeftMarginTab := 1.",						"CtrlC := Character value: 228.",						"Ctrlv := Character value: 134.",						"Justified := 3.",						"Ctrlr := Character value: 18.",						"DefaultTabsArray := #( 24 48 72 96 120 144 168 192 216 240 264 288 312",						"                       336 360 384 408 432 456 480 504 528 552 576 600",						"                       624 648 672 696 720 744 768 792 816 840 864 888",						"                       912 936 960 ).",						"Ctrln := Character value: 14.",						"RightMarginTab := 2.",						"Ctrlf := Character value: 12.",						"Ctrlj := Character value: 165.",						"Ctrlb := Character value: 166.",						"CtrlZ := Character value: 231.",						"CtrlV := Character value: 198.",						"CtrlR := Character value: 239.",						"Clear := Character value: 173.",						"CtrlN := Character value: 245.",						"BS := Character value: 8.",						"CtrlJ := Character value: 229.",						"Ctrly := Character value: 178.",						"CtrlF := Character value: 226.",						"BS2 := Character value: 158.",						"Ctrlu := Character value: 21.",						"CtrlB := Character value: 230.",						"Ctrlq := Character value: 17.",						"Ctrlm := Character value: 182.",						"Ctrle := Character value: 130.",						"CtrlDigits := #( 159 144 143 128 127 129 131 180 149 135 ).",						"Ctrli := Character value: 150.",						"Ctrla := Character value: 1.",						"Bold := 1.",						"CtrlY := Character value: 242.",						"CtrlU := Character value: 197.",						"CR := Character value: 13.",						"CtrlQ := Character value: 210.",						"DefaultMask := Color black.",						"CtrlM := Character value: 246.",						"CtrlI := Character value: 214.",						"Ctrlx := Character value: 151.",						"CtrlE := Character value: 194.",						"Ctrlt := Character value: 11.",						"CtrlA := Character value: 212.",						"Ctrlp := Character value: 138.",						"DefaultBaseline := 12"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2440649,					"argumentNames" : [ ]				},				"RubDropListButtonRuler" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tside := #right"					],					"body" : [						"super initialize.",						"side := #right"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1391026,					"argumentNames" : [ ]				},				"SpMorphicNotebookAdapter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeTBackendUpdating"					],					"body" : [						"super initialize.",						"self initializeTBackendUpdating"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3404649,					"argumentNames" : [ ]				},				"WideCharacterSet" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmap := Dictionary new.",						"\tbyteArrayMap := ByteArray new: 256"					],					"body" : [						"super initialize.",						"map := Dictionary new.",						"byteArrayMap := ByteArray new: 256"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1982650,					"argumentNames" : [ ]				},				"MenuItemMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"\t\"\"",						"",						"\tcontents := ''.",						"\thasFocus := false.",						"\tisEnabled := true.",						"\tisSelected := false.",						"\tfont := StandardFonts menuFont.",						"\tself",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #shrinkWrap"					],					"body" : [						"super initialize.",						"\"\"",						"",						"contents := ''.",						"hasFocus := false.",						"isEnabled := true.",						"isSelected := false.",						"font := StandardFonts menuFont.",						"self",						"\thResizing: #spaceFill;",						"\tvResizing: #shrinkWrap"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 1404761,					"argumentNames" : [ ]				},				"SDL_SystemCursorType class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeEnumeration.",						"",						"\tself classPool keysDo: [ :e | ",						"\t\tself class",						"\t\t\tcompile: ('{1}",						"\t^ {1}' format: { e asString })",						"\t\t\tclassified: #accessing ]"					],					"body" : [						"self initializeEnumeration.",						"",						"self classPool keysDo: [ :e | ",						"\tself class",						"\t\tcompile: ('{1}",						"\t^ {1}' format: { e asString })",						"\t\tclassified: #accessing ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4862897,					"argumentNames" : [ ]				},				"CompilationContext class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Note: we don't set-up here DefaultOptions since it requires other class-side methods, and that's messed up.\"",						"",						"\tDefaultTransformationPlugins := OrderedCollection new"					],					"body" : [						"DefaultTransformationPlugins := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Note: we don't set-up here DefaultOptions since it requires other class-side methods, and that's messed up."					],					"hash" : 2015280,					"argumentNames" : [ ]				},				"ReCodeCruftLeftInMethodsRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself patterns do: [ :halt | self addRuleRemoving: halt ]"					],					"body" : [						"super initialize.",						"self patterns do: [ :halt | self addRuleRemoving: halt ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4729076,					"argumentNames" : [ ]				},				"Finder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsearchingString := self defaultString.",						"\tenvironment := self defaultEnvironment.",						"\tpackagesSelection := self defaultPackagesSelection.",						"\tresultDictionary := Dictionary new.",						"\tcurrentSearchMode := #Selectors.",						"\tuseRegEx := false"					],					"body" : [						"super initialize.",						"searchingString := self defaultString.",						"environment := self defaultEnvironment.",						"packagesSelection := self defaultPackagesSelection.",						"resultDictionary := Dictionary new.",						"currentSearchMode := #Selectors.",						"useRegEx := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4134475,					"argumentNames" : [ ]				},				"OSTouchPinchDetector class" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tMaxDistanceBetweenFingersLine := 0.2.",						"\tMinDistanceBeforeDetection := 0.03"					],					"body" : [						"super initialize.",						"MaxDistanceBetweenFingersLine := 0.2.",						"MinDistanceBeforeDetection := 0.03"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4847910,					"argumentNames" : [ ]				},				"IceTipBrowser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself subscribeToAnnouncements"					],					"body" : [						"super initialize.",						"self subscribeToAnnouncements"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7085673,					"argumentNames" : [ ]				},				"HiRulerBuilderTest class" : {					"sourceCode" : [						"initialize",						"",						"\tDebugShowingRulerInWindow := false"					],					"body" : [						"DebugShowingRulerInWindow := false"					],					"isTestMethod" : false,					"category" : "initialize - event",					"comment" : [ ],					"hash" : 5115871,					"argumentNames" : [ ]				},				"RGTraitTransformation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tsubject := self unresolvedValue: self defaultSubject"					],					"body" : [						"super initialize.",						"",						"subject := self unresolvedValue: self defaultSubject"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 6062157,					"argumentNames" : [ ]				},				"SpToolbarPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself beBoth.",						"",						"\tleftItems := OrderedCollection new.",						"\trightItems := OrderedCollection new"					],					"body" : [						"super initialize.",						"self beBoth.",						"",						"leftItems := OrderedCollection new.",						"rightItems := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3285607,					"argumentNames" : [ ]				},				"RSCellLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself leftCentered"					],					"body" : [						"super initialize.",						"self leftCentered"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6548073,					"argumentNames" : [ ]				},				"AbstractWorldRenderer class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2442912,					"argumentNames" : [ ]				},				"RGTraitDescriptionStrategy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself owner environment backend createUnresolvedTraitGroupFor:",						"\t\tself owner"					],					"body" : [						"super initialize.",						"",						"self owner environment backend createUnresolvedTraitGroupFor:",						"\tself owner"					],					"isTestMethod" : false,					"category" : "variables",					"comment" : [ ],					"hash" : 6041095,					"argumentNames" : [ ]				},				"TFExternalSemaphore" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsemaphore := Semaphore new.",						"\tindex := Smalltalk registerExternalObject: semaphore"					],					"body" : [						"super initialize.",						"semaphore := Semaphore new.",						"index := Smalltalk registerExternalObject: semaphore"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2826413,					"argumentNames" : [ ]				},				"IceRepositoryCreator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tensureProjectFile := false.",						"\tisBareRepository := false"					],					"body" : [						"super initialize.",						"ensureProjectFile := false.",						"isBareRepository := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7307757,					"argumentNames" : [ ]				},				"RSControlConfiguration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tminScale: 0.04;",						"\t\tmaxScale: 7;",						"\t\tpadding: 25;",						"\t\tuseZoomToFitOnExtendChanged;",						"\t\tuseZoomToFitOnStart;",						"\t\tnoBasicZoom;",						"\t\thasHorizontalScrolling: true;",						"\t\thasVerticalScrolling: true"					],					"body" : [						"super initialize.",						"self",						"\tminScale: 0.04;",						"\tmaxScale: 7;",						"\tpadding: 25;",						"\tuseZoomToFitOnExtendChanged;",						"\tuseZoomToFitOnStart;",						"\tnoBasicZoom;",						"\thasHorizontalScrolling: true;",						"\thasVerticalScrolling: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6517093,					"argumentNames" : [ ]				},				"IconicListItemMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\tcellPositioning: #center;",						"\t\tcellInset: 2;",						"\t\tborderWidth: 0;",						"\t\tcolor: Color transparent;",						"\t\thResizing: #shrinkWrap;",						"\t\tvResizing: #shrinkWrap;",						"\t\textent: 20 @ 16"					],					"body" : [						"super initialize.",						"",						"self",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\tcellPositioning: #center;",						"\tcellInset: 2;",						"\tborderWidth: 0;",						"\tcolor: Color transparent;",						"\thResizing: #shrinkWrap;",						"\tvResizing: #shrinkWrap;",						"\textent: 20 @ 16"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2713084,					"argumentNames" : [ ]				},				"RBSelectorEnvironment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tclassSelectors := IdentityDictionary new.",						"\tmetaClassSelectors := IdentityDictionary new"					],					"body" : [						"super initialize.",						"classSelectors := IdentityDictionary new.",						"metaClassSelectors := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3932116,					"argumentNames" : [ ]				},				"RBAbstractClass" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tname := #'Unknown Class'"					],					"body" : [						"super initialize.",						"name := #'Unknown Class'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3933614,					"argumentNames" : [ ]				},				"EpMonitor class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerToolClassNamed: self name"					],					"body" : [						"SessionManager default registerToolClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 5000352,					"argumentNames" : [ ]				},				"SpButtonBarPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\titems := OrderedCollection new asValueHolder.",						"\tself placeAtEnd"					],					"body" : [						"super initialize.",						"items := OrderedCollection new asValueHolder.",						"self placeAtEnd"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3012269,					"argumentNames" : [ ]				},				"ReReturnsIfTrueRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny:",						"\t\t#( '^`@condition ifTrue: [| `@temps | `@.statements]'",						"\t\t   '^`@condition ifFalse: [| `@temps | `@.statements]' )"					],					"body" : [						"super initialize.",						"self matchesAny:",						"\t#( '^`@condition ifTrue: [| `@temps | `@.statements]'",						"\t   '^`@condition ifFalse: [| `@temps | `@.statements]' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4745133,					"argumentNames" : [ ]				},				"LazyMorphTreeNodeMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdrawable := false"					],					"body" : [						"super initialize.",						"drawable := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1382402,					"argumentNames" : [ ]				},				"OSTouchHoldDetector class" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tMaxDistanceTravelled := 0.02.",						"\tWaitingTime := 1000"					],					"body" : [						"super initialize.",						"MaxDistanceTravelled := 0.02.",						"WaitingTime := 1000"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4841766,					"argumentNames" : [ ]				},				"OSTouchGestureNeedingThresholdDetector class" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tMinDistanceBeforeDetection := 0.05"					],					"body" : [						"super initialize.",						"MinDistanceBeforeDetection := 0.05"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4843497,					"argumentNames" : [ ]				},				"ZdcSecureSocketStream" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tconnecting := false"					],					"body" : [						"super initialize.",						"connecting := false"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 2224633,					"argumentNames" : [ ]				},				"MarginBorderStyle" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself margin: 0"					],					"body" : [						"super initialize.",						"self margin: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1452234,					"argumentNames" : [ ]				},				"IcePushTransferProgress" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tjob := IceExternalJob new",						"\t\t       title: self title;",						"\t\t       yourself.",						"",						"\tself initializeBlock"					],					"body" : [						"super initialize.",						"",						"job := IceExternalJob new",						"\t       title: self title;",						"\t       yourself.",						"",						"self initializeBlock"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7022372,					"argumentNames" : [ ]				},				"WeakAnnouncementSubscription class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tWeakArray",						"\t\tremoveWeakDependent: self;",						"\t\taddWeakDependent: self",						"",						"\t\"Make sure that it is not added twice.\""					],					"body" : [						"WeakArray",						"\tremoveWeakDependent: self;",						"\taddWeakDependent: self",						"",						"\"Make sure that it is not added twice.\""					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self initialize"					],					"hash" : 1970325,					"argumentNames" : [ ]				},				"StartupPreferencesHandler" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tactions := self buildActionList"					],					"body" : [						"super initialize.",						"actions := self buildActionList"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2248281,					"argumentNames" : [ ]				},				"ZnChunkedReadStream" : {					"sourceCode" : [						"initialize",						"",						"\tatEnd := false.",						"\tchunkCount := 0.",						"\ttotalSize := 0"					],					"body" : [						"atEnd := false.",						"chunkCount := 0.",						"totalSize := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2197479,					"argumentNames" : [ ]				},				"SpValueHolder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlock := false.",						"\tsubscriptions := OrderedCollection new"					],					"body" : [						"super initialize.",						"lock := false.",						"subscriptions := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2935090,					"argumentNames" : [ ]				},				"TabSelectorMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tselectedIndex := 0.",						"\tself",						"\t\ttabs: OrderedCollection new;",						"\t\twrapScrolling: false;",						"\t\tvisibleTabRange: (1 to: 0);",						"\t\tcontrols: self newControls;",						"\t\troundedCorners: #( 1 4 );",						"\t\tborderWidth: 0;",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\tcellInset: (self theme tabSelectorCellInsetFor: self)"					],					"body" : [						"super initialize.",						"selectedIndex := 0.",						"self",						"\ttabs: OrderedCollection new;",						"\twrapScrolling: false;",						"\tvisibleTabRange: (1 to: 0);",						"\tcontrols: self newControls;",						"\troundedCorners: #( 1 4 );",						"\tborderWidth: 0;",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\tcellInset: (self theme tabSelectorCellInsetFor: self)"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2749351,					"argumentNames" : [ ]				},				"TFPooledExternalAsyncCall" : {					"sourceCode" : [						"initialize",						"",						"\t"					],					"body" : [ ],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2889864,					"argumentNames" : [ ]				},				"CircularMemoryLogger" : {					"sourceCode" : [						"initialize",						"",						"\tentryCount := 5000.",						"\tindex := 0.",						"\tsuper initialize"					],					"body" : [						"entryCount := 5000.",						"index := 0.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1181912,					"argumentNames" : [ ]				},				"SpMorphicStatusBarAdapter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpushedMessages := OrderedCollection new"					],					"body" : [						"super initialize.",						"pushedMessages := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3408160,					"argumentNames" : [ ]				},				"ReSuperSendsRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: 'super `@message: ``@args'",						"\t\twith: 'self `@message: ``@args'"					],					"body" : [						"super initialize.",						"self",						"\treplace: 'super `@message: ``@args'",						"\twith: 'self `@message: ``@args'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4735986,					"argumentNames" : [ ]				},				"ClyQueryBrowserMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tqueryScopes := OrderedCollection new.",						"\texpectedFlatQueryResult := self defaultFlatQueryResult"					],					"body" : [						"super initialize.",						"",						"queryScopes := OrderedCollection new.",						"expectedFlatQueryResult := self defaultFlatQueryResult"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5990463,					"argumentNames" : [ ]				},				"IceLibgitTreeBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thasChanges := false"					],					"body" : [						"super initialize.",						"hasChanges := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7306958,					"argumentNames" : [ ]				},				"IceTipCredentialsStoreBrowser" : {					"sourceCode" : [						"initialize",						"",						"\tmodel ifNil: [ model := IceCredentialStore current ].",						"\tsuper initialize"					],					"body" : [						"model ifNil: [ model := IceCredentialStore current ].",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7087883,					"argumentNames" : [ ]				},				"DialogItemsChooser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tselection := OrderedCollection new.",						"\tunselectedItems := OrderedCollection new.",						"\tselectedItems := OrderedCollection new"					],					"body" : [						"super initialize.",						"selection := OrderedCollection new.",						"unselectedItems := OrderedCollection new.",						"selectedItems := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4132812,					"argumentNames" : [ ]				},				"SpRadioButtonPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstate := true.",						"\tinitialStateSet := true.",						"\tassociatedRadioButtons := #(  )"					],					"body" : [						"super initialize.",						"state := true.",						"initialStateSet := true.",						"associatedRadioButtons := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3267079,					"argumentNames" : [ ]				},				"RSComposite" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself paint: nil.",						"\tself resetPath"					],					"body" : [						"super initialize.",						"self paint: nil.",						"self resetPath"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6471299,					"argumentNames" : [ ]				},				"SourceSansProRegular class" : {					"sourceCode" : [						"initialize",						"",						"\tEmbeddedFreeTypeFontInstaller registerFont: self"					],					"body" : [						"EmbeddedFreeTypeFontInstaller registerFont: self"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1521527,					"argumentNames" : [ ]				},				"ReCollectionMessagesToExternalObjectRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny:",						"\t\t#( '(`@collectionOwner `@collectionGetter: `@args) add:           `@arg'",						"\t\t   '(`@collectionOwner `@collectionGetter: `@args) remove:     `@arg'",						"\t\t   '(`@collectionOwner `@collectionGetter: `@args) addAll:       `@arg'",						"\t\t   '(`@collectionOwner `@collectionGetter: `@args) removeAll: `@arg' )"					],					"body" : [						"super initialize.",						"self matchesAny:",						"\t#( '(`@collectionOwner `@collectionGetter: `@args) add:           `@arg'",						"\t   '(`@collectionOwner `@collectionGetter: `@args) remove:     `@arg'",						"\t   '(`@collectionOwner `@collectionGetter: `@args) addAll:       `@arg'",						"\t   '(`@collectionOwner `@collectionGetter: `@args) removeAll: `@arg' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4740525,					"argumentNames" : [ ]				},				"Behavior" : {					"sourceCode" : [						"initialize",						"",						"\t\"moved here from the class side's #new\"",						"",						"\tsuper initialize.",						"\tself basicSuperclass: Object.",						"\t\"no longer sending any messages, some of them crash the VM\"",						"\tself methodDict: self emptyMethodDictionary.",						"\tself setFormat: Object format"					],					"body" : [						"super initialize.",						"self basicSuperclass: Object.",						"\"no longer sending any messages, some of them crash the VM\"",						"self methodDict: self emptyMethodDictionary.",						"self setFormat: Object format"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"moved here from the class side's #new"					],					"hash" : 1663682,					"argumentNames" : [ ]				},				"RBClassTransformation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tenvironment := Smalltalk globals"					],					"body" : [						"super initialize.",						"environment := Smalltalk globals"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5261621,					"argumentNames" : [ ]				},				"RubScrolledTextMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself clipSubmorphs: true.",						"\tenabled := true.",						"\taskBeforeDiscardingEdits := true.",						"\thasEditingConflicts := false.",						"\thasUnacceptedEdits := false.",						"\trulers := SortedCollection sortBlock: [ :a :b | b level > a level ].",						"\tself addMorph: (scrollPane := self newScrollPane).",						"\tself announcer",						"\t\twhen: RubConfigurationChange",						"\t\tsend: #whenConfigurationChanged:",						"\t\tto: self.",						"\tself textArea announcer",						"\t\twhen: RubCancelEditRequested",						"\t\tsend: #whenCancelEditRequested:",						"\t\tto: self.",						"\tself textArea announcer",						"\t\twhen: MorphGotFocus",						"\t\tsend: #whenGotFocus:",						"\t\tto: self.",						"\tself textArea announcer",						"\t\twhen: MorphLostFocus",						"\t\tsend: #whenLostFocus:",						"\t\tto: self.",						"\tself textArea announcer",						"\t\twhen: RubTextAcceptRequest",						"\t\tsend: #whenTextAcceptRequest:",						"\t\tto: self.",						"\tself textArea announcer",						"\t\twhen: RubTextChanged",						"\t\tsend: #whenTextChangedInTextArea:",						"\t\tto: self.",						"\tself textArea announcer",						"\t\twhen: RubReturnEntered",						"\t\tsend: #whenReturnEnteredInTextArea:",						"\t\tto: self.",						"\tself textArea announcer",						"\t\twhen: RubKeystroke",						"\t\tsend: #whenKeystrokeInTextArea:",						"\t\tto: self.",						"\tself withAdornment.",						"\tself borderStyle: self borderStyleToUse.",						"\thighlights := OrderedCollection new"					],					"body" : [						"super initialize.",						"self clipSubmorphs: true.",						"enabled := true.",						"askBeforeDiscardingEdits := true.",						"hasEditingConflicts := false.",						"hasUnacceptedEdits := false.",						"rulers := SortedCollection sortBlock: [ :a :b | b level > a level ].",						"self addMorph: (scrollPane := self newScrollPane).",						"self announcer",						"\twhen: RubConfigurationChange",						"\tsend: #whenConfigurationChanged:",						"\tto: self.",						"self textArea announcer",						"\twhen: RubCancelEditRequested",						"\tsend: #whenCancelEditRequested:",						"\tto: self.",						"self textArea announcer",						"\twhen: MorphGotFocus",						"\tsend: #whenGotFocus:",						"\tto: self.",						"self textArea announcer",						"\twhen: MorphLostFocus",						"\tsend: #whenLostFocus:",						"\tto: self.",						"self textArea announcer",						"\twhen: RubTextAcceptRequest",						"\tsend: #whenTextAcceptRequest:",						"\tto: self.",						"self textArea announcer",						"\twhen: RubTextChanged",						"\tsend: #whenTextChangedInTextArea:",						"\tto: self.",						"self textArea announcer",						"\twhen: RubReturnEntered",						"\tsend: #whenReturnEnteredInTextArea:",						"\tto: self.",						"self textArea announcer",						"\twhen: RubKeystroke",						"\tsend: #whenKeystrokeInTextArea:",						"\tto: self.",						"self withAdornment.",						"self borderStyle: self borderStyleToUse.",						"highlights := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1394418,					"argumentNames" : [ ]				},				"MCThreeWayMerger" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tindex := MCDefinitionIndex new.",						"\tprovisions := Set new"					],					"body" : [						"super initialize.",						"index := MCDefinitionIndex new.",						"provisions := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1073285,					"argumentNames" : [ ]				},				"RGMethod" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tsourceCode := self unresolvedValue: self defaultSourceCode.",						"\ttags := self unresolvedValue: self defaultTags. \"tags must be set before package\"",						"\tpackage := self unresolvedValue: self parent package.",						"\tauthor := self unresolvedValue: self defaultAuthor.",						"\ttime := self unresolvedValue: self defaultTime"					],					"body" : [						"super initialize.",						"",						"sourceCode := self unresolvedValue: self defaultSourceCode.",						"tags := self unresolvedValue: self defaultTags. \"tags must be set before package\"",						"package := self unresolvedValue: self parent package.",						"author := self unresolvedValue: self defaultAuthor.",						"time := self unresolvedValue: self defaultTime"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6051118,					"argumentNames" : [ ]				},				"RSPieLabeledInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself labelShape: RSLabel new.",						"\tself labelColor: Color black.",						"\toffset := 0.",						"\trotated := false"					],					"body" : [						"super initialize.",						"self labelShape: RSLabel new.",						"self labelColor: Color black.",						"offset := 0.",						"rotated := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6586069,					"argumentNames" : [ ]				},				"RBClass" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcomment := LookupComment"					],					"body" : [						"super initialize.",						"comment := LookupComment"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3934162,					"argumentNames" : [ ]				},				"NewValueHolder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tlock := false"					],					"body" : [						"super initialize.",						"",						"lock := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1480138,					"argumentNames" : [ ]				},				"PharoChangesCondenser" : {					"sourceCode" : [						"initialize",						"",						"\tself reset"					],					"body" : [						"self reset"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1999684,					"argumentNames" : [ ]				},				"MCDependencySorter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tprovided := Set new.",						"\trequired := Dictionary new.",						"\torderedItems := OrderedCollection new"					],					"body" : [						"super initialize.",						"provided := Set new.",						"required := Dictionary new.",						"orderedItems := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1069041,					"argumentNames" : [ ]				},				"OkToolbar" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tokAction := [ true ] asValueHolder"					],					"body" : [						"super initialize.",						"okAction := [ true ] asValueHolder"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1717844,					"argumentNames" : [ ]				},				"ZnNetworkingUtils class" : {					"sourceCode" : [						"initialize",						"",						"\t\"The default will try to use ZdcSocketStream and ZdcSecureSocketStream\"",						"",						"\tDefault := self new.",						"\tDefaultSocketStreamTimeout := 30"					],					"body" : [						"Default := self new.",						"DefaultSocketStreamTimeout := 30"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"The default will try to use ZdcSocketStream and ZdcSecureSocketStream"					],					"hash" : 2213523,					"argumentNames" : [ ]				},				"SpDatePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdisplayBlock := [ :object | ",						"\t                object ifNotNil: [ object asStringOrText ] ifNil: '' ].",						"\tself property: #displayBlock whenChangedDo: [ self date: self date ].",						"\tself date: self defaultDate"					],					"body" : [						"super initialize.",						"displayBlock := [ :object | ",						"                object ifNotNil: [ object asStringOrText ] ifNil: '' ].",						"self property: #displayBlock whenChangedDo: [ self date: self date ].",						"self date: self defaultDate"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2620654,					"argumentNames" : [ ]				},				"SpMockMenuPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tshown := false"					],					"body" : [						"super initialize.",						"shown := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3679507,					"argumentNames" : [ ]				},				"ExternalDropHandler class" : {					"sourceCode" : [						"initialize",						"",						"\t\"ExternalDropHandler initialize\"",						"",						"\tself resetRegisteredHandlers"					],					"body" : [						"self resetRegisteredHandlers"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"ExternalDropHandler initialize"					],					"hash" : 2445636,					"argumentNames" : [ ]				},				"DTLeavesCollector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tleaves := OrderedCollection new"					],					"body" : [						"super initialize.",						"leaves := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3749657,					"argumentNames" : [ ]				},				"LessonView" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\twindow := self buildWindow.",						"\tshoutMorph := self buildText.",						"\twindow addMorph: shoutMorph frame: (0 @ 0 corner: 1 @ 1).",						"\twindow extent: 600 @ 450"					],					"body" : [						"super initialize.",						"window := self buildWindow.",						"shoutMorph := self buildText.",						"window addMorph: shoutMorph frame: (0 @ 0 corner: 1 @ 1).",						"window extent: 600 @ 450"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3912376,					"argumentNames" : [ ]				},				"Character class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Create the DigitsValues table.\"",						"",						"\tself initializeDigitValues"					],					"body" : [						"self initializeDigitValues"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Create the DigitsValues table."					],					"hash" : 1583428,					"argumentNames" : [ ]				},				"SpBoxConstraints" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself bePlacedAtStart"					],					"body" : [						"super initialize.",						"self bePlacedAtStart"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2946665,					"argumentNames" : [ ]				},				"RSSearchInCanvasInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself resetFixedShapes.",						"\thighlightesShapes := RSGroup new.",						"",						"\tcolorsToUse := NSScale ordinalColored: 7.",						"\thighlightableLabels := RSHighlightable new",						"\t\t                       when: RSHighlightEvent",						"\t\t                       send: #showCurrentShadow:",						"\t\t                       to: self;",						"\t\t                       when: RSUnHighlightEvent",						"\t\t                       send: #hideCurrentShadow:",						"\t\t                       to: self;",						"\t\t                       yourself.",						"",						"\t\"The variable highlightedShapes contains the shapes that have been searched and therefore highlighted\"",						"\tself doNotUseExactMatch"					],					"body" : [						"super initialize.",						"self resetFixedShapes.",						"highlightesShapes := RSGroup new.",						"",						"colorsToUse := NSScale ordinalColored: 7.",						"highlightableLabels := RSHighlightable new",						"\t                       when: RSHighlightEvent",						"\t                       send: #showCurrentShadow:",						"\t                       to: self;",						"\t                       when: RSUnHighlightEvent",						"\t                       send: #hideCurrentShadow:",						"\t                       to: self;",						"\t                       yourself.",						"",						"\"The variable highlightedShapes contains the shapes that have been searched and therefore highlighted\"",						"self doNotUseExactMatch"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6522557,					"argumentNames" : [ ]				},				"SpSelectDialog" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself title: 'Request'"					],					"body" : [						"super initialize.",						"self title: 'Request'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3132077,					"argumentNames" : [ ]				},				"ShiftClassInstaller" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbuilder := ShiftClassBuilder new.",						"\tbuilder buildEnvironment: ShSmalltalkGlobalsEnvironment new"					],					"body" : [						"super initialize.",						"builder := ShiftClassBuilder new.",						"builder buildEnvironment: ShSmalltalkGlobalsEnvironment new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1612859,					"argumentNames" : [ ]				},				"RBTransformationRule class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeRecursiveSelfRule"					],					"body" : [						"self initializeRecursiveSelfRule"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2491204,					"argumentNames" : [ ]				},				"TabMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself changeProportionalLayout.",						"",						"\tstate := TabEnabledState tab: self.",						"\tcloseable := true.",						"\tlabel := self buildLabel: 'tab' withIcon: self defaultIcon.",						"\tcloseIcon := AlphaImageMorph withForm:",						"\t\t             self class closeIcon scaledByDisplayScaleFactor.",						"\tactions := OrderedCollection new.",						"\tretrievingSemaphore := Semaphore new.",						"",						"\tself addLabel.",						"\tself addIcon.",						"\tself addActionsToIcon"					],					"body" : [						"super initialize.",						"",						"self changeProportionalLayout.",						"",						"state := TabEnabledState tab: self.",						"closeable := true.",						"label := self buildLabel: 'tab' withIcon: self defaultIcon.",						"closeIcon := AlphaImageMorph withForm:",						"\t             self class closeIcon scaledByDisplayScaleFactor.",						"actions := OrderedCollection new.",						"retrievingSemaphore := Semaphore new.",						"",						"self addLabel.",						"self addIcon.",						"self addActionsToIcon"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1409219,					"argumentNames" : [ ]				},				"StGenericGenerator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself reset"					],					"body" : [						"super initialize.",						"self reset"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6269033,					"argumentNames" : [ ]				},				"CDNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tchildren := OrderedCollection new"					],					"body" : [						"super initialize.",						"children := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5457435,					"argumentNames" : [ ]				},				"PoolDefiner2 class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tVariableInPoolDefiner2 := 33.",						"\tAnAuthor := 'NotDucasse'"					],					"body" : [						"VariableInPoolDefiner2 := 33.",						"AnAuthor := 'NotDucasse'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"self initialize"					],					"hash" : 4453630,					"argumentNames" : [ ]				},				"MalNodeWithPreviousAndNext" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpreviousNodes := OrderedCollection new"					],					"body" : [						"super initialize.",						"previousNodes := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2564635,					"argumentNames" : [ ]				},				"MWHandlerObjectCentric" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself predicate: [ :recv :args | true ]"					],					"body" : [						"super initialize.",						"",						"self predicate: [ :recv :args | true ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4176264,					"argumentNames" : [ ]				},				"ZnMultiPartFormDataEntity" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself contentType: self mimeTypeWithBoundary"					],					"body" : [						"super initialize.",						"self contentType: self mimeTypeWithBoundary"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 2208090,					"argumentNames" : [ ]				},				"MCWorkingCopy class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tregistry ifNotNil: [ registry rehash ].",						"\tself registerForNotifications"					],					"body" : [						"registry ifNotNil: [ registry rehash ].",						"self registerForNotifications"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [						"self initialize"					],					"hash" : 1058651,					"argumentNames" : [ ]				},				"MethodsTemperaturesPresenter" : {					"sourceCode" : [						"initialize",						"",						"\t\"The initial phase of temperatures measuring is sleeping.\"",						"",						"\tmeasuringInProgress := MethodTemperatureMeasuringPhase sleeping.",						"",						"\t\"Also, keep track if the wrappers have been installed or not.\"",						"\twrappers := OrderedCollection new.",						"\twrappersHaveBeenInstalledAlready := false.",						"",						"\t\"Finally, keep track if an update of visualizations is ",						"\t in progress to not overlap data creation.\"",						"\tupdateInProgress := false.",						"",						"\t\"Now we can initialize subpresenters via our super implementation\"",						"\tsuper initialize"					],					"body" : [						"measuringInProgress := MethodTemperatureMeasuringPhase sleeping.",						"",						"\"Also, keep track if the wrappers have been installed or not.\"",						"wrappers := OrderedCollection new.",						"wrappersHaveBeenInstalledAlready := false.",						"",						"\"Finally, keep track if an update of visualizations is ",						"\t in progress to not overlap data creation.\"",						"updateInProgress := false.",						"",						"\"Now we can initialize subpresenters via our super implementation\"",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"The initial phase of temperatures measuring is sleeping."					],					"hash" : 4189688,					"argumentNames" : [ ]				},				"MemoryFileSystemEntry" : {					"sourceCode" : [						"initialize",						"",						"\tcreationTime := modificationTime := DateAndTime now.",						"\tsuper initialize"					],					"body" : [						"creationTime := modificationTime := DateAndTime now.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2231092,					"argumentNames" : [ ]				},				"FTTableRowMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tclipSubmorphs: true;",						"\t\tlayoutPolicy: FTRowLayout new"					],					"body" : [						"super initialize.",						"self",						"\tclipSubmorphs: true;",						"\tlayoutPolicy: FTRowLayout new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1367866,					"argumentNames" : [ ]				},				"JobProgressMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself addDependent: SystemProgressMorph uniqueInstance"					],					"body" : [						"super initialize.",						"self addDependent: SystemProgressMorph uniqueInstance"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1379122,					"argumentNames" : [ ]				},				"DAPackageCycleDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcycles := SortedCollection new.",						"\tsccs := OrderedCollection new"					],					"body" : [						"super initialize.",						"cycles := SortedCollection new.",						"sccs := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2577796,					"argumentNames" : [ ]				},				"IceGitHubAPI" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tisAnonymous := false"					],					"body" : [						"super initialize.",						"isAnonymous := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7273929,					"argumentNames" : [ ]				},				"SpDemoFormPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tself model: SpDemoFormModel new.",						"\tsuper initialize"					],					"body" : [						"self model: SpDemoFormModel new.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2891560,					"argumentNames" : [ ]				},				"TestRunner" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfailedList := errorList := Array new.",						"\tSystemAnnouncer uniqueInstance weak",						"\t\twhen: ClassAdded , CategoryAdded , ClassRemoved , CategoryRemoved",						"\t\t\t, ClassRenamed , CategoryRenamed , ClassRecategorized",						"\t\tsend: #update",						"\t\tto: self.",						"\tself",						"\t\tupdate;",						"\t\tresetResult"					],					"body" : [						"super initialize.",						"failedList := errorList := Array new.",						"SystemAnnouncer uniqueInstance weak",						"\twhen: ClassAdded , CategoryAdded , ClassRemoved , CategoryRemoved",						"\t\t, ClassRenamed , CategoryRenamed , ClassRecategorized",						"\tsend: #update",						"\tto: self.",						"self",						"\tupdate;",						"\tresetResult"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3897228,					"argumentNames" : [ ]				},				"RSPieTitleInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlabelBuilder := RSMultilineLabelBuilder new.",						"\tlabelBuilder layout alignCenter"					],					"body" : [						"super initialize.",						"labelBuilder := RSMultilineLabelBuilder new.",						"labelBuilder layout alignCenter"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6585628,					"argumentNames" : [ ]				},				"RubScrolledTextExtra" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself clipSubmorphs: true"					],					"body" : [						"super initialize.",						"self clipSubmorphs: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1387207,					"argumentNames" : [ ]				},				"ForEventTestMock" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcounter := 0"					],					"body" : [						"super initialize.",						"counter := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5145291,					"argumentNames" : [ ]				},				"BorderedMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initializes the receiver\"",						"",						"\tsuper initialize.",						"\tself initializeBorder"					],					"body" : [						"super initialize.",						"self initializeBorder"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initializes the receiver"					],					"hash" : 2447465,					"argumentNames" : [ ]				},				"CommandLineHandler" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsession := Smalltalk session.",						"\tself",						"\t\tinitializeStdout;",						"\t\tinitializeStderr"					],					"body" : [						"super initialize.",						"session := Smalltalk session.",						"self",						"\tinitializeStdout;",						"\tinitializeStderr"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1661359,					"argumentNames" : [ ]				},				"MockObject" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmessages := OrderedCollection new.",						"\tfailed := false"					],					"body" : [						"super initialize.",						"messages := OrderedCollection new.",						"failed := false"					],					"isTestMethod" : false,					"category" : "reflective operations",					"comment" : [ ],					"hash" : 1258290,					"argumentNames" : [ ]				},				"STONTestUser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tenabled := true"					],					"body" : [						"super initialize.",						"enabled := true"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 5177801,					"argumentNames" : [ ]				},				"MWSession" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tdecorators := OrderedCollection new.",						"",						"\tstackCounter := 0"					],					"body" : [						"super initialize.",						"",						"decorators := OrderedCollection new.",						"",						"stackCounter := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4181300,					"argumentNames" : [ ]				},				"MetacelloPlatform class" : {					"sourceCode" : [						"initialize",						"",						"\t\"noop ... use #select\"",						"",						"\t"					],					"body" : [ ],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [						"noop ... use #select"					],					"hash" : 2342024,					"argumentNames" : [ ]				},				"MailAddressTokenizer class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initalize class variables using   MailAddressTokenizer initialize\"",						"",						"\t| atomChars |",						"\tCSParens := CharacterSet empty.",						"\tCSParens addAll: '()'.",						"",						"\tCSSpecials := CharacterSet empty.",						"\tCSSpecials addAll: '()<>@,;:\\\".[]'.",						"",						"\tCSNonSeparators := CharacterSet separators complement.",						"",						"",						"\t\"(from RFC 2822)\"",						"\tatomChars := CharacterSet empty.",						"\tatomChars addAll: ($A to: $Z).",						"\tatomChars addAll: ($a to: $z).",						"\tatomChars addAll: ($0 to: $9).",						"\tatomChars addAll: '!#$%&''*+-/=?^_`{|}~'.",						"\t\"RFC 6531 allows characters with value > 127 encoded as UTF-8, which means values between 128 and 255 may appear as part of atoms.\"",						"\tatomChars addAll: ((Character value: 128) to: (Character value: 255)).",						"",						"\tCSNonAtom := atomChars complement"					],					"body" : [						"| atomChars |",						"CSParens := CharacterSet empty.",						"CSParens addAll: '()'.",						"",						"CSSpecials := CharacterSet empty.",						"CSSpecials addAll: '()<>@,;:\\\".[]'.",						"",						"CSNonSeparators := CharacterSet separators complement.",						"",						"",						"\"(from RFC 2822)\"",						"atomChars := CharacterSet empty.",						"atomChars addAll: ($A to: $Z).",						"atomChars addAll: ($a to: $z).",						"atomChars addAll: ($0 to: $9).",						"atomChars addAll: '!#$%&''*+-/=?^_`{|}~'.",						"\"RFC 6531 allows characters with value > 127 encoded as UTF-8, which means values between 128 and 255 may appear as part of atoms.\"",						"atomChars addAll: ((Character value: 128) to: (Character value: 255)).",						"",						"CSNonAtom := atomChars complement"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initalize class variables using   MailAddressTokenizer initialize"					],					"hash" : 4262520,					"argumentNames" : [ ]				},				"AthensAffineTransform" : {					"sourceCode" : [						"initialize",						"",						"\tself loadIdentity"					],					"body" : [						"self loadIdentity"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3862596,					"argumentNames" : [ ]				},				"DiffReplyVisitor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstream := String new writeStream"					],					"body" : [						"super initialize.",						"stream := String new writeStream"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6156973,					"argumentNames" : [ ]				},				"ShSmalltalkGlobalsEnvironment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself environment: Smalltalk globals"					],					"body" : [						"super initialize.",						"self environment: Smalltalk globals"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1615154,					"argumentNames" : [ ]				},				"SpecFocusOrder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tpresenters := OrderedCollection new"					],					"body" : [						"super initialize.",						"",						"presenters := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1740057,					"argumentNames" : [ ]				},				"MicAbstractAnnotatedBlock" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tisClosed := false"					],					"body" : [						"super initialize.",						"isClosed := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7332813,					"argumentNames" : [ ]				},				"CTLinkedStoragePoolCircular" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thead := self newLink",						"\t\t        value: 0;",						"\t\t        yourself.",						"\thead nextLink: head"					],					"body" : [						"super initialize.",						"head := self newLink",						"\t        value: 0;",						"\t        yourself.",						"head nextLink: head"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3158121,					"argumentNames" : [ ]				},				"OSSDL2AthensRenderer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmutex := Mutex new"					],					"body" : [						"super initialize.",						"mutex := Mutex new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4862240,					"argumentNames" : [ ]				},				"ClyMethodVisibilityMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcolor := Color transparent.",						"\tself changeTableLayout.",						"\tself vResizing: #shrinkWrap.",						"\tself hResizing: #shrinkWrap.",						"\tself minWidth: 0.",						"\tself minHeight: 0"					],					"body" : [						"super initialize.",						"color := Color transparent.",						"self changeTableLayout.",						"self vResizing: #shrinkWrap.",						"self hResizing: #shrinkWrap.",						"self minWidth: 0.",						"self minHeight: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5934886,					"argumentNames" : [ ]				},				"RSChartTitleDecoration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself fontSize: 15.",						"\tlocation",						"\t\toffset: 0 @ -2;",						"\t\tabove;",						"\t\tcenter"					],					"body" : [						"super initialize.",						"self fontSize: 15.",						"location",						"\toffset: 0 @ -2;",						"\tabove;",						"\tcenter"					],					"isTestMethod" : false,					"category" : "rendering",					"comment" : [ ],					"hash" : 6611629,					"argumentNames" : [ ]				},				"MCDefinitionIndex" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdefinitions := Dictionary new"					],					"body" : [						"super initialize.",						"definitions := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1067801,					"argumentNames" : [ ]				},				"RGEnvironment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tbehaviors := self unresolvedValue: self defaultBehaviors.",						"\tpackages := self unresolvedValue: self defaultPackages.",						"\tglobalVariables := self unresolvedValue: self defaultGlobalVariables.",						"",						"\tversion := self defaultVersion"					],					"body" : [						"super initialize.",						"",						"behaviors := self unresolvedValue: self defaultBehaviors.",						"packages := self unresolvedValue: self defaultPackages.",						"globalVariables := self unresolvedValue: self defaultGlobalVariables.",						"",						"version := self defaultVersion"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6054223,					"argumentNames" : [ ]				},				"MalCyclesCoverage" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself useNodeDecomposition"					],					"body" : [						"super initialize.",						"self useNodeDecomposition"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2557545,					"argumentNames" : [ ]				},				"MorphicWindowAdapter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tisClosedHolder := false asValueHolder"					],					"body" : [						"super initialize.",						"",						"isClosedHolder := false asValueHolder"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 1822560,					"argumentNames" : [ ]				},				"SindarinDebugSession" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttriggerEventOn := true.",						"\tcanBeTerminated := true"					],					"body" : [						"super initialize.",						"triggerEventOn := true.",						"canBeTerminated := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6172127,					"argumentNames" : [ ]				},				"StPharoApplication" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself resetConfiguration.",						"\tSystemAnnouncer uniqueInstance weak",						"\t\twhen: UIThemeChanged",						"\t\tsend: #resetConfiguration",						"\t\tto: self"					],					"body" : [						"super initialize.",						"self resetConfiguration.",						"SystemAnnouncer uniqueInstance weak",						"\twhen: UIThemeChanged",						"\tsend: #resetConfiguration",						"\tto: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6180183,					"argumentNames" : [ ]				},				"TonelFileSystemUtils class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tself install"					],					"body" : [						"self install"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"self initialize"					],					"hash" : 2322756,					"argumentNames" : [ ]				},				"TKTWatchDog" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tvalues := WeakSet new.",						"\tid := UUID new.",						"\tstarted := false"					],					"body" : [						"super initialize.",						"values := WeakSet new.",						"id := UUID new.",						"started := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1214681,					"argumentNames" : [ ]				},				"SpChangeSorterPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tmodel := ChangeSorterModel new.",						"\tsuper initialize.",						"\tSystemAnnouncer uniqueInstance weak",						"\t\twhen: CurrentChangeSetChanged",						"\t\tsend: #updateTitle",						"\t\tto: self.",						"\tself initializeAnnouncements"					],					"body" : [						"model := ChangeSorterModel new.",						"super initialize.",						"SystemAnnouncer uniqueInstance weak",						"\twhen: CurrentChangeSetChanged",						"\tsend: #updateTitle",						"\tto: self.",						"self initializeAnnouncements"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6192423,					"argumentNames" : [ ]				},				"WorldState" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thands := Array new.",						"\tdamageRecorder := DamageRecorder new.",						"\tstepList := Heap sortBlock: self stepListSortBlock.",						"\tlastStepTime := 0.",						"\tlastAlarmTime := 0"					],					"body" : [						"super initialize.",						"hands := Array new.",						"damageRecorder := DamageRecorder new.",						"stepList := Heap sortBlock: self stepListSortBlock.",						"lastStepTime := 0.",						"lastAlarmTime := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2459707,					"argumentNames" : [ ]				},				"ObjectWithSettableHash" : {					"sourceCode" : [						"initialize",						"",						"\t\"Make sure hash answers a SmallInteger, even if we haven't set it yet.\"",						"",						"\tsuper initialize.",						"\thash := 0"					],					"body" : [						"super initialize.",						"hash := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Make sure hash answers a SmallInteger, even if we haven't set it yet."					],					"hash" : 4428234,					"argumentNames" : [ ]				},				"FLLargeIdentityHashedCollection class" : {					"sourceCode" : [						"initialize",						"",						"\t| rng |",						"\trng := Random seed: 664399324.",						"\tPermutationMap := (0 to: 4095) asArray shuffleBy: rng"					],					"body" : [						"| rng |",						"rng := Random seed: 664399324.",						"PermutationMap := (0 to: 4095) asArray shuffleBy: rng"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 1614605,					"argumentNames" : [ ]				},				"OSTouchHoldDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\twaitingTime := self class waitingTime.",						"\tmaxDistanceTravelled := self class maxDistanceTravelled.",						"\tprocess := Process new terminate"					],					"body" : [						"super initialize.",						"waitingTime := self class waitingTime.",						"maxDistanceTravelled := self class maxDistanceTravelled.",						"process := Process new terminate"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4843049,					"argumentNames" : [ ]				},				"RSSunburstConstantWidthLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself arcWidth: 50.",						"\tself centerWidth: 50"					],					"body" : [						"super initialize.",						"self arcWidth: 50.",						"self centerWidth: 50"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6582938,					"argumentNames" : [ ]				},				"MalDijkstraEdge" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tweight := 1.",						"\tvisited := false"					],					"body" : [						"super initialize.",						"weight := 1.",						"visited := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2560234,					"argumentNames" : [ ]				},				"IceTipReadOnlyFormBuilder" : {					"sourceCode" : [						"initialize",						"",						"\titems := OrderedDictionary new.",						"\tsuper initialize"					],					"body" : [						"items := OrderedDictionary new.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7074339,					"argumentNames" : [ ]				},				"MWHandlerProfiling" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\trunWithInMethod := MWDecorator >> #run:with:in:.",						"",						"\ttimedReturns := IdentityDictionary new.",						"",						"\torphans := OrderedCollection new"					],					"body" : [						"super initialize.",						"",						"runWithInMethod := MWDecorator >> #run:with:in:.",						"",						"timedReturns := IdentityDictionary new.",						"",						"orphans := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4180308,					"argumentNames" : [ ]				},				"DTTestsProfilerVisitor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself profilingData: OrderedCollection new"					],					"body" : [						"super initialize.",						"self profilingData: OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3767066,					"argumentNames" : [ ]				},				"DialogItemsChooserUI" : {					"sourceCode" : [						"initialize",						"",						"\tunselectedItemsSearchingString := String new.",						"\tselectedItemsSearchingString := String new.",						"\tselectedSelectionList := Dictionary new.",						"\tunselectedSelectionList := Dictionary new.",						"",						"\tsuper initialize.",						"",						"\tself vResizing: #shrinkWrap.",						"\tself hResizing: #shrinkWrap"					],					"body" : [						"unselectedItemsSearchingString := String new.",						"selectedItemsSearchingString := String new.",						"selectedSelectionList := Dictionary new.",						"unselectedSelectionList := Dictionary new.",						"",						"super initialize.",						"",						"self vResizing: #shrinkWrap.",						"self hResizing: #shrinkWrap"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4152918,					"argumentNames" : [ ]				},				"SpecTableLayoutAdd" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself selector: #add:"					],					"body" : [						"super initialize.",						"self selector: #add:"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1763757,					"argumentNames" : [ ]				},				"RSHorizontalFlowLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself alignLeft"					],					"body" : [						"super initialize.",						"self alignLeft"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6547049,					"argumentNames" : [ ]				},				"ReservedVariable" : {					"sourceCode" : [						"initialize",						"",						"\tenvironment := Smalltalk globals.",						"\tname := self class variableName"					],					"body" : [						"environment := Smalltalk globals.",						"name := self class variableName"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1906250,					"argumentNames" : [ ]				},				"SpAbstractSelectionMode" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tsuper initialize"					],					"body" : [						"self class initializeSlots: self.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2960744,					"argumentNames" : [ ]				},				"SelectionValueHolder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tindex := 0 asValueHolder.",						"\tselection := nil asValueHolder.",						"",						"\tindex whenChangedSend: #valueChanged to: self.",						"\tselection whenChangedSend: #valueChanged to: self"					],					"body" : [						"super initialize.",						"index := 0 asValueHolder.",						"selection := nil asValueHolder.",						"",						"index whenChangedSend: #valueChanged to: self.",						"selection whenChangedSend: #valueChanged to: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1483784,					"argumentNames" : [ ]				},				"RSOffsetAttachPoint" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstartOffset := endOffset := 0"					],					"body" : [						"super initialize.",						"startOffset := endOffset := 0"					],					"isTestMethod" : false,					"category" : "public - hooks",					"comment" : [ ],					"hash" : 6478018,					"argumentNames" : [ ]				},				"KMCatcherMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself layoutPolicy: TableLayout new.",						"\tself listCentering: #center.",						"\tself width: 300.",						"\tself height: 25.",						"\tself color: (self theme textEditorDisabledFillStyleFor: self).",						"\tself borderStyle: (self theme textEditorDisabledBorderStyleFor: self).",						"\tlabelMorph := StringMorph contents: ''.",						"\tself addMorph: labelMorph.",						"\tedited := false.",						"\tfocused := false.",						"\tself initializeKeystrokes"					],					"body" : [						"super initialize.",						"self layoutPolicy: TableLayout new.",						"self listCentering: #center.",						"self width: 300.",						"self height: 25.",						"self color: (self theme textEditorDisabledFillStyleFor: self).",						"self borderStyle: (self theme textEditorDisabledBorderStyleFor: self).",						"labelMorph := StringMorph contents: ''.",						"self addMorph: labelMorph.",						"edited := false.",						"focused := false.",						"self initializeKeystrokes"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3795676,					"argumentNames" : [ ]				},				"TreeChunkPagerMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tnextPageAllowed := true"					],					"body" : [						"super initialize.",						"nextPageAllowed := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2761728,					"argumentNames" : [ ]				},				"ClyItemCellMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlabel := StringMorph new"					],					"body" : [						"super initialize.",						"label := StringMorph new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5894730,					"argumentNames" : [ ]				},				"CairoScaledFont" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself status ~= CAIRO_STATUS_SUCCESS ifTrue: [ ",						"\t\tself error: 'Something is wrong!' ].",						"\tself autoRelease"					],					"body" : [						"super initialize.",						"self status ~= CAIRO_STATUS_SUCCESS ifTrue: [ ",						"\tself error: 'Something is wrong!' ].",						"self autoRelease"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3880111,					"argumentNames" : [ ]				},				"ClyTextEditorToolMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tchangesCancelRequested := false.",						"\tapplyingChanges := false"					],					"body" : [						"super initialize.",						"changesCancelRequested := false.",						"applyingChanges := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5879637,					"argumentNames" : [ ]				},				"RSSimpleChartPopupBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlabels := Dictionary new.",						"\ticons := Dictionary new"					],					"body" : [						"super initialize.",						"labels := Dictionary new.",						"icons := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6595956,					"argumentNames" : [ ]				},				"ReCollectionProtocolRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny:",						"\t\t#( '`@collection do: [:`each | | `@temps | `@.Statements1. `@object add: `@arg. `@.Statements2]'",						"\t\t   '`@collection do: [:`each | | `@temps | ",						"\t\t\t`@.Statements1. ",						"\t\t\t`@condition ifTrue: [| `@blockTemps | ",						"\t\t\t\t\t`@.BlockStatements1. ",						"\t\t\t\t\t`@object add: `each. ",						"\t\t\t\t\t`@.BlockStatements2]. ",						"\t\t\t`@.Statements2]' '`@collection do: [:`each | | `@temps | ",						"\t\t\t`@.Statements1. ",						"\t\t\t`@condition ifFalse: [| `@blockTemps | ",						"\t\t\t\t\t`@.BlockStatements1. ",						"\t\t\t\t\t`@object add: `each. ",						"\t\t\t\t\t`@.BlockStatements2]. ",						"\t\t\t`@.Statements2]' )"					],					"body" : [						"super initialize.",						"self matchesAny:",						"\t#( '`@collection do: [:`each | | `@temps | `@.Statements1. `@object add: `@arg. `@.Statements2]'",						"\t   '`@collection do: [:`each | | `@temps | ",						"\t\t\t`@.Statements1. ",						"\t\t\t`@condition ifTrue: [| `@blockTemps | ",						"\t\t\t\t\t`@.BlockStatements1. ",						"\t\t\t\t\t`@object add: `each. ",						"\t\t\t\t\t`@.BlockStatements2]. ",						"\t\t\t`@.Statements2]' '`@collection do: [:`each | | `@temps | ",						"\t\t\t`@.Statements1. ",						"\t\t\t`@condition ifFalse: [| `@blockTemps | ",						"\t\t\t\t\t`@.BlockStatements1. ",						"\t\t\t\t\t`@object add: `each. ",						"\t\t\t\t\t`@.BlockStatements2]. ",						"\t\t\t`@.Statements2]' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4741037,					"argumentNames" : [ ]				},				"MalSccEdgeDecomposition" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbfsp := MalBreadthFirstSearchPath new"					],					"body" : [						"super initialize.",						"bfsp := MalBreadthFirstSearchPath new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2555933,					"argumentNames" : [ ]				},				"SpTablePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeTSearchable.",						"\tshowColumnHeaders := true.",						"\tcolumns := #(  ).",						"\tisResizable := false"					],					"body" : [						"super initialize.",						"self initializeTSearchable.",						"showColumnHeaders := true.",						"columns := #(  ).",						"isResizable := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3271821,					"argumentNames" : [ ]				},				"ReCollectionAtCollectionSizeRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny: #( '`@collection at: `@collection size' )"					],					"body" : [						"super initialize.",						"self matchesAny: #( '`@collection at: `@collection size' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4740013,					"argumentNames" : [ ]				},				"TextHighlightByBounds" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tcolor: Color yellow;",						"\t\tlineRange: (1 to: 0);",						"\t\tborderWidth: 0;",						"\t\tborderColor: Color transparent;",						"\t\tborderSides: #( top right bottom left );",						"\t\tfillWidth: false"					],					"body" : [						"super initialize.",						"self",						"\tcolor: Color yellow;",						"\tlineRange: (1 to: 0);",						"\tborderWidth: 0;",						"\tborderColor: Color transparent;",						"\tborderSides: #( top right bottom left );",						"\tfillWidth: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2692404,					"argumentNames" : [ ]				},				"EpLogBrowserPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tandFilter := EpAndFilter withAll: #(  )"					],					"body" : [						"super initialize.",						"",						"andFilter := EpAndFilter withAll: #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5013169,					"argumentNames" : [ ]				},				"ChooseDropListDialogWindow" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tself list: #(  ).",						"\tsuper initialize"					],					"body" : [						"self list: #(  ).",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2736315,					"argumentNames" : [ ]				},				"VTermOutputStyle" : {					"sourceCode" : [						"initialize",						"",						"\tstyles := Set new.",						"\tfont := VTermOutputFont new style: self.",						"\tbackground := VTermOutputBackground new style: self"					],					"body" : [						"styles := Set new.",						"font := VTermOutputFont new style: self.",						"background := VTermOutputBackground new style: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1967004,					"argumentNames" : [ ]				},				"RubSegmentMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tvertices := Array with: 5 @ 0 with: 20 @ 10 with: 0 @ 20.",						"\tsmoothCurve := false.",						"\tself computeBounds"					],					"body" : [						"super initialize.",						"vertices := Array with: 5 @ 0 with: 20 @ 10 with: 0 @ 20.",						"smoothCurve := false.",						"self computeBounds"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1396346,					"argumentNames" : [ ]				},				"CheckboxMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"",						"\tlabelClickable := true.",						"",						"\tself",						"\t\tborderWidth: 2;",						"\t\t\"space for focus\"borderColor: Color transparent;",						"\t\tenabled: true;",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\twrapCentering: #center;",						"\t\tcellInset: 4;",						"\t\tlabelMorph: self newLabelMorph;",						"\t\tbuttonMorph: self newButtonMorph;",						"\t\ton: #click send: #updateButton: to: self;",						"\t\ton: #mouseMove send: #updateButton: to: self;",						"\t\ton: #mouseUp send: #updateButton: to: self"					],					"body" : [						"super initialize.",						"",						"labelClickable := true.",						"",						"self",						"\tborderWidth: 2;",						"\t\"space for focus\"borderColor: Color transparent;",						"\tenabled: true;",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\twrapCentering: #center;",						"\tcellInset: 4;",						"\tlabelMorph: self newLabelMorph;",						"\tbuttonMorph: self newButtonMorph;",						"\ton: #click send: #updateButton: to: self;",						"\ton: #mouseMove send: #updateButton: to: self;",						"\ton: #mouseUp send: #updateButton: to: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2715161,					"argumentNames" : [ ]				},				"IceTipInteractiveCredentialsProvider class" : {					"sourceCode" : [						"initialize",						"",						"\tself providerType: nil"					],					"body" : [						"self providerType: nil"					],					"isTestMethod" : false,					"category" : "private",					"comment" : [ ],					"hash" : 7042468,					"argumentNames" : [ ]				},				"InflateStream class" : {					"sourceCode" : [						"initialize",						"",						"\t\"InflateStream initialize\"",						"",						"\tMaxBits := 16.",						"\tStateNewBlock := 0.",						"\tStateNoMoreData := 1.",						"\tBlockProceedBit := 8.",						"\tBlockTypes := #( processStoredBlock processFixedBlock",						"\t                 processDynamicBlock errorBadBlock proceedStoredBlock",						"\t                 proceedFixedBlock proceedDynamicBlock",						"\t                 errorBadBlock ).",						"\t\"Initialize fixed block values\"",						"\tFixedLitCodes := ((1 to: 144) collect: [ :i | 8 ])",						"\t                 , ((145 to: 256) collect: [ :i | 9 ])",						"\t                 , ((257 to: 280) collect: [ :i | 7 ])",						"\t                 , ((281 to: 288) collect: [ :i | 8 ]).",						"\tFixedDistCodes := (1 to: 32) collect: [ :i | 5 ]"					],					"body" : [						"MaxBits := 16.",						"StateNewBlock := 0.",						"StateNoMoreData := 1.",						"BlockProceedBit := 8.",						"BlockTypes := #( processStoredBlock processFixedBlock",						"                 processDynamicBlock errorBadBlock proceedStoredBlock",						"                 proceedFixedBlock proceedDynamicBlock",						"                 errorBadBlock ).",						"\"Initialize fixed block values\"",						"FixedLitCodes := ((1 to: 144) collect: [ :i | 8 ])",						"                 , ((145 to: 256) collect: [ :i | 9 ])",						"                 , ((257 to: 280) collect: [ :i | 7 ])",						"                 , ((281 to: 288) collect: [ :i | 8 ]).",						"FixedDistCodes := (1 to: 32) collect: [ :i | 5 ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"InflateStream initialize"					],					"hash" : 2133173,					"argumentNames" : [ ]				},				"WeakRegistry" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tvalueDictionary := WeakIdentityKeyDictionary new.",						"\tlist := WeakFinalizationList new.",						"\tsema := Semaphore forMutualExclusion.",						"\tself installFinalizer"					],					"body" : [						"super initialize.",						"valueDictionary := WeakIdentityKeyDictionary new.",						"list := WeakFinalizationList new.",						"sema := Semaphore forMutualExclusion.",						"self installFinalizer"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1981127,					"argumentNames" : [ ]				},				"ShSharedPoolChangeDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbuilderAccessor := [ :e | e layoutDefinition sharedPools asArray ].",						"\tclassAccessor := [ :e | ",						"\t                 (e sharedPools collect: [ :x | x name ]) asArray ]"					],					"body" : [						"super initialize.",						"builderAccessor := [ :e | e layoutDefinition sharedPools asArray ].",						"classAccessor := [ :e | ",						"                 (e sharedPools collect: [ :x | x name ]) asArray ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1618022,					"argumentNames" : [ ]				},				"ZdcAbstractSocketStream" : {					"sourceCode" : [						"initialize",						"",						"\ttimeout := 5.",						"\tdebug := false.",						"\tself initializeBuffers"					],					"body" : [						"timeout := 5.",						"debug := false.",						"self initializeBuffers"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 2223199,					"argumentNames" : [ ]				},				"PharoLightTheme" : {					"sourceCode" : [						"initialize",						"",						"\t\"self beCurrent\"",						"",						"\tsuper initialize.",						"\tself windowActiveDropShadowStyle: #diffuse.",						"\tself settings preferGradientFill: false"					],					"body" : [						"super initialize.",						"self windowActiveDropShadowStyle: #diffuse.",						"self settings preferGradientFill: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"self beCurrent"					],					"hash" : 1493853,					"argumentNames" : [ ]				},				"CmUICommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself beDisabledWhenCantBeRun.",						"\tself beDisplayedOnLeftSide"					],					"body" : [						"super initialize.",						"self beDisabledWhenCantBeRun.",						"self beDisplayedOnLeftSide"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1648675,					"argumentNames" : [ ]				},				"ShLayoutChangeDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbuilderAccessor := [ :e | e layoutDefinition layoutClass ].",						"\tclassAccessor := [ :e | e classLayout class ]"					],					"body" : [						"super initialize.",						"builderAccessor := [ :e | e layoutDefinition layoutClass ].",						"classAccessor := [ :e | e classLayout class ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1619558,					"argumentNames" : [ ]				},				"CNSelectorExtractorTest" : {					"sourceCode" : [						"initialize",						"",						"\tselectorExtractor := CNSelectorExtractor new"					],					"body" : [						"selectorExtractor := CNSelectorExtractor new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5206320,					"argumentNames" : [ ]				},				"TabManagerPresenter" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialization code for TabManagerPresenter\"",						"",						"\tsuper initialize.",						"\ttabs := OrderedCollection new asValueHolder.",						"\ttabSelectedAction := [  ] asValueHolder.",						"\tselectedTab := nil asValueHolder.",						"\tself myDependents: WeakSet new.",						"",						"\ttabs whenChangedDo: [ :new | ",						"\t\tself widget ifNotNil: [ :w | w tabs: self getTabs value ] ].",						"\tselectedTab whenChangedDo: [ :newTab | ",						"\t\ttabSelectedAction value cull: newTab cull: self ]"					],					"body" : [						"super initialize.",						"tabs := OrderedCollection new asValueHolder.",						"tabSelectedAction := [  ] asValueHolder.",						"selectedTab := nil asValueHolder.",						"self myDependents: WeakSet new.",						"",						"tabs whenChangedDo: [ :new | ",						"\tself widget ifNotNil: [ :w | w tabs: self getTabs value ] ].",						"selectedTab whenChangedDo: [ :newTab | ",						"\ttabSelectedAction value cull: newTab cull: self ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialization code for TabManagerPresenter"					],					"hash" : 1701882,					"argumentNames" : [ ]				},				"CTSlotDescriptorsVisitor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself rootDescriptor: #yourself asSlotDescriptor"					],					"body" : [						"super initialize.",						"",						"self rootDescriptor: #yourself asSlotDescriptor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3654722,					"argumentNames" : [ ]				},				"MWHandlerSuspendPlugging" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttable := Dictionary new"					],					"body" : [						"super initialize.",						"",						"table := Dictionary new"					],					"isTestMethod" : false,					"category" : "hooks",					"comment" : [ ],					"hash" : 4176922,					"argumentNames" : [ ]				},				"RSHorizontalLineLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself alignTop"					],					"body" : [						"super initialize.",						"self alignTop"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6550121,					"argumentNames" : [ ]				},				"ReJustSendsSuperRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmatcher := RBParseTreeSearcher justSendsSuper"					],					"body" : [						"super initialize.",						"matcher := RBParseTreeSearcher justSendsSuper"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4763440,					"argumentNames" : [ ]				},				"Deprecation class" : {					"sourceCode" : [						"initialize",						"",						"\tLog := nil \"#deprecationsWhile: logs all deprecations here\""					],					"body" : [						"Log := nil \"#deprecationsWhile: logs all deprecations here\""					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1730272,					"argumentNames" : [ ]				},				"CoResultSet" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tresults := OrderedCollection new.",						"\tfilter := CoFilter empty"					],					"body" : [						"super initialize.",						"results := OrderedCollection new.",						"filter := CoFilter empty"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6114205,					"argumentNames" : [ ]				},				"IceSystemEventListener class" : {					"sourceCode" : [						"initialize",						"",						"\tself registerSystemAnnouncements"					],					"body" : [						"self registerSystemAnnouncements"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 7000388,					"argumentNames" : [ ]				},				"OSEnvironment class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2397088,					"argumentNames" : [ ]				},				"ClyFullEnvironmentUpdateStrategy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tchanges := IdentitySet new"					],					"body" : [						"super initialize.",						"",						"changes := IdentitySet new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5637401,					"argumentNames" : [ ]				},				"RSAlpharo" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tperlin := NSPerlinNoise3 new octaves: 3.",						"\trandom := Random new"					],					"body" : [						"super initialize.",						"perlin := NSPerlinNoise3 new octaves: 3.",						"random := Random new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3083114,					"argumentNames" : [ ]				},				"RSPolyInterpolator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself exponent: 3"					],					"body" : [						"super initialize.",						"self exponent: 3"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6508205,					"argumentNames" : [ ]				},				"RSInspectableInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thighlightable := RSHighlightable new"					],					"body" : [						"super initialize.",						"highlightable := RSHighlightable new"					],					"isTestMethod" : false,					"category" : "hooks",					"comment" : [ ],					"hash" : 6589209,					"argumentNames" : [ ]				},				"WhereIsDebugAction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\t\"This action just updates the selection in the code editor. ",						"\tNo need to do any update or validation.\"",						"\tself needsUpdate: false.",						"\tself needsValidation: false.",						"\tself withSeparatorAfter"					],					"body" : [						"super initialize.",						"\"This action just updates the selection in the code editor. ",						"\tNo need to do any update or validation.\"",						"self needsUpdate: false.",						"self needsValidation: false.",						"self withSeparatorAfter"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3787932,					"argumentNames" : [ ]				},				"ReSuperSendsNewRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny:",						"\t\t#( 'super new initialize' '(super new: `@expr) initialize'",						"\t\t   'self new initialize' '(self new: `@expr) initialize' )"					],					"body" : [						"super initialize.",						"self matchesAny:",						"\t#( 'super new initialize' '(super new: `@expr) initialize'",						"\t   'self new initialize' '(self new: `@expr) initialize' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4747181,					"argumentNames" : [ ]				},				"SystemProgressMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlock := Semaphore forMutualExclusion.",						"\tlastRefresh := 0.",						"\tself",						"\t\tsetDefaultParameters;",						"\t\tsetProperty: #morphicLayerNumber toValue: self morphicLayerNumber;",						"\t\tlayoutPolicy: TableLayout new;",						"\t\tlistDirection: #topToBottom;",						"\t\tcellPositioning: #topCenter;",						"\t\tcellInset: 5;",						"\t\tlistCentering: #center;",						"\t\thResizing: #rigid;",						"\t\tvResizing: #shrinkWrap;",						"\t\tlayoutInset: 10 @ 6;",						"\t\tminWidth: 150.",						"\tself position: 10 @ 20"					],					"body" : [						"super initialize.",						"lock := Semaphore forMutualExclusion.",						"lastRefresh := 0.",						"self",						"\tsetDefaultParameters;",						"\tsetProperty: #morphicLayerNumber toValue: self morphicLayerNumber;",						"\tlayoutPolicy: TableLayout new;",						"\tlistDirection: #topToBottom;",						"\tcellPositioning: #topCenter;",						"\tcellInset: 5;",						"\tlistCentering: #center;",						"\thResizing: #rigid;",						"\tvResizing: #shrinkWrap;",						"\tlayoutInset: 10 @ 6;",						"\tminWidth: 150.",						"self position: 10 @ 20"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2761408,					"argumentNames" : [ ]				},				"RSVariableTimer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcurrentTime := RSDefaultTimer new currentTime"					],					"body" : [						"super initialize.",						"currentTime := RSDefaultTimer new currentTime"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6502061,					"argumentNames" : [ ]				},				"ZnCommonLogFormat" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcombined := true"					],					"body" : [						"super initialize.",						"combined := true"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 2201031,					"argumentNames" : [ ]				},				"TextAction class" : {					"sourceCode" : [						"initialize",						"",						"\t\"nil value and [] value are both nil, but sharing a block would hold on to its outer method\"",						"",						"\tActOnClickBlock := nil"					],					"body" : [						"ActOnClickBlock := nil"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"nil value and [] value are both nil, but sharing a block would hold on to its outer method"					],					"hash" : 2425568,					"argumentNames" : [ ]				},				"RBRemoveClassKeepingSubclassesRefactoring" : {					"sourceCode" : [						"initialize",						"",						"\trefactorings := OrderedCollection new"					],					"body" : [						"refactorings := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "preconditions",					"comment" : [ ],					"hash" : 3967479,					"argumentNames" : [ ]				},				"SpecTransferMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tdragHand := self activeHand"					],					"body" : [						"super initialize.",						"",						"dragHand := self activeHand"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1836431,					"argumentNames" : [ ]				},				"OSSDL2FormRenderer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdeferUpdates := false.",						"\tmutex := Mutex new"					],					"body" : [						"super initialize.",						"deferUpdates := false.",						"mutex := Mutex new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4863550,					"argumentNames" : [ ]				},				"SystemNavigation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself environment: Smalltalk globals"					],					"body" : [						"super initialize.",						"self environment: Smalltalk globals"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1946162,					"argumentNames" : [ ]				},				"ObservableValueHolder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlock := false.",						"\tsubscriptions := OrderedCollection new"					],					"body" : [						"super initialize.",						"lock := false.",						"subscriptions := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1178418,					"argumentNames" : [ ]				},				"WriteBarrierTest class" : {					"sourceCode" : [						"initialize",						"",						"\tContextInstance := Context",						"\t\t                   sender: nil",						"\t\t                   receiver: self new",						"\t\t                   method: self >> #alwaysWritableObjects",						"\t\t                   arguments: #(  )"					],					"body" : [						"ContextInstance := Context",						"\t                   sender: nil",						"\t                   receiver: self new",						"\t                   method: self >> #alwaysWritableObjects",						"\t                   arguments: #(  )"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4503883,					"argumentNames" : [ ]				},				"NECTestClass class" : {					"sourceCode" : [						"initialize",						"",						"\tClassVar := 'Any string'"					],					"body" : [						"ClassVar := 'Any string'"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 5153219,					"argumentNames" : [ ]				},				"RBBasicLintRuleTestData" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself anInstVar: 1.",						"\tclassBlock := [ :context :aResult |  ].",						"\tmethodBlock := [ :context :aResult |  ].",						"\tself resultClass: RBSelectorEnvironment"					],					"body" : [						"super initialize.",						"self anInstVar: 1.",						"classBlock := [ :context :aResult |  ].",						"methodBlock := [ :context :aResult |  ].",						"self resultClass: RBSelectorEnvironment"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4941153,					"argumentNames" : [ ]				},				"RGMetaclassStrategy" : {					"sourceCode" : [						"initialize",						"",						"\tbaseClass := RGUnresolvedValue recursive.",						"",						"\tsuper initialize"					],					"body" : [						"baseClass := RGUnresolvedValue recursive.",						"",						"super initialize"					],					"isTestMethod" : false,					"category" : "private - backend access",					"comment" : [ ],					"hash" : 6039872,					"argumentNames" : [ ]				},				"RSMouseDragging" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstep := 0 @ 0"					],					"body" : [						"super initialize.",						"step := 0 @ 0"					],					"isTestMethod" : false,					"category" : "initialize - release",					"comment" : [ ],					"hash" : 6454457,					"argumentNames" : [ ]				},				"RSChannel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tisClicked := false.",						"\tisClickable := true.",						"\tself color: self defaultColor.",						"",						"\t\"Marks must go downward\"",						"\tmarksGoUpward := false.",						"",						"\ttoggleOnCallback := toggleOffCallback := [ :aShape | \"Do nothing for now\"",						"\t                                          ]"					],					"body" : [						"super initialize.",						"isClicked := false.",						"isClickable := true.",						"self color: self defaultColor.",						"",						"\"Marks must go downward\"",						"marksGoUpward := false.",						"",						"toggleOnCallback := toggleOffCallback := [ :aShape | \"Do nothing for now\"",						"                                          ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3074187,					"argumentNames" : [ ]				},				"MenuItemPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\taction := [  ] asValueHolder.",						"\tenabled := true asValueHolder.",						"\tstate := nil asValueHolder.",						"\tdescription := nil asValueHolder.",						"\tname := '' asValueHolder.",						"\tshortcut := nil asValueHolder.",						"\tsubMenu := nil asValueHolder.",						"\tautoRefresh := false asValueHolder.",						"\ticon := nil asValueHolder"					],					"body" : [						"super initialize.",						"",						"action := [  ] asValueHolder.",						"enabled := true asValueHolder.",						"state := nil asValueHolder.",						"description := nil asValueHolder.",						"name := '' asValueHolder.",						"shortcut := nil asValueHolder.",						"subMenu := nil asValueHolder.",						"autoRefresh := false asValueHolder.",						"icon := nil asValueHolder"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1696760,					"argumentNames" : [ ]				},				"ReIsNilAndConditionalRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: '``@receiver isNil ifFalse: ``@notNilBlock'",						"\t\twith: '``@receiver ifNotNil: ``@notNilBlock';",						"\t\treplace: '``@receiver isNil ifTrue: ``@nilBlock'",						"\t\twith: '``@receiver ifNil: ``@nilBlock';",						"\t\treplace:",						"\t\t\t'``@receiver isNil ifTrue: ``@nilBlock ifFalse: ``@notNilBlock'",						"\t\twith: '``@receiver ifNil: ``@nilBlock ifNotNil: ``@notNilBlock';",						"\t\treplace:",						"\t\t\t'``@receiver isNil ifFalse: ``@notNilBlock ifTrue: ``@nilBlock'",						"\t\twith: '``@receiver ifNil: ``@nilBlock ifNotNil: ``@notNilBlock'"					],					"body" : [						"super initialize.",						"self",						"\treplace: '``@receiver isNil ifFalse: ``@notNilBlock'",						"\twith: '``@receiver ifNotNil: ``@notNilBlock';",						"\treplace: '``@receiver isNil ifTrue: ``@nilBlock'",						"\twith: '``@receiver ifNil: ``@nilBlock';",						"\treplace:",						"\t\t'``@receiver isNil ifTrue: ``@nilBlock ifFalse: ``@notNilBlock'",						"\twith: '``@receiver ifNil: ``@nilBlock ifNotNil: ``@notNilBlock';",						"\treplace:",						"\t\t'``@receiver isNil ifFalse: ``@notNilBlock ifTrue: ``@nilBlock'",						"\twith: '``@receiver ifNil: ``@nilBlock ifNotNil: ``@notNilBlock'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4734117,					"argumentNames" : [ ]				},				"RSCamera" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tposition := 0 @ 0.",						"\tscale := 1.000000.",						"\toriginMode := #center"					],					"body" : [						"super initialize.",						"position := 0 @ 0.",						"scale := 1.000000.",						"originMode := #center"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6434437,					"argumentNames" : [ ]				},				"RSShape" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpaint := Color lightGray.",						"\tisFixed := false"					],					"body" : [						"super initialize.",						"paint := Color lightGray.",						"isFixed := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6436176,					"argumentNames" : [ ]				},				"ClapCompositeMatch" : {					"sourceCode" : [						"initialize",						"",						"\tchildren := OrderedCollection new"					],					"body" : [						"children := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1189367,					"argumentNames" : [ ]				},				"ZnBufferedReadStream" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tposition := 1.",						"\tlimit := 0"					],					"body" : [						"super initialize.",						"position := 1.",						"limit := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1991914,					"argumentNames" : [ ]				},				"MemoryStore class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self initialize"					],					"hash" : 2229408,					"argumentNames" : [ ]				},				"OmFuelEntryReader" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmaterializer := FLMaterializer new"					],					"body" : [						"super initialize.",						"materializer := FLMaterializer new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4967451,					"argumentNames" : [ ]				},				"NSPerlinNoise2" : {					"sourceCode" : [						"initialize",						"",						"\t| permutation |",						"\tsuper initialize.",						"\tp := Dictionary new.",						"\tpermutation := #( 151 160 137 91 90 15 131 13 201 95 96 53 194 233",						"\t                  7 225 140 36 103 30 69 142 8 99 37 240 21 10 23 190",						"\t                  6 148 247 120 234 75 0 26 197 62 94 252 219 203 117",						"\t                  35 11 32 57 177 33 88 237 149 56 87 174 20 125 136",						"\t                  171 168 68 175 74 165 71 134 139 48 27 166 77 146",						"\t                  158 231 83 111 229 122 60 211 133 230 220 105 92 41",						"\t                  55 46 245 40 244 102 143 54 65 25 63 161 1 216 80",						"\t                  73 209 76 132 187 208 89 18 169 200 196 135 130 116",						"\t                  188 159 86 164 100 109 198 173 186 3 64 52 217 226",						"\t                  250 124 123 5 202 38 147 118 126 255 82 85 212 207",						"\t                  206 59 227 47 16 58 17 182 189 28 42 223 183 170",						"\t                  213 119 248 152 2 44 154 163 70 221 153 101 155 167",						"\t                  43 172 9 129 22 39 253 19 98 108 110 79 113 224 232",						"\t                  178 185 112 104 218 246 97 228 251 34 242 193 238",						"\t                  210 144 12 191 179 162 241 81 51 145 235 249 14 239",						"\t                  107 49 192 214 31 181 199 106 157 184 84 204 176",						"\t                  115 121 50 45 127 4 150 254 138 236 205 93 222 114",						"\t                  67 29 24 72 243 141 128 195 78 66 215 61 156 180 ).",						"\t0 to: 255 do: [ :i | ",						"\tp at: 256 + i put: (p at: i put: (permutation at: i + 1)) ]"					],					"body" : [						"| permutation |",						"super initialize.",						"p := Dictionary new.",						"permutation := #( 151 160 137 91 90 15 131 13 201 95 96 53 194 233 7 225",						"                  140 36 103 30 69 142 8 99 37 240 21 10 23 190 6 148",						"                  247 120 234 75 0 26 197 62 94 252 219 203 117 35 11",						"                  32 57 177 33 88 237 149 56 87 174 20 125 136 171 168",						"                  68 175 74 165 71 134 139 48 27 166 77 146 158 231",						"                  83 111 229 122 60 211 133 230 220 105 92 41 55 46 245",						"                  40 244 102 143 54 65 25 63 161 1 216 80 73 209 76 132",						"                  187 208 89 18 169 200 196 135 130 116 188 159 86 164",						"                  100 109 198 173 186 3 64 52 217 226 250 124 123 5 202",						"                  38 147 118 126 255 82 85 212 207 206 59 227 47 16 58",						"                  17 182 189 28 42 223 183 170 213 119 248 152 2 44 154",						"                  163 70 221 153 101 155 167 43 172 9 129 22 39 253",						"                  19 98 108 110 79 113 224 232 178 185 112 104 218 246",						"                  97 228 251 34 242 193 238 210 144 12 191 179 162 241",						"                  81 51 145 235 249 14 239 107 49 192 214 31 181 199",						"                  106 157 184 84 204 176 115 121 50 45 127 4 150 254",						"                  138 236 205 93 222 114 67 29 24 72 243 141 128 195",						"                  78 66 215 61 156 180 ).",						"0 to: 255 do: [ :i | ",						"p at: 256 + i put: (p at: i put: (permutation at: i + 1)) ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6954035,					"argumentNames" : [ ]				},				"FT2FFILibrary class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tErrorCodeTable := { ",						"\t\t                  (16r00 -> 'no error').",						"\t\t                  (16r01 -> 'cannot open resource').",						"\t\t                  (16r02 -> 'unknown file format').",						"\t\t                  (16r03 -> 'broken file').",						"\t\t                  (16r04 -> 'invalid FreeType version').",						"\t\t                  (16r05 -> 'module version is too low').",						"\t\t                  (16r06 -> 'invalid argument').",						"\t\t                  (16r07 -> 'unimplemented feature').",						"\t\t                  (16r08 -> 'broken table').",						"\t\t                  (16r09 -> 'broken offset within table').",						"\t\t                  (16r0A -> 'array allocation size too large').",						"\t\t                  (16r0B -> 'missing module').",						"\t\t                  (16r0C -> 'missing property').",						"",						"",						"\t\t                  (16r10 -> 'invalid glyph index').",						"\t\t                  (16r11 -> 'invalid character code').",						"\t\t                  (16r12 -> 'unsupported glyph image format').",						"\t\t                  (16r13 -> 'cannot render this glyph format').",						"\t\t                  (16r14 -> 'invalid outline').",						"\t\t                  (16r15 -> 'invalid composite glyph').",						"\t\t                  (16r16 -> 'too many hints').",						"\t\t                  (16r17 -> 'invalid pixel size').",						"",						"",						"\t\t                  (16r20 -> 'invalid object handle').",						"\t\t                  (16r21 -> 'invalid library handle').",						"\t\t                  (16r22 -> 'invalid module handle').",						"\t\t                  (16r23 -> 'invalid face handle').",						"\t\t                  (16r24 -> 'invalid size handle').",						"\t\t                  (16r25 -> 'invalid glyph slot handle').",						"\t\t                  (16r26 -> 'invalid charmap handle').",						"\t\t                  (16r27 -> 'invalid cache manager handle').",						"\t\t                  (16r28 -> 'invalid stream handle').",						"",						"",						"\t\t                  (16r30 -> 'too many modules').",						"\t\t                  (16r31 -> 'too many extensions').",						"",						"",						"\t\t                  (16r40 -> 'out of memory').",						"\t\t                  (16r41 -> 'unlisted object').",						"",						"",						"\t\t                  (16r51 -> 'cannot open stream').",						"\t\t                  (16r52 -> 'invalid stream seek').",						"\t\t                  (16r53 -> 'invalid stream skip').",						"\t\t                  (16r54 -> 'invalid stream read').",						"\t\t                  (16r55 -> 'invalid stream operation').",						"\t\t                  (16r56 -> 'invalid frame operation').",						"\t\t                  (16r57 -> 'nested frame access').",						"\t\t                  (16r58 -> 'invalid frame read').",						"",						"",						"\t\t                  (16r60 -> 'raster uninitialized').",						"\t\t                  (16r61 -> 'raster corrupted').",						"\t\t                  (16r62 -> 'raster overflow').",						"\t\t                  (16r63 -> 'negative height while rastering').",						"",						"",						"\t\t                  (16r70 -> 'too many registered caches').",						"",						"",						"\t\t                  (16r80 -> 'invalid opcode').",						"\t\t                  (16r81 -> 'too few arguments').",						"\t\t                  (16r82 -> 'stack overflow').",						"\t\t                  (16r83 -> 'code overflow').",						"\t\t                  (16r84 -> 'bad argument').",						"\t\t                  (16r85 -> 'division by zero').",						"\t\t                  (16r86 -> 'invalid reference').",						"\t\t                  (16r87 -> 'found debug opcode').",						"\t\t                  (16r88 -> 'found ENDF opcode in execution stream').",						"\t\t                  (16r89 -> 'nested DEFS').",						"\t\t                  (16r8A -> 'invalid code range').",						"\t\t                  (16r8B -> 'execution context too long').",						"\t\t                  (16r8C -> 'too many function definitions').",						"\t\t                  (16r8D -> 'too many instruction definitions').",						"\t\t                  (16r8E -> 'SFNT font table missing').",						"\t\t                  (16r8F -> 'horizontal header (hhea. table missing').",						"\t\t                  (16r90 -> 'locations (loca. table missing').",						"\t\t                  (16r91 -> 'name table missing').",						"\t\t                  (16r92 -> 'character map (cmap. table missing').",						"\t\t                  (16r93",						"\t\t                   -> 'horizontal metrics (hmtx. table missing').",						"\t\t                  (16r94 -> 'PostScript (post. table missing').",						"\t\t                  (16r95 -> 'invalid horizontal metrics').",						"\t\t                  (16r96 -> 'invalid character map (cmap. format').",						"\t\t                  (16r97 -> 'invalid ppem value').",						"\t\t                  (16r98 -> 'invalid vertical metrics').",						"\t\t                  (16r99 -> 'could not find context').",						"\t\t                  (16r9A -> 'invalid PostScript (post. table format').",						"\t\t                  (16r9B -> 'invalid PostScript (post. table').",						"\t\t                  (16r9C",						"\t\t                   -> 'found FDEF or IDEF opcode in glyf bytecode').",						"\t\t                  (16r9D -> 'missing bitmap in strike').",						"",						"",						"\t\t                  (16rA0 -> 'opcode syntax error').",						"\t\t                  (16rA1 -> 'argument stack underflow').",						"\t\t                  (16rA2 -> 'ignore').",						"\t\t                  (16rA3 -> 'no Unicode glyph name found').",						"\t\t                  (16rA4 -> 'glyph too big for hinting').",						"",						"",						"\t\t                  (16rB0 -> 'STARTFONT field missing').",						"\t\t                  (16rB1 -> 'FONT field missing').",						"\t\t                  (16rB2 -> 'SIZE field missing').",						"\t\t                  (16rB3 -> 'FONTBOUNDINGBOX field missing').",						"\t\t                  (16rB4 -> 'CHARS field missing').",						"\t\t                  (16rB5 -> 'STARTCHAR field missing').",						"\t\t                  (16rB6 -> 'ENCODING field missing').",						"\t\t                  (16rB7 -> 'BBX field missing').",						"\t\t                  (16rB8 -> 'BBX too big').",						"\t\t                  (16rB9",						"\t\t                   -> 'Font header corrupted or missing fields').",						"\t\t                  (16rBA",						"\t\t                   -> 'Font glyphs corrupted or missing fields') }",						"\t\t                  asDictionary"					],					"body" : [						"ErrorCodeTable := { ",						"\t                  (16r00 -> 'no error').",						"\t                  (16r01 -> 'cannot open resource').",						"\t                  (16r02 -> 'unknown file format').",						"\t                  (16r03 -> 'broken file').",						"\t                  (16r04 -> 'invalid FreeType version').",						"\t                  (16r05 -> 'module version is too low').",						"\t                  (16r06 -> 'invalid argument').",						"\t                  (16r07 -> 'unimplemented feature').",						"\t                  (16r08 -> 'broken table').",						"\t                  (16r09 -> 'broken offset within table').",						"\t                  (16r0A -> 'array allocation size too large').",						"\t                  (16r0B -> 'missing module').",						"\t                  (16r0C -> 'missing property').",						"",						"",						"\t                  (16r10 -> 'invalid glyph index').",						"\t                  (16r11 -> 'invalid character code').",						"\t                  (16r12 -> 'unsupported glyph image format').",						"\t                  (16r13 -> 'cannot render this glyph format').",						"\t                  (16r14 -> 'invalid outline').",						"\t                  (16r15 -> 'invalid composite glyph').",						"\t                  (16r16 -> 'too many hints').",						"\t                  (16r17 -> 'invalid pixel size').",						"",						"",						"\t                  (16r20 -> 'invalid object handle').",						"\t                  (16r21 -> 'invalid library handle').",						"\t                  (16r22 -> 'invalid module handle').",						"\t                  (16r23 -> 'invalid face handle').",						"\t                  (16r24 -> 'invalid size handle').",						"\t                  (16r25 -> 'invalid glyph slot handle').",						"\t                  (16r26 -> 'invalid charmap handle').",						"\t                  (16r27 -> 'invalid cache manager handle').",						"\t                  (16r28 -> 'invalid stream handle').",						"",						"",						"\t                  (16r30 -> 'too many modules').",						"\t                  (16r31 -> 'too many extensions').",						"",						"",						"\t                  (16r40 -> 'out of memory').",						"\t                  (16r41 -> 'unlisted object').",						"",						"",						"\t                  (16r51 -> 'cannot open stream').",						"\t                  (16r52 -> 'invalid stream seek').",						"\t                  (16r53 -> 'invalid stream skip').",						"\t                  (16r54 -> 'invalid stream read').",						"\t                  (16r55 -> 'invalid stream operation').",						"\t                  (16r56 -> 'invalid frame operation').",						"\t                  (16r57 -> 'nested frame access').",						"\t                  (16r58 -> 'invalid frame read').",						"",						"",						"\t                  (16r60 -> 'raster uninitialized').",						"\t                  (16r61 -> 'raster corrupted').",						"\t                  (16r62 -> 'raster overflow').",						"\t                  (16r63 -> 'negative height while rastering').",						"",						"",						"\t                  (16r70 -> 'too many registered caches').",						"",						"",						"\t                  (16r80 -> 'invalid opcode').",						"\t                  (16r81 -> 'too few arguments').",						"\t                  (16r82 -> 'stack overflow').",						"\t                  (16r83 -> 'code overflow').",						"\t                  (16r84 -> 'bad argument').",						"\t                  (16r85 -> 'division by zero').",						"\t                  (16r86 -> 'invalid reference').",						"\t                  (16r87 -> 'found debug opcode').",						"\t                  (16r88 -> 'found ENDF opcode in execution stream').",						"\t                  (16r89 -> 'nested DEFS').",						"\t                  (16r8A -> 'invalid code range').",						"\t                  (16r8B -> 'execution context too long').",						"\t                  (16r8C -> 'too many function definitions').",						"\t                  (16r8D -> 'too many instruction definitions').",						"\t                  (16r8E -> 'SFNT font table missing').",						"\t                  (16r8F -> 'horizontal header (hhea. table missing').",						"\t                  (16r90 -> 'locations (loca. table missing').",						"\t                  (16r91 -> 'name table missing').",						"\t                  (16r92 -> 'character map (cmap. table missing').",						"\t                  (16r93 -> 'horizontal metrics (hmtx. table missing').",						"\t                  (16r94 -> 'PostScript (post. table missing').",						"\t                  (16r95 -> 'invalid horizontal metrics').",						"\t                  (16r96 -> 'invalid character map (cmap. format').",						"\t                  (16r97 -> 'invalid ppem value').",						"\t                  (16r98 -> 'invalid vertical metrics').",						"\t                  (16r99 -> 'could not find context').",						"\t                  (16r9A -> 'invalid PostScript (post. table format').",						"\t                  (16r9B -> 'invalid PostScript (post. table').",						"\t                  (16r9C",						"\t                   -> 'found FDEF or IDEF opcode in glyf bytecode').",						"\t                  (16r9D -> 'missing bitmap in strike').",						"",						"",						"\t                  (16rA0 -> 'opcode syntax error').",						"\t                  (16rA1 -> 'argument stack underflow').",						"\t                  (16rA2 -> 'ignore').",						"\t                  (16rA3 -> 'no Unicode glyph name found').",						"\t                  (16rA4 -> 'glyph too big for hinting').",						"",						"",						"\t                  (16rB0 -> 'STARTFONT field missing').",						"\t                  (16rB1 -> 'FONT field missing').",						"\t                  (16rB2 -> 'SIZE field missing').",						"\t                  (16rB3 -> 'FONTBOUNDINGBOX field missing').",						"\t                  (16rB4 -> 'CHARS field missing').",						"\t                  (16rB5 -> 'STARTCHAR field missing').",						"\t                  (16rB6 -> 'ENCODING field missing').",						"\t                  (16rB7 -> 'BBX field missing').",						"\t                  (16rB8 -> 'BBX too big').",						"\t                  (16rB9 -> 'Font header corrupted or missing fields').",						"\t                  (16rBA -> 'Font glyphs corrupted or missing fields') }",						"\t                  asDictionary"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self initialize"					],					"hash" : 2698122,					"argumentNames" : [ ]				},				"SearchMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself convertTo: String.",						"\tlist := OrderedCollection new.",						"\tself useSelectionIndex: false.",						"\tself ghostText: 'Hit return to accept' translated"					],					"body" : [						"super initialize.",						"self convertTo: String.",						"list := OrderedCollection new.",						"self useSelectionIndex: false.",						"self ghostText: 'Hit return to accept' translated"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2718454,					"argumentNames" : [ ]				},				"OmDeferrer class" : {					"sourceCode" : [						"initialize",						"",						"\t\"",						"\tself initialize",						"\t\"",						"",						"\tSessionManager default registerUserClassNamed: self name"					],					"body" : [						"SessionManager default registerUserClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"",						"\tself initialize",						"\t"					],					"hash" : 4965536,					"argumentNames" : [ ]				},				"HEPackage" : {					"sourceCode" : [						"initialize",						"",						"\tversion := self class formatVersion.",						"\tclasses := OrderedCollection new.",						"\ttraits := OrderedCollection new.",						"",						"\textensionMethods := OrderedCollection new"					],					"body" : [						"version := self class formatVersion.",						"classes := OrderedCollection new.",						"traits := OrderedCollection new.",						"",						"extensionMethods := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1788140,					"argumentNames" : [ ]				},				"IceTipSpCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself configureAsToolbarButton"					],					"body" : [						"super initialize.",						"self configureAsToolbarButton"					],					"isTestMethod" : false,					"category" : "presenter building",					"comment" : [ ],					"hash" : 7150185,					"argumentNames" : [ ]				},				"VariableBreakpointMockClass" : {					"sourceCode" : [						"initialize",						"",						"\tv1 := 0"					],					"body" : [						"v1 := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4326054,					"argumentNames" : [ ]				},				"Random" : {					"sourceCode" : [						"initialize",						"",						"\tself useClockBasedSeed.",						"\ta := 16r000041A7 asFloat. \" magic constant =      16807 = 7^5\"",						"\tm := 16r7FFFFFFF asFloat. \" magic constant = 2147483647 = 2^31 - 1\"",						"\tq := (m quo: a) asFloat.",						"\tr := (m \\\\ a) asFloat"					],					"body" : [						"self useClockBasedSeed.",						"a := 16r000041A7 asFloat. \" magic constant =      16807 = 7^5\"",						"m := 16r7FFFFFFF asFloat. \" magic constant = 2147483647 = 2^31 - 1\"",						"q := (m quo: a) asFloat.",						"r := (m \\\\ a) asFloat"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1901330,					"argumentNames" : [ ]				},				"SHA1 class" : {					"sourceCode" : [						"initialize",						"",						"\t\"SecureHashAlgorithm initialize\"",						"",						"\t\"For the curious, here's where these constants come from:",						"\t  #(2 3 5 10) collect: [:x | ((x sqrt / 4.0) * (2.0 raisedTo: 32)) truncated hex]\"",						"",						"\tK1 := ThirtyTwoBitRegister new load: 1518500249.",						"\tK2 := ThirtyTwoBitRegister new load: 1859775393.",						"\tK3 := ThirtyTwoBitRegister new load: 2400959708.",						"\tK4 := ThirtyTwoBitRegister new load: 3395469782"					],					"body" : [						"K1 := ThirtyTwoBitRegister new load: 1518500249.",						"K2 := ThirtyTwoBitRegister new load: 1859775393.",						"K3 := ThirtyTwoBitRegister new load: 2400959708.",						"K4 := ThirtyTwoBitRegister new load: 3395469782"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"SecureHashAlgorithm initialize"					],					"hash" : 1909045,					"argumentNames" : [ ]				},				"MemoryLogger" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmutex := Mutex new.",						"\tself reset.",						"\tannouncer := Announcer new"					],					"body" : [						"super initialize.",						"mutex := Mutex new.",						"self reset.",						"announcer := Announcer new"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 1182021,					"argumentNames" : [ ]				},				"TKTParameterizableService" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself step: [ 100 milliSeconds wait ]"					],					"body" : [						"super initialize.",						"self step: [ 100 milliSeconds wait ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1213832,					"argumentNames" : [ ]				},				"LogicalFontManager" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfontProviders := OrderedCollection new: 10"					],					"body" : [						"super initialize.",						"fontProviders := OrderedCollection new: 10"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2637902,					"argumentNames" : [ ]				},				"AthensTextScanner" : {					"sourceCode" : [						"initialize",						"",						"\tlines := OrderedCollection new.",						"\tcurrentAttributes := #(  )"					],					"body" : [						"lines := OrderedCollection new.",						"currentAttributes := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2363893,					"argumentNames" : [ ]				},				"IceTipMergeSelectingPanel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcheckedIceNodes := Set new.",						"\tself model treeRoots do: [ :root | ",						"\t\troot withAllChildrenDo: [ :child | ",						"\t\t\tcheckedIceNodes add: child.",						"\t\t\tchild value isConflict ifTrue: [ child value selectLeft ] ] ]"					],					"body" : [						"super initialize.",						"checkedIceNodes := Set new.",						"self model treeRoots do: [ :root | ",						"\troot withAllChildrenDo: [ :child | ",						"\t\tcheckedIceNodes add: child.",						"\t\tchild value isConflict ifTrue: [ child value selectLeft ] ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7109172,					"argumentNames" : [ ]				},				"OmSessionStore class" : {					"sourceCode" : [						"initialize",						"",						"\tregistry := WeakSet new: 5.",						"\tSessionManager default registerUserClassNamed: self name"					],					"body" : [						"registry := WeakSet new: 5.",						"SessionManager default registerUserClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4975226,					"argumentNames" : [ ]				},				"MorphHandlingMiddleButton" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\treceivedBlueButtonUp := receivedBlueButtonDown := false"					],					"body" : [						"super initialize.",						"receivedBlueButtonUp := receivedBlueButtonDown := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3895498,					"argumentNames" : [ ]				},				"ZipArchiveMember" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlastModFileDateTime := DateAndTime epoch.",						"\tfileAttributeFormat := FaUnix.",						"\tself versionMadeBy: 20. \"Dos-compatible file attributes; ZIP v. 2.0. See comment for #versionMadeBy\"",						"\tself versionNeededToExtract: 20. \"ZIP v. 2.0. See comment for #versionNeededToExtract\"",						"\tself bitFlag: 0.",						"\tcompressionMethod := CompressionStored.",						"\tdesiredCompressionMethod := CompressionDeflated.",						"\tdesiredCompressionLevel := CompressionLevelDefault.",						"\tinternalFileAttributes := 0.",						"\texternalFileAttributes := 0.",						"\tfileName := ''.",						"\tcdExtraField := ''.",						"\tlocalExtraField := ''.",						"\tfileComment := ''.",						"\tcrc32 := 0.",						"\tcompressedSize := 0.",						"\tuncompressedSize := 0.",						"\tself unixFileAttributes: DefaultFilePermissions"					],					"body" : [						"super initialize.",						"lastModFileDateTime := DateAndTime epoch.",						"fileAttributeFormat := FaUnix.",						"self versionMadeBy: 20. \"Dos-compatible file attributes; ZIP v. 2.0. See comment for #versionMadeBy\"",						"self versionNeededToExtract: 20. \"ZIP v. 2.0. See comment for #versionNeededToExtract\"",						"self bitFlag: 0.",						"compressionMethod := CompressionStored.",						"desiredCompressionMethod := CompressionDeflated.",						"desiredCompressionLevel := CompressionLevelDefault.",						"internalFileAttributes := 0.",						"externalFileAttributes := 0.",						"fileName := ''.",						"cdExtraField := ''.",						"localExtraField := ''.",						"fileComment := ''.",						"crc32 := 0.",						"compressedSize := 0.",						"uncompressedSize := 0.",						"self unixFileAttributes: DefaultFilePermissions"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2140448,					"argumentNames" : [ ]				},				"SpMorphicPaginatorAdapter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeTBackendUpdating"					],					"body" : [						"super initialize.",						"self initializeTBackendUpdating"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3405161,					"argumentNames" : [ ]				},				"DynamicComposablePresenter" : {					"sourceCode" : [						"initialize",						"",						"\twidgets := OrderedIdentityDictionary new asValueHolder.",						"\tlayout := nil asValueHolder.",						"\tsuper initialize"					],					"body" : [						"widgets := OrderedIdentityDictionary new asValueHolder.",						"layout := nil asValueHolder.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1714631,					"argumentNames" : [ ]				},				"ClyNotebookMorph" : {					"sourceCode" : [						"initialize",						"",						"\ttoolbarMorph := self newToolbarMorph.",						"\tsuper initialize"					],					"body" : [						"toolbarMorph := self newToolbarMorph.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5894294,					"argumentNames" : [ ]				},				"Bitmap class" : {					"sourceCode" : [						"initialize",						"",						"\tSmalltalk specialObjectsArray at: 5 put: self"					],					"body" : [						"Smalltalk specialObjectsArray at: 5 put: self"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1263117,					"argumentNames" : [ ]				},				"SpecDialogWindow" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself beResizeable"					],					"body" : [						"super initialize.",						"",						"self beResizeable"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 1828713,					"argumentNames" : [ ]				},				"RBSimpleFormatter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlineStart := 0.",						"\tself indent: 0.",						"\tcodeStream := (String new: 256) writeStream"					],					"body" : [						"super initialize.",						"lineStart := 0.",						"self indent: 0.",						"codeStream := (String new: 256) writeStream"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1947164,					"argumentNames" : [ ]				},				"TestWorkingSession" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\terrors := OrderedCollection new"					],					"body" : [						"super initialize.",						"errors := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5190686,					"argumentNames" : [ ]				},				"RSScrollBarsCanvasInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeShape"					],					"body" : [						"super initialize.",						"self initializeShape"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6518121,					"argumentNames" : [ ]				},				"RGChunkImporter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tenvironment := RGEnvironment new.",						"\tpackage := RGPackageDefinition named: 'ChangeSet'.",						"\tdoIts := Set new"					],					"body" : [						"super initialize.",						"environment := RGEnvironment new.",						"package := RGPackageDefinition named: 'ChangeSet'.",						"doIts := Set new"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 6065745,					"argumentNames" : [ ]				},				"CoTypeInferencer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlevel := 3.",						"\targuments := #(  ).",						"\targumentVariables := Dictionary new.",						"\ttemporaryVariables := Dictionary new.",						"\tvariables := Dictionary new.",						"\treturnType := OrderedCollection new.",						"\treturnType add: CoUnknownType new"					],					"body" : [						"super initialize.",						"level := 3.",						"arguments := #(  ).",						"argumentVariables := Dictionary new.",						"temporaryVariables := Dictionary new.",						"variables := Dictionary new.",						"returnType := OrderedCollection new.",						"returnType add: CoUnknownType new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6124140,					"argumentNames" : [ ]				},				"Job" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmin := 0.",						"\tmax := 100.",						"\tcurrentValue := 0.",						"\ttitle := ''.",						"\tisRunning := false.",						"\tchildren := OrderedCollection new"					],					"body" : [						"super initialize.",						"min := 0.",						"max := 100.",						"currentValue := 0.",						"title := ''.",						"isRunning := false.",						"children := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1997941,					"argumentNames" : [ ]				},				"DockingBarMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the receiver\"",						"",						"\tsuper initialize.",						"\t\"\"",						"\tfillsOwner := true.",						"\tavoidVisibleBordersAtEdge := true.",						"\tautoGradient := self wantsGradientByDefault.",						"\tself color: self defaultColor. \"<= This is done in the super initialize but we need to use the setter in this class\"",						"\t\"\"",						"\tself beFloating.",						"\t\"\"",						"\tself layoutInset: 0"					],					"body" : [						"super initialize.",						"\"\"",						"fillsOwner := true.",						"avoidVisibleBordersAtEdge := true.",						"autoGradient := self wantsGradientByDefault.",						"self color: self defaultColor. \"<= This is done in the super initialize but we need to use the setter in this class\"",						"\"\"",						"self beFloating.",						"\"\"",						"self layoutInset: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the receiver"					],					"hash" : 2703273,					"argumentNames" : [ ]				},				"SessionCategory" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpriorityLists := Dictionary new"					],					"body" : [						"super initialize.",						"priorityLists := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1606682,					"argumentNames" : [ ]				},				"GroupWindowMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Add the tab group with an inital workspace.\"",						"",						"\tsuper initialize.",						"\tself changeProportionalLayout.",						"\tself tabGroup: self newTabGroup.",						"\tself tabGroup tabSelectorMorph addDependent: self.",						"\tself",						"\t\tdropEnabled: true;",						"\t\taddMorph: self tabGroup fullFrame: LayoutFrame identity.",						"\tself tabGroup color: Color transparent"					],					"body" : [						"super initialize.",						"self changeProportionalLayout.",						"self tabGroup: self newTabGroup.",						"self tabGroup tabSelectorMorph addDependent: self.",						"self",						"\tdropEnabled: true;",						"\taddMorph: self tabGroup fullFrame: LayoutFrame identity.",						"self tabGroup color: Color transparent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Add the tab group with an inital workspace."					],					"hash" : 1376543,					"argumentNames" : [ ]				},				"MalLongestPath" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmaxIterations := -1.",						"\tpreviousRanks := OrderedCollection new"					],					"body" : [						"super initialize.",						"maxIterations := -1.",						"previousRanks := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2554655,					"argumentNames" : [ ]				},				"ReSearchingLiteralRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny: #( '``@object = `#literal or: [``@expression]'",						"\t\t   '``@object == `#literal or: [``@expression]'",						"\t\t   '`#literal = ``@object or: [``@expression]'",						"\t\t   '`#literal == ``@object or: [``@expression]'",						"\t\t   '``@expression | (``@object = `#literal)'",						"\t\t   '``@expression | (``@object == `#literal)'",						"\t\t   '``@expression | (`#literal = ``@object)'",						"\t\t   '``@expression | (`#literal == ``@object)' )"					],					"body" : [						"super initialize.",						"self matchesAny: #( '``@object = `#literal or: [``@expression]'",						"\t   '``@object == `#literal or: [``@expression]'",						"\t   '`#literal = ``@object or: [``@expression]'",						"\t   '`#literal == ``@object or: [``@expression]'",						"\t   '``@expression | (``@object = `#literal)'",						"\t   '``@expression | (``@object == `#literal)'",						"\t   '``@expression | (`#literal = ``@object)'",						"\t   '``@expression | (`#literal == ``@object)' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4745645,					"argumentNames" : [ ]				},				"InteractiveResolver" : {					"sourceCode" : [						"initialize",						"",						"\tself flushLocalCache"					],					"body" : [						"self flushLocalCache"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2077252,					"argumentNames" : [ ]				},				"GreatestCommonDivisor" : {					"sourceCode" : [						"initialize",						"",						"\t| eq quoRemClass |",						"\tquoRemClass := QuoRemMinimal.",						"\teq := quoRemClass a: a b: b.",						"",						"\tequations := OrderedCollection with: eq.",						"",						"\t[ eq rem abs > 0 ] whileTrue: [ ",						"\t\teq := quoRemClass a: eq b b: eq rem abs.",						"\t\tequations add: eq ].",						"",						"\tquo := eq quo.",						"\trem := eq rem.",						"",						"\tratio := eq b.",						"",						"\tpoint := equations size > 1",						"\t\t         ifTrue: [ ",						"\t\t\t         | eqs |",						"\t\t\t         eqs := equations allButLast.",						"\t\t\t         eqs allButLast",						"\t\t\t\t         foldr: [ :each :aPoint | ",						"\t\t\t\t\t         | currentPoint |",						"\t\t\t\t\t         currentPoint := aPoint y * each asPointWithRespectToRem.",						"\t\t\t\t\t         currentPoint x @ (aPoint x + currentPoint y) ]",						"\t\t\t\t         init: eqs last asPointWithRespectToRem ]",						"\t\t         ifFalse: [ 0 @ 1 ]"					],					"body" : [						"| eq quoRemClass |",						"quoRemClass := QuoRemMinimal.",						"eq := quoRemClass a: a b: b.",						"",						"equations := OrderedCollection with: eq.",						"",						"[ eq rem abs > 0 ] whileTrue: [ ",						"\teq := quoRemClass a: eq b b: eq rem abs.",						"\tequations add: eq ].",						"",						"quo := eq quo.",						"rem := eq rem.",						"",						"ratio := eq b.",						"",						"point := equations size > 1",						"\t         ifTrue: [ ",						"\t\t         | eqs |",						"\t\t         eqs := equations allButLast.",						"\t\t         eqs allButLast",						"\t\t\t         foldr: [ :each :aPoint | ",						"\t\t\t\t         | currentPoint |",						"\t\t\t\t         currentPoint := aPoint y * each asPointWithRespectToRem.",						"\t\t\t\t         currentPoint x @ (aPoint x + currentPoint y) ]",						"\t\t\t         init: eqs last asPointWithRespectToRem ]",						"\t         ifFalse: [ 0 @ 1 ]"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 3903534,					"argumentNames" : [ ]				},				"IceCredentialsProvider" : {					"sourceCode" : [						"initialize",						"",						"\ttries := 0"					],					"body" : [						"tries := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6971814,					"argumentNames" : [ ]				},				"BalloonMorph class" : {					"sourceCode" : [						"initialize",						"",						"\tself setBalloonColorTo: self defaultBalloonColor.",						"\tself balloonFont: StandardFonts defaultFont"					],					"body" : [						"self setBalloonColorTo: self defaultBalloonColor.",						"self balloonFont: StandardFonts defaultFont"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2752697,					"argumentNames" : [ ]				},				"DADependencyReport" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdependencies := Dictionary new.",						"\twarnings := Set new"					],					"body" : [						"super initialize.",						"dependencies := Dictionary new.",						"warnings := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2573700,					"argumentNames" : [ ]				},				"ClyDataSourceUpdateScheduler" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tupdateQueue := AtomicSharedQueue new"					],					"body" : [						"super initialize.",						"",						"updateQueue := AtomicSharedQueue new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5902361,					"argumentNames" : [ ]				},				"RBBlockNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\targuments := #(  ).",						"\tcolons := #(  ).",						"\tleft := 0.",						"\tright := 0"					],					"body" : [						"super initialize.",						"",						"arguments := #(  ).",						"colons := #(  ).",						"left := 0.",						"right := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1976797,					"argumentNames" : [ ]				},				"RGAbstractContainer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\telements := IdentityDictionary new"					],					"body" : [						"super initialize.",						"elements := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2127643,					"argumentNames" : [ ]				},				"RSAttachPoint" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tinverted := false"					],					"body" : [						"super initialize.",						"inverted := false"					],					"isTestMethod" : false,					"category" : "public - hooks",					"comment" : [ ],					"hash" : 6476744,					"argumentNames" : [ ]				},				"FFITestPointerStructure class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self rebuildFieldAccessors\"",						"",						"\t"					],					"body" : [ ],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self rebuildFieldAccessors"					],					"hash" : 2440584,					"argumentNames" : [ ]				},				"RSSunburstExtentLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself extent: 500 @ 500"					],					"body" : [						"super initialize.",						"self extent: 500 @ 500"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6583099,					"argumentNames" : [ ]				},				"StringMorphAttributeScanner" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\temphasis := 0.",						"\tindent := 0.",						"\tkern := 0.",						"\tfontNumber := 1.",						"\tactualFont := TextStyle defaultFont"					],					"body" : [						"super initialize.",						"emphasis := 0.",						"indent := 0.",						"kern := 0.",						"fontNumber := 1.",						"actualFont := TextStyle defaultFont"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2681002,					"argumentNames" : [ ]				},				"RSBorderAttachPoint" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\toffset := 5"					],					"body" : [						"super initialize.",						"offset := 5"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6478255,					"argumentNames" : [ ]				},				"CoFetcher" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tfilter := CoFilter empty"					],					"body" : [						"super initialize.",						"",						"filter := CoFilter empty"					],					"isTestMethod" : false,					"category" : "private",					"comment" : [ ],					"hash" : 6100529,					"argumentNames" : [ ]				},				"SelectRuleBrowser" : {					"sourceCode" : [						"initialize",						"",						"\t| wrappingBlock selectedRulesChildrenBlock rulesToSelectChildrenBlock |",						"\tsuper initialize.",						"\ttoSelectModel := self instantiate: TreePresenter.",						"\tselectedModel := self instantiate: TreePresenter.",						"\tselectedRules := Set new.",						"\tselectedRulesChildrenBlock := [ :rule | ",						"\t                              rule isComposite",						"\t\t                              ifTrue: [ ",						"\t\t\t                              rule rules select: [ :r | ",						"\t\t\t\t                              (self isSelected: r) or: [ ",						"\t\t\t\t\t                              r isComposite ] ] ]",						"\t\t                              ifFalse: [ #(  ) ] ].",						"\trulesToSelectChildrenBlock := [ :rule | ",						"\t                              rule isComposite",						"\t\t                              ifTrue: [ ",						"\t\t\t                              rule rules select: [ :r | ",						"\t\t\t\t                              (self isSelected: r) not or: [ ",						"\t\t\t\t\t                              r isComposite ] ] ]",						"\t\t                              ifFalse: [ #(  ) ] ].",						"\ttoSelectModel childrenBlock: rulesToSelectChildrenBlock.",						"\tselectedModel childrenBlock: selectedRulesChildrenBlock.",						"\twrappingBlock := [ :rule | rule name ].",						"\ttoSelectModel displayBlock: wrappingBlock.",						"\tselectedModel displayBlock: wrappingBlock"					],					"body" : [						"| wrappingBlock selectedRulesChildrenBlock rulesToSelectChildrenBlock |",						"super initialize.",						"toSelectModel := self instantiate: TreePresenter.",						"selectedModel := self instantiate: TreePresenter.",						"selectedRules := Set new.",						"selectedRulesChildrenBlock := [ :rule | ",						"                              rule isComposite",						"\t                              ifTrue: [ ",						"\t\t                              rule rules select: [ :r | ",						"\t\t\t                              (self isSelected: r) or: [ ",						"\t\t\t\t                              r isComposite ] ] ]",						"\t                              ifFalse: [ #(  ) ] ].",						"rulesToSelectChildrenBlock := [ :rule | ",						"                              rule isComposite",						"\t                              ifTrue: [ ",						"\t\t                              rule rules select: [ :r | ",						"\t\t\t                              (self isSelected: r) not or: [ ",						"\t\t\t\t                              r isComposite ] ] ]",						"\t                              ifFalse: [ #(  ) ] ].",						"toSelectModel childrenBlock: rulesToSelectChildrenBlock.",						"selectedModel childrenBlock: selectedRulesChildrenBlock.",						"wrappingBlock := [ :rule | rule name ].",						"toSelectModel displayBlock: wrappingBlock.",						"selectedModel displayBlock: wrappingBlock"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3288507,					"argumentNames" : [ ]				},				"NetNameResolver class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Note: On the Mac, the name resolver is asynchronous, but can only handle one request at a time. On other platforms, such as Unix, the resolver is synchronous; a call to, say, the name lookup primitive will block all image processes until it returns.\"",						"",						"\t\"Resolver Status Values\"",						"",						"\tResolverUninitialized := 0. \"network is not initialized\"",						"\tResolverReady := 1. \"resolver idle, last request succeeded\"",						"\tResolverBusy := 2. \"lookup in progress\"",						"\tResolverError := 3. \"resolver idle, last request failed\"",						"",						"\tDefaultHostName := ''.",						"\tHaveNetwork := nil.",						"\tResolverMutex := Mutex new"					],					"body" : [						"ResolverUninitialized := 0. \"network is not initialized\"",						"ResolverReady := 1. \"resolver idle, last request succeeded\"",						"ResolverBusy := 2. \"lookup in progress\"",						"ResolverError := 3. \"resolver idle, last request failed\"",						"",						"DefaultHostName := ''.",						"HaveNetwork := nil.",						"ResolverMutex := Mutex new"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Note: On the Mac, the name resolver is asynchronous, but can only handle one request at a time. On other platforms, such as Unix, the resolver is synchronous; a call to, say, the name lookup primitive will block all image processes until it returns."					],					"hash" : 2160903,					"argumentNames" : [ ]				},				"BrowseDebugAction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself needsUpdate: false.",						"\tself needsValidation: false"					],					"body" : [						"super initialize.",						"self needsUpdate: false.",						"self needsValidation: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3781345,					"argumentNames" : [ ]				},				"ClyClassHierarchy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tinverse := false"					],					"body" : [						"super initialize.",						"inverse := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5690057,					"argumentNames" : [ ]				},				"SpTSearchable" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tsuper initialize.",						"\tself initializeTSearchable"					],					"body" : [						"self class initializeSlots: self.",						"super initialize.",						"self initializeTSearchable"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2960675,					"argumentNames" : [ ]				},				"RGClassDescriptionStrategy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tlayout := self unresolvedValue: self defaultLayout.",						"\tself owner environment backend createUnresolvedClassGroupFor:",						"\t\tself owner"					],					"body" : [						"super initialize.",						"",						"layout := self unresolvedValue: self defaultLayout.",						"self owner environment backend createUnresolvedClassGroupFor:",						"\tself owner"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6040236,					"argumentNames" : [ ]				},				"SDL2TouchGestureExample2" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcircleCenter := self windowCenter.",						"\tcircleSize := 10.",						"\tnegativeColor := Color blue.",						"\tpositiveColor := Color red.",						"\thasAbortedSwipe := false.",						"\tblackBackgroundPosition := self defaultExtent x.",						"\tdiscoMode := false"					],					"body" : [						"super initialize.",						"circleCenter := self windowCenter.",						"circleSize := 10.",						"negativeColor := Color blue.",						"positiveColor := Color red.",						"hasAbortedSwipe := false.",						"blackBackgroundPosition := self defaultExtent x.",						"discoMode := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4915592,					"argumentNames" : [ ]				},				"AthensCairoMatrix" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself loadIdentity"					],					"body" : [						"super initialize.",						"self loadIdentity"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3867753,					"argumentNames" : [ ]				},				"RBParseTreeSearcher" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcontext := SmallDictionary new.",						"\tsearches := OrderedCollection new.",						"\targumentSearches := OrderedCollection new: 0"					],					"body" : [						"super initialize.",						"context := SmallDictionary new.",						"searches := OrderedCollection new.",						"argumentSearches := OrderedCollection new: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1952563,					"argumentNames" : [ ]				},				"Termcap" : {					"sourceCode" : [						"initialize",						"",						"\tcache := Dictionary new.",						"\tself initializeDefaultSequences"					],					"body" : [						"cache := Dictionary new.",						"self initializeDefaultSequences"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1948333,					"argumentNames" : [ ]				},				"HEExtendedInstaller" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfailOnUndeclared := true.",						"\tduplicationMode := HEFailOnDuplication new"					],					"body" : [						"super initialize.",						"failOnUndeclared := true.",						"duplicationMode := HEFailOnDuplication new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1848119,					"argumentNames" : [ ]				},				"PluggableButtonMorphExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlabel := 'Test label'.",						"\tstate := #on.",						"\ticon := self iconNamed: #smallOkIcon"					],					"body" : [						"super initialize.",						"label := 'Test label'.",						"state := #on.",						"icon := self iconNamed: #smallOkIcon"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1483427,					"argumentNames" : [ ]				},				"UUIDGenerator class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerNetworkClassNamed: self name"					],					"body" : [						"SessionManager default registerNetworkClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1954208,					"argumentNames" : [ ]				},				"RSCanvas" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tshowRectangles := false.",						"\tshapes := RSGroup new.",						"\tfixedShapes := RSGroup new.",						"\tnodes := RSGroup new.",						"\tedges := RSGroup new.",						"\tanimations := OrderedCollection new.",						"\tclearBackground := true.",						"\tcolor := Color white.",						"\textent := 500 @ 500.",						"\tcamera := RSCamera new",						"\t\t          canvas: self;",						"\t\t          yourself"					],					"body" : [						"super initialize.",						"showRectangles := false.",						"shapes := RSGroup new.",						"fixedShapes := RSGroup new.",						"nodes := RSGroup new.",						"edges := RSGroup new.",						"animations := OrderedCollection new.",						"clearBackground := true.",						"color := Color white.",						"extent := 500 @ 500.",						"camera := RSCamera new",						"\t          canvas: self;",						"\t          yourself"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6436296,					"argumentNames" : [ ]				},				"MicInlineParser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeDelimiters.",						"\topenersStack := Stack new.",						"\tresult := LinkedList new.",						"\tchildren := LinkedList new.",						"\tnestedLevel := 0.",						"\tindex := 1"					],					"body" : [						"super initialize.",						"self initializeDelimiters.",						"openersStack := Stack new.",						"result := LinkedList new.",						"children := LinkedList new.",						"nestedLevel := 0.",						"index := 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7356638,					"argumentNames" : [ ]				},				"TabAction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ticon := ImageMorph new"					],					"body" : [						"super initialize.",						"",						"icon := ImageMorph new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2681370,					"argumentNames" : [ ]				},				"StInspectorCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself description: (String streamContents: [ :stream | ",						"\t\t\t stream << self class defaultName << ': '",						"\t\t\t << self class defaultDescription ])"					],					"body" : [						"super initialize.",						"self description: (String streamContents: [ :stream | ",						"\t\t stream << self class defaultName << ': '",						"\t\t << self class defaultDescription ])"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6207315,					"argumentNames" : [ ]				},				"TKTFutureExecution" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfuture := TKTFuture new"					],					"body" : [						"super initialize.",						"future := TKTFuture new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1216541,					"argumentNames" : [ ]				},				"InternetConfiguration class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerNetworkClassNamed: self name"					],					"body" : [						"SessionManager default registerNetworkClassNamed: self name"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2158752,					"argumentNames" : [ ]				},				"UndefinedSortFunction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdirection := -1"					],					"body" : [						"super initialize.",						"direction := -1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5251757,					"argumentNames" : [ ]				},				"FTStateBasedColumnSortingStrategy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself reset"					],					"body" : [						"super initialize.",						"self reset"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1525865,					"argumentNames" : [ ]				},				"FT2Types class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tIntHolder := FFIExternalValueHolder ofType: 'int'.",						"\tPointerHolder := FFIExternalValueHolder ofType: 'void*'.",						"",						"\tFT_Error := 'long'.",						"\tFT_Long := 'long'.",						"\tFT_ULong := 'ulong'.",						"\tFT_UShort := 'ushort'.",						"\tFT_Short := 'short'.",						"\tFT_UInt := 'uint'.",						"\tFT_Int32 := 'int32'.",						"",						"\tFT_Pos := 'long'.",						"\tFT_Encoding := 'int'.",						"",						"\tFT_String := 'String'.",						"\tFT_Int := 'int'.",						"\tFT_Bitmap_Size := 'FTBitmapSize'.",						"\tFT_CharMap := 'FTCharMapRec*'.",						"\tFT_Generic := 'FTGeneric'.",						"\tFT_BBox := 'FTBBox'.",						"\tFT_GlyphSlot := 'FTGlyphSlotRec*'.",						"\tFT_Driver := 'void*'.",						"\tFT_Memory := 'void*'.",						"\tFT_Stream := 'void*'.",						"\tFT_ListRec := 'FTListRec'.",						"\tFT_Face_Internal := 'void*'.",						"\tFT_Face := 'FTFaceRec*'.",						"",						"\tFT_Library := 'void*'.",						"\tFT_Glyph_Metrics := 'FTGlyphMetrics'.",						"\tFT_Fixed := 'long'.",						"\tFT_Vector := 'FTVector'.",						"\tFT_Glyph_Format := 'long'.",						"\tFT_Bitmap := 'FTBitmap'.",						"\tFT_Outline := 'FTOutline'.",						"\tFT_SubGlyph := 'void*'.",						"\tFT_Slot_Internal := 'void*'.",						"\tFT_Size := 'FTSizeRec*'.",						"\tFT_Size_Metrics := 'FTSizeMetrics'.",						"\tFT_Size_Internal := 'void*'.",						"",						"\tFT_ListNode := 'void*'.",						"\tFT_Matrix := 'FTMatrix'"					],					"body" : [						"IntHolder := FFIExternalValueHolder ofType: 'int'.",						"PointerHolder := FFIExternalValueHolder ofType: 'void*'.",						"",						"FT_Error := 'long'.",						"FT_Long := 'long'.",						"FT_ULong := 'ulong'.",						"FT_UShort := 'ushort'.",						"FT_Short := 'short'.",						"FT_UInt := 'uint'.",						"FT_Int32 := 'int32'.",						"",						"FT_Pos := 'long'.",						"FT_Encoding := 'int'.",						"",						"FT_String := 'String'.",						"FT_Int := 'int'.",						"FT_Bitmap_Size := 'FTBitmapSize'.",						"FT_CharMap := 'FTCharMapRec*'.",						"FT_Generic := 'FTGeneric'.",						"FT_BBox := 'FTBBox'.",						"FT_GlyphSlot := 'FTGlyphSlotRec*'.",						"FT_Driver := 'void*'.",						"FT_Memory := 'void*'.",						"FT_Stream := 'void*'.",						"FT_ListRec := 'FTListRec'.",						"FT_Face_Internal := 'void*'.",						"FT_Face := 'FTFaceRec*'.",						"",						"FT_Library := 'void*'.",						"FT_Glyph_Metrics := 'FTGlyphMetrics'.",						"FT_Fixed := 'long'.",						"FT_Vector := 'FTVector'.",						"FT_Glyph_Format := 'long'.",						"FT_Bitmap := 'FTBitmap'.",						"FT_Outline := 'FTOutline'.",						"FT_SubGlyph := 'void*'.",						"FT_Slot_Internal := 'void*'.",						"FT_Size := 'FTSizeRec*'.",						"FT_Size_Metrics := 'FTSizeMetrics'.",						"FT_Size_Internal := 'void*'.",						"",						"FT_ListNode := 'void*'.",						"FT_Matrix := 'FTMatrix'"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self initialize"					],					"hash" : 2696913,					"argumentNames" : [ ]				},				"SpDemoFormModel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tname := 'some name'.",						"\tsurname := ''.",						"\tnumber1 := 1.",						"\tnumber2 := 12.009.",						"\tscale := 42.",						"\tpassword := 'password'.",						"\trememberMe := true.",						"\tdate := '2018-01-01' asDate.",						"\tgender := #male.",						"\tselectedItems := { ",						"\t\t                 (self items at: 3).",						"\t\t                 (self items at: 4) }"					],					"body" : [						"super initialize.",						"",						"name := 'some name'.",						"surname := ''.",						"number1 := 1.",						"number2 := 12.009.",						"scale := 42.",						"password := 'password'.",						"rememberMe := true.",						"date := '2018-01-01' asDate.",						"gender := #male.",						"selectedItems := { ",						"\t                 (self items at: 3).",						"\t                 (self items at: 4) }"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3244610,					"argumentNames" : [ ]				},				"SpBoxLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself beNotHomogeneous.",						"\tself spacing: 0.",						"\tself borderWidth: 0"					],					"body" : [						"super initialize.",						"self beNotHomogeneous.",						"self spacing: 0.",						"self borderWidth: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2942624,					"argumentNames" : [ ]				},				"RBClassRegexRefactoring" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself createClasses"					],					"body" : [						"super initialize.",						"self createClasses"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3966057,					"argumentNames" : [ ]				},				"IRClosureStackCount" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tnumMethodTempVars := 0"					],					"body" : [						"super initialize.",						"",						"numMethodTempVars := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2045133,					"argumentNames" : [ ]				},				"ZipFileMember" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcrc32 := 0.",						"\tlocalHeaderRelativeOffset := 0.",						"\tdataOffset := 0"					],					"body" : [						"super initialize.",						"crc32 := 0.",						"localHeaderRelativeOffset := 0.",						"dataOffset := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2139317,					"argumentNames" : [ ]				},				"HashTableSizes" : {					"sourceCode" : [						"initialize",						"",						"\t\"Can't use any hashed collections, if sizes is being initialized might get infinite recursion\"",						"",						"\tgoodPrimes := OrderedCollection new.",						"\t\"Must contain a value less than any prime to avoid extra work in binary search\"",						"\tgoodPrimes add: 0.",						"\tvaluesNotToDivide := OrderedCollection new.",						"\t1 to: 8 do: [ :k | ",						"\t\t| n |",						"\t\tn := 256 raisedToInteger: k.",						"\t\t-32 to: 32 do: [ :a | valuesNotToDivide add: n + a ] ].",						"\tprimesToAvoid := self primeAlmostFactorsOf: 1 hashMultiply"					],					"body" : [						"goodPrimes := OrderedCollection new.",						"\"Must contain a value less than any prime to avoid extra work in binary search\"",						"goodPrimes add: 0.",						"valuesNotToDivide := OrderedCollection new.",						"1 to: 8 do: [ :k | ",						"\t| n |",						"\tn := 256 raisedToInteger: k.",						"\t-32 to: 32 do: [ :a | valuesNotToDivide add: n + a ] ].",						"primesToAvoid := self primeAlmostFactorsOf: 1 hashMultiply"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Can't use any hashed collections, if sizes is being initialized might get infinite recursion"					],					"hash" : 2384327,					"argumentNames" : [ ]				},				"SubscriptionRegistry" : {					"sourceCode" : [						"initialize",						"",						"\tmonitor := Semaphore forMutualExclusion.",						"\tself reset"					],					"body" : [						"monitor := Semaphore forMutualExclusion.",						"self reset"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1623237,					"argumentNames" : [ ]				},				"ThumbnailMorph class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the class variables of ThumbnailMorph\"",						"",						"\tRecursionMax := 2.",						"\tRecursionDepth := 0.",						"\tEccentricityThreshhold := Float pi",						"",						"\t\"ThumbnailMorph initialize\""					],					"body" : [						"RecursionMax := 2.",						"RecursionDepth := 0.",						"EccentricityThreshhold := Float pi",						"",						"\"ThumbnailMorph initialize\""					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Initialize the class variables of ThumbnailMorph"					],					"hash" : 2760158,					"argumentNames" : [ ]				},				"FFIFunctionParser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trequestor := self"					],					"body" : [						"super initialize.",						"requestor := self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1312710,					"argumentNames" : [ ]				},				"File class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerSystemClassNamed: self name.",						"\tself reset"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name.",						"self reset"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1760092,					"argumentNames" : [ ]				},				"SpTContextMenu" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tsuper initialize"					],					"body" : [						"self class initializeSlots: self.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2957160,					"argumentNames" : [ ]				},				"RSBezier" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcontrolPoints := { ",						"\t\t                 (0 @ 0).",						"\t\t                 (100 @ 100) }"					],					"body" : [						"super initialize.",						"controlPoints := { ",						"\t                 (0 @ 0).",						"\t                 (100 @ 100) }"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6465769,					"argumentNames" : [ ]				},				"ClyMethodGroup" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tsubgroupsQuery := ClyUnknownQuery instance"					],					"body" : [						"super initialize.",						"",						"subgroupsQuery := ClyUnknownQuery instance"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5728051,					"argumentNames" : [ ]				},				"ReIconHardcodedMessageRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: 'Smalltalk ui icons `iconName'",						"\t\tbyEvaluating: [ :node :matchMap | ",						"\t\t\tRBParser parseExpression:",						"\t\t\t\t'self iconNamed: #' , (matchMap at: #'`iconName') ]"					],					"body" : [						"super initialize.",						"self",						"\treplace: 'Smalltalk ui icons `iconName'",						"\tbyEvaluating: [ :node :matchMap | ",						"\t\tRBParser parseExpression:",						"\t\t\t'self iconNamed: #' , (matchMap at: #'`iconName') ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4933325,					"argumentNames" : [ ]				},				"SimpleHierarchicalListMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"\tself initForKeystrokes.",						"\tself on: #mouseMove send: #mouseStillDown:onItem: to: self"					],					"body" : [						"super initialize.",						"self initForKeystrokes.",						"self on: #mouseMove send: #mouseStillDown:onItem: to: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 2725221,					"argumentNames" : [ ]				},				"SpClassStyle" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstyles := #(  )"					],					"body" : [						"super initialize.",						"styles := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3350702,					"argumentNames" : [ ]				},				"LGitDiffHunk class" : {					"sourceCode" : [						"initialize",						"",						"\tChar128 := FFITypeArray ofType: #char size: 128"					],					"body" : [						"Char128 := FFITypeArray ofType: #char size: 128"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3672018,					"argumentNames" : [ ]				},				"StPharoApplication class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerToolClassNamed: self name"					],					"body" : [						"SessionManager default registerToolClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 6178720,					"argumentNames" : [ ]				},				"BalloonEngine" : {					"sourceCode" : [						"initialize",						"",						"\t| w |",						"\tsuper initialize.",						"\tw := Display width > 2048",						"\t\t     ifTrue: [ 4096 ]",						"\t\t     ifFalse: [ 2048 ].",						"\texternals := OrderedCollection new: 100.",						"\tspan := Bitmap new: w.",						"\tself bitBlt: ((BitBlt toForm: Display)",						"\t\t\t destRect: Display boundingBox;",						"\t\t\t yourself).",						"\tforms := #(  ).",						"\tdeferred := false"					],					"body" : [						"| w |",						"super initialize.",						"w := Display width > 2048",						"\t     ifTrue: [ 4096 ]",						"\t     ifFalse: [ 2048 ].",						"externals := OrderedCollection new: 100.",						"span := Bitmap new: w.",						"self bitBlt: ((BitBlt toForm: Display)",						"\t\t destRect: Display boundingBox;",						"\t\t yourself).",						"forms := #(  ).",						"deferred := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2686790,					"argumentNames" : [ ]				},				"RSPie" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself sliceColor: [ :slice | ",						"\t\tslice index even",						"\t\t\tifTrue: [ Color lightGray ]",						"\t\t\tifFalse: [ Color gray ] ].",						"\tsliceShape := RSPieSlice new",						"\t\t              segmentSpacing: 0;",						"\t\t              cornerRadii: 0;",						"\t\t              innerRadius: 0;",						"\t\t              externalRadius: 120"					],					"body" : [						"super initialize.",						"self sliceColor: [ :slice | ",						"\tslice index even",						"\t\tifTrue: [ Color lightGray ]",						"\t\tifFalse: [ Color gray ] ].",						"sliceShape := RSPieSlice new",						"\t              segmentSpacing: 0;",						"\t              cornerRadii: 0;",						"\t              innerRadius: 0;",						"\t              externalRadius: 120"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6589771,					"argumentNames" : [ ]				},				"CmdMouseCommandActivation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself beRedButton"					],					"body" : [						"super initialize.",						"",						"self beRedButton"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5527145,					"argumentNames" : [ ]				},				"AtomicSharedQueue" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tavailSema := Semaphore new"					],					"body" : [						"super initialize.",						"availSema := Semaphore new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1889563,					"argumentNames" : [ ]				},				"MenubarSeparatorMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tcolor: self defaultColor;",						"\t\tborderWidth: self defaultBorderWidth"					],					"body" : [						"super initialize.",						"self",						"\tcolor: self defaultColor;",						"\tborderWidth: self defaultBorderWidth"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2757647,					"argumentNames" : [ ]				},				"WorkingSession" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdeferredStartupActions := OrderedCollection new.",						"\tcreationTime := DateAndTime now.",						"\tproperties := Dictionary new"					],					"body" : [						"super initialize.",						"deferredStartupActions := OrderedCollection new.",						"creationTime := DateAndTime now.",						"properties := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1989391,					"argumentNames" : [ ]				},				"TestInWorldMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\toutOfWorldCount := intoWorldCount := 0"					],					"body" : [						"super initialize.",						"outOfWorldCount := intoWorldCount := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5145036,					"argumentNames" : [ ]				},				"MetacelloMCPartiallyLoadedStatus" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thasNoPackage := hasNoProject := true.",						"\taProjectIsLoaded := aPackageIsLoaded := false.",						"\taLoadedProjectIsExact := aLoadedPackageIsExact := false.",						"\taLoadedProjectIsCurrent := aLoadedPackageIsCurrent := false.",						"\taLoadedProjectIsNotCurrent := aLoadedPackageIsNotCurrent := false.",						"\taProjectNotLoaded := aPackageNotLoaded := false.",						"\tvrsnStatus := Set new.",						"\tabort := false"					],					"body" : [						"super initialize.",						"hasNoPackage := hasNoProject := true.",						"aProjectIsLoaded := aPackageIsLoaded := false.",						"aLoadedProjectIsExact := aLoadedPackageIsExact := false.",						"aLoadedProjectIsCurrent := aLoadedPackageIsCurrent := false.",						"aLoadedProjectIsNotCurrent := aLoadedPackageIsNotCurrent := false.",						"aProjectNotLoaded := aPackageNotLoaded := false.",						"vrsnStatus := Set new.",						"abort := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1129597,					"argumentNames" : [ ]				},				"RandomExponential" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself lambda: 1"					],					"body" : [						"super initialize.",						"",						"self lambda: 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3118539,					"argumentNames" : [ ]				},				"RGClassDescriptionDefinition" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tinstanceVariables := OrderedCollection new"					],					"body" : [						"super initialize.",						"instanceVariables := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2124318,					"argumentNames" : [ ]				},				"BeaconSignal" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttimestamp := DateAndTime now.",						"\tprocessId := Processor activeProcess name.",						"\tproperties := Dictionary new"					],					"body" : [						"super initialize.",						"timestamp := DateAndTime now.",						"processId := Processor activeProcess name.",						"properties := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1179580,					"argumentNames" : [ ]				},				"ReflectivitySourceCodeAgroupation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tlayoutPolicy: TableLayout new;",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #spaceFill;",						"\t\tcellInset: 10"					],					"body" : [						"super initialize.",						"self",						"\tlayoutPolicy: TableLayout new;",						"\thResizing: #spaceFill;",						"\tvResizing: #spaceFill;",						"\tcellInset: 10"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4319016,					"argumentNames" : [ ]				},				"TextConverter" : {					"sourceCode" : [						"initialize",						"",						"\tlatin1Map := self class latin1Map.",						"\tlatin1Encodings := self class latin1Encodings"					],					"body" : [						"latin1Map := self class latin1Map.",						"latin1Encodings := self class latin1Encodings"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3031539,					"argumentNames" : [ ]				},				"NECMenuMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself color: self class backgroundColor.",						"\tself borderStyle: (BorderStyle color: Color gray width: 1)"					],					"body" : [						"super initialize.",						"self color: self class backgroundColor.",						"self borderStyle: (BorderStyle color: Color gray width: 1)"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3997615,					"argumentNames" : [ ]				},				"GradientFillStyle class" : {					"sourceCode" : [						"initialize",						"",						"\t\"GradientFillStyle initialize\"",						"",						"\tself initPixelRampCache"					],					"body" : [						"self initPixelRampCache"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"GradientFillStyle initialize"					],					"hash" : 2410564,					"argumentNames" : [ ]				},				"MemoryFileSystemDirectory" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tentries := Dictionary new"					],					"body" : [						"super initialize.",						"entries := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2231324,					"argumentNames" : [ ]				},				"CodeImporter" : {					"sourceCode" : [						"initialize",						"",						"\tcodeDeclarations := OrderedCollection new.",						"\tparserClass := ChunkFileFormatParser.",						"\tlogSource := true"					],					"body" : [						"codeDeclarations := OrderedCollection new.",						"parserClass := ChunkFileFormatParser.",						"logSource := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2060798,					"argumentNames" : [ ]				},				"RPackageTag" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tclassNames := Set new"					],					"body" : [						"super initialize.",						"classNames := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1898523,					"argumentNames" : [ ]				},				"ZdcSecureSMTPClient" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself useSSL"					],					"body" : [						"super initialize.",						"self useSSL"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5243753,					"argumentNames" : [ ]				},				"MalCseEdge" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself cseVisited: false"					],					"body" : [						"super initialize.",						"self cseVisited: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2560712,					"argumentNames" : [ ]				},				"RSAbstractBarPlot" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tgapRatio: 0.1;",						"\t\tbarOffset: 0"					],					"body" : [						"super initialize.",						"self",						"\tgapRatio: 0.1;",						"\tbarOffset: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6601936,					"argumentNames" : [ ]				},				"DiskStore" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmaxFileNameLength := Smalltalk vm maxFilenameLength ifNil: [ 255 ]"					],					"body" : [						"super initialize.",						"maxFileNameLength := Smalltalk vm maxFilenameLength ifNil: [ 255 ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2086850,					"argumentNames" : [ ]				},				"RubEditingMode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tacceptAllowed := true"					],					"body" : [						"super initialize.",						"acceptAllowed := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2653641,					"argumentNames" : [ ]				},				"RSAthensMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself createSurface.",						"\tsession := Smalltalk session.",						"\tisDrawing := false"					],					"body" : [						"super initialize.",						"self createSurface.",						"session := Smalltalk session.",						"isDrawing := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6438716,					"argumentNames" : [ ]				},				"BasicCommandLineHandler" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcommandLine := CommandLineArguments new"					],					"body" : [						"super initialize.",						"commandLine := CommandLineArguments new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1659929,					"argumentNames" : [ ]				},				"RSParticleD" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlife := 0"					],					"body" : [						"super initialize.",						"life := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3080909,					"argumentNames" : [ ]				},				"OSTouchRotationDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcurrentAngle := 0.0.",						"\tminAngleBeforeDetection := self class minAngleBeforeDetection",						"\t\t                           degreesToRadians"					],					"body" : [						"super initialize.",						"currentAngle := 0.0.",						"minAngleBeforeDetection := self class minAngleBeforeDetection",						"\t                           degreesToRadians"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4849548,					"argumentNames" : [ ]				},				"DelayMillisecondTickerSimulation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tvmSimTheTimerSemaphore := Semaphore new.",						"\tvmSimNow := 0"					],					"body" : [						"super initialize.",						"vmSimTheTimerSemaphore := Semaphore new.",						"vmSimNow := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1727028,					"argumentNames" : [ ]				},				"CharacterScanner class" : {					"sourceCode" : [						"initialize",						"",						"\t\"",						"\tCharacterScanner initialize",						"\"",						"",						"\t| a |",						"\ta := Array new: 258.",						"\ta at: 1 + 1 put: #embeddedObject.",						"\ta at: Tab asciiValue + 1 put: #tab.",						"\ta at: CR asciiValue + 1 put: #cr.",						"\ta at: Character lf asciiValue + 1 put: #cr.",						"\t\"Note: following two codes are used only by primitive 103 for accelerated Character scanning\"",						"\ta at: 257 put: #endOfRun.",						"\ta at: 258 put: #crossedX.",						"",						"\tDefaultStopConditions := a copy.",						"",						"\tCompositionStopConditions := a copy.",						"\tCompositionStopConditions at: Space asciiValue + 1 put: #space.",						"\tColumnBreakStopConditions := CompositionStopConditions copy.",						"\tColumnBreakStopConditions",						"\t\tat: TextComposer characterForColumnBreak asciiValue + 1",						"\t\tput: #columnBreak.",						"",						"\tPaddedSpaceCondition := a copy.",						"\tPaddedSpaceCondition at: Space asciiValue + 1 put: #paddedSpace.",						"",						"\tMeasuringStopConditions := (Array new: 258)",						"\t\t                           at: 257 put: #endOfRun;",						"\t\t                           at: 258 put: #crossedX;",						"\t\t                           yourself"					],					"body" : [						"| a |",						"a := Array new: 258.",						"a at: 1 + 1 put: #embeddedObject.",						"a at: Tab asciiValue + 1 put: #tab.",						"a at: CR asciiValue + 1 put: #cr.",						"a at: Character lf asciiValue + 1 put: #cr.",						"\"Note: following two codes are used only by primitive 103 for accelerated Character scanning\"",						"a at: 257 put: #endOfRun.",						"a at: 258 put: #crossedX.",						"",						"DefaultStopConditions := a copy.",						"",						"CompositionStopConditions := a copy.",						"CompositionStopConditions at: Space asciiValue + 1 put: #space.",						"ColumnBreakStopConditions := CompositionStopConditions copy.",						"ColumnBreakStopConditions",						"\tat: TextComposer characterForColumnBreak asciiValue + 1",						"\tput: #columnBreak.",						"",						"PaddedSpaceCondition := a copy.",						"PaddedSpaceCondition at: Space asciiValue + 1 put: #paddedSpace.",						"",						"MeasuringStopConditions := (Array new: 258)",						"\t                           at: 257 put: #endOfRun;",						"\t                           at: 258 put: #crossedX;",						"\t                           yourself"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"",						"\tCharacterScanner initialize"					],					"hash" : 1781100,					"argumentNames" : [ ]				},				"ArchiveMember" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfileName := ''.",						"\tisCorrupt := false"					],					"body" : [						"super initialize.",						"fileName := ''.",						"isCorrupt := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2133957,					"argumentNames" : [ ]				},				"TFWorker" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsemaphorePoolHolder := Array new: 1"					],					"body" : [						"super initialize.",						"semaphorePoolHolder := Array new: 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2817907,					"argumentNames" : [ ]				},				"SessionAccessModeResolver class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tSessionManager default",						"\t\tregister: (ClassSessionHandler forClassNamed: self name)",						"\t\tinCategory: SessionManager default systemCategory",						"\t\tatPriority: SessionManager default defaultPriority - 90"					],					"body" : [						"SessionManager default",						"\tregister: (ClassSessionHandler forClassNamed: self name)",						"\tinCategory: SessionManager default systemCategory",						"\tatPriority: SessionManager default defaultPriority - 90"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self initialize"					],					"hash" : 1912566,					"argumentNames" : [ ]				},				"ClyBrowserToolMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdecorators := OrderedCollection new.",						"\tisManagedByUser := false.",						"\tisDirty := false.",						"\tself",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #topToBottom;",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #spaceFill"					],					"body" : [						"super initialize.",						"decorators := OrderedCollection new.",						"isManagedByUser := false.",						"isDirty := false.",						"self",						"\tchangeTableLayout;",						"\tlistDirection: #topToBottom;",						"\thResizing: #spaceFill;",						"\tvResizing: #spaceFill"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5881521,					"argumentNames" : [ ]				},				"IceCredentialStore" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tplainCredentials := Dictionary new.",						"\tsshCredentials := Dictionary new"					],					"body" : [						"super initialize.",						"plainCredentials := Dictionary new.",						"sshCredentials := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6972274,					"argumentNames" : [ ]				},				"MCDirectoryRepository" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdirectory := FileSystem workingDirectory"					],					"body" : [						"super initialize.",						"directory := FileSystem workingDirectory"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1084980,					"argumentNames" : [ ]				},				"ZipDirectoryMember" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\texternalFileAttributes := self mapPermissionsFromUnix:",						"\t\t                          DefaultDirectoryPermissions.",						"\tsuper desiredCompressionMethod: CompressionStored"					],					"body" : [						"super initialize.",						"externalFileAttributes := self mapPermissionsFromUnix:",						"\t                          DefaultDirectoryPermissions.",						"super desiredCompressionMethod: CompressionStored"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2139179,					"argumentNames" : [ ]				},				"ProtoObject" : {					"sourceCode" : [						"initialize",						"",						"\t\"Subclasses should redefine this method to perform initializations on instance creation\"",						"",						"\t"					],					"body" : [ ],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Subclasses should redefine this method to perform initializations on instance creation"					],					"hash" : 1660808,					"argumentNames" : [ ]				},				"RubHoverHighlightSegmentMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself borderWidth: 1.",						"\tself borderColor: self defaultBorderColor"					],					"body" : [						"super initialize.",						"self borderWidth: 1.",						"self borderColor: self defaultBorderColor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1397111,					"argumentNames" : [ ]				},				"ClyMethodTagsAndPackageEditorMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself cellInset: 2 @ 2"					],					"body" : [						"super initialize.",						"self cellInset: 2 @ 2"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5924411,					"argumentNames" : [ ]				},				"ClyStatusBarItemMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\thResizing: #shrinkWrap;",						"\t\tvResizing: #shrinkWrap;",						"\t\textent: 0 @ 0"					],					"body" : [						"super initialize.",						"self",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\thResizing: #shrinkWrap;",						"\tvResizing: #shrinkWrap;",						"\textent: 0 @ 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5888855,					"argumentNames" : [ ]				},				"MicOutputStream" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tconfiguration := MicMinimalConfiguration new"					],					"body" : [						"super initialize.",						"configuration := MicMinimalConfiguration new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7355930,					"argumentNames" : [ ]				},				"IceTipCommitInfoPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tself beForCommit.",						"\tsuper initialize"					],					"body" : [						"self beForCommit.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7080048,					"argumentNames" : [ ]				},				"PasteUpMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"\tself enableDragNDrop.",						"\tself clipSubmorphs: true"					],					"body" : [						"super initialize.",						"self enableDragNDrop.",						"self clipSubmorphs: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 2448513,					"argumentNames" : [ ]				},				"WaitfreeQueue" : {					"sourceCode" : [						"initialize",						"",						"\tdummy := AtomicQueueItem new.",						"\tdummy object: dummy.",						"\ttail := dummy"					],					"body" : [						"dummy := AtomicQueueItem new.",						"dummy object: dummy.",						"tail := dummy"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1888576,					"argumentNames" : [ ]				},				"WeakArray class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Do we need to initialize specialObjectsArray?\"",						"",						"\tSmalltalk specialObjectsArray size < 42 ifTrue: [ ",						"\t\tSmalltalk recreateSpecialObjectsArray ].",						"",						"\tSessionManager default registerSystemClassNamed: self name.",						"",						"\tFinalizationSemaphore := Smalltalk specialObjectsArray at: 42.",						"\tFinalizationLock := Semaphore forMutualExclusion.",						"\tFinalizationDependents ifNil: [ ",						"\t\tFinalizationDependents := WeakArray new: 10 ]"					],					"body" : [						"Smalltalk specialObjectsArray size < 42 ifTrue: [ ",						"\tSmalltalk recreateSpecialObjectsArray ].",						"",						"SessionManager default registerSystemClassNamed: self name.",						"",						"FinalizationSemaphore := Smalltalk specialObjectsArray at: 42.",						"FinalizationLock := Semaphore forMutualExclusion.",						"FinalizationDependents ifNil: [ ",						"\tFinalizationDependents := WeakArray new: 10 ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Do we need to initialize specialObjectsArray?"					],					"hash" : 1608322,					"argumentNames" : [ ]				},				"CTDfsShapeBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tgoldenRatios := 10 goldenRatiosLower.",						"",						"\tself prototypeLabel: (RSLabel new",						"\t\t\t model: nil;",						"\t\t\t useDefaultCodeFont;",						"\t\t\t yourself)"					],					"body" : [						"super initialize.",						"",						"goldenRatios := 10 goldenRatiosLower.",						"",						"self prototypeLabel: (RSLabel new",						"\t\t model: nil;",						"\t\t useDefaultCodeFont;",						"\t\t yourself)"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3653684,					"argumentNames" : [ ]				},				"NSPerlinNoise" : {					"sourceCode" : [						"initialize",						"",						"\t| p |",						"\tsuper initialize.",						"\tgrad3 := #( #( 1 1 0 ) #( -1 1 0 ) #( 1 -1 0 ) #( -1 -1 0 )",						"\t            #( 1 0 1 ) #( -1 0 1 ) #( 1 0 -1 ) #( -1 0 -1 )",						"\t            #( 0 1 1 ) #( 0 -1 1 ) #( 0 1 -1 ) #( 0 -1 -1 ) ).",						"",						"\tp := #( 151 160 137 91 90 15 131 13 201 95 96 53 194 233 7 225 140",						"\t        36 103 30 69 142 8 99 37 240 21 10 23 190 6 148 247 120 234",						"\t        75 0 26 197 62 94 252 219 203 117 35 11 32 57 177 33 88 237",						"\t        149 56 87 174 20 125 136 171 168 68 175 74 165 71 134 139 48",						"\t        27 166 77 146 158 231 83 111 229 122 60 211 133 230 220 105",						"\t        92 41 55 46 245 40 244 102 143 54 65 25 63 161 1 216 80 73 209",						"\t        76 132 187 208 89 18 169 200 196 135 130 116 188 159 86 164",						"\t        100 109 198 173 186 3 64 52 217 226 250 124 123 5 202 38 147",						"\t        118 126 255 82 85 212 207 206 59 227 47 16 58 17 182 189 28",						"\t        42 223 183 170 213 119 248 152 2 44 154 163 70 221 153 101",						"\t        155 167 43 172 9 129 22 39 253 19 98 108 110 79 113 224 232",						"\t        178 185 112 104 218 246 97 228 251 34 242 193 238 210 144 12",						"\t        191 179 162 241 81 51 145 235 249 14 239 107 49 192 214 31 181",						"\t        199 106 157 184 84 204 176 115 121 50 45 127 4 150 254 138",						"\t        236 205 93 222 114 67 29 24 72 243 141 128 195 78 66 215 61",						"\t        156 180 ).",						"\tperm := Array new: 512.",						"\t1 to: 256 do: [ :i | ",						"\t\t| v |",						"\t\tv := p at: i.",						"\t\tperm at: i put: v.",						"\t\tperm at: i + 256 put: v ]"					],					"body" : [						"| p |",						"super initialize.",						"grad3 := #( #( 1 1 0 ) #( -1 1 0 ) #( 1 -1 0 ) #( -1 -1 0 )",						"            #( 1 0 1 ) #( -1 0 1 ) #( 1 0 -1 ) #( -1 0 -1 )",						"            #( 0 1 1 ) #( 0 -1 1 ) #( 0 1 -1 ) #( 0 -1 -1 ) ).",						"",						"p := #( 151 160 137 91 90 15 131 13 201 95 96 53 194 233 7 225 140 36",						"        103 30 69 142 8 99 37 240 21 10 23 190 6 148 247 120 234 75 0",						"        26 197 62 94 252 219 203 117 35 11 32 57 177 33 88 237 149 56",						"        87 174 20 125 136 171 168 68 175 74 165 71 134 139 48 27 166",						"        77 146 158 231 83 111 229 122 60 211 133 230 220 105 92 41 55",						"        46 245 40 244 102 143 54 65 25 63 161 1 216 80 73 209 76 132",						"        187 208 89 18 169 200 196 135 130 116 188 159 86 164 100 109",						"        198 173 186 3 64 52 217 226 250 124 123 5 202 38 147 118 126",						"        255 82 85 212 207 206 59 227 47 16 58 17 182 189 28 42 223 183",						"        170 213 119 248 152 2 44 154 163 70 221 153 101 155 167 43 172",						"        9 129 22 39 253 19 98 108 110 79 113 224 232 178 185 112 104",						"        218 246 97 228 251 34 242 193 238 210 144 12 191 179 162 241",						"        81 51 145 235 249 14 239 107 49 192 214 31 181 199 106 157 184",						"        84 204 176 115 121 50 45 127 4 150 254 138 236 205 93 222 114",						"        67 29 24 72 243 141 128 195 78 66 215 61 156 180 ).",						"perm := Array new: 512.",						"1 to: 256 do: [ :i | ",						"\t| v |",						"\tv := p at: i.",						"\tperm at: i put: v.",						"\tperm at: i + 256 put: v ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7213537,					"argumentNames" : [ ]				},				"IceGitIndex" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmodifiedFilePaths := Set new"					],					"body" : [						"super initialize.",						"modifiedFilePaths := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7300890,					"argumentNames" : [ ]				},				"VTermOutputDriver" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttermcap := Termcap new.",						"\tself reset"					],					"body" : [						"super initialize.",						"termcap := Termcap new.",						"self reset"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1965267,					"argumentNames" : [ ]				},				"MCCacheRepository class" : {					"sourceCode" : [						"initialize",						"",						"\tself resetIfInvalid"					],					"body" : [						"self resetIfInvalid"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 1083204,					"argumentNames" : [ ]				},				"ShAbstractClassChangeDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcomparer := [ :a :b | a = b ]"					],					"body" : [						"super initialize.",						"comparer := [ :a :b | a = b ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1914764,					"argumentNames" : [ ]				},				"SpecLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttype := #ContainerPresenter.",						"\tself commands: OrderedCollection new"					],					"body" : [						"super initialize.",						"",						"type := #ContainerPresenter.",						"self commands: OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1768216,					"argumentNames" : [ ]				},				"FT2Handle" : {					"sourceCode" : [						"initialize",						"",						"\tself shouldNotImplement"					],					"body" : [						"self shouldNotImplement"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2692164,					"argumentNames" : [ ]				},				"ImageMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself form: self defaultImage"					],					"body" : [						"super initialize.",						"self form: self defaultImage"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1375066,					"argumentNames" : [ ]				},				"RBSequenceNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tperiods := OrderedCollection new.",						"\tstatements := OrderedCollection new.",						"\ttemporaries := OrderedCollection new"					],					"body" : [						"super initialize.",						"periods := OrderedCollection new.",						"statements := OrderedCollection new.",						"temporaries := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1957336,					"argumentNames" : [ ]				},				"CompiledMethodTrailer" : {					"sourceCode" : [						"initialize",						"",						"\tself clear"					],					"body" : [						"self clear"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1709380,					"argumentNames" : [ ]				},				"SystemAnnouncement" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself setTimeStamp"					],					"body" : [						"super initialize.",						"self setTimeStamp"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1675625,					"argumentNames" : [ ]				},				"TFLongTestStruct class" : {					"sourceCode" : [						"initialize",						"",						"\tChar100 := FFITypeArray ofType: 'char' size: 100"					],					"body" : [						"Char100 := FFITypeArray ofType: 'char' size: 100"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2829010,					"argumentNames" : [ ]				},				"RSAbstractDualLine" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstartPoint := 0 @ 0.",						"\tendPoint := 100 @ 100"					],					"body" : [						"super initialize.",						"startPoint := 0 @ 0.",						"endPoint := 100 @ 100"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6466686,					"argumentNames" : [ ]				},				"UITheme" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tinitializeForms;",						"\t\tsettings: self defaultSettings.",						"\tself windowActiveDropShadowStyle: #diffuse"					],					"body" : [						"super initialize.",						"self",						"\tinitializeForms;",						"\tsettings: self defaultSettings.",						"self windowActiveDropShadowStyle: #diffuse"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1493279,					"argumentNames" : [ ]				},				"RSAlgoritmia" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\t\"change this variables to get a different result\"",						"\textent := 1200 @ 600.",						"\tdegs := 360.",						"\tnRadius := 1.300.",						"\toutRadius := 321.",						"\ttotalTweens := 27.",						"\tinBetween := 0.0.",						"\tcircleNumber := 1.",						"\tperlin := NSPerlinNoise3 new octaves: 2.",						"\tmodels := 199.",						"\trand := 3.",						"",						"\tradii := Array new: models.",						"\tframeCount := 0.",						"\tmasterX := -300.",						"\tmasterY := extent y / 2.",						"",						"\tcos := NSScale linear domain: { 1. -1 }.",						"\tcolor := NSScale linear",						"\t\t         domain: { ",						"\t\t\t\t         (extent x / -2).",						"\t\t\t\t         (extent x / 2) };",						"\t\t         range: #( 80 300 ).",						"\tborder := RSBorder new.",						"",						"\t\"call again these methods if necessary \"",						"\tself initializeCircles.",						"\tself initializeCanvas"					],					"body" : [						"super initialize.",						"\"change this variables to get a different result\"",						"extent := 1200 @ 600.",						"degs := 360.",						"nRadius := 1.300.",						"outRadius := 321.",						"totalTweens := 27.",						"inBetween := 0.0.",						"circleNumber := 1.",						"perlin := NSPerlinNoise3 new octaves: 2.",						"models := 199.",						"rand := 3.",						"",						"radii := Array new: models.",						"frameCount := 0.",						"masterX := -300.",						"masterY := extent y / 2.",						"",						"cos := NSScale linear domain: { 1. -1 }.",						"color := NSScale linear",						"\t         domain: { ",						"\t\t\t         (extent x / -2).",						"\t\t\t         (extent x / 2) };",						"\t         range: #( 80 300 ).",						"border := RSBorder new.",						"",						"\"call again these methods if necessary \"",						"self initializeCircles.",						"self initializeCanvas"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3086951,					"argumentNames" : [ ]				},				"StandardWindow" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tsetLabel: self defaultLabel;",						"\t\tsetWindowColor: self defaultColor"					],					"body" : [						"super initialize.",						"self",						"\tsetLabel: self defaultLabel;",						"\tsetWindowColor: self defaultColor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2733583,					"argumentNames" : [ ]				},				"StDebugger class" : {					"sourceCode" : [						"initialize",						"",						"\tself flag: 'Error recursion is used only here?'.",						"\tErrorRecursion := false"					],					"body" : [						"self flag: 'Error recursion is used only here?'.",						"ErrorRecursion := false"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 6321628,					"argumentNames" : [ ]				},				"RSElasticBoxInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself leftRight.",						"\tbaseBox := self defaultBox.",						"\tself useNegativeBox.",						"\tself targetShapes: #nodes.",						"\tdraggingCanvas := false"					],					"body" : [						"super initialize.",						"self leftRight.",						"baseBox := self defaultBox.",						"self useNegativeBox.",						"self targetShapes: #nodes.",						"draggingCanvas := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6522861,					"argumentNames" : [ ]				},				"TFPool" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmutex := Mutex new"					],					"body" : [						"super initialize.",						"mutex := Mutex new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2827033,					"argumentNames" : [ ]				},				"RGComment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tcontent := self unresolvedValue: self defaultContent.",						"\tauthor := self unresolvedValue: self defaultAuthor.",						"\ttime := self unresolvedValue: self defaultTime"					],					"body" : [						"super initialize.",						"",						"content := self unresolvedValue: self defaultContent.",						"author := self unresolvedValue: self defaultAuthor.",						"time := self unresolvedValue: self defaultTime"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6049133,					"argumentNames" : [ ]				},				"ButtonPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tactionHolder := [  ] asValueHolder.",						"\tlabelHolder := '' asValueHolder.",						"\tfontHolder := nil asValueHolder.",						"\ticonHolder := nil asValueHolder.",						"\tstateHolder := false asValueHolder.",						"\tactionPerformedHolder := nil asValueHolder.",						"\taskBeforeChangingHolder := false asValueHolder.",						"\tshortcutHolder := nil asValueHolder.",						"",						"\tlabelHolder whenChangedDo: [ self changed: #label ].",						"\tfontHolder whenChangedDo: [ self changed: #font ].",						"\ticonHolder whenChangedDo: [ self changed: #label ].",						"\tstateHolder whenChangedDo: [ self changed: #state ].",						"\taskBeforeChangingHolder whenChangedDo: [ :newValue | ",						"\t\tself changed: { ",						"\t\t\t\t#askBeforeChanging:.",						"\t\t\t\tnewValue } ].",						"\tshortcutHolder whenChangedDo: [ :newShortcut :oldShortcut | ",						"\t\tself unregisterShortcut: oldShortcut.",						"\t\tself registerShortcut: newShortcut.",						"\t\tself changed: #label ].",						"",						"\tmenuHolder := MenuPresenter new asValueHolder.",						"\tmenuHolder whenChangedDo: [ :aMenuModel :oldMenu | ",						"\t\t(oldMenu isNil or: [ oldMenu isBlock ]) ifFalse: [ ",						"\t\t\toldMenu neglect: self ].",						"\t\t(aMenuModel isNil or: [ aMenuModel isBlock ]) ifFalse: [ ",						"\t\t\taMenuModel applyTo: self ] ].",						"",						"\tself bindKeyCombination: Character space toAction: [ self action ].",						"",						"\tself color: nil"					],					"body" : [						"super initialize.",						"",						"actionHolder := [  ] asValueHolder.",						"labelHolder := '' asValueHolder.",						"fontHolder := nil asValueHolder.",						"iconHolder := nil asValueHolder.",						"stateHolder := false asValueHolder.",						"actionPerformedHolder := nil asValueHolder.",						"askBeforeChangingHolder := false asValueHolder.",						"shortcutHolder := nil asValueHolder.",						"",						"labelHolder whenChangedDo: [ self changed: #label ].",						"fontHolder whenChangedDo: [ self changed: #font ].",						"iconHolder whenChangedDo: [ self changed: #label ].",						"stateHolder whenChangedDo: [ self changed: #state ].",						"askBeforeChangingHolder whenChangedDo: [ :newValue | ",						"\tself changed: { ",						"\t\t\t#askBeforeChanging:.",						"\t\t\tnewValue } ].",						"shortcutHolder whenChangedDo: [ :newShortcut :oldShortcut | ",						"\tself unregisterShortcut: oldShortcut.",						"\tself registerShortcut: newShortcut.",						"\tself changed: #label ].",						"",						"menuHolder := MenuPresenter new asValueHolder.",						"menuHolder whenChangedDo: [ :aMenuModel :oldMenu | ",						"\t(oldMenu isNil or: [ oldMenu isBlock ]) ifFalse: [ ",						"\t\toldMenu neglect: self ].",						"\t(aMenuModel isNil or: [ aMenuModel isBlock ]) ifFalse: [ ",						"\t\taMenuModel applyTo: self ] ].",						"",						"self bindKeyCombination: Character space toAction: [ self action ].",						"",						"self color: nil"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1679645,					"argumentNames" : [ ]				},				"RubTextSegmentMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself borderWidth: 0.",						"\tself beStraightSegments.",						"\tself clipSubmorphs: false"					],					"body" : [						"super initialize.",						"self borderWidth: 0.",						"self beStraightSegments.",						"self clipSubmorphs: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1396382,					"argumentNames" : [ ]				},				"FBDExamples" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcollection := OrderedCollection new"					],					"body" : [						"super initialize.",						"collection := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4228122,					"argumentNames" : [ ]				},				"RealEstateAgent class" : {					"sourceCode" : [						"initialize",						"",						"\t\"RealEstateAgent initialize\"",						"",						"\tStaggerOffset := 20 @ 40.",						"\tStandardSize := 700 @ 500"					],					"body" : [						"StaggerOffset := 20 @ 40.",						"StandardSize := 700 @ 500"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"RealEstateAgent initialize"					],					"hash" : 2457411,					"argumentNames" : [ ]				},				"SHPreferences class" : {					"sourceCode" : [						"initialize",						"",						"\tself customStyleTable: SHRBTextStyler defaultStyleTable"					],					"body" : [						"self customStyleTable: SHRBTextStyler defaultStyleTable"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2478347,					"argumentNames" : [ ]				},				"PragmaCollector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself installSystemNotifications"					],					"body" : [						"super initialize.",						"self installSystemNotifications"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2252905,					"argumentNames" : [ ]				},				"SpecTableLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tcommands := OrderedCollection new.",						"\tlayoutProperties := SpecTableLayoutProperties new.",						"\tlayoutProperties",						"\t\treverseTableCells: true;",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #spaceFill"					],					"body" : [						"super initialize.",						"",						"commands := OrderedCollection new.",						"layoutProperties := SpecTableLayoutProperties new.",						"layoutProperties",						"\treverseTableCells: true;",						"\thResizing: #spaceFill;",						"\tvResizing: #spaceFill"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1777240,					"argumentNames" : [ ]				},				"AthensBezierConverter class" : {					"sourceCode" : [						"initialize",						"",						"\tCollinearityEps := 1e-30.",						"\tDistanceEps := 1e-30.",						"\tCurveAngleTolerance := 0.01"					],					"body" : [						"CollinearityEps := 1e-30.",						"DistanceEps := 1e-30.",						"CurveAngleTolerance := 0.01"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 3854119,					"argumentNames" : [ ]				},				"ReDeprecateWithFirstCharacterDownshiftedRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: '``@object withFirstCharacterDownshifted'",						"\t\twith: '``@object uncapitalized'"					],					"body" : [						"super initialize.",						"self",						"\treplace: '``@object withFirstCharacterDownshifted'",						"\twith: '``@object uncapitalized'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4729330,					"argumentNames" : [ ]				},				"ZnClient" : {					"sourceCode" : [						"initialize",						"",						"\trequest := ZnRequest empty.",						"\tself loggingOn"					],					"body" : [						"request := ZnRequest empty.",						"self loggingOn"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2200516,					"argumentNames" : [ ]				},				"Breakpoint class" : {					"sourceCode" : [						"initialize",						"",						"\tself registerInterestToSystemAnnouncement"					],					"body" : [						"self registerInterestToSystemAnnouncement"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 3817796,					"argumentNames" : [ ]				},				"LucidaGrandeRegular class" : {					"sourceCode" : [						"initialize",						"",						"\tself canBeInstalled ifTrue: [ ",						"\t\tEmbeddedFreeTypeFontInstaller registerFont: self ]"					],					"body" : [						"self canBeInstalled ifTrue: [ ",						"\tEmbeddedFreeTypeFontInstaller registerFont: self ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1520941,					"argumentNames" : [ ]				},				"PNGReadWriter class" : {					"sourceCode" : [						"initialize",						"",						"\tBPP := { ",						"\t\t       #( 1 2 4 8 16 ).",						"\t\t       #( 0 0 0 0 0 ).",						"\t\t       #( 0 0 0 24 48 ).",						"\t\t       #( 1 2 4 8 0 ).",						"\t\t       #( 0 0 0 16 32 ).",						"\t\t       #( 0 0 0 0 0 ).",						"\t\t       #( 0 0 0 32 64 ).",						"\t\t       #( 0 0 0 0 0 ) }.",						"\tBlockHeight := #( 8 8 4 4 2 2 1 ).",						"\tBlockWidth := #( 8 4 4 2 2 1 1 ).",						"\tStandardColors := Color indexedColors collect: [ :aColor | ",						"\t\t                  Color",						"\t\t\t                  r: (aColor red * 255) truncated / 255",						"\t\t\t                  g: (aColor green * 255) truncated / 255",						"\t\t\t                  b: (aColor blue * 255) truncated / 255 ].",						"\tStandardSwizzleMaps := Array new: 4.",						"\t#( 1 2 4 ) do: [ :i | ",						"\t\tStandardSwizzleMaps at: i put: (self computeSwizzleMapForDepth: i) ]"					],					"body" : [						"BPP := { ",						"\t       #( 1 2 4 8 16 ).",						"\t       #( 0 0 0 0 0 ).",						"\t       #( 0 0 0 24 48 ).",						"\t       #( 1 2 4 8 0 ).",						"\t       #( 0 0 0 16 32 ).",						"\t       #( 0 0 0 0 0 ).",						"\t       #( 0 0 0 32 64 ).",						"\t       #( 0 0 0 0 0 ) }.",						"BlockHeight := #( 8 8 4 4 2 2 1 ).",						"BlockWidth := #( 8 4 4 2 2 1 1 ).",						"StandardColors := Color indexedColors collect: [ :aColor | ",						"\t                  Color",						"\t\t                  r: (aColor red * 255) truncated / 255",						"\t\t                  g: (aColor green * 255) truncated / 255",						"\t\t                  b: (aColor blue * 255) truncated / 255 ].",						"StandardSwizzleMaps := Array new: 4.",						"#( 1 2 4 ) do: [ :i | ",						"\tStandardSwizzleMaps at: i put: (self computeSwizzleMapForDepth: i) ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1567572,					"argumentNames" : [ ]				},				"ReUnconditionalRecursionRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself addMatchingMethod: '`@message: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.before.",						"\t\t\tself `@message: `@args.",						"\t\t\t`@.after'"					],					"body" : [						"super initialize.",						"self addMatchingMethod: '`@message: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.before.",						"\t\t\tself `@message: `@args.",						"\t\t\t`@.after'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4749229,					"argumentNames" : [ ]				},				"SpSingleSelectionMode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tselectedIndex := 0"					],					"body" : [						"super initialize.",						"selectedIndex := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3224168,					"argumentNames" : [ ]				},				"RSSVGPathLine" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself svgPath: [ :line | '' ]"					],					"body" : [						"super initialize.",						"self svgPath: [ :line | '' ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3092104,					"argumentNames" : [ ]				},				"MetaLinkNodesMapper" : {					"sourceCode" : [						"initialize",						"",						"\tobjectsForNodes := WeakIdentityKeyDictionary new.",						"\tnodesForObjects := WeakIdentityKeyDictionary new"					],					"body" : [						"objectsForNodes := WeakIdentityKeyDictionary new.",						"nodesForObjects := WeakIdentityKeyDictionary new"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 3822412,					"argumentNames" : [ ]				},				"FLSerializer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself signature: self class defaultSignature.",						"\tself version: self class currentVersion.",						"\theader := FLHeader new"					],					"body" : [						"super initialize.",						"self signature: self class defaultSignature.",						"self version: self class currentVersion.",						"header := FLHeader new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1345172,					"argumentNames" : [ ]				},				"RSLabelGenerator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tloose := false.",						"\tw := #( 0.25 0.2 0.5 0.05 ).",						"\tself nice: RSNiceStepSizeGenerator new"					],					"body" : [						"super initialize.",						"loose := false.",						"w := #( 0.25 0.2 0.5 0.05 ).",						"self nice: RSNiceStepSizeGenerator new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6597940,					"argumentNames" : [ ]				},				"StDefineMissingEntityCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsubCommands := OrderedCollection new"					],					"body" : [						"super initialize.",						"subCommands := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6219548,					"argumentNames" : [ ]				},				"AthensSceneView" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tkeepRefreshing := false.",						"\ttransform := AthensAffineTransform new.",						"",						"\tself hResizing: #spaceFill.",						"\tself vResizing: #spaceFill.",						"\tcolor := Color transparent.",						"\tstate := Dictionary new.",						"\tself extent: self minimumExtent"					],					"body" : [						"super initialize.",						"keepRefreshing := false.",						"transform := AthensAffineTransform new.",						"",						"self hResizing: #spaceFill.",						"self vResizing: #spaceFill.",						"color := Color transparent.",						"state := Dictionary new.",						"self extent: self minimumExtent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4208491,					"argumentNames" : [ ]				},				"SpTreePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself withScrollBars.",						"",						"\tactivationBlock := [  ].",						"",						"\tdisplayBlock := [ :each | each asString ].",						"\tshowColumnHeaders := false.",						"\tisResizable := false.",						"\tchildrenBlock := [ :item | #(  ) ].",						"\troots := #(  ).",						"\tverticalAlignment := SpVerticalAlignment new.",						"",						"\tself beSingleSelection.",						"\tself activateOnDoubleClick.",						"\tself registerEvents"					],					"body" : [						"super initialize.",						"",						"self withScrollBars.",						"",						"activationBlock := [  ].",						"",						"displayBlock := [ :each | each asString ].",						"showColumnHeaders := false.",						"isResizable := false.",						"childrenBlock := [ :item | #(  ) ].",						"roots := #(  ).",						"verticalAlignment := SpVerticalAlignment new.",						"",						"self beSingleSelection.",						"self activateOnDoubleClick.",						"self registerEvents"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3273903,					"argumentNames" : [ ]				},				"FileList" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tok := false.",						"\tsourceTextModel := RubScrolledTextModel new interactionModel: self.",						"\tdirSelectionBlock := [ :dirName | true ].",						"\tbaseLabel := ''.",						"\tconfiguredServices := OrderedCollection new.",						"\tself directory: FileSystem workingDirectory"					],					"body" : [						"super initialize.",						"ok := false.",						"sourceTextModel := RubScrolledTextModel new interactionModel: self.",						"dirSelectionBlock := [ :dirName | true ].",						"baseLabel := ''.",						"configuredServices := OrderedCollection new.",						"self directory: FileSystem workingDirectory"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4149519,					"argumentNames" : [ ]				},				"NECDetailMorph" : {					"sourceCode" : [						"initialize",						"",						"\t| childBounds |",						"\tsuper initialize.",						"",						"\tself borderStyle: (BorderStyle color: Color gray width: 1).",						"\tchildBounds := self contentBounds.",						"\tlabel := StringMorph contents: '' font: self messageFont.",						"\tlabel bounds: childBounds.",						"\tself addMorph: label.",						"\ttitle := StringMorph contents: '' font: NECMenuMorph titleFont.",						"\ttitle bounds: self titleBounds.",						"\tself addMorph: title.",						"\tdescription := TextMorph new.",						"\tdescription autoFit: false.",						"\tdescription bounds: self descriptionBounds.",						"\tdescription borderWidth: 0.",						"\tself addMorph: description"					],					"body" : [						"| childBounds |",						"super initialize.",						"",						"self borderStyle: (BorderStyle color: Color gray width: 1).",						"childBounds := self contentBounds.",						"label := StringMorph contents: '' font: self messageFont.",						"label bounds: childBounds.",						"self addMorph: label.",						"title := StringMorph contents: '' font: NECMenuMorph titleFont.",						"title bounds: self titleBounds.",						"self addMorph: title.",						"description := TextMorph new.",						"description autoFit: false.",						"description bounds: self descriptionBounds.",						"description borderWidth: 0.",						"self addMorph: description"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4259518,					"argumentNames" : [ ]				},				"SingleCodeCriticResultList" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeShortcuts"					],					"body" : [						"super initialize.",						"self initializeShortcuts"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2500713,					"argumentNames" : [ ]				},				"ZdcByteArrayManager" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlimit := 0.",						"\taccess := Monitor new"					],					"body" : [						"super initialize.",						"limit := 0.",						"access := Monitor new"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 2225973,					"argumentNames" : [ ]				},				"PreDebugDoesNotUnderstandAction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself needsUpdate: false.",						"\tself needsValidation: false"					],					"body" : [						"super initialize.",						"self needsUpdate: false.",						"self needsValidation: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3779297,					"argumentNames" : [ ]				},				"IdentityTransform class" : {					"sourceCode" : [						"initialize",						"",						"\t\"IdentityTransform initialize\"",						"",						"\tDefault := self basicNew"					],					"body" : [						"Default := self basicNew"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"IdentityTransform initialize"					],					"hash" : 1266544,					"argumentNames" : [ ]				},				"SpRubFindReplaceService" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttextAreaHolder := WeakArray new: 1"					],					"body" : [						"super initialize.",						"",						"textAreaHolder := WeakArray new: 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4339617,					"argumentNames" : [ ]				},				"AthensFT2Constants class" : {					"sourceCode" : [						"initialize",						"",						"\t\"FT2Constants initialize\"",						"",						"\tLoadDefault := 0.",						"\tLoadNoScale := 1.",						"\tLoadNoHinting := 2.",						"\tLoadRender := 4.",						"\tLoadNoBitmap := 8.",						"\tLoadVerticalLayout := 16.",						"\tLoadForceAutohint := 32.",						"\tLoadCropBitmap := 64.",						"\tLoadPedantic := 128.",						"\tLoadIgnoreGlobalAdvanceWidth := 512.",						"\tLoadNoRecurse := 1024.",						"\tLoadIgnoreTransform := 2048.",						"\tLoadMonochrome := 4096.",						"\tLoadLinearDesign := 8192.",						"\tLoadSbitsOnly := 16384.",						"\tLoadNoAutohint := 32768.",						"",						"\t\"One of these flags may be OR'd with the above.\"",						"\tLoadTargetNormal := 0.",						"\tLoadTargetLight := 1 bitShift: 16.",						"\tLoadTargetMono := 2 bitShift: 16.",						"\tLoadTargetLCD := 3 bitShift: 16.",						"\tLoadTargetLCDV := 4 bitShift: 16.",						"",						"\t\"rendering mode constants\"",						"\tRenderModeNormal := 0.",						"\tRenderModeLight := 1.",						"\tRenderModeMono := 2.",						"\tRenderModeLCD := 3.",						"\tRenderModeLCDV := 4.",						"",						"\t\"pixel mode constants\"",						"\tPixelModeNone := 0.",						"\tPixelModeMono := 1.",						"\tPixelModeGray := 2.",						"\tPixelModeGray2 := 3.",						"\tPixelModeGray4 := 4.",						"\tPixelModeLCD := 5.",						"\tPixelModeLCDV := 6.",						"",						"\tStyleFlagItalic := 1.",						"\tStyleFlagBold := 2"					],					"body" : [						"LoadDefault := 0.",						"LoadNoScale := 1.",						"LoadNoHinting := 2.",						"LoadRender := 4.",						"LoadNoBitmap := 8.",						"LoadVerticalLayout := 16.",						"LoadForceAutohint := 32.",						"LoadCropBitmap := 64.",						"LoadPedantic := 128.",						"LoadIgnoreGlobalAdvanceWidth := 512.",						"LoadNoRecurse := 1024.",						"LoadIgnoreTransform := 2048.",						"LoadMonochrome := 4096.",						"LoadLinearDesign := 8192.",						"LoadSbitsOnly := 16384.",						"LoadNoAutohint := 32768.",						"",						"\"One of these flags may be OR'd with the above.\"",						"LoadTargetNormal := 0.",						"LoadTargetLight := 1 bitShift: 16.",						"LoadTargetMono := 2 bitShift: 16.",						"LoadTargetLCD := 3 bitShift: 16.",						"LoadTargetLCDV := 4 bitShift: 16.",						"",						"\"rendering mode constants\"",						"RenderModeNormal := 0.",						"RenderModeLight := 1.",						"RenderModeMono := 2.",						"RenderModeLCD := 3.",						"RenderModeLCDV := 4.",						"",						"\"pixel mode constants\"",						"PixelModeNone := 0.",						"PixelModeMono := 1.",						"PixelModeGray := 2.",						"PixelModeGray2 := 3.",						"PixelModeGray4 := 4.",						"PixelModeLCD := 5.",						"PixelModeLCDV := 6.",						"",						"StyleFlagItalic := 1.",						"StyleFlagBold := 2"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"FT2Constants initialize"					],					"hash" : 3867737,					"argumentNames" : [ ]				},				"ThreePhaseButtonMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstate := #off.",						"\tactionSelector := #flash.",						"\targuments := EmptyArray.",						"\tactWhen := #buttonUp",						"",						"\t\"self on: #mouseStillDown send: #dragIfAuthoring: to: self.\"",						"\t\"real move should include a call on dragIfAuthoring: \""					],					"body" : [						"super initialize.",						"state := #off.",						"actionSelector := #flash.",						"arguments := EmptyArray.",						"actWhen := #buttonUp",						"",						"\"self on: #mouseStillDown send: #dragIfAuthoring: to: self.\"",						"\"real move should include a call on dragIfAuthoring: \""					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1376615,					"argumentNames" : [ ]				},				"FLMaterializer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself setDefaultMaterialization.",						"\tself signature: self class defaultSignature.",						"\tself version: self class currentVersion.",						"\tmigrations := Dictionary new.",						"\tglobalEnvironment := self class environment"					],					"body" : [						"super initialize.",						"self setDefaultMaterialization.",						"self signature: self class defaultSignature.",						"self version: self class currentVersion.",						"migrations := Dictionary new.",						"globalEnvironment := self class environment"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1344649,					"argumentNames" : [ ]				},				"ZnFastLineReader" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcr := Character cr.",						"\tlf := Character lf"					],					"body" : [						"super initialize.",						"cr := Character cr.",						"lf := Character lf"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 2006691,					"argumentNames" : [ ]				},				"RBRemoveClassChange" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tchangeFactory := RBRefactoryChangeManager changeFactory"					],					"body" : [						"super initialize.",						"changeFactory := RBRefactoryChangeManager changeFactory"					],					"isTestMethod" : false,					"category" : "printing",					"comment" : [ ],					"hash" : 3989041,					"argumentNames" : [ ]				},				"SpAdapterBindings" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tbindings := Dictionary new.",						"\tself initializeBindings"					],					"body" : [						"super initialize.",						"",						"bindings := Dictionary new.",						"self initializeBindings"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2965971,					"argumentNames" : [ ]				},				"ZipWriteStream" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tliterals := ByteArray new: WindowSize.",						"\tdistances := WordArray new: WindowSize.",						"\tliteralFreq := WordArray new: MaxLiteralCodes.",						"\tdistanceFreq := WordArray new: MaxDistCodes.",						"\tself initializeNewBlock"					],					"body" : [						"super initialize.",						"literals := ByteArray new: WindowSize.",						"distances := WordArray new: WindowSize.",						"literalFreq := WordArray new: MaxLiteralCodes.",						"distanceFreq := WordArray new: MaxDistCodes.",						"self initializeNewBlock"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2143820,					"argumentNames" : [ ]				},				"ClyNavigationEnvironment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\taccessGuard := Mutex new.",						"\tupdateGuard := Mutex new.",						"\tplugins := OrderedCollection new.",						"\tqueryCache := WeakValueDictionary new.",						"\tupdateStrategy := ClyInstantEnvironmentUpdateStrategy new"					],					"body" : [						"super initialize.",						"",						"accessGuard := Mutex new.",						"updateGuard := Mutex new.",						"plugins := OrderedCollection new.",						"queryCache := WeakValueDictionary new.",						"updateStrategy := ClyInstantEnvironmentUpdateStrategy new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5641917,					"argumentNames" : [ ]				},				"ZnBasicAuthenticator" : {					"sourceCode" : [						"initialize",						"",						"\tcredentials := Dictionary new"					],					"body" : [						"credentials := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2198516,					"argumentNames" : [ ]				},				"CmCommandAborted" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself reason: 'Unkown reason'"					],					"body" : [						"super initialize.",						"self reason: 'Unkown reason'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1638061,					"argumentNames" : [ ]				},				"RSXmasTree" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tbranchLenghtFactor := 0.3.",						"\tbranchPositionFactor := 0.3.",						"\tdt := 0.025.",						"\ttime := 0.",						"\tself initializeBraches"					],					"body" : [						"super initialize.",						"",						"branchLenghtFactor := 0.3.",						"branchPositionFactor := 0.3.",						"dt := 0.025.",						"time := 0.",						"self initializeBraches"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3091874,					"argumentNames" : [ ]				},				"TFUFFIIncrementCallback" : {					"sourceCode" : [						"initialize",						"",						"\tself signature: #( int #( int ) ) block: [ :a | a + 1 ]"					],					"body" : [						"self signature: #( int #( int ) ) block: [ :a | a + 1 ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2837926,					"argumentNames" : [ ]				},				"OSTouchSwipeDetector class" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tMinDistToBorder := 0.1"					],					"body" : [						"super initialize.",						"MinDistToBorder := 0.1"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4846569,					"argumentNames" : [ ]				},				"AthensCairoPatternPaint" : {					"sourceCode" : [						"initialize",						"",						"\thandle value = 0 ifTrue: [ self error: 'Error creating new paint' ].",						"\t\"register to be finalized\"",						"\tFFIExternalResourceManager addResource: self data: handle"					],					"body" : [						"handle value = 0 ifTrue: [ self error: 'Error creating new paint' ].",						"\"register to be finalized\"",						"FFIExternalResourceManager addResource: self data: handle"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3876495,					"argumentNames" : [ ]				},				"NSLogScale" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlinear := self class linear.",						"\tbase := 10.",						"\tpositive := true.",						"\tdomain := #( 1 0 )"					],					"body" : [						"super initialize.",						"linear := self class linear.",						"base := 10.",						"positive := true.",						"domain := #( 1 0 )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6422635,					"argumentNames" : [ ]				},				"TKTQueueTaskScheduler" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tqueue := AtomicSharedQueue new"					],					"body" : [						"super initialize.",						"queue := AtomicSharedQueue new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1211929,					"argumentNames" : [ ]				},				"SearchableTree" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\troots := OrderedCollection new asValueHolder"					],					"body" : [						"super initialize.",						"",						"roots := OrderedCollection new asValueHolder"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2902246,					"argumentNames" : [ ]				},				"SoundTheme" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself initializeSounds"					],					"body" : [						"super initialize.",						"self initializeSounds"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2676841,					"argumentNames" : [ ]				},				"DialogWindowMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tcancelled: true;",						"\t\taddInitialPanel"					],					"body" : [						"super initialize.",						"self",						"\tcancelled: true;",						"\taddInitialPanel"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2733704,					"argumentNames" : [ ]				},				"AlphaImageMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.",						"\tUse the 32 bit depth default image to avoid",						"\tunnecessary conversions.\"",						"",						"\tenabled := true.",						"\tautoSize := true.",						"\tscale := 1.0.",						"\tlayout := #topLeft.",						"\talpha := 1.0.",						"\tsuper initialize"					],					"body" : [						"enabled := true.",						"autoSize := true.",						"scale := 1.0.",						"layout := #topLeft.",						"alpha := 1.0.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver.",						"\tUse the 32 bit depth default image to avoid",						"\tunnecessary conversions."					],					"hash" : 1376420,					"argumentNames" : [ ]				},				"DelayMicrosecondTickerSimulation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tvmSimTheTimerSemaphore := Semaphore new.",						"\tvmSimNow := 0"					],					"body" : [						"super initialize.",						"vmSimTheTimerSemaphore := Semaphore new.",						"vmSimNow := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1724724,					"argumentNames" : [ ]				},				"IcePackageDefinition" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcategories := #(  )"					],					"body" : [						"super initialize.",						"categories := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6978478,					"argumentNames" : [ ]				},				"VariableBreakpoint" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\taccessStrategy := #all.",						"\ttargetVariableNames := OrderedCollection new.",						"\tisInstalled := false"					],					"body" : [						"super initialize.",						"accessStrategy := #all.",						"targetVariableNames := OrderedCollection new.",						"isInstalled := false"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 3819716,					"argumentNames" : [ ]				},				"SpMillerColumnPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tnewPresenterBlock := [ :model | ",						"\t                     Error signal:",						"\t\t                     'should provide a new presenter block' ].",						"\tself withHorizontalScrollBar"					],					"body" : [						"super initialize.",						"newPresenterBlock := [ :model | ",						"                     Error signal:",						"\t                     'should provide a new presenter block' ].",						"self withHorizontalScrollBar"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3026556,					"argumentNames" : [ ]				},				"SpToolCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttransform := [ :aContext | aContext ]"					],					"body" : [						"super initialize.",						"transform := [ :aContext | aContext ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3138186,					"argumentNames" : [ ]				},				"LayoutFrame" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize defaults:",						"\t - all offsets are zero",						"\t - fraction frame is maximum\"",						"",						"\tleftOffset := rightOffset := topOffset := bottomOffset := 0.",						"",						"\tleftFraction := topFraction := 0.",						"\trightFraction := bottomFraction := 1"					],					"body" : [						"leftOffset := rightOffset := topOffset := bottomOffset := 0.",						"",						"leftFraction := topFraction := 0.",						"rightFraction := bottomFraction := 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize defaults:",						"\t - all offsets are zero",						"\t - fraction frame is maximum"					],					"hash" : 2633408,					"argumentNames" : [ ]				},				"ClyActivityAnimationIconMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tchangeTableLayout;",						"\t\thResizing: #shrinkWrap;",						"\t\tvResizing: #shrinkWrap;",						"\t\tlistDirection: #leftToRight;",						"\t\tcellInset: 2.",						"\tprogress := 1.",						"\tprogressIconMorph := self currentIcon asMorph.",						"\tself addMorphBack: progressIconMorph.",						"\tself extent: progressIconMorph extent"					],					"body" : [						"super initialize.",						"self",						"\tchangeTableLayout;",						"\thResizing: #shrinkWrap;",						"\tvResizing: #shrinkWrap;",						"\tlistDirection: #leftToRight;",						"\tcellInset: 2.",						"progress := 1.",						"progressIconMorph := self currentIcon asMorph.",						"self addMorphBack: progressIconMorph.",						"self extent: progressIconMorph extent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5888074,					"argumentNames" : [ ]				},				"RandomBernoulli" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself p: 0.5"					],					"body" : [						"super initialize.",						"",						"self p: 0.5"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3116461,					"argumentNames" : [ ]				},				"SpMultipleSelectionMode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tselectedIndexes := OrderedCollection new"					],					"body" : [						"super initialize.",						"selectedIndexes := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3223735,					"argumentNames" : [ ]				},				"FreeTypeSubPixelAntiAliasedGlyphRenderer class" : {					"sourceCode" : [						"initialize",						"",						"\tFreeTypeGlyphRenderer current: self new"					],					"body" : [						"FreeTypeGlyphRenderer current: self new"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2693620,					"argumentNames" : [ ]				},				"AthensTextRenderer" : {					"sourceCode" : [						"initialize",						"",						"\tcolor := Color black"					],					"body" : [						"color := Color black"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2363150,					"argumentNames" : [ ]				},				"OSTouchPinchDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmaxDistanceBetweenFingersLine := self class",						"\t\t                                 maxDistanceBetweenFingersLine"					],					"body" : [						"super initialize.",						"maxDistanceBetweenFingersLine := self class",						"\t                                 maxDistanceBetweenFingersLine"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4848114,					"argumentNames" : [ ]				},				"AnimatedImageFrame" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\toffset := 0 @ 0.",						"\tdelay := self defaultDelay.",						"\tdisposal := #otherDisposal"					],					"body" : [						"super initialize.",						"offset := 0 @ 0.",						"delay := self defaultDelay.",						"disposal := #otherDisposal"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1515827,					"argumentNames" : [ ]				},				"ReThemeAccessRule class" : {					"sourceCode" : [						"initialize",						"",						"\t\" ReRuleManager cleanUp \"",						"",						"\t"					],					"body" : [ ],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						" ReRuleManager cleanUp "					],					"hash" : 2590344,					"argumentNames" : [ ]				},				"RSUserInputEvent" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcommandKeyPressed := false.",						"\tcontrolKeyPressed := false.",						"\toptionKeyPressed := false.",						"\tshiftKeyPressed := false"					],					"body" : [						"super initialize.",						"commandKeyPressed := false.",						"controlKeyPressed := false.",						"optionKeyPressed := false.",						"shiftKeyPressed := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6446419,					"argumentNames" : [ ]				},				"RPackageOrganizer class" : {					"sourceCode" : [						"initialize",						"",						"\t\"You need manually filll the data: ",						"\t",						"\tself initializeDefaultFromMC.",						"\t",						"\tis the usual way (but is not in this package by default, it depends on MC)\"",						"",						"\t"					],					"body" : [ ],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"You need manually filll the data: ",						"\t",						"\tself initializeDefaultFromMC.",						"\t",						"\tis the usual way (but is not in this package by default, it depends on MC)"					],					"hash" : 1960072,					"argumentNames" : [ ]				},				"SpLayoutConstraints" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself spec: #defaultSpec"					],					"body" : [						"super initialize.",						"self spec: #defaultSpec"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2946221,					"argumentNames" : [ ]				},				"FFIExternalResourceExecutor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsession := Smalltalk session"					],					"body" : [						"super initialize.",						"session := Smalltalk session"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1285680,					"argumentNames" : [ ]				},				"CommandLineArguments" : {					"sourceCode" : [						"initialize",						"",						"\t| documentPath |",						"\targuments := OrderedCollection withAll: Smalltalk arguments.",						"\tdocumentPath := Smalltalk vm documentPath.",						"\tdocumentPath isEmptyOrNil ifFalse: [ ",						"\t\targuments addFirst: documentPath ]"					],					"body" : [						"| documentPath |",						"arguments := OrderedCollection withAll: Smalltalk arguments.",						"documentPath := Smalltalk vm documentPath.",						"documentPath isEmptyOrNil ifFalse: [ arguments addFirst: documentPath ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1968461,					"argumentNames" : [ ]				},				"MetaLinkInstaller" : {					"sourceCode" : [						"initialize",						"",						"\tanonSubclassesBuilder := MetaLinkAnonymousClassBuilder new.",						"\tlinksRegistry := MetaLinkRegistry new.",						"\tlinkToNodesMapper := MetaLinkNodesMapper new.",						"\tsuperJumpLinks := OrderedCollection new.",						"",						"\tSystemAnnouncer uniqueInstance weak",						"\t\twhen: MethodModified",						"\t\tsend: #methodChanged:",						"\t\tto: self.",						"\tSystemAnnouncer uniqueInstance weak",						"\t\twhen: MethodRemoved",						"\t\tsend: #methodRemoved:",						"\t\tto: self.",						"\tSystemAnnouncer uniqueInstance weak",						"\t\twhen: MethodAdded",						"\t\tsend: #methodAdded:",						"\t\tto: self"					],					"body" : [						"anonSubclassesBuilder := MetaLinkAnonymousClassBuilder new.",						"linksRegistry := MetaLinkRegistry new.",						"linkToNodesMapper := MetaLinkNodesMapper new.",						"superJumpLinks := OrderedCollection new.",						"",						"SystemAnnouncer uniqueInstance weak",						"\twhen: MethodModified",						"\tsend: #methodChanged:",						"\tto: self.",						"SystemAnnouncer uniqueInstance weak",						"\twhen: MethodRemoved",						"\tsend: #methodRemoved:",						"\tto: self.",						"SystemAnnouncer uniqueInstance weak",						"\twhen: MethodAdded",						"\tsend: #methodAdded:",						"\tto: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3825714,					"argumentNames" : [ ]				},				"Announcer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tregistry := SubscriptionRegistry new"					],					"body" : [						"super initialize.",						"registry := SubscriptionRegistry new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1625881,					"argumentNames" : [ ]				},				"MessageTally" : {					"sourceCode" : [						"initialize",						"",						"\t\"We do not do a super initialize since it is not strickly necessary and more importantly MessageTally must be instantiated quickly\"",						"",						"\t\"super initialize.\"",						"",						"\tmaxClassNameSize := self class defaultMaxClassNameSize.",						"\tmaxClassPlusSelectorSize := self class",						"\t\t                            defaultMaxClassPlusSelectorSize.",						"\tmaxTabs := self class defaultMaxTabs.",						"\treportOtherProcesses := true.",						"\ttime := 0.",						"\ttally := 0"					],					"body" : [						"maxClassNameSize := self class defaultMaxClassNameSize.",						"maxClassPlusSelectorSize := self class defaultMaxClassPlusSelectorSize.",						"maxTabs := self class defaultMaxTabs.",						"reportOtherProcesses := true.",						"time := 0.",						"tally := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"We do not do a super initialize since it is not strickly necessary and more importantly MessageTally must be instantiated quickly"					],					"hash" : 4013372,					"argumentNames" : [ ]				},				"RSFlowCanvas" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeCanvas.",						"\tmapping := Dictionary new.",						"\tbreadcrumbsLabels := RSGroup new.",						"\tbreadcrumbs := OrderedCollection new"					],					"body" : [						"super initialize.",						"self initializeCanvas.",						"mapping := Dictionary new.",						"breadcrumbsLabels := RSGroup new.",						"breadcrumbs := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3074990,					"argumentNames" : [ ]				},				"RadioButtonGroupPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tbuttons := OrderedCollection new.",						"\tcanDeselectByClick := false asValueHolder.",						"\tcurrentActivated := nil asValueHolder.",						"\tsuper initialize"					],					"body" : [						"buttons := OrderedCollection new.",						"canDeselectByClick := false asValueHolder.",						"currentActivated := nil asValueHolder.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1716511,					"argumentNames" : [ ]				},				"ClyToolbarMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tcolor: self theme windowColor;",						"\t\tchangeTableLayout;",						"\t\theight: self defaultHeight;",						"\t\tlayoutInset: 2 @ 0;",						"\t\tlistDirection: #leftToRight;",						"\t\twrapCentering: #center;",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #rigid"					],					"body" : [						"super initialize.",						"self",						"\tcolor: self theme windowColor;",						"\tchangeTableLayout;",						"\theight: self defaultHeight;",						"\tlayoutInset: 2 @ 0;",						"\tlistDirection: #leftToRight;",						"\twrapCentering: #center;",						"\thResizing: #spaceFill;",						"\tvResizing: #rigid"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5895205,					"argumentNames" : [ ]				},				"DisplayScanner" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tignoreColorChanges := false"					],					"body" : [						"super initialize.",						"ignoreColorChanges := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1518090,					"argumentNames" : [ ]				},				"PanelMorphWithSplitters" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tpaneMorphs := OrderedCollection new"					],					"body" : [						"super initialize.",						"",						"paneMorphs := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1834826,					"argumentNames" : [ ]				},				"ClassOrganization" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tprotocolOrganizer := ProtocolOrganizer new"					],					"body" : [						"super initialize.",						"protocolOrganizer := ProtocolOrganizer new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1689625,					"argumentNames" : [ ]				},				"Cursor class" : {					"sourceCode" : [						"initialize",						"",						"\tself createStandardCursors.",						"\tSessionManager default registerGuiClassNamed: self name"					],					"body" : [						"self createStandardCursors.",						"SessionManager default registerGuiClassNamed: self name"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 1260124,					"argumentNames" : [ ]				},				"RSMarker" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\toffset := 0.",						"\toffsetRatio := 0"					],					"body" : [						"super initialize.",						"offset := 0.",						"offsetRatio := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6482663,					"argumentNames" : [ ]				},				"TFTestCallbackExceptionHandler" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tavailable := Semaphore new"					],					"body" : [						"super initialize.",						"available := Semaphore new"					],					"isTestMethod" : false,					"category" : "handling",					"comment" : [ ],					"hash" : 2835738,					"argumentNames" : [ ]				},				"RBScanner class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeClassificationTable"					],					"body" : [						"self initializeClassificationTable"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1890628,					"argumentNames" : [ ]				},				"ZnCrPortableWriteStream" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcr := Character cr.",						"\tlf := Character lf"					],					"body" : [						"super initialize.",						"cr := Character cr.",						"lf := Character lf"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 2002859,					"argumentNames" : [ ]				},				"CornerRounder class" : {					"sourceCode" : [						"initialize",						"",						"\t\"CornerRounder initialize\"",						"",						"\tCR0 := CR1 := self new",						"\t\t              masterMask: (Form",						"\t\t\t\t               extent: 6 @ 6",						"\t\t\t\t               fromArray:",						"\t\t\t\t               #( 2r1e26 2r111e26 2r1111e26 2r11111e26 2r11111e26",						"\t\t\t\t                  2r111111e26 )",						"\t\t\t\t               offset: 0 @ 0)",						"\t\t              masterOverlay: (Form",						"\t\t\t\t               extent: 6 @ 6",						"\t\t\t\t               fromArray:",						"\t\t\t\t               #( 2r1e26 2r110e26 2r1000e26 2r10000e26 2r10000e26",						"\t\t\t\t                  2r100000e26 )",						"\t\t\t\t               offset: 0 @ 0).",						"\tCR2 := self new",						"\t\t       masterMask: (Form",						"\t\t\t\t        extent: 6 @ 6",						"\t\t\t\t        fromArray:",						"\t\t\t\t        #( 2r1e26 2r111e26 2r1111e26 2r11111e26 2r11111e26",						"\t\t\t\t           2r111111e26 )",						"\t\t\t\t        offset: 0 @ 0)",						"\t\t       masterOverlay: (Form",						"\t\t\t\t        extent: 6 @ 6",						"\t\t\t\t        fromArray:",						"\t\t\t\t        #( 2r1e26 2r111e26 2r1111e26 2r11100e26 2r11000e26",						"\t\t\t\t           2r111000e26 )",						"\t\t\t\t        offset: 0 @ 0)"					],					"body" : [						"CR0 := CR1 := self new",						"\t              masterMask: (Form",						"\t\t\t               extent: 6 @ 6",						"\t\t\t               fromArray:",						"\t\t\t               #( 2r1e26 2r111e26 2r1111e26 2r11111e26 2r11111e26",						"\t\t\t                  2r111111e26 )",						"\t\t\t               offset: 0 @ 0)",						"\t              masterOverlay: (Form",						"\t\t\t               extent: 6 @ 6",						"\t\t\t               fromArray:",						"\t\t\t               #( 2r1e26 2r110e26 2r1000e26 2r10000e26 2r10000e26",						"\t\t\t                  2r100000e26 )",						"\t\t\t               offset: 0 @ 0).",						"CR2 := self new",						"\t       masterMask: (Form",						"\t\t\t        extent: 6 @ 6",						"\t\t\t        fromArray:",						"\t\t\t        #( 2r1e26 2r111e26 2r1111e26 2r11111e26 2r11111e26",						"\t\t\t           2r111111e26 )",						"\t\t\t        offset: 0 @ 0)",						"\t       masterOverlay: (Form",						"\t\t\t        extent: 6 @ 6",						"\t\t\t        fromArray:",						"\t\t\t        #( 2r1e26 2r111e26 2r1111e26 2r11100e26 2r11000e26",						"\t\t\t           2r111000e26 )",						"\t\t\t        offset: 0 @ 0)"					],					"isTestMethod" : false,					"category" : "all",					"comment" : [						"CornerRounder initialize"					],					"hash" : 2409909,					"argumentNames" : [ ]				},				"OSTouchGestureNeedingThresholdDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tminDistBeforeDetection := self class minDistanceBeforeDetection"					],					"body" : [						"super initialize.",						"minDistBeforeDetection := self class minDistanceBeforeDetection"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4844017,					"argumentNames" : [ ]				},				"CriticBrowser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcache := CriticsCache new.",						"\tchecker := ReSmalllintChecker new.",						"\tcache checker: checker.",						"\tcache browser: self.",						"\tcriticModel cache: cache"					],					"body" : [						"super initialize.",						"cache := CriticsCache new.",						"checker := ReSmalllintChecker new.",						"cache checker: checker.",						"cache browser: self.",						"criticModel cache: cache"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2500277,					"argumentNames" : [ ]				},				"RegisterableTranslatorMock" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initializes the receiver\"",						"",						"\tsuper initialize.",						"\ttranslations := Dictionary new.",						"\ttranslations at: #TestCase put: 'Testfall'"					],					"body" : [						"super initialize.",						"translations := Dictionary new.",						"translations at: #TestCase put: 'Testfall'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initializes the receiver"					],					"hash" : 5187534,					"argumentNames" : [ ]				},				"SessionManager" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcategories := OrderedCollection new.",						"",						"\tsystemCategory := self createCategory: 'System'.",						"\tnetworkCategory := self createCategory: 'Network'.",						"\tguiCategory := self createCategory: 'Graphical User Interface'.",						"\ttoolsCategory := self createCategory: 'Tools'.",						"\tuserCategory := self createCategory: 'User'"					],					"body" : [						"super initialize.",						"categories := OrderedCollection new.",						"",						"systemCategory := self createCategory: 'System'.",						"networkCategory := self createCategory: 'Network'.",						"guiCategory := self createCategory: 'Graphical User Interface'.",						"toolsCategory := self createCategory: 'Tools'.",						"userCategory := self createCategory: 'User'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1608611,					"argumentNames" : [ ]				},				"ClyDataSource" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tquery := ClyUnknownQuery instance.",						"\titemCursor := ClyClosedBrowserCursor instance.",						"\tdepth := 0.",						"\tdirty := false"					],					"body" : [						"super initialize.",						"query := ClyUnknownQuery instance.",						"itemCursor := ClyClosedBrowserCursor instance.",						"depth := 0.",						"dirty := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5883360,					"argumentNames" : [ ]				},				"FLAnalyzer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself setDefaultAnalysis.",						"\tself useLightMappers.",						"\tpluggableSubstitutions := OrderedCollection new.",						"\tinternalClasses := IdentitySet new.",						"\tinternalMethods := IdentitySet new.",						"\tglobalEnvironment := self class environment.",						"\tglobalSymbols := self class defaultGlobalSymbols asIdentitySet"					],					"body" : [						"super initialize.",						"self setDefaultAnalysis.",						"self useLightMappers.",						"pluggableSubstitutions := OrderedCollection new.",						"internalClasses := IdentitySet new.",						"internalMethods := IdentitySet new.",						"globalEnvironment := self class environment.",						"globalSymbols := self class defaultGlobalSymbols asIdentitySet"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2468476,					"argumentNames" : [ ]				},				"SourceFileArray" : {					"sourceCode" : [						"initialize",						"",						"\tfiles := Array new: 2.",						"",						"\treadOnlyQueue := SharedQueue new.",						"\tflushChanges := true"					],					"body" : [						"files := Array new: 2.",						"",						"readOnlyQueue := SharedQueue new.",						"flushChanges := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1936044,					"argumentNames" : [ ]				},				"MczInstaller class" : {					"sourceCode" : [						"initialize",						"",						"\tself clearVersionInfo"					],					"body" : [						"self clearVersionInfo"					],					"isTestMethod" : false,					"category" : "System-FileRegistry",					"comment" : [ ],					"hash" : 2638660,					"argumentNames" : [ ]				},				"DiffPatchVisitor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstream := String new writeStream"					],					"body" : [						"super initialize.",						"stream := String new writeStream"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6156461,					"argumentNames" : [ ]				},				"MCMockASubclass class" : {					"sourceCode" : [						"initialize",						"",						"\tInitializationOrder := InitializationOrder",						"\t\t                       ifNil: [ \"let the test fail\" -100 ]",						"\t\t                       ifNotNil: [ InitializationOrder + 1 ]"					],					"body" : [						"InitializationOrder := InitializationOrder",						"\t                       ifNil: [ \"let the test fail\" -100 ]",						"\t                       ifNotNil: [ InitializationOrder + 1 ]"					],					"isTestMethod" : false,					"category" : "as yet unclassified",					"comment" : [ ],					"hash" : 5083109,					"argumentNames" : [ ]				},				"Iceberg class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeSettings"					],					"body" : [						"self initializeSettings"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 7010628,					"argumentNames" : [ ]				},				"FTTableMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tshowIndex := 0.",						"\tshowColumnHeaders := true.",						"\tcolumns := #(  ).",						"\tneedToggleAtMouseUp := false.",						"\tself beRowSelection.",						"\tself beNotResizable.",						"\tself beSingleSelection.",						"\tself enableSearch.",						"\tself initializeScrollBars.",						"\tself initializeContainer.",						"\tself initializeKeyBindings.",						"",						"\tself resizeAllSubviews"					],					"body" : [						"super initialize.",						"showIndex := 0.",						"showColumnHeaders := true.",						"columns := #(  ).",						"needToggleAtMouseUp := false.",						"self beRowSelection.",						"self beNotResizable.",						"self beSingleSelection.",						"self enableSearch.",						"self initializeScrollBars.",						"self initializeContainer.",						"self initializeKeyBindings.",						"",						"self resizeAllSubviews"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1370816,					"argumentNames" : [ ]				},				"RubParagraph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdrawingEnabled := true"					],					"body" : [						"super initialize.",						"drawingEnabled := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2659786,					"argumentNames" : [ ]				},				"RSKeyboardEvent" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tkeyValue := 0"					],					"body" : [						"super initialize.",						"keyValue := 0"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 6456828,					"argumentNames" : [ ]				},				"FluidBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tslotsToBuild := #(  ).",						"\tclassSlotsToBuild := #(  ).",						"",						"\tuses := TaEmptyComposition new.",						"\tclassTraitsToBuild := uses classComposition",						"",						"\t\"\t#packageName . #tagToBuild\""					],					"body" : [						"super initialize.",						"slotsToBuild := #(  ).",						"classSlotsToBuild := #(  ).",						"",						"uses := TaEmptyComposition new.",						"classTraitsToBuild := uses classComposition",						"",						"\"\t#packageName . #tagToBuild\""					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3038327,					"argumentNames" : [ ]				},				"PreDebugAction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself needsUpdate: false.",						"\tself needsValidation: false"					],					"body" : [						"super initialize.",						"self needsUpdate: false.",						"self needsValidation: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3781857,					"argumentNames" : [ ]				},				"Base64MimeConverter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tmultiLine := true"					],					"body" : [						"super initialize.",						"",						"multiLine := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2163145,					"argumentNames" : [ ]				},				"Beacon" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tannouncer := Announcer new"					],					"body" : [						"super initialize.",						"announcer := Announcer new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1180185,					"argumentNames" : [ ]				},				"SpMillerLayout" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"",						"\tsuper initialize.",						"\tself spacing: 0.",						"\tself borderWidth: 0.",						"\tself visiblePages: 2"					],					"body" : [						"self class initializeSlots: self.",						"",						"super initialize.",						"self spacing: 0.",						"self borderWidth: 0.",						"self visiblePages: 2"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2944934,					"argumentNames" : [ ]				},				"MicStartStopMarkupBlock" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tisClosed := false"					],					"body" : [						"super initialize.",						"isClosed := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7341004,					"argumentNames" : [ ]				},				"VTermOutputStyleElement" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcolor := VTermDefaultColor new"					],					"body" : [						"super initialize.",						"color := VTermDefaultColor new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1963033,					"argumentNames" : [ ]				},				"MCOldDataStreamExtensions class" : {					"sourceCode" : [						"initialize",						"",						"\tMCDataStream registerReaderSelector: #readStringOld atIndex: 5.",						"\tMCDataStream",						"\t\tregisterClass: ByteArray",						"\t\tatIndex: 7",						"\t\tusingReadSelector: #readByteArray",						"\t\tusingWriteSelector: #writeByteArray:.",						"\tMCDataStream registerReaderSelector: #readReference atIndex: 10.",						"\tMCDataStream",						"\t\tregisterClass: Bitmap",						"\t\tatIndex: 11",						"\t\tusingReadSelector: #readBitmap",						"\t\tusingWriteSelector: #writeBitmap:.",						"\t\" 12 is for Classes but never worked\"",						"\tMCDataStream registerReaderSelector: #readInstace atIndex: 13.",						"\tMCDataStream",						"\t\tregisterClass: Float",						"\t\tatIndex: 14",						"\t\tusingReadSelector: #readFloat",						"\t\tusingWriteSelector: #writeFloat:.",						"\tMCDataStream",						"\t\tregisterClass: Rectangle",						"\t\tatIndex: 15",						"\t\tusingReadSelector: #readRectangle",						"\t\tusingWriteSelector: #writeRectangle:.",						"\tMCDataStream registerReaderSelector: #readShortInst atIndex: 16.",						"\tMCDataStream",						"\t\tregisterClass: WordArray",						"\t\tatIndex: 18",						"\t\tusingReadSelector: #readWordArray",						"\t\tusingWriteSelector: #writeBitmap:.",						"\tMCDataStream registerReaderSelector: #readMethod atIndex: 21"					],					"body" : [						"MCDataStream registerReaderSelector: #readStringOld atIndex: 5.",						"MCDataStream",						"\tregisterClass: ByteArray",						"\tatIndex: 7",						"\tusingReadSelector: #readByteArray",						"\tusingWriteSelector: #writeByteArray:.",						"MCDataStream registerReaderSelector: #readReference atIndex: 10.",						"MCDataStream",						"\tregisterClass: Bitmap",						"\tatIndex: 11",						"\tusingReadSelector: #readBitmap",						"\tusingWriteSelector: #writeBitmap:.",						"\" 12 is for Classes but never worked\"",						"MCDataStream registerReaderSelector: #readInstace atIndex: 13.",						"MCDataStream",						"\tregisterClass: Float",						"\tatIndex: 14",						"\tusingReadSelector: #readFloat",						"\tusingWriteSelector: #writeFloat:.",						"MCDataStream",						"\tregisterClass: Rectangle",						"\tatIndex: 15",						"\tusingReadSelector: #readRectangle",						"\tusingWriteSelector: #writeRectangle:.",						"MCDataStream registerReaderSelector: #readShortInst atIndex: 16.",						"MCDataStream",						"\tregisterClass: WordArray",						"\tatIndex: 18",						"\tusingReadSelector: #readWordArray",						"\tusingWriteSelector: #writeBitmap:.",						"MCDataStream registerReaderSelector: #readMethod atIndex: 21"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 3912565,					"argumentNames" : [ ]				},				"SimpleSwitchMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself borderWidth: 3.",						"\tself extent: self extent + 2.",						"\tonColor := Color r: 1.0 g: 0.6 b: 0.6.",						"\toffColor := Color lightGray.",						"\tcolor := offColor"					],					"body" : [						"super initialize.",						"self borderWidth: 3.",						"self extent: self extent + 2.",						"onColor := Color r: 1.0 g: 0.6 b: 0.6.",						"offColor := Color lightGray.",						"color := offColor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2759568,					"argumentNames" : [ ]				},				"ZnServer class" : {					"sourceCode" : [						"initialize",						"",						"\tManagedServers := IdentitySet new.",						"\tAlwaysRestart := true.",						"\tself environment",						"\t\tat: #SessionManager",						"\t\tifPresent: [ :manager | ",						"\t\tmanager default registerNetworkClassNamed: self name ]",						"\t\tifAbsent: [ ",						"\t\t\tSmalltalk",						"\t\t\t\taddToStartUpList: self;",						"\t\t\t\taddToShutDownList: self ]"					],					"body" : [						"ManagedServers := IdentitySet new.",						"AlwaysRestart := true.",						"self environment",						"\tat: #SessionManager",						"\tifPresent: [ :manager | ",						"\tmanager default registerNetworkClassNamed: self name ]",						"\tifAbsent: [ ",						"\t\tSmalltalk",						"\t\t\taddToStartUpList: self;",						"\t\t\taddToShutDownList: self ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2215890,					"argumentNames" : [ ]				},				"DisplayScreen class" : {					"sourceCode" : [						"initialize",						"",						"\t| display |",						"\tdisplay := self new.",						"\tdisplay setExtent: 0 @ 0 depth: 32.",						"\tSmalltalk globals at: #Display put: display.",						"",						"\tself deferUpdates: false"					],					"body" : [						"| display |",						"display := self new.",						"display setExtent: 0 @ 0 depth: 32.",						"Smalltalk globals at: #Display put: display.",						"",						"self deferUpdates: false"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 1524939,					"argumentNames" : [ ]				},				"IndentingListItemMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"\t\"\"",						"\tindentLevel := 0.",						"\tisExpanded := false"					],					"body" : [						"super initialize.",						"\"\"",						"indentLevel := 0.",						"isExpanded := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 1401163,					"argumentNames" : [ ]				},				"OupsSingleDebuggerSelector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thandled := true"					],					"body" : [						"super initialize.",						"handled := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1242568,					"argumentNames" : [ ]				},				"RGTraitV2Strategy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tcomment := self unresolvedValue: self defaultComment.",						"\tclassVariables := self unresolvedValue: self defaultClassVariables.",						"\tpackage := self unresolvedValue: self defaultPackage.",						"\tsharedPools := self unresolvedValue: self defaultSharedPools"					],					"body" : [						"super initialize.",						"",						"comment := self unresolvedValue: self defaultComment.",						"classVariables := self unresolvedValue: self defaultClassVariables.",						"package := self unresolvedValue: self defaultPackage.",						"sharedPools := self unresolvedValue: self defaultSharedPools"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6045180,					"argumentNames" : [ ]				},				"SpConfirmDialog" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself title: 'Confirm'"					],					"body" : [						"super initialize.",						"self title: 'Confirm'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3129517,					"argumentNames" : [ ]				},				"SpToolbarToggleButtonPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tselected := false"					],					"body" : [						"super initialize.",						"selected := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3283304,					"argumentNames" : [ ]				},				"SDL_Texture" : {					"sourceCode" : [						"initialize",						"",						"\tself autoRelease"					],					"body" : [						"self autoRelease"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4870468,					"argumentNames" : [ ]				},				"RubTextStopConditions" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the default stop conditions.\"",						"",						"\tstops := Array new: 258.",						"\tself endOfRun: #endOfRun.",						"\tself crossedX: #crossedX"					],					"body" : [						"stops := Array new: 258.",						"self endOfRun: #endOfRun.",						"self crossedX: #crossedX"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the default stop conditions."					],					"hash" : 2668586,					"argumentNames" : [ ]				},				"DefaultSortFunction class" : {					"sourceCode" : [						"initialize",						"",						"\tDefault := self new"					],					"body" : [						"Default := self new"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 5251674,					"argumentNames" : [ ]				},				"SpNotebookMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tremoveMorph: self contentMorph;",						"\t\tremoveMorph: self tabSelectorMorph;",						"\t\theaderMorph: self newHeaderMorph;",						"\t\taddMorph: self headerMorph;",						"\t\taddMorph: self contentMorph"					],					"body" : [						"super initialize.",						"self",						"\tremoveMorph: self contentMorph;",						"\tremoveMorph: self tabSelectorMorph;",						"\theaderMorph: self newHeaderMorph;",						"\taddMorph: self headerMorph;",						"\taddMorph: self contentMorph"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3368706,					"argumentNames" : [ ]				},				"SpCommandGroup" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttoolbarPopoverButton := false"					],					"body" : [						"super initialize.",						"toolbarPopoverButton := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3194828,					"argumentNames" : [ ]				},				"ClyFilteringCritiqueQuery" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tbaseCritiqueQuery := ClyAllBasisCritiqueQuery new"					],					"body" : [						"super initialize.",						"",						"baseCritiqueQuery := ClyAllBasisCritiqueQuery new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5803035,					"argumentNames" : [ ]				},				"ReBooleanPrecedenceRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny: #( '`@object1 | `@object2 = `@object3'",						"\t\t   '`@object1 | `@object2 == `@object3'",						"\t\t   '`@object1 & `@object2 = `@object3'",						"\t\t   '`@object1 & `@object2 == `@object3'",						"\t\t   '`@object1 | `@object2 ~= `@object3'",						"\t\t   '`@object1 | `@object2 ~~ `@object3'",						"\t\t   '`@object1 & `@object2 ~= `@object3'",						"\t\t   '`@object1 & `@object2 ~~ `@object3' )"					],					"body" : [						"super initialize.",						"self matchesAny: #( '`@object1 | `@object2 = `@object3'",						"\t   '`@object1 | `@object2 == `@object3'",						"\t   '`@object1 & `@object2 = `@object3'",						"\t   '`@object1 & `@object2 == `@object3'",						"\t   '`@object1 | `@object2 ~= `@object3'",						"\t   '`@object1 | `@object2 ~~ `@object3'",						"\t   '`@object1 & `@object2 ~= `@object3'",						"\t   '`@object1 & `@object2 ~~ `@object3' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4739501,					"argumentNames" : [ ]				},				"DTDebugTestCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tname: 'Debug';",						"\t\tdescription:",						"\t\t\t'Re-run the test selected and opens a debugger when an assertion fails.'"					],					"body" : [						"super initialize.",						"self",						"\tname: 'Debug';",						"\tdescription:",						"\t\t'Re-run the test selected and opens a debugger when an assertion fails.'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3761845,					"argumentNames" : [ ]				},				"CmCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself name: self class defaultName.",						"\tself description: self class defaultDescription"					],					"body" : [						"super initialize.",						"self name: self class defaultName.",						"self description: self class defaultDescription"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1595681,					"argumentNames" : [ ]				},				"TFUFFIFailingCallbackWithDefault" : {					"sourceCode" : [						"initialize",						"",						"\tself",						"\t\tsignature: #( int #( int ) )",						"\t\tblock: [ :a | self error: 'An error in a callback' ]"					],					"body" : [						"self",						"\tsignature: #( int #( int ) )",						"\tblock: [ :a | self error: 'An error in a callback' ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2837414,					"argumentNames" : [ ]				},				"OSTextInputEvent" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmodifiers := OSStateModifiers new"					],					"body" : [						"super initialize.",						"modifiers := OSStateModifiers new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4808476,					"argumentNames" : [ ]				},				"RSGaussianJitterVanDerPloegTreeLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself initializeRSTWalkBasedRegularTreeLayoutRandomizedGaps"					],					"body" : [						"super initialize.",						"",						"self initializeRSTWalkBasedRegularTreeLayoutRandomizedGaps"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3122025,					"argumentNames" : [ ]				},				"MalGraphReducer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcircuitNodes := OrderedCollection new.",						"\tcircuits := OrderedCollection new"					],					"body" : [						"super initialize.",						"circuitNodes := OrderedCollection new.",						"circuits := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2552184,					"argumentNames" : [ ]				},				"OCOpalExamples" : {					"sourceCode" : [						"initialize",						"",						"\tcollection := OrderedCollection new"					],					"body" : [						"collection := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4541173,					"argumentNames" : [ ]				},				"FFISystemV64CallbackArgumentReader" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcurrentFloatRegisterIndex := 1"					],					"body" : [						"super initialize.",						"currentFloatRegisterIndex := 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1282514,					"argumentNames" : [ ]				},				"OCASTTranslator class" : {					"sourceCode" : [						"initialize",						"",						"\tOptimizedMessages := { ",						"\t\t                     (#caseOf: -> #emitCaseOf:).",						"\t\t                     (#caseOf:otherwise: -> #emitCaseOfOtherwise:).",						"\t\t                     (#ifFalse: -> #emitIfFalse:).",						"\t\t                     (#ifFalse:ifTrue: -> #emitIfFalseIfTrue:).",						"\t\t                     (#ifNil: -> #emitIfNil:).",						"\t\t                     (#ifNil:ifNotNil: -> #emitIfNilIfNotNil:).",						"\t\t                     (#ifNotNil: -> #emitIfNotNil:).",						"\t\t                     (#ifNotNil:ifNil: -> #emitIfNotNilIfNil:).",						"\t\t                     (#ifTrue: -> #emitIfTrue:).",						"\t\t                     (#ifTrue:ifFalse: -> #emitIfTrueIfFalse:).",						"\t\t                     (#or: -> #emitOr:).",						"\t\t                     (#and: -> #emitAnd:).",						"\t\t                     (#timesRepeat: -> #emitTimesRepeat:).",						"\t\t                     (#repeat -> #emitRepeat:).",						"\t\t                     (#to:by:do: -> #emitToByDo:).",						"\t\t                     (#to:do: -> #emitToDo:).",						"\t\t                     (#whileFalse: -> #emitWhileFalse:).",						"\t\t                     (#whileTrue: -> #emitWhileTrue:).",						"\t\t                     (#whileFalse -> #emitWhileFalse:).",						"\t\t                     (#whileTrue -> #emitWhileTrue:) } asDictionary"					],					"body" : [						"OptimizedMessages := { ",						"\t                     (#caseOf: -> #emitCaseOf:).",						"\t                     (#caseOf:otherwise: -> #emitCaseOfOtherwise:).",						"\t                     (#ifFalse: -> #emitIfFalse:).",						"\t                     (#ifFalse:ifTrue: -> #emitIfFalseIfTrue:).",						"\t                     (#ifNil: -> #emitIfNil:).",						"\t                     (#ifNil:ifNotNil: -> #emitIfNilIfNotNil:).",						"\t                     (#ifNotNil: -> #emitIfNotNil:).",						"\t                     (#ifNotNil:ifNil: -> #emitIfNotNilIfNil:).",						"\t                     (#ifTrue: -> #emitIfTrue:).",						"\t                     (#ifTrue:ifFalse: -> #emitIfTrueIfFalse:).",						"\t                     (#or: -> #emitOr:).",						"\t                     (#and: -> #emitAnd:).",						"\t                     (#timesRepeat: -> #emitTimesRepeat:).",						"\t                     (#repeat -> #emitRepeat:).",						"\t                     (#to:by:do: -> #emitToByDo:).",						"\t                     (#to:do: -> #emitToDo:).",						"\t                     (#whileFalse: -> #emitWhileFalse:).",						"\t                     (#whileTrue: -> #emitWhileTrue:).",						"\t                     (#whileFalse -> #emitWhileFalse:).",						"\t                     (#whileTrue -> #emitWhileTrue:) } asDictionary"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2149419,					"argumentNames" : [ ]				},				"ClyUnknownQueryResult" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tneedsRebuild := false.",						"\tself initializeItems.",						"\tself collectMetadata"					],					"body" : [						"super initialize.",						"needsRebuild := false.",						"self initializeItems.",						"self collectMetadata"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5652545,					"argumentNames" : [ ]				},				"GradientPaint" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcolorRamp := OrderedCollection new"					],					"body" : [						"super initialize.",						"colorRamp := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3847193,					"argumentNames" : [ ]				},				"ListDialogWindow" : {					"sourceCode" : [						"initialize",						"",						"\tlist := #(  ).",						"\tlistIndex := 0.",						"\tisResizeable := true.",						"\tlistBlock := [ :regex | #(  ) ].",						"\tdisplayBlock := [ :e | e printString ].",						"\tbrowseBlock := [ :tmp | tmp browse ].",						"\tpattern := '.' asRegexIgnoringCase.",						"\tacceptNewEntry := false.",						"",						"\tsuper initialize"					],					"body" : [						"list := #(  ).",						"listIndex := 0.",						"isResizeable := true.",						"listBlock := [ :regex | #(  ) ].",						"displayBlock := [ :e | e printString ].",						"browseBlock := [ :tmp | tmp browse ].",						"pattern := '.' asRegexIgnoringCase.",						"acceptNewEntry := false.",						"",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2740891,					"argumentNames" : [ ]				},				"STONReader" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tobjects := IdentityDictionary new.",						"\tclasses := IdentityDictionary new.",						"\tacceptUnknownClasses := convertNewLines := false.",						"\tnewLine := String cr.",						"\tunresolvedReferences := 0"					],					"body" : [						"super initialize.",						"objects := IdentityDictionary new.",						"classes := IdentityDictionary new.",						"acceptUnknownClasses := convertNewLines := false.",						"newLine := String cr.",						"unresolvedReferences := 0"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 1134130,					"argumentNames" : [ ]				},				"ClySystemEnvironment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tprojectManager := ClyProjectManagerRegistry new"					],					"body" : [						"super initialize.",						"projectManager := ClyProjectManagerRegistry new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5700381,					"argumentNames" : [ ]				},				"ReAssignmentInIfTrueRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace:",						"\t\t\t'``@Boolean ifTrue: [`variable := ``@true] ifFalse: [`variable := ``@false]'",						"\t\twith:",						"\t\t\t'`variable := ``@Boolean ifTrue: [``@true] ifFalse: [``@false]';",						"\t\treplace:",						"\t\t\t'``@Boolean ifFalse: [`variable := ``@true] ifTrue: [`variable := ``@false]'",						"\t\twith:",						"\t\t\t'`variable := ``@Boolean ifFalse: [``@true] ifTrue: [``@false]'"					],					"body" : [						"super initialize.",						"self",						"\treplace:",						"\t\t'``@Boolean ifTrue: [`variable := ``@true] ifFalse: [`variable := ``@false]'",						"\twith: '`variable := ``@Boolean ifTrue: [``@true] ifFalse: [``@false]';",						"\treplace:",						"\t\t'``@Boolean ifFalse: [`variable := ``@true] ifTrue: [`variable := ``@false]'",						"\twith: '`variable := ``@Boolean ifFalse: [``@true] ifTrue: [``@false]'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4727344,					"argumentNames" : [ ]				},				"RSEasingInterpolator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself inOut"					],					"body" : [						"super initialize.",						"self inOut"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6504553,					"argumentNames" : [ ]				},				"MetacelloPharoPlatform class" : {					"sourceCode" : [						"initialize",						"",						"\tself select"					],					"body" : [						"self select"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 1137476,					"argumentNames" : [ ]				},				"PathShape" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself vertices: OrderedCollection new"					],					"body" : [						"super initialize.",						"self vertices: OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2674458,					"argumentNames" : [ ]				},				"CoCompletionContext" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcompletionBuilder := CoASTHeuristicsResultSetBuilder ",						"\t\t                     initializeOnContext: self"					],					"body" : [						"super initialize.",						"completionBuilder := CoASTHeuristicsResultSetBuilder ",						"\t                     initializeOnContext: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6099600,					"argumentNames" : [ ]				},				"ReBetweenAndRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: '``@a >= ``@b and: [``@a <= ``@c]'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@a >= ``@b & (``@a <= ``@c)'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@b <= ``@a and: [``@a <= ``@c]'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@b <= ``@a & (``@a <= ``@c)'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@a <= ``@c and: [``@a >= ``@b]'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@a <= ``@c & (``@a >= ``@b)'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@c >= ``@a and: [``@a >= ``@b]'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@c >= ``@a & (``@a >= ``@b)'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@a >= ``@b and: [``@c >= ``@a]'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@a >= ``@b & (``@c >= ``@a)'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@b <= ``@a and: [``@c >= ``@a]'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@b <= ``@a & (``@c >= ``@a)'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@a <= ``@c and: [``@b <= ``@a]'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@a <= ``@c & (``@b <= ``@a)'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@c >= ``@a and: [``@b <= ``@a]'",						"\t\twith: '``@a between: ``@b and: ``@c';",						"\t\treplace: '``@c >= ``@a & (``@b <= ``@a)'",						"\t\twith: '``@a between: ``@b and: ``@c'"					],					"body" : [						"super initialize.",						"self",						"\treplace: '``@a >= ``@b and: [``@a <= ``@c]'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@a >= ``@b & (``@a <= ``@c)'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@b <= ``@a and: [``@a <= ``@c]'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@b <= ``@a & (``@a <= ``@c)'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@a <= ``@c and: [``@a >= ``@b]'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@a <= ``@c & (``@a >= ``@b)'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@c >= ``@a and: [``@a >= ``@b]'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@c >= ``@a & (``@a >= ``@b)'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@a >= ``@b and: [``@c >= ``@a]'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@a >= ``@b & (``@c >= ``@a)'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@b <= ``@a and: [``@c >= ``@a]'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@b <= ``@a & (``@c >= ``@a)'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@a <= ``@c and: [``@b <= ``@a]'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@a <= ``@c & (``@b <= ``@a)'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@c >= ``@a and: [``@b <= ``@a]'",						"\twith: '``@a between: ``@b and: ``@c';",						"\treplace: '``@c >= ``@a & (``@b <= ``@a)'",						"\twith: '``@a between: ``@b and: ``@c'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4729134,					"argumentNames" : [ ]				},				"RBVariableNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tvariable := UnresolvedVariable instance.",						"\tname := ''.",						"\tstart := 0"					],					"body" : [						"super initialize.",						"variable := UnresolvedVariable instance.",						"name := ''.",						"start := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1977428,					"argumentNames" : [ ]				},				"ChangeSorterModel class" : {					"sourceCode" : [						"initialize",						"",						"\tself classDescriptionsMap: self defaultClassDescriptionsMap"					],					"body" : [						"self classDescriptionsMap: self defaultClassDescriptionsMap"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 6189876,					"argumentNames" : [ ]				},				"RBRefactoryTyper" : {					"sourceCode" : [						"initialize",						"",						"\tmodel := RBClassModelFactory rbNamespace new.",						"\tclass := model classFor: Object.",						"\tvariableTypes := Dictionary new.",						"\tvariableMessages := Dictionary new.",						"\tselectorLookup := IdentityDictionary new.",						"\tbestGuesses := Dictionary new"					],					"body" : [						"model := RBClassModelFactory rbNamespace new.",						"class := model classFor: Object.",						"variableTypes := Dictionary new.",						"variableMessages := Dictionary new.",						"selectorLookup := IdentityDictionary new.",						"bestGuesses := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3994554,					"argumentNames" : [ ]				},				"ClyStatusBarMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tcolor: self theme windowColor;",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #shrinkWrap;",						"\t\theight: 0;",						"\t\tminHeight: 0;",						"\t\tlayoutInset: 10 @ 2.",						"\tself buildContextBar.",						"\tself buildCommandBar"					],					"body" : [						"super initialize.",						"self",						"\tcolor: self theme windowColor;",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\thResizing: #spaceFill;",						"\tvResizing: #shrinkWrap;",						"\theight: 0;",						"\tminHeight: 0;",						"\tlayoutInset: 10 @ 2.",						"self buildContextBar.",						"self buildCommandBar"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5895145,					"argumentNames" : [ ]				},				"FFITestNestingStructure class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self rebuildFieldAccessors\"",						"",						"\t"					],					"body" : [ ],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self rebuildFieldAccessors"					],					"hash" : 2439560,					"argumentNames" : [ ]				},				"AnimatedImageMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself color: Color transparent.",						"\tframes := OrderedCollection new.",						"\tcurrentDisposal := #restoreBackground.",						"\tactiveForm := Form extent: self extent"					],					"body" : [						"super initialize.",						"self color: Color transparent.",						"frames := OrderedCollection new.",						"currentDisposal := #restoreBackground.",						"activeForm := Form extent: self extent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1365643,					"argumentNames" : [ ]				},				"BracketMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself orientation: #horizontal"					],					"body" : [						"super initialize.",						"self orientation: #horizontal"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1364653,					"argumentNames" : [ ]				},				"ComposedSortFunction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbaseSortFunction := self class default"					],					"body" : [						"super initialize.",						"baseSortFunction := self class default"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5250029,					"argumentNames" : [ ]				},				"SliderMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"\tvalue := 0.0.",						"\tdescending := false.",						"\tdragging := false.",						"\tself initializeSlider"					],					"body" : [						"super initialize.",						"value := 0.0.",						"descending := false.",						"dragging := false.",						"self initializeSlider"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 2726968,					"argumentNames" : [ ]				},				"ProcessBrowser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself class registerWellKnownProcesses.",						"\tmethodText := ''.",						"\tstackListIndex := 0.",						"\tsearchString := ''.",						"\tlastUpdate := 0.",						"\ttextModel := RubScrolledTextModel new",						"\t\t             interactionModel: self;",						"\t\t             yourself.",						"\tcpuWatcherMonitoring := CPUWatcher cpuWatcherEnabled and: [ ",						"\t\t                        self ensureCPUWatcherMonitoring ].",						"\tself",						"\t\tupdateProcessList;",						"\t\tprocessListIndex: 1"					],					"body" : [						"super initialize.",						"self class registerWellKnownProcesses.",						"methodText := ''.",						"stackListIndex := 0.",						"searchString := ''.",						"lastUpdate := 0.",						"textModel := RubScrolledTextModel new",						"\t             interactionModel: self;",						"\t             yourself.",						"cpuWatcherMonitoring := CPUWatcher cpuWatcherEnabled and: [ ",						"\t                        self ensureCPUWatcherMonitoring ].",						"self",						"\tupdateProcessList;",						"\tprocessListIndex: 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4011663,					"argumentNames" : [ ]				},				"RBSmalllintChecker" : {					"sourceCode" : [						"initialize",						"",						"\tmethodBlock := [  ].",						"\tenvironment := RBBrowserEnvironment new.",						"\tcontext := RBSmalllintContext newNoCache"					],					"body" : [						"methodBlock := [  ].",						"environment := RBBrowserEnvironment new.",						"context := RBSmalllintContext newNoCache"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2492755,					"argumentNames" : [ ]				},				"Protocol" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tmethodSelectors := IdentitySet new.",						"\tname := self class defaultName"					],					"body" : [						"super initialize.",						"",						"methodSelectors := IdentitySet new.",						"name := self class defaultName"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1641817,					"argumentNames" : [ ]				},				"FFIConstants class" : {					"sourceCode" : [						"initialize",						"",						"\t\"FFIConstants initialize\"",						"",						"\tself",						"\t\tinitializeTypeConstants;",						"\t\tinitializeErrorConstants;",						"\t\tinitializeCallingConventions"					],					"body" : [						"self",						"\tinitializeTypeConstants;",						"\tinitializeErrorConstants;",						"\tinitializeCallingConventions"					],					"isTestMethod" : false,					"category" : "pool initialization",					"comment" : [						"FFIConstants initialize"					],					"hash" : 1755589,					"argumentNames" : [ ]				},				"AColorSelectorMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tvalue: 1.0;",						"\t\tcolor: Color black"					],					"body" : [						"super initialize.",						"self",						"\tvalue: 1.0;",						"\tcolor: Color black"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2728208,					"argumentNames" : [ ]				},				"EpLogNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\treferencedNodes := Set new"					],					"body" : [						"super initialize.",						"",						"referencedNodes := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5025817,					"argumentNames" : [ ]				},				"FFITestArrayStructure class" : {					"sourceCode" : [						"initialize",						"",						"\tChar5 := FFITypeArray ofType: 'char' size: 5.",						"\tByte10 := FFITypeArray ofType: 'byte' size: 10"					],					"body" : [						"Char5 := FFITypeArray ofType: 'char' size: 5.",						"Byte10 := FFITypeArray ofType: 'byte' size: 10"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2374401,					"argumentNames" : [ ]				},				"ReCascadedNextPutAllsRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: '``@rcvr nextPutAll: ``@object1 , ``@object2'",						"\t\twith: '``@rcvr nextPutAll: ``@object1; nextPutAll: ``@object2';",						"\t\treplace: '``@rcvr show: ``@object1 , ``@object2'",						"\t\twith: '``@rcvr show: ``@object1; show: ``@object2'"					],					"body" : [						"super initialize.",						"self",						"\treplace: '``@rcvr nextPutAll: ``@object1 , ``@object2'",						"\twith: '``@rcvr nextPutAll: ``@object1; nextPutAll: ``@object2';",						"\treplace: '``@rcvr show: ``@object1 , ``@object2'",						"\twith: '``@rcvr show: ``@object1; show: ``@object2'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4728880,					"argumentNames" : [ ]				},				"ZnBase64Encoder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\talphabet := DefaultAlphabet.",						"\tinverse := DefaultInverse.",						"\tself whitespace: #any"					],					"body" : [						"super initialize.",						"alphabet := DefaultAlphabet.",						"inverse := DefaultInverse.",						"self whitespace: #any"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1991563,					"argumentNames" : [ ]				},				"SourceFileArray class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1935520,					"argumentNames" : [ ]				},				"ClyNavigationHistory" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tundoExecuting := false.",						"\tredoExecuting := false.",						"\twaitingNewState := true.",						"\tundoList := OrderedCollection new.",						"\tredoList := OrderedCollection new"					],					"body" : [						"super initialize.",						"undoExecuting := false.",						"redoExecuting := false.",						"waitingNewState := true.",						"undoList := OrderedCollection new.",						"redoList := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5904578,					"argumentNames" : [ ]				},				"SliderPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmax := 100 asValueHolder.",						"\tmin := 0 asValueHolder.",						"\tquantum := 1 asValueHolder.",						"\tvalue := 0 asValueHolder.",						"\tabsoluteValue := 0 asValueHolder.",						"\tlabelHolder := '' asValueHolder.",						"\tisChanging := false.",						"",						"\tmax whenChangedDo: [ :m | ",						"\t\tself changed: { ",						"\t\t\t\t#max:.",						"\t\t\t\tm } ].",						"\tmin whenChangedDo: [ :m | ",						"\t\tself changed: { ",						"\t\t\t\t#min:.",						"\t\t\t\tm } ].",						"\tquantum whenChangedDo: [ :m | ",						"\t\tself changed: { ",						"\t\t\t\t#quantum:.",						"\t\t\t\tm } ].",						"",						"\tvalue whenChangedDo: [ :v | ",						"\t\tisChanging ifFalse: [ ",						"\t\t\tisChanging := true.",						"\t\t\tself absoluteValue: v - self min / (self max - self min).",						"\t\t\tself changed: { ",						"\t\t\t\t\t#scaledValue:.",						"\t\t\t\t\tv }.",						"\t\t\tisChanging := false ].",						"\t\tself changed: #value ].",						"",						"\tabsoluteValue whenChangedDo: [ :v | ",						"\t\tisChanging ifFalse: [ ",						"\t\t\tisChanging := true.",						"\t\t\tself value:",						"\t\t\t\t(self min + (v * (self max - self min)) roundTo: self quantum).",						"\t\t\tself changed: { ",						"\t\t\t\t\t#value:.",						"\t\t\t\t\tv }.",						"\t\t\tisChanging := false ] ].",						"",						"\tlabelHolder whenChangedDo: [ :v | self changed: #label ]"					],					"body" : [						"super initialize.",						"max := 100 asValueHolder.",						"min := 0 asValueHolder.",						"quantum := 1 asValueHolder.",						"value := 0 asValueHolder.",						"absoluteValue := 0 asValueHolder.",						"labelHolder := '' asValueHolder.",						"isChanging := false.",						"",						"max whenChangedDo: [ :m | ",						"\tself changed: { ",						"\t\t\t#max:.",						"\t\t\tm } ].",						"min whenChangedDo: [ :m | ",						"\tself changed: { ",						"\t\t\t#min:.",						"\t\t\tm } ].",						"quantum whenChangedDo: [ :m | ",						"\tself changed: { ",						"\t\t\t#quantum:.",						"\t\t\tm } ].",						"",						"value whenChangedDo: [ :v | ",						"\tisChanging ifFalse: [ ",						"\t\tisChanging := true.",						"\t\tself absoluteValue: v - self min / (self max - self min).",						"\t\tself changed: { ",						"\t\t\t\t#scaledValue:.",						"\t\t\t\tv }.",						"\t\tisChanging := false ].",						"\tself changed: #value ].",						"",						"absoluteValue whenChangedDo: [ :v | ",						"\tisChanging ifFalse: [ ",						"\t\tisChanging := true.",						"\t\tself value:",						"\t\t\t(self min + (v * (self max - self min)) roundTo: self quantum).",						"\t\tself changed: { ",						"\t\t\t\t#value:.",						"\t\t\t\tv }.",						"\t\tisChanging := false ] ].",						"",						"labelHolder whenChangedDo: [ :v | self changed: #label ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1699305,					"argumentNames" : [ ]				},				"ClyCompositeTestResultProperty" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttestCaseResults := IdentityDictionary new"					],					"body" : [						"super initialize.",						"",						"testCaseResults := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5845021,					"argumentNames" : [ ]				},				"TestCase class" : {					"sourceCode" : [						"initialize",						"",						"\tSystemAnnouncer uniqueInstance unsubscribe: self.",						"\tSystemAnnouncer uniqueInstance weak",						"\t\twhen: MethodAdded , MethodModified , MethodRemoved",						"\t\tsend: #methodChanged:",						"\t\tto: self"					],					"body" : [						"SystemAnnouncer uniqueInstance unsubscribe: self.",						"SystemAnnouncer uniqueInstance weak",						"\twhen: MethodAdded , MethodModified , MethodRemoved",						"\tsend: #methodChanged:",						"\tto: self"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1149840,					"argumentNames" : [ ]				},				"HiRulerBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlinksBlock := [ :value | #(  ) ].",						"\tvalues := #(  )"					],					"body" : [						"super initialize.",						"linksBlock := [ :value | #(  ) ].",						"values := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5009029,					"argumentNames" : [ ]				},				"SpActionBarPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\titems := Dictionary new asValueHolder"					],					"body" : [						"super initialize.",						"items := Dictionary new asValueHolder"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3010802,					"argumentNames" : [ ]				},				"CmdMenuCommandActivationStrategy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmenuItemOrder := 1000.",						"\tmenuGroup := CmdRootMenuGroup"					],					"body" : [						"super initialize.",						"menuItemOrder := 1000.",						"menuGroup := CmdRootMenuGroup"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3677602,					"argumentNames" : [ ]				},				"BasicCommandLineHandler class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1659552,					"argumentNames" : [ ]				},				"MicTableBlock" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trows := OrderedCollection new.",						"\thasHeader := false"					],					"body" : [						"super initialize.",						"rows := OrderedCollection new.",						"hasHeader := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7335740,					"argumentNames" : [ ]				},				"WorldState class" : {					"sourceCode" : [						"initialize",						"",						"\t\"WorldState initialize\"",						"",						"\tMinCycleLapse := 16. \"allows 60 frames per second...\"",						"\tDeferredUIMessages := nil"					],					"body" : [						"MinCycleLapse := 16. \"allows 60 frames per second...\"",						"DeferredUIMessages := nil"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"WorldState initialize"					],					"hash" : 2457625,					"argumentNames" : [ ]				},				"RubAnnotationDisplayer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself side: #bottom"					],					"body" : [						"super initialize.",						"self side: #bottom"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1390765,					"argumentNames" : [ ]				},				"ShSlotChangeDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbuilderAccessor := [ :e | e layoutDefinition allSlots asArray ].",						"\tclassAccessor := [ :e | e allSlots asArray ].",						"\tcomparer := [ :a :b | self compareSlotCollection: a with: b ]"					],					"body" : [						"super initialize.",						"builderAccessor := [ :e | e layoutDefinition allSlots asArray ].",						"classAccessor := [ :e | e allSlots asArray ].",						"comparer := [ :a :b | self compareSlotCollection: a with: b ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1619524,					"argumentNames" : [ ]				},				"FFICompilerPlugin class" : {					"sourceCode" : [						"initialize",						"",						"\tself",						"\t\tinitializeFFICalloutSelectors;",						"\t\trecompileSenders;",						"\t\tinstall"					],					"body" : [						"self",						"\tinitializeFFICalloutSelectors;",						"\trecompileSenders;",						"\tinstall"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1272005,					"argumentNames" : [ ]				},				"SpecSplitterHorizontal" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tselector := #newHSplitterAt:.",						"\tlayoutFrame := (0 @ 0 corner: 0 @ 0) asSpecLayoutFrame bottomOffset:",						"\t\t               1"					],					"body" : [						"super initialize.",						"",						"selector := #newHSplitterAt:.",						"layoutFrame := (0 @ 0 corner: 0 @ 0) asSpecLayoutFrame bottomOffset: 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1760709,					"argumentNames" : [ ]				},				"StSpotterPragmaBasedProcessor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trunning := false"					],					"body" : [						"super initialize.",						"running := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6280138,					"argumentNames" : [ ]				},				"RadioButtonModelExample" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself option: #left"					],					"body" : [						"super initialize.",						"self option: #left"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1487021,					"argumentNames" : [ ]				},				"AthensSimplePathBuilder" : {					"sourceCode" : [						"initialize",						"",						"\t\"A new path always starts from implicit (moveTo:0@0) segment.",						"\tIf next segment is moveTo: , the point of already existing move segment will be changed,",						"\tavoiding creating extra move segments.",						"\t",						"\t\"",						"",						"\tsuper initialize.",						"\tabsolute := false.",						"\tcontourStartPt := ZeroPoint.",						"\tpathStart := lastSegment := AthensMoveSegment new point: ZeroPoint"					],					"body" : [						"super initialize.",						"absolute := false.",						"contourStartPt := ZeroPoint.",						"pathStart := lastSegment := AthensMoveSegment new point: ZeroPoint"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"A new path always starts from implicit (moveTo:0@0) segment.",						"\tIf next segment is moveTo: , the point of already existing move segment will be changed,",						"\tavoiding creating extra move segments.",						"\t",						"\t"					],					"hash" : 3854299,					"argumentNames" : [ ]				},				"GrowlMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself borderStyle:",						"\t\t(BorderStyle color: self defaultBorderColor width: 1).",						"",						"\tself setProperty: #autoFitContents toValue: false.",						"",						"\tself initializeLabelAttributes.",						"\tself initializeContentsAttributes.",						"\tself vanishDelay: self defaultVanishDelay.",						"\tself label: 'A cool title' contents: 'Here an important message'.",						"\tdismissHandle := self createDismissHandle.",						"\tself addMorph: dismissHandle"					],					"body" : [						"super initialize.",						"self borderStyle:",						"\t(BorderStyle color: self defaultBorderColor width: 1).",						"",						"self setProperty: #autoFitContents toValue: false.",						"",						"self initializeLabelAttributes.",						"self initializeContentsAttributes.",						"self vanishDelay: self defaultVanishDelay.",						"self label: 'A cool title' contents: 'Here an important message'.",						"dismissHandle := self createDismissHandle.",						"self addMorph: dismissHandle"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2761476,					"argumentNames" : [ ]				},				"KMPragmaKeymapBuilder class" : {					"sourceCode" : [						"initialize",						"",						"\t<script>",						"\tself uniqueInstance reset"					],					"body" : [						"self uniqueInstance reset"					],					"isTestMethod" : false,					"category" : "instance creation",					"comment" : [ ],					"hash" : 3794647,					"argumentNames" : [ ]				},				"ZnDefaultServerDelegate" : {					"sourceCode" : [						"initialize",						"",						"\tself",						"\t\tmap: 'welcome' to: #welcome:;",						"\t\tmap: 'help' to: #help:;",						"\t\tmap: 'echo' to: #echoRequest:;",						"\t\tmap: 'small' to: #small:;",						"\t\tmap: 'dw-bench' to: #dwbench:;",						"\t\tmap: 'favicon.ico' to: #favicon:;",						"\t\tmap: 'random' to: #random:;",						"\t\tmap: 'bytes' to: #bytes:;",						"\t\tmap: 'status' to: #status:;",						"\t\tmap: 'unicode' to: #unicode:;",						"\t\tmap: 'session' to: #sessionRequest:;",						"\t\tmap: 'error' to: #errorResponse:;",						"\t\tmap: 'form-test-1' to: #formTest1:;",						"\t\tmap: 'form-test-2' to: #formTest2:;",						"\t\tmap: 'form-test-3' to: #formTest3:;",						"\t\tmap: '/' to: 'welcome'"					],					"body" : [						"self",						"\tmap: 'welcome' to: #welcome:;",						"\tmap: 'help' to: #help:;",						"\tmap: 'echo' to: #echoRequest:;",						"\tmap: 'small' to: #small:;",						"\tmap: 'dw-bench' to: #dwbench:;",						"\tmap: 'favicon.ico' to: #favicon:;",						"\tmap: 'random' to: #random:;",						"\tmap: 'bytes' to: #bytes:;",						"\tmap: 'status' to: #status:;",						"\tmap: 'unicode' to: #unicode:;",						"\tmap: 'session' to: #sessionRequest:;",						"\tmap: 'error' to: #errorResponse:;",						"\tmap: 'form-test-1' to: #formTest1:;",						"\tmap: 'form-test-2' to: #formTest2:;",						"\tmap: 'form-test-3' to: #formTest3:;",						"\tmap: '/' to: 'welcome'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2206484,					"argumentNames" : [ ]				},				"FLHeader" : {					"sourceCode" : [						"initialize",						"",						"\tadditionalObjects := IdentityDictionary new.",						"\tpreMaterializationActions := OrderedCollection new.",						"\tpostMaterializationActions := OrderedCollection new"					],					"body" : [						"additionalObjects := IdentityDictionary new.",						"preMaterializationActions := OrderedCollection new.",						"postMaterializationActions := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1338552,					"argumentNames" : [ ]				},				"MenubarMorph class" : {					"sourceCode" : [						"initialize",						"",						"\tself showMenubar: true.",						"\tself install.",						"\tself reset"					],					"body" : [						"self showMenubar: true.",						"self install.",						"self reset"					],					"isTestMethod" : false,					"category" : "instance creation",					"comment" : [ ],					"hash" : 2701589,					"argumentNames" : [ ]				},				"RSXLabelDecoration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself below"					],					"body" : [						"super initialize.",						"self below"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6610537,					"argumentNames" : [ ]				},				"SpDropListItem" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\taction := [  ].",						"\tdisplayBlock := [ :e | e asString ]"					],					"body" : [						"super initialize.",						"action := [  ].",						"displayBlock := [ :e | e asString ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2975843,					"argumentNames" : [ ]				},				"AthensCairoText" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself",						"\t\tbeNormal;",						"\t\tbeSlantNormal.",						"\tfontSize := 10"					],					"body" : [						"super initialize.",						"",						"self",						"\tbeNormal;",						"\tbeSlantNormal.",						"fontSize := 10"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3880748,					"argumentNames" : [ ]				},				"ShiftClassBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself useStrictSuperclass.",						"\tsuperclassName := #Object.",						"",						"\tlayoutDefinition := ShLayoutDefinition new.",						"\tlayoutDefinition builder: self.",						"",						"\textensibleProperties := Dictionary new.",						"",						"\tchangeComparers := OrderedCollection new.",						"\tchanges := Set new.",						"",						"\tcategory := 'Unclassified'.",						"\tinRemake := false"					],					"body" : [						"super initialize.",						"",						"self useStrictSuperclass.",						"superclassName := #Object.",						"",						"layoutDefinition := ShLayoutDefinition new.",						"layoutDefinition builder: self.",						"",						"extensibleProperties := Dictionary new.",						"",						"changeComparers := OrderedCollection new.",						"changes := Set new.",						"",						"category := 'Unclassified'.",						"inRemake := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1615861,					"argumentNames" : [ ]				},				"RBTransformationRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trewriteRule := RBParseTreeRewriter new"					],					"body" : [						"super initialize.",						"rewriteRule := RBParseTreeRewriter new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2491929,					"argumentNames" : [ ]				},				"TFCallbackQueue class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default",						"\t\tregisterSystemClassNamed: self name",						"\t\tatPriority: 70.",						"",						"\tself startUp: true"					],					"body" : [						"SessionManager default",						"\tregisterSystemClassNamed: self name",						"\tatPriority: 70.",						"",						"self startUp: true"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2821121,					"argumentNames" : [ ]				},				"MalDijkstraNode" : {					"sourceCode" : [						"initialize",						"",						"\tpreviousNodes := OrderedCollection new.",						"\tpreviousEdges := OrderedCollection new.",						"\tnextEdges := OrderedCollection new.",						"\tpathWeight := Float infinity \"initialization for Dijsktra\""					],					"body" : [						"previousNodes := OrderedCollection new.",						"previousEdges := OrderedCollection new.",						"nextEdges := OrderedCollection new.",						"pathWeight := Float infinity \"initialization for Dijsktra\""					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2562604,					"argumentNames" : [ ]				},				"DeepCopier" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initialize: 4096"					],					"body" : [						"super initialize.",						"self initialize: 4096"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1719213,					"argumentNames" : [ ]				},				"MalTopologicalSorting" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsortedElements := OrderedCollection new"					],					"body" : [						"super initialize.",						"sortedElements := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2558492,					"argumentNames" : [ ]				},				"ZipArchive" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\twriteEOCDOffset := writeCentralDirectoryOffset := 0.",						"\tzipFileComment := ''"					],					"body" : [						"super initialize.",						"writeEOCDOffset := writeCentralDirectoryOffset := 0.",						"zipFileComment := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2137543,					"argumentNames" : [ ]				},				"SpInitializeWindowExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcount := 0"					],					"body" : [						"super initialize.",						"count := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3264008,					"argumentNames" : [ ]				},				"ClyMergedHierarchy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmergedParts := #(  )"					],					"body" : [						"super initialize.",						"mergedParts := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5690542,					"argumentNames" : [ ]				},				"MCCacheRepository" : {					"sourceCode" : [						"initialize",						"",						"\tcacheEnabled := true.",						"\tsuper initialize"					],					"body" : [						"cacheEnabled := true.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1084622,					"argumentNames" : [ ]				},				"FFIExternalStructureFieldSpec" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfields := OrderedDictionary new"					],					"body" : [						"super initialize.",						"fields := OrderedDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1287193,					"argumentNames" : [ ]				},				"MCFileTreeAbstractStWriter" : {					"sourceCode" : [						"initialize",						"",						"\tstWriter := MCFileTreePackageStructureStWriter new",						"\t\t            initializers: (initializers := Set new);",						"\t\t            yourself.",						"\torderedClassNames := OrderedCollection new.",						"\torderedTraitNames := OrderedCollection new"					],					"body" : [						"stWriter := MCFileTreePackageStructureStWriter new",						"\t            initializers: (initializers := Set new);",						"\t            yourself.",						"orderedClassNames := OrderedCollection new.",						"orderedTraitNames := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1106112,					"argumentNames" : [ ]				},				"RecursionStopper" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tactiveMethods := OrderedCollection new"					],					"body" : [						"super initialize.",						"",						"activeMethods := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1903897,					"argumentNames" : [ ]				},				"TransferPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tpassenger := nil asValueHolder.",						"\tsource := nil asValueHolder"					],					"body" : [						"super initialize.",						"",						"passenger := nil asValueHolder.",						"source := nil asValueHolder"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 1703806,					"argumentNames" : [ ]				},				"STONStreamWriter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfirst := true"					],					"body" : [						"super initialize.",						"first := true"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 1133512,					"argumentNames" : [ ]				},				"IceTipAbstractCredentialsModel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\taccepted := false"					],					"body" : [						"super initialize.",						"accepted := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7096325,					"argumentNames" : [ ]				},				"ZnNetworkingUtils" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself socketStreamClass:",						"\t\t(Smalltalk globals at: #ZdcSocketStream ifAbsent: [ SocketStream ]).",						"\tself secureSocketStreamClass:",						"\t\t(Smalltalk globals at: #ZdcSecureSocketStream ifAbsent: [ nil ])"					],					"body" : [						"super initialize.",						"self socketStreamClass:",						"\t(Smalltalk globals at: #ZdcSocketStream ifAbsent: [ SocketStream ]).",						"self secureSocketStreamClass:",						"\t(Smalltalk globals at: #ZdcSecureSocketStream ifAbsent: [ nil ])"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2215820,					"argumentNames" : [ ]				},				"ExecutionCounter class" : {					"sourceCode" : [						"initialize",						"",						"\tself registerInterestToSystemAnnouncement"					],					"body" : [						"self registerInterestToSystemAnnouncement"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 3818820,					"argumentNames" : [ ]				},				"RBMethodNameEditor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself beResizeable"					],					"body" : [						"super initialize.",						"",						"self beResizeable"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5260137,					"argumentNames" : [ ]				},				"MockWithComplexSlot" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tsuper initialize"					],					"body" : [						"self class initializeSlots: self.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4450920,					"argumentNames" : [ ]				},				"SDL2SpecialCharacterMapping class" : {					"sourceCode" : [						"initialize",						"",						"\t\"",						"\tself initialize",						"\t\"",						"",						"\tMapping := Dictionary new.",						"\t{ ",						"\t\tSDLK_RETURN.",						"\t\tCharacter cr.",						"\t\tSDLK_KP_ENTER.",						"\t\tCharacter cr.",						"\t\tSDLK_BACKSPACE.",						"\t\tCharacter backspace.",						"\t\tSDLK_TAB.",						"\t\tCharacter tab.",						"\t\tSDLK_HOME.",						"\t\tCharacter home.",						"\t\tSDLK_LEFT.",						"\t\tCharacter arrowLeft.",						"\t\tSDLK_UP.",						"\t\tCharacter arrowUp.",						"\t\tSDLK_RIGHT.",						"\t\tCharacter arrowRight.",						"\t\tSDLK_DOWN.",						"\t\tCharacter arrowDown.",						"\t\tSDLK_END.",						"\t\tCharacter end.",						"\t\tSDLK_INSERT.",						"\t\tCharacter insert.",						"\t\tSDLK_PAGEUP.",						"\t\tCharacter pageUp.",						"\t\tSDLK_PAGEDOWN.",						"\t\tCharacter pageDown.",						"\t\tSDLK_DELETE.",						"\t\tCharacter delete } pairsDo: [ :key :val | Mapping at: key put: val ]"					],					"body" : [						"Mapping := Dictionary new.",						"{ ",						"\tSDLK_RETURN.",						"\tCharacter cr.",						"\tSDLK_KP_ENTER.",						"\tCharacter cr.",						"\tSDLK_BACKSPACE.",						"\tCharacter backspace.",						"\tSDLK_TAB.",						"\tCharacter tab.",						"\tSDLK_HOME.",						"\tCharacter home.",						"\tSDLK_LEFT.",						"\tCharacter arrowLeft.",						"\tSDLK_UP.",						"\tCharacter arrowUp.",						"\tSDLK_RIGHT.",						"\tCharacter arrowRight.",						"\tSDLK_DOWN.",						"\tCharacter arrowDown.",						"\tSDLK_END.",						"\tCharacter end.",						"\tSDLK_INSERT.",						"\tCharacter insert.",						"\tSDLK_PAGEUP.",						"\tCharacter pageUp.",						"\tSDLK_PAGEDOWN.",						"\tCharacter pageDown.",						"\tSDLK_DELETE.",						"\tCharacter delete } pairsDo: [ :key :val | Mapping at: key put: val ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"",						"\tself initialize",						"\t"					],					"hash" : 5037031,					"argumentNames" : [ ]				},				"IceWorkingCopy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tshouldIgnoreNotifications := false.",						"",						"\tpackages := Dictionary new.",						"\treferenceCommit := repository newNoCommit.",						"\tself basicSetProject: referenceCommit project.",						"\tproperties := referenceCommit properties asBornProperties"					],					"body" : [						"super initialize.",						"shouldIgnoreNotifications := false.",						"",						"packages := Dictionary new.",						"referenceCommit := repository newNoCommit.",						"self basicSetProject: referenceCommit project.",						"properties := referenceCommit properties asBornProperties"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7010041,					"argumentNames" : [ ]				},				"BalloonEngineConstants class" : {					"sourceCode" : [						"initialize",						"",						"\tself",						"\t\tinitStateConstants;",						"\t\tinitWorkBufferConstants;",						"\t\tinitPrimitiveConstants;",						"\t\tinitEdgeConstants;",						"\t\tinitFillConstants;",						"\t\tinitializeInstVarNames: BalloonEngine prefixedBy: 'BE';",						"\t\tinitializeInstVarNames: BalloonEdgeData prefixedBy: 'ET';",						"\t\tinitializeInstVarNames: BalloonFillData prefixedBy: 'FT'"					],					"body" : [						"self",						"\tinitStateConstants;",						"\tinitWorkBufferConstants;",						"\tinitPrimitiveConstants;",						"\tinitEdgeConstants;",						"\tinitFillConstants;",						"\tinitializeInstVarNames: BalloonEngine prefixedBy: 'BE';",						"\tinitializeInstVarNames: BalloonEdgeData prefixedBy: 'ET';",						"\tinitializeInstVarNames: BalloonFillData prefixedBy: 'FT'"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2423303,					"argumentNames" : [ ]				},				"JPEGReadWriter class" : {					"sourceCode" : [						"initialize",						"",						"\t\"JPEGReadWriter initialize\"",						"",						"\t\"general constants\"",						"",						"\tDCTSize := 8.",						"\tMaxSample := (2 raisedToInteger: DCTSize) - 1.",						"\tSampleOffset := MaxSample // 2.",						"\tFloatSampleOffset := SampleOffset asFloat.",						"\tDCTSize2 := DCTSize squared.",						"\tQuantizationTableSize := 4.",						"\tHuffmanTableSize := 4.",						"",						"\t\"floating-point Inverse Discrete Cosine Transform (IDCT) constants\"",						"\tConstBits := 13.",						"\tPass1Bits := 2.",						"\tDCTK1 := 2 sqrt.",						"\tDCTK2 := 1.847759065.",						"\tDCTK3 := 1.0823922.",						"\tDCTK4 := -2.61312593.",						"\tPass1Div := 1 bitShift: ConstBits - Pass1Bits.",						"\tPass2Div := 1 bitShift: ConstBits + Pass1Bits + 3.",						"",						"\t\"fixed-point Inverse Discrete Cosine Transform (IDCT) constants\"",						"\tFIXn0n298631336 := 2446.",						"\tFIXn0n390180644 := 3196.",						"\tFIXn0n541196100 := 4433.",						"\tFIXn0n765366865 := 6270.",						"\tFIXn0n899976223 := 7373.",						"\tFIXn1n175875602 := 9633.",						"\tFIXn1n501321110 := 12299.",						"\tFIXn1n847759065 := 15137.",						"\tFIXn1n961570560 := 16069.",						"\tFIXn2n053119869 := 16819.",						"\tFIXn2n562915447 := 20995.",						"\tFIXn3n072711026 := 25172.",						"",						"\t\"fixed-point color conversion constants\"",						"\tFIXn0n34414 := 22554.",						"\tFIXn0n71414 := 46802.",						"\tFIXn1n40200 := 91881.",						"\tFIXn1n77200 := 116130.",						"",						"\t\"reordering table from JPEG zig-zag order\"",						"\tJPEGNaturalOrder := #( 1 2 9 17 10 3 4 11 18 25 33 26 19 12 5 6 13 20",						"\t                       27 34 41 49 42 35 28 21 14 7 8 15 22 29 36 43",						"\t                       50 57 58 51 44 37 30 23 16 24 31 38 45 52 59",						"\t                       60 53 46 39 32 40 47 54 61 62 55 48 56 63 64 ).",						"",						"\t\"scale factors for the values in the Quantization Tables\"",						"\tQTableScaleFactor := (0 to: DCTSize - 1) collect: [ :k | ",						"\t\t                     k = 0",						"\t\t\t                     ifTrue: [ 1.0 ]",						"\t\t\t                     ifFalse: [ (k * Float pi / 16) cos * 2 sqrt ] ].",						"",						"\t\"dithering masks\"",						"\t(DitherMasks := Dictionary new)",						"\t\tadd: 0 -> 0;",						"\t\tadd: 1 -> 127;",						"\t\tadd: 2 -> 63;",						"\t\tadd: 4 -> 63;",						"\t\tadd: 8 -> 31;",						"\t\tadd: 16 -> 7;",						"\t\tadd: 32 -> 0.",						"",						"\t\"dictionary of marker parsers\"",						"\t(JFIFMarkerParser := Dictionary new)",						"\t\tadd: 1 -> #parseNOP;",						"\t\tadd: 192 -> #parseStartOfFile;",						"\t\tadd: 196 -> #parseHuffmanTable;",						"\t\taddAll:",						"\t\t\t((208 to: 215) collect: [ :m | Association key: m value: #parseNOP ]);",						"\t\tadd: 216 -> #parseStartOfInput;",						"\t\tadd: 217 -> #parseEndOfInput;",						"\t\tadd: 218 -> #parseStartOfScan;",						"\t\tadd: 219 -> #parseQuantizationTable;",						"\t\tadd: 221 -> #parseDecoderRestartInterval;",						"\t\tadd: 224 -> #parseAPPn;",						"\t\tadd: 225 -> #parseAPPn"					],					"body" : [						"DCTSize := 8.",						"MaxSample := (2 raisedToInteger: DCTSize) - 1.",						"SampleOffset := MaxSample // 2.",						"FloatSampleOffset := SampleOffset asFloat.",						"DCTSize2 := DCTSize squared.",						"QuantizationTableSize := 4.",						"HuffmanTableSize := 4.",						"",						"\"floating-point Inverse Discrete Cosine Transform (IDCT) constants\"",						"ConstBits := 13.",						"Pass1Bits := 2.",						"DCTK1 := 2 sqrt.",						"DCTK2 := 1.847759065.",						"DCTK3 := 1.0823922.",						"DCTK4 := -2.61312593.",						"Pass1Div := 1 bitShift: ConstBits - Pass1Bits.",						"Pass2Div := 1 bitShift: ConstBits + Pass1Bits + 3.",						"",						"\"fixed-point Inverse Discrete Cosine Transform (IDCT) constants\"",						"FIXn0n298631336 := 2446.",						"FIXn0n390180644 := 3196.",						"FIXn0n541196100 := 4433.",						"FIXn0n765366865 := 6270.",						"FIXn0n899976223 := 7373.",						"FIXn1n175875602 := 9633.",						"FIXn1n501321110 := 12299.",						"FIXn1n847759065 := 15137.",						"FIXn1n961570560 := 16069.",						"FIXn2n053119869 := 16819.",						"FIXn2n562915447 := 20995.",						"FIXn3n072711026 := 25172.",						"",						"\"fixed-point color conversion constants\"",						"FIXn0n34414 := 22554.",						"FIXn0n71414 := 46802.",						"FIXn1n40200 := 91881.",						"FIXn1n77200 := 116130.",						"",						"\"reordering table from JPEG zig-zag order\"",						"JPEGNaturalOrder := #( 1 2 9 17 10 3 4 11 18 25 33 26 19 12 5 6 13 20",						"                       27 34 41 49 42 35 28 21 14 7 8 15 22 29 36 43",						"                       50 57 58 51 44 37 30 23 16 24 31 38 45 52 59 60",						"                       53 46 39 32 40 47 54 61 62 55 48 56 63 64 ).",						"",						"\"scale factors for the values in the Quantization Tables\"",						"QTableScaleFactor := (0 to: DCTSize - 1) collect: [ :k | ",						"\t                     k = 0",						"\t\t                     ifTrue: [ 1.0 ]",						"\t\t                     ifFalse: [ (k * Float pi / 16) cos * 2 sqrt ] ].",						"",						"\"dithering masks\"",						"(DitherMasks := Dictionary new)",						"\tadd: 0 -> 0;",						"\tadd: 1 -> 127;",						"\tadd: 2 -> 63;",						"\tadd: 4 -> 63;",						"\tadd: 8 -> 31;",						"\tadd: 16 -> 7;",						"\tadd: 32 -> 0.",						"",						"\"dictionary of marker parsers\"",						"(JFIFMarkerParser := Dictionary new)",						"\tadd: 1 -> #parseNOP;",						"\tadd: 192 -> #parseStartOfFile;",						"\tadd: 196 -> #parseHuffmanTable;",						"\taddAll:",						"\t\t((208 to: 215) collect: [ :m | Association key: m value: #parseNOP ]);",						"\tadd: 216 -> #parseStartOfInput;",						"\tadd: 217 -> #parseEndOfInput;",						"\tadd: 218 -> #parseStartOfScan;",						"\tadd: 219 -> #parseQuantizationTable;",						"\tadd: 221 -> #parseDecoderRestartInterval;",						"\tadd: 224 -> #parseAPPn;",						"\tadd: 225 -> #parseAPPn"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"JPEGReadWriter initialize"					],					"hash" : 1567662,					"argumentNames" : [ ]				},				"WorldMorph" : {					"sourceCode" : [						"initialize",						"",						"\tworldState := WorldState new.",						"\tsuper initialize.",						"",						"\tSystemAnnouncer uniqueInstance weak",						"\t\twhen: FullscreenAnnouncement",						"\t\tsend: #fullscreenChanged:",						"\t\tto: self"					],					"body" : [						"worldState := WorldState new.",						"super initialize.",						"",						"SystemAnnouncer uniqueInstance weak",						"\twhen: FullscreenAnnouncement",						"\tsend: #fullscreenChanged:",						"\tto: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2449502,					"argumentNames" : [ ]				},				"RSTickConfiguration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tnumberOfTicks: 5;",						"\t\tfontSize: 5;",						"\t\tlabelRotation: 0;",						"\t\tshouldHaveLabels: true;",						"\t\tshouldUseNiceLabel: true;",						"\t\tlabelConversion: [ :value | value ];",						"\t\ttickSize: 3"					],					"body" : [						"super initialize.",						"self",						"\tnumberOfTicks: 5;",						"\tfontSize: 5;",						"\tlabelRotation: 0;",						"\tshouldHaveLabels: true;",						"\tshouldUseNiceLabel: true;",						"\tlabelConversion: [ :value | value ];",						"\ttickSize: 3"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6617609,					"argumentNames" : [ ]				},				"DTTreeNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself contextMenuBlock: [ :menu |  ]. \"Does nothing by default.\"",						"\tself subResultsAggregator: [ :subRes | ",						"\t\t(DTLeavesCollector collectLeavesOf: self) size ]"					],					"body" : [						"super initialize.",						"self contextMenuBlock: [ :menu |  ]. \"Does nothing by default.\"",						"self subResultsAggregator: [ :subRes | ",						"\t(DTLeavesCollector collectLeavesOf: self) size ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3747684,					"argumentNames" : [ ]				},				"ZnLogEvent" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttimestamp := DateAndTime now.",						"\tid := self nextId"					],					"body" : [						"super initialize.",						"timestamp := DateAndTime now.",						"id := self nextId"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 2176988,					"argumentNames" : [ ]				},				"IRBytecodeGenerator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tencoder := self encoderClass new.",						"\tencoder stream: self.",						"",						"\tprimNumber := 0.",						"",						"\tinBlock := false.",						"\tliterals := OCLiteralList new.",						"\t\"The following dicts are keyed by sequence id given by client in label: (and gotos).\"",						"\tseqOrder := IdentityDictionary new. \"seqId -> seq order num\"",						"\tseqBytes := IdentityDictionary new. \"seqId -> seq bytecodes\"",						"\tjumps := IdentityDictionary new. \"seqId -> last jump instr\"",						"\tinstrMaps := IdentityDictionary new. \"seqId -> (clientInstr -> bytecode pos)\"",						"\tstacks := IdentityDictionary new. \"seqId -> stackCount\"",						"\tnumArgs := 0.",						"\tcurrentSeqNum := 0.",						"\torderSeq := OrderedCollection new. \"reverse map of seqOrder\"",						"\tadditionalLiterals := OCLiteralSet new.",						"\tforceLongForm := false.",						"\t\"starting label in case one is not provided by client\"",						"\tself label: self newDummySeqId"					],					"body" : [						"super initialize.",						"",						"encoder := self encoderClass new.",						"encoder stream: self.",						"",						"primNumber := 0.",						"",						"inBlock := false.",						"literals := OCLiteralList new.",						"\"The following dicts are keyed by sequence id given by client in label: (and gotos).\"",						"seqOrder := IdentityDictionary new. \"seqId -> seq order num\"",						"seqBytes := IdentityDictionary new. \"seqId -> seq bytecodes\"",						"jumps := IdentityDictionary new. \"seqId -> last jump instr\"",						"instrMaps := IdentityDictionary new. \"seqId -> (clientInstr -> bytecode pos)\"",						"stacks := IdentityDictionary new. \"seqId -> stackCount\"",						"numArgs := 0.",						"currentSeqNum := 0.",						"orderSeq := OrderedCollection new. \"reverse map of seqOrder\"",						"additionalLiterals := OCLiteralSet new.",						"forceLongForm := false.",						"\"starting label in case one is not provided by client\"",						"self label: self newDummySeqId"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2037531,					"argumentNames" : [ ]				},				"RubTextFieldMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thasValidText := true.",						"\tself textArea announcer",						"\t\twhen: RubReturnEntered",						"\t\tsend: #whenReturnEntered:",						"\t\tto: self.",						"\tself scrollbarsShowNever.",						"\tself extent: self extent.",						"\tacceptOnCR := true.",						"\tmaxLength := 0.",						"\tself beDecrypted"					],					"body" : [						"super initialize.",						"hasValidText := true.",						"self textArea announcer",						"\twhen: RubReturnEntered",						"\tsend: #whenReturnEntered:",						"\tto: self.",						"self scrollbarsShowNever.",						"self extent: self extent.",						"acceptOnCR := true.",						"maxLength := 0.",						"self beDecrypted"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1396997,					"argumentNames" : [ ]				},				"SpMenuPresenterBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself menuPresenter: self class menuPresenterClass new.",						"\tstack := Stack new",						"\t\t         push: self menuPresenter;",						"\t\t         yourself"					],					"body" : [						"super initialize.",						"self menuPresenter: self class menuPresenterClass new.",						"stack := Stack new",						"\t         push: self menuPresenter;",						"\t         yourself"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3194155,					"argumentNames" : [ ]				},				"SelfPropagatingLinkDemo" : {					"sourceCode" : [						"initialize",						"",						"\tmethodsvisited := OrderedCollection new"					],					"body" : [						"methodsvisited := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4315636,					"argumentNames" : [ ]				},				"ClyConcreteCritiqueMethodGroup" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\truleSeverity := ClyCritiqueSeverityProperty default"					],					"body" : [						"super initialize.",						"",						"ruleSeverity := ClyCritiqueSeverityProperty default"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5804084,					"argumentNames" : [ ]				},				"SpPaginatorPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpagesHolder := OrderedCollection new asValueHolder"					],					"body" : [						"super initialize.",						"pagesHolder := OrderedCollection new asValueHolder"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2361333,					"argumentNames" : [ ]				},				"StDebuggerContextPredicate" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpostMortem := false"					],					"body" : [						"super initialize.",						"postMortem := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6328009,					"argumentNames" : [ ]				},				"MCGitRemoteRepository" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize"					],					"body" : [						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7040688,					"argumentNames" : [ ]				},				"ColorSelectorDialogWindow" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tself basicSelectedColor: Color blue.",						"\tsuper initialize.",						"\tself selectedColor: self selectedColor"					],					"body" : [						"self basicSelectedColor: Color blue.",						"super initialize.",						"self selectedColor: self selectedColor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2734583,					"argumentNames" : [ ]				},				"MCFileTreeFileSystemUtils class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tself install"					],					"body" : [						"self install"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"self initialize"					],					"hash" : 1127748,					"argumentNames" : [ ]				},				"JoinSide" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\thighlights: #(  );",						"\t\toffset: 0 @ 0;",						"\t\trange: (1 to: 1);",						"\t\tlineRange: (1 to: 0);",						"\t\tcolor: Color yellow;",						"\t\ttext: ''"					],					"body" : [						"super initialize.",						"self",						"\thighlights: #(  );",						"\toffset: 0 @ 0;",						"\trange: (1 to: 1);",						"\tlineRange: (1 to: 0);",						"\tcolor: Color yellow;",						"\ttext: ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 4137321,					"argumentNames" : [ ]				},				"CairoFontFace" : {					"sourceCode" : [						"initialize",						"",						"\tself autoRelease"					],					"body" : [						"self autoRelease"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3877444,					"argumentNames" : [ ]				},				"ClyTextEditingMode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tisForScripting := false"					],					"body" : [						"super initialize.",						"",						"isForScripting := false"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 5908940,					"argumentNames" : [ ]				},				"FileSystemGuide" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\twork := OrderedCollection new"					],					"body" : [						"super initialize.",						"work := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2075674,					"argumentNames" : [ ]				},				"IRBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tir := IRMethod new.",						"\tjumpAheadStacks := IdentityDictionary new.",						"\tjumpBackTargetStacks := IdentityDictionary new.",						"\tsourceMapNodes := OrderedCollection new. \"stack\"",						"\tcurrentScope := Stack new.",						"\tself pushScope: ir.",						"",						"\t\"Leave an empty sequence up front (guaranteed not to be in loop)\"",						"\tir startSequence: ((IRSequence orderNumber: 0) method: ir).",						"\tcurrentSequence := (IRSequence orderNumber: 1) method: ir.",						"\tir startSequence add: (IRJump new",						"\t\t\t destination: currentSequence;",						"\t\t\t bytecodeIndex: sourceMapByteIndex;",						"\t\t\t yourself)"					],					"body" : [						"ir := IRMethod new.",						"jumpAheadStacks := IdentityDictionary new.",						"jumpBackTargetStacks := IdentityDictionary new.",						"sourceMapNodes := OrderedCollection new. \"stack\"",						"currentScope := Stack new.",						"self pushScope: ir.",						"",						"\"Leave an empty sequence up front (guaranteed not to be in loop)\"",						"ir startSequence: ((IRSequence orderNumber: 0) method: ir).",						"currentSequence := (IRSequence orderNumber: 1) method: ir.",						"ir startSequence add: (IRJump new",						"\t\t destination: currentSequence;",						"\t\t bytecodeIndex: sourceMapByteIndex;",						"\t\t yourself)"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2038446,					"argumentNames" : [ ]				},				"CheckboxButtonMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tisRadioButton: false;",						"\t\tenabled: true;",						"\t\tonImage: self theme checkboxMarkerForm;",						"\t\tfillStyle: self fillStyleToUse;",						"\t\tborderStyle: self borderStyleToUse"					],					"body" : [						"super initialize.",						"self",						"\tisRadioButton: false;",						"\tenabled: true;",						"\tonImage: self theme checkboxMarkerForm;",						"\tfillStyle: self fillStyleToUse;",						"\tborderStyle: self borderStyleToUse"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1379245,					"argumentNames" : [ ]				},				"ReferenceFinder" : {					"sourceCode" : [						"initialize",						"",						"\tself startFrom: Smalltalk"					],					"body" : [						"self startFrom: Smalltalk"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5255543,					"argumentNames" : [ ]				},				"RSUMLClassBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tmodelDescriptor: RSUMLClassDescriptor new;",						"\t\trenderer: RSBasicUMLClassRenderer new"					],					"body" : [						"super initialize.",						"self",						"\tmodelDescriptor: RSUMLClassDescriptor new;",						"\trenderer: RSBasicUMLClassRenderer new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6580623,					"argumentNames" : [ ]				},				"Morph class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Morph initialize\"",						"",						"\t\"this empty array object is shared by all morphs with no submorphs:\"",						"",						"\tEmptyArray := Array new"					],					"body" : [						"EmptyArray := Array new"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Morph initialize"					],					"hash" : 2446128,					"argumentNames" : [ ]				},				"RSAbstractHorizontalTreeLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tverticalGap := 3.",						"\thorizontalGap := 20"					],					"body" : [						"super initialize.",						"verticalGap := 3.",						"horizontalGap := 20"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6554804,					"argumentNames" : [ ]				},				"ReThemeAPIUpdateRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: 'UITheme current' with: 'Smalltalk ui theme';",						"\t\treplace: 'ThemeIcons current' with: 'Smalltalk ui icons'"					],					"body" : [						"super initialize.",						"self",						"\treplace: 'UITheme current' with: 'Smalltalk ui theme';",						"\treplace: 'ThemeIcons current' with: 'Smalltalk ui icons'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4737072,					"argumentNames" : [ ]				},				"RBRefactoryChangeManager" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tchangeFactory := RBRefactoryChangeFactory new.",						"\tself clearUndoRedoList.",						"\tisPerformingRefactoring := false.",						"\tself connectToChanges"					],					"body" : [						"super initialize.",						"changeFactory := RBRefactoryChangeFactory new.",						"self clearUndoRedoList.",						"isPerformingRefactoring := false.",						"self connectToChanges"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3993773,					"argumentNames" : [ ]				},				"RSAbstractPlot" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tshape := self defaultShape"					],					"body" : [						"super initialize.",						"shape := self defaultShape"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6600798,					"argumentNames" : [ ]				},				"MicrodownBackSlasher" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstream := (String new: 10000) writeStream.",						"\tallDelimiters := Dictionary new.",						"\tself abstractDelimiterClass subclasses",						"\t\tselect: [ :subclass | subclass isActive ]",						"\t\tthenDo: [ :subclass | ",						"\t\tallDelimiters at: subclass markup put: subclass ].",						"\tkeys := allDelimiters keys"					],					"body" : [						"super initialize.",						"stream := (String new: 10000) writeStream.",						"allDelimiters := Dictionary new.",						"self abstractDelimiterClass subclasses",						"\tselect: [ :subclass | subclass isActive ]",						"\tthenDo: [ :subclass | ",						"\tallDelimiters at: subclass markup put: subclass ].",						"keys := allDelimiters keys"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 7361778,					"argumentNames" : [ ]				},				"IceMetacelloPharoPlatform class" : {					"sourceCode" : [						"initialize",						"",						"\tself select"					],					"body" : [						"self select"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7040836,					"argumentNames" : [ ]				},				"ClapParameter" : {					"sourceCode" : [						"initialize",						"",						"\tdescription := ''.",						"\tmultiple := false.",						"\tmeaningBlock := self basicMeaning.",						"\timplicitMeaningBlock := meaningBlock"					],					"body" : [						"description := ''.",						"multiple := false.",						"meaningBlock := self basicMeaning.",						"implicitMeaningBlock := meaningBlock"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1192741,					"argumentNames" : [ ]				},				"MicAbstractBlock" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tchildren := OrderedCollection new"					],					"body" : [						"super initialize.",						"children := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7332379,					"argumentNames" : [ ]				},				"PluggableSliderMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tmin := 0.",						"\tmax := 1.",						"\tlabel := ''.",						"\tsuper initialize.",						"\tself enabled: true"					],					"body" : [						"min := 0.",						"max := 1.",						"label := ''.",						"super initialize.",						"self enabled: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2727609,					"argumentNames" : [ ]				},				"IceGitHubRemoveBranchesAction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbranchesByName := OrderedDictionary new"					],					"body" : [						"super initialize.",						"branchesByName := OrderedDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7257631,					"argumentNames" : [ ]				},				"RSRectangleForceLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tenclosingThreshold := 50.",						"\tenclosingForce := 0.3"					],					"body" : [						"super initialize.",						"",						"enclosingThreshold := 50.",						"enclosingForce := 0.3"					],					"isTestMethod" : false,					"category" : "events",					"comment" : [ ],					"hash" : 6561062,					"argumentNames" : [ ]				},				"FFIExternalReference" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself setHandle: self createDefaultHandle"					],					"body" : [						"super initialize.",						"self setHandle: self createDefaultHandle"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1273690,					"argumentNames" : [ ]				},				"KMShiftModifier" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tidentifier := #s.",						"\tname := 'Shift'"					],					"body" : [						"super initialize.",						"identifier := #s.",						"name := 'Shift'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1577130,					"argumentNames" : [ ]				},				"FluidClassBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsharedVariables := #(  ).",						"\tsharedPools := #(  ).",						"\tlayout := FixedLayout"					],					"body" : [						"super initialize.",						"sharedVariables := #(  ).",						"sharedPools := #(  ).",						"layout := FixedLayout"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3038493,					"argumentNames" : [ ]				},				"StSizeReporter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdata := Dictionary new.",						"\tdata at: #imageClasses put: self class environment allClasses.",						"\tdata",						"\t\tat: #imageClassPackages",						"\t\tput: (self imageClasses collect: [ :each | each package ] as: Set).",						"",						"\tdata",						"\t\tat: #manifestClasses",						"\t\tput: (self imageClasses select: [ :each | each isManifest ]).",						"\tdata",						"\t\tat: #manifestClassPackages",						"\t\tput:",						"\t\t(self manifestClasses collect: [ :each | each package ] as: Set).",						"",						"\tdata",						"\t\tat: #testClasses",						"\t\tput: (self imageClasses select: [ :each | each isTestCase ]).",						"\tdata",						"\t\tat: #testClassPackages",						"\t\tput: (self testClasses collect: [ :each | each package ] as: Set).",						"",						"\tdata",						"\t\tat: #baselineClasses",						"\t\tput:",						"\t\t(self imageClasses select: [ :c | c name beginsWith: 'BaselineOf' ]).",						"\tdata",						"\t\tat: #baselineClassPackages",						"\t\tput:",						"\t\t(self baselineClasses collect: [ :each | each package ] as: Set).",						"",						"\tdata at: #effectiveClasses put: (self imageClasses reject: [ :c | ",						"\t\t\t c isManifest or: [ ",						"\t\t\t\t c isTestCase or: [ c name beginsWith: 'BaselineOf' ] ] ]).",						"\tdata",						"\t\tat: #effectiveClassPackages",						"\t\tput:",						"\t\t(self effectiveClasses collect: [ :each | each package ] as: Set).",						"",						"\ttopicList selectIndex: 1"					],					"body" : [						"super initialize.",						"data := Dictionary new.",						"data at: #imageClasses put: self class environment allClasses.",						"data",						"\tat: #imageClassPackages",						"\tput: (self imageClasses collect: [ :each | each package ] as: Set).",						"",						"data",						"\tat: #manifestClasses",						"\tput: (self imageClasses select: [ :each | each isManifest ]).",						"data",						"\tat: #manifestClassPackages",						"\tput: (self manifestClasses collect: [ :each | each package ] as: Set).",						"",						"data",						"\tat: #testClasses",						"\tput: (self imageClasses select: [ :each | each isTestCase ]).",						"data",						"\tat: #testClassPackages",						"\tput: (self testClasses collect: [ :each | each package ] as: Set).",						"",						"data",						"\tat: #baselineClasses",						"\tput:",						"\t(self imageClasses select: [ :c | c name beginsWith: 'BaselineOf' ]).",						"data",						"\tat: #baselineClassPackages",						"\tput: (self baselineClasses collect: [ :each | each package ] as: Set).",						"",						"data at: #effectiveClasses put: (self imageClasses reject: [ :c | ",						"\t\t c isManifest or: [ ",						"\t\t\t c isTestCase or: [ c name beginsWith: 'BaselineOf' ] ] ]).",						"data",						"\tat: #effectiveClassPackages",						"\tput:",						"\t(self effectiveClasses collect: [ :each | each package ] as: Set).",						"",						"topicList selectIndex: 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6263630,					"argumentNames" : [ ]				},				"TraitMethodDescription" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlocatedMethods := IdentitySet new"					],					"body" : [						"super initialize.",						"locatedMethods := IdentitySet new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2105882,					"argumentNames" : [ ]				},				"RSAbstractScaleInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tminScale: 0.1;",						"\t\tmaxScale: 3"					],					"body" : [						"super initialize.",						"self",						"\tminScale: 0.1;",						"\tmaxScale: 3"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 6524853,					"argumentNames" : [ ]				},				"CTLinkedStoragePoolCircularDoubly" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thead previousLink: head"					],					"body" : [						"super initialize.",						"head previousLink: head"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3157552,					"argumentNames" : [ ]				},				"RSExpandingBoxes" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcanvas := RSCanvas new.",						"\tcolor := NSScale category20b.",						"\tbase := RSComposite new.",						"\tbase popup.",						"\tbase when: RSMouseClick do: [ :evt | self processEvent: evt ].",						"\tborder := RSBorder new"					],					"body" : [						"super initialize.",						"canvas := RSCanvas new.",						"color := NSScale category20b.",						"base := RSComposite new.",						"base popup.",						"base when: RSMouseClick do: [ :evt | self processEvent: evt ].",						"border := RSBorder new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3062723,					"argumentNames" : [ ]				},				"SpCompositeIconProvider" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tproviders := #(  )"					],					"body" : [						"super initialize.",						"providers := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2977708,					"argumentNames" : [ ]				},				"ClyTabManager" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttools := SortedCollection sortBlock: [ :a :b | ",						"\t\t         a tabOrder <= b tabOrder ].",						"\tselectionPriorities := IdentityDictionary new.",						"\tdesiredSelection := IdentitySet new.",						"\tshouldSkipCurrentDesiredSelection := false.",						"\tupdatingStarted := false.",						"\ttabMorph := TabManagerMorph new.",						"\ttabMorph useSortedTabsBy: [ :a :b | ",						"\t\ta model tabOrder <= b model tabOrder ].",						"\ttabMorph",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #spaceFill"					],					"body" : [						"super initialize.",						"tools := SortedCollection sortBlock: [ :a :b | ",						"\t         a tabOrder <= b tabOrder ].",						"selectionPriorities := IdentityDictionary new.",						"desiredSelection := IdentitySet new.",						"shouldSkipCurrentDesiredSelection := false.",						"updatingStarted := false.",						"tabMorph := TabManagerMorph new.",						"tabMorph useSortedTabsBy: [ :a :b | ",						"\ta model tabOrder <= b model tabOrder ].",						"tabMorph",						"\thResizing: #spaceFill;",						"\tvResizing: #spaceFill"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5909053,					"argumentNames" : [ ]				},				"Author" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfullName := ''"					],					"body" : [						"super initialize.",						"fullName := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1656748,					"argumentNames" : [ ]				},				"FLCompiledMethodCluster class" : {					"sourceCode" : [						"initialize",						"",						"\tself setTrailerWithSourceCode"					],					"body" : [						"self setTrailerWithSourceCode"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2467396,					"argumentNames" : [ ]				},				"SmallDictionary" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tkeys := Array new: 2.",						"\tvalues := Array new: 2.",						"\tsize := 0"					],					"body" : [						"super initialize.",						"keys := Array new: 2.",						"values := Array new: 2.",						"size := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1931239,					"argumentNames" : [ ]				},				"RGMetaclassTraitV2Strategy" : {					"sourceCode" : [						"initialize",						"",						"\tbaseClass := RGUnresolvedValue recursive.",						"",						"\tsuper initialize"					],					"body" : [						"baseClass := RGUnresolvedValue recursive.",						"",						"super initialize"					],					"isTestMethod" : false,					"category" : "private - backend access",					"comment" : [ ],					"hash" : 6042432,					"argumentNames" : [ ]				},				"RSLabeled" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself shapeBuilder: RSMultilineLabelBuilder new.",						"\tself model: #model.",						"\tlocation := RSLocation new above.",						"\tisHighlightable := false"					],					"body" : [						"super initialize.",						"self shapeBuilder: RSMultilineLabelBuilder new.",						"self model: #model.",						"location := RSLocation new above.",						"isHighlightable := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6529849,					"argumentNames" : [ ]				},				"EndianDetector class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1744032,					"argumentNames" : [ ]				},				"ZipConstants class" : {					"sourceCode" : [						"initialize",						"",						"\tself",						"\t\tinitializeDeflateConstants;",						"\t\tinitializeWriteStreamConstants"					],					"body" : [						"self",						"\tinitializeDeflateConstants;",						"\tinitializeWriteStreamConstants"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2136068,					"argumentNames" : [ ]				},				"Archive" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmembers := OrderedCollection new"					],					"body" : [						"super initialize.",						"members := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2133273,					"argumentNames" : [ ]				},				"GlobalIdentifier" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\t\"Dictionary contains all the values that we want to persist on disk.\"",						"\tpersistedInformation := Dictionary new.",						"\tpersistedInformation at: #computerUUID put: UUID new asString.",						"\tpersistedInformation at: #secretUUID put: UUID new asString.",						"\tpersistenceStrategy := GlobalIdentifierPersistence ston.",						"\tpersistenceStrategy previous: GlobalIdentifierPersistence fuel"					],					"body" : [						"super initialize.",						"\"Dictionary contains all the values that we want to persist on disk.\"",						"persistedInformation := Dictionary new.",						"persistedInformation at: #computerUUID put: UUID new asString.",						"persistedInformation at: #secretUUID put: UUID new asString.",						"persistenceStrategy := GlobalIdentifierPersistence ston.",						"persistenceStrategy previous: GlobalIdentifierPersistence fuel"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1558317,					"argumentNames" : [ ]				},				"SpPanelMorphWithSplitters" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tpaneMorphs := OrderedCollection new"					],					"body" : [						"super initialize.",						"",						"paneMorphs := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3378506,					"argumentNames" : [ ]				},				"RSSunburstBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself extentStrategy extent: 500 @ 500.",						"\tself leafWeight: 1.",						"\tself sliceColor: NSScale category20c.",						"\tsliceShape := RSPieSlice new.",						"\tmaxLevel := 0"					],					"body" : [						"super initialize.",						"self extentStrategy extent: 500 @ 500.",						"self leafWeight: 1.",						"self sliceColor: NSScale category20c.",						"sliceShape := RSPieSlice new.",						"maxLevel := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6585617,					"argumentNames" : [ ]				},				"SpPresenterSelectorPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tcases := SmallDictionary new.",						"\tsuper initialize"					],					"body" : [						"cases := SmallDictionary new.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3029596,					"argumentNames" : [ ]				},				"RBClass class" : {					"sourceCode" : [						"initialize",						"",						"\tLookupComment := Object new"					],					"body" : [						"LookupComment := Object new"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 3933488,					"argumentNames" : [ ]				},				"GAngle class" : {					"sourceCode" : [						"initialize",						"",						"\tTwoPi := 2 π.",						"\tZeroAngle := 0 radians.",						"\tRightAngle := 0.5 π radians.",						"\tStraightAngle := 1 π radians"					],					"body" : [						"TwoPi := 2 π.",						"ZeroAngle := 0 radians.",						"RightAngle := 0.5 π radians.",						"StraightAngle := 1 π radians"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 6395375,					"argumentNames" : [ ]				},				"MicRichTextCanvas" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tout := WriteStream on: '' asText.",						"\tbrushes := OrderedCollection with: (MicRichTextIndentBrush on: self).",						"\tnesting := 0.",						"\tcrAtEnd := true \"Prevent newlines in beginning\""					],					"body" : [						"super initialize.",						"out := WriteStream on: '' asText.",						"brushes := OrderedCollection with: (MicRichTextIndentBrush on: self).",						"nesting := 0.",						"crAtEnd := true \"Prevent newlines in beginning\""					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7381989,					"argumentNames" : [ ]				},				"IRMethod" : {					"sourceCode" : [						"initialize",						"",						"\tirPrimitive := IRPrimitive null.",						"\ttempMap := Dictionary new.",						"\tpragmas := OrderedCollection new.",						"\tadditionalLiterals := OCLiteralSet new.",						"\tnumArgs := 0"					],					"body" : [						"irPrimitive := IRPrimitive null.",						"tempMap := Dictionary new.",						"pragmas := OrderedCollection new.",						"additionalLiterals := OCLiteralSet new.",						"numArgs := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2038184,					"argumentNames" : [ ]				},				"WeakAnnouncementSubscription" : {					"sourceCode" : [						"initialize",						"",						"\tlist := self class finalizationList"					],					"body" : [						"list := self class finalizationList"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1970119,					"argumentNames" : [ ]				},				"CoStaticBenchmarks" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcompletionBenchs := Dictionary new"					],					"body" : [						"super initialize.",						"completionBenchs := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6117914,					"argumentNames" : [ ]				},				"AthensCanvasWrapper" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\torigin := 0 @ 0"					],					"body" : [						"super initialize.",						"origin := 0 @ 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4207753,					"argumentNames" : [ ]				},				"QuoRemStandard" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tquo := self value floor.",						"\trem := a - (quo * b)"					],					"body" : [						"super initialize.",						"",						"quo := self value floor.",						"rem := a - (quo * b)"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 3115893,					"argumentNames" : [ ]				},				"EFFormatter class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tFormatAsYouReadPolicy := false.",						"\tDefaultPrettyPrintContext := EFContext new"					],					"body" : [						"FormatAsYouReadPolicy := false.",						"DefaultPrettyPrintContext := EFContext new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"self initialize"					],					"hash" : 3899013,					"argumentNames" : [ ]				},				"TonelSTONWriter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself prettyPrint: true.",						"\taliases := { (OrderedDictionary -> nil) } asDictionary"					],					"body" : [						"super initialize.",						"self prettyPrint: true.",						"aliases := { (OrderedDictionary -> nil) } asDictionary"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2321116,					"argumentNames" : [ ]				},				"SystemOrganizer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcategoryArray := Array new.",						"\tcategoryStops := Array new.",						"\telementArray := Array new"					],					"body" : [						"super initialize.",						"categoryArray := Array new.",						"categoryStops := Array new.",						"elementArray := Array new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1599180,					"argumentNames" : [ ]				},				"RGBehavior" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\t\"use unresolved value for superclass to avoid infinite recursion. It needs to be set later\"",						"\tsuperclass := RGUnresolvedValue recursive.",						"\tmetaclass := RGUnresolvedValue recursive.",						"\tlocalMethods := self unresolvedValue: self defaultLocalMethods.",						"\ttraitComposition := self unresolvedValue:",						"\t\t                    self defaultTraitComposition.",						"\ttagsForMethods := self unresolvedValue: self defaultTagsForMethods.",						"\ttags := self unresolvedValue: self defaultTags"					],					"body" : [						"super initialize.",						"",						"\"use unresolved value for superclass to avoid infinite recursion. It needs to be set later\"",						"superclass := RGUnresolvedValue recursive.",						"metaclass := RGUnresolvedValue recursive.",						"localMethods := self unresolvedValue: self defaultLocalMethods.",						"traitComposition := self unresolvedValue: self defaultTraitComposition.",						"tagsForMethods := self unresolvedValue: self defaultTagsForMethods.",						"tags := self unresolvedValue: self defaultTags"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6049621,					"argumentNames" : [ ]				},				"FFIConstantArgument" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttype := FFIUndefinedTypeDeclaration new"					],					"body" : [						"super initialize.",						"type := FFIUndefinedTypeDeclaration new"					],					"isTestMethod" : false,					"category" : "resolving",					"comment" : [ ],					"hash" : 1308699,					"argumentNames" : [ ]				},				"RBPackageEnvironment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpackages := Set new"					],					"body" : [						"super initialize.",						"packages := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3930186,					"argumentNames" : [ ]				},				"DiffPatch" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\telements := OrderedCollection new"					],					"body" : [						"super initialize.",						"elements := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6153241,					"argumentNames" : [ ]				},				"FFIExternalResourceManager" : {					"sourceCode" : [						"initialize",						"",						"\tregistry := WeakRegistry new"					],					"body" : [						"registry := WeakRegistry new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1285620,					"argumentNames" : [ ]				},				"Mutex" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsemaphore := Semaphore forMutualExclusion"					],					"body" : [						"super initialize.",						"semaphore := Semaphore forMutualExclusion"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1862192,					"argumentNames" : [ ]				},				"SpHeaderCellMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself listCentering: #left.",						"\tself indentBy: self class indent"					],					"body" : [						"super initialize.",						"self listCentering: #left.",						"self indentBy: self class indent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3343602,					"argumentNames" : [ ]				},				"IceTipDiffPanel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself subscribeToAnnouncements"					],					"body" : [						"super initialize.",						"self subscribeToAnnouncements"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7107177,					"argumentNames" : [ ]				},				"RSMorphicPopupInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself morphBuilder: [ :model | model asString asTextMorph ].",						"\tgapFromPointer := 0 @ 0"					],					"body" : [						"super initialize.",						"self morphBuilder: [ :model | model asString asTextMorph ].",						"gapFromPointer := 0 @ 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6523488,					"argumentNames" : [ ]				},				"TableLayoutProperties" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcellSpacing := listSpacing := wrapDirection := #none.",						"\tcellPositioning := #center.",						"\tlistCentering := wrapCentering := #topLeft.",						"\tlistDirection := #topToBottom.",						"\treverseTableCells := rubberBandCells := false.",						"\tlayoutInset := cellInset := minCellSize := 0.",						"\tmaxCellSize := 1073741823 \"SmallInteger maxVal\""					],					"body" : [						"super initialize.",						"cellSpacing := listSpacing := wrapDirection := #none.",						"cellPositioning := #center.",						"listCentering := wrapCentering := #topLeft.",						"listDirection := #topToBottom.",						"reverseTableCells := rubberBandCells := false.",						"layoutInset := cellInset := minCellSize := 0.",						"maxCellSize := 1073741823 \"SmallInteger maxVal\""					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2639494,					"argumentNames" : [ ]				},				"NonInteractiveTranscript class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Make sure to cleanup on shutdown\"",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Make sure to cleanup on shutdown"					],					"hash" : 1714848,					"argumentNames" : [ ]				},				"MD5NonPrimitive" : {					"sourceCode" : [						"initialize",						"",						"\t\"Some magic numbers to get the process started\"",						"",						"\tstate := OrderedCollection newFrom: { ",						"\t\t\t         (ThirtyTwoBitRegister new load: 1732584193).",						"\t\t\t         (ThirtyTwoBitRegister new load: 4023233417).",						"\t\t\t         (ThirtyTwoBitRegister new load: 2562383102).",						"\t\t\t         (ThirtyTwoBitRegister new load: 271733878) }"					],					"body" : [						"state := OrderedCollection newFrom: { ",						"\t\t         (ThirtyTwoBitRegister new load: 1732584193).",						"\t\t         (ThirtyTwoBitRegister new load: 4023233417).",						"\t\t         (ThirtyTwoBitRegister new load: 2562383102).",						"\t\t         (ThirtyTwoBitRegister new load: 271733878) }"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Some magic numbers to get the process started"					],					"hash" : 1823508,					"argumentNames" : [ ]				},				"SystemSettingsPersistence class" : {					"sourceCode" : [						"initialize",						"",						"\t\"in order to update settings at startup.",						"\tshould be registered at the end of standard classes but before user classes\"",						"",						"\t\"IMPORTANT: do not uncomment the registration to the session manager!",						"\tFor now, SystemSettingsPersistence is handled directly by the command line handler startup.",						"\tWe should define a startup action parsing command line arguments and able to provide them to other startup actions. Then, SystemSettingsPersistence as well as StartupPreferencesLoader, could be independent startup actions.\"",						"",						"\t\"SessionManager default",						"\t\tregisterBeforeUserClass: self\"",						"",						"\t"					],					"body" : [ ],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"in order to update settings at startup.",						"\tshould be registered at the end of standard classes but before user classes"					],					"hash" : 2744968,					"argumentNames" : [ ]				},				"ExecutionCounter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcount := 0"					],					"body" : [						"super initialize.",						"count := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3819468,					"argumentNames" : [ ]				},				"MailMessage" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize as an empty message\"",						"",						"\tsuper initialize.",						"\ttext := String cr.",						"\tfields := Dictionary new.",						"\tbody := MIMEDocument contentType: 'text/plain' content: String cr"					],					"body" : [						"super initialize.",						"text := String cr.",						"fields := Dictionary new.",						"body := MIMEDocument contentType: 'text/plain' content: String cr"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize as an empty message"					],					"hash" : 3915793,					"argumentNames" : [ ]				},				"ReDetectIfNoneRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace:",						"\t\t\t'``@collection contains: [:`each | | `@temps | ``@.Statements]'",						"\t\twith:",						"\t\t\t'``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]';",						"\t\treplace:",						"\t\t\t'(``@collection detect: [:`each | | `@temps | ``@.Statements] ifNone: [nil]) isNil'",						"\t\twith:",						"\t\t\t'(``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]) not';",						"\t\treplace:",						"\t\t\t'(``@collection detect: [:`each | | `@temps | ``@.Statements] ifNone: [nil]) = nil'",						"\t\twith:",						"\t\t\t'(``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]) not';",						"\t\treplace:",						"\t\t\t'(``@collection detect: [:`each | | `@temps | ``@.Statements] ifNone: [nil]) == nil'",						"\t\twith:",						"\t\t\t'(``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]) not';",						"\t\treplace:",						"\t\t\t'(``@collection detect: [:`each | | `@temps | ``@.Statements] ifNone: [nil]) notNil'",						"\t\twith:",						"\t\t\t'``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]';",						"\t\treplace:",						"\t\t\t'(``@collection detect: [:`each | | `@temps | ``@.Statements] ifNone: [nil]) ~= nil'",						"\t\twith:",						"\t\t\t'``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]';",						"\t\treplace:",						"\t\t\t'(``@collection detect: [:`each | | `@temps | ``@.Statements] ifNone: [nil]) ~~ nil'",						"\t\twith:",						"\t\t\t'``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]'"					],					"body" : [						"super initialize.",						"self",						"\treplace:",						"\t\t'``@collection contains: [:`each | | `@temps | ``@.Statements]'",						"\twith:",						"\t\t'``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]';",						"\treplace:",						"\t\t'(``@collection detect: [:`each | | `@temps | ``@.Statements] ifNone: [nil]) isNil'",						"\twith:",						"\t\t'(``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]) not';",						"\treplace:",						"\t\t'(``@collection detect: [:`each | | `@temps | ``@.Statements] ifNone: [nil]) = nil'",						"\twith:",						"\t\t'(``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]) not';",						"\treplace:",						"\t\t'(``@collection detect: [:`each | | `@temps | ``@.Statements] ifNone: [nil]) == nil'",						"\twith:",						"\t\t'(``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]) not';",						"\treplace:",						"\t\t'(``@collection detect: [:`each | | `@temps | ``@.Statements] ifNone: [nil]) notNil'",						"\twith:",						"\t\t'``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]';",						"\treplace:",						"\t\t'(``@collection detect: [:`each | | `@temps | ``@.Statements] ifNone: [nil]) ~= nil'",						"\twith:",						"\t\t'``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]';",						"\treplace:",						"\t\t'(``@collection detect: [:`each | | `@temps | ``@.Statements] ifNone: [nil]) ~~ nil'",						"\twith:",						"\t\t'``@collection anySatisfy: [:`each | | `@temps | ``@.Statements]'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4733212,					"argumentNames" : [ ]				},				"FreeTypeNameParser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdelimiters := ',.-_'.",						"\tCharacter separators do: [ :c | ",						"\t\tdelimiters := delimiters , c asString ]"					],					"body" : [						"super initialize.",						"delimiters := ',.-_'.",						"Character separators do: [ :c | delimiters := delimiters , c asString ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1556174,					"argumentNames" : [ ]				},				"SpNotebookPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpagesHolder := OrderedCollection new asValueHolder.",						"\tpagesHolder whenChangedDo: [ self pagesChanged ]"					],					"body" : [						"super initialize.",						"pagesHolder := OrderedCollection new asValueHolder.",						"pagesHolder whenChangedDo: [ self pagesChanged ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3016833,					"argumentNames" : [ ]				},				"RBCompositeRefactoryChange" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tchanges := OrderedCollection new"					],					"body" : [						"super initialize.",						"changes := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3978780,					"argumentNames" : [ ]				},				"DATarjanAlgorithm" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstronglyConnectedComponents := OrderedCollection new.",						"\tstack := Stack new.",						"\trunningIndex := 0"					],					"body" : [						"super initialize.",						"stronglyConnectedComponents := OrderedCollection new.",						"stack := Stack new.",						"runningIndex := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2584736,					"argumentNames" : [ ]				},				"StWithoutDuplicatesDecorator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tuniqueResults := Set new"					],					"body" : [						"super initialize.",						"uniqueResults := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6276635,					"argumentNames" : [ ]				},				"SQSurfaceDispatch" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tmajorVersion: 1;",						"\t\tminorVersion: 0"					],					"body" : [						"super initialize.",						"self",						"\tmajorVersion: 1;",						"\tminorVersion: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3870445,					"argumentNames" : [ ]				},				"SpLayoutFrame" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tbottomFraction := 1.",						"\tbottomOffset := 0.",						"\tleftFraction := 0.",						"\tleftOffset := 0.",						"\trightFraction := 1.",						"\trightOffset := 0.",						"\ttopFraction := 0.",						"\ttopOffset := 0"					],					"body" : [						"super initialize.",						"",						"bottomFraction := 1.",						"bottomOffset := 0.",						"leftFraction := 0.",						"leftOffset := 0.",						"rightFraction := 1.",						"rightOffset := 0.",						"topFraction := 0.",						"topOffset := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2952606,					"argumentNames" : [ ]				},				"IRBytecodeScope" : {					"sourceCode" : [						"initialize",						"",						"\ttemps := 0.",						"\townTempVectors := OrderedCollection new"					],					"body" : [						"temps := 0.",						"ownTempVectors := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2036496,					"argumentNames" : [ ]				},				"ReAsClassRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: '`@expr asClass' with: 'self class environment at: `@expr';",						"\t\treplace: '`@expr asClassIfAbsent: `@block'",						"\t\twith: 'self class environment at: `@expr ifAbsent: `@block';",						"\t\treplace: '`@expr asClassIfPresent: `@block'",						"\t\twith: 'self class environment at: `@expr ifPresent: `@block'"					],					"body" : [						"super initialize.",						"self",						"\treplace: '`@expr asClass' with: 'self class environment at: `@expr';",						"\treplace: '`@expr asClassIfAbsent: `@block'",						"\twith: 'self class environment at: `@expr ifAbsent: `@block';",						"\treplace: '`@expr asClassIfPresent: `@block'",						"\twith: 'self class environment at: `@expr ifPresent: `@block'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2892146,					"argumentNames" : [ ]				},				"OCASTTranslator" : {					"sourceCode" : [						"initialize",						"",						"\tmethodBuilder := IRBuilder new.",						"\teffectTranslator := self classForEffect basicNew.",						"\tvalueTranslator := self classForValue basicNew.",						"\teffectTranslator setFromSimilar: self.",						"\tvalueTranslator setFromSimilar: self"					],					"body" : [						"methodBuilder := IRBuilder new.",						"effectTranslator := self classForEffect basicNew.",						"valueTranslator := self classForValue basicNew.",						"effectTranslator setFromSimilar: self.",						"valueTranslator setFromSimilar: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2040046,					"argumentNames" : [ ]				},				"PharoDarkTheme" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself windowActiveDropShadowStyle: #diffuse.",						"\tself settings preferGradientFill: false"					],					"body" : [						"super initialize.",						"self windowActiveDropShadowStyle: #diffuse.",						"self settings preferGradientFill: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1493341,					"argumentNames" : [ ]				},				"SpApplicationBackend" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself resetAdapterBindings"					],					"body" : [						"super initialize.",						"self resetAdapterBindings"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2967145,					"argumentNames" : [ ]				},				"RSShowProgressLabelDecorator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlabelShape := RSLabel new.",						"\thighlight := RSHighlightable new.",						"\thighlight",						"\t\thighlightColor: [ :shape | shape color adjustBrightness: 0.08 ];",						"\t\twhen: RSHighlightEvent do: [ :evt | self updateLabel: evt shape ];",						"\t\twhen: RSUnHighlightEvent do: [ :evt | self updateLabel: nil ]"					],					"body" : [						"super initialize.",						"labelShape := RSLabel new.",						"highlight := RSHighlightable new.",						"highlight",						"\thighlightColor: [ :shape | shape color adjustBrightness: 0.08 ];",						"\twhen: RSHighlightEvent do: [ :evt | self updateLabel: evt shape ];",						"\twhen: RSUnHighlightEvent do: [ :evt | self updateLabel: nil ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6589263,					"argumentNames" : [ ]				},				"IceGitHubNewBranchFromIssuePanel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfetched := false"					],					"body" : [						"super initialize.",						"fetched := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7273486,					"argumentNames" : [ ]				},				"ExceptionSet" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\texceptions := OrderedCollection new"					],					"body" : [						"super initialize.",						"exceptions := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1749785,					"argumentNames" : [ ]				},				"IceNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tchildrenDictionary := Dictionary new"					],					"body" : [						"super initialize.",						"childrenDictionary := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6958618,					"argumentNames" : [ ]				},				"SDL2WindowsMessages class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Spliting the initialization of constants. ",						"The Pharo 9 bootstrap is still building the image first in V3 bytecode and the number of literals is limited.",						"These methods can be inlined when V3 bytecode is left behind in the bootstrap.\"",						"",						"\tself initializeVariablesSet1.",						"\tself initializeVariablesSet2.",						"\tself initializeVariablesSet3.",						"\tself initializeVariablesSet4.",						"\tself initializeVariablesSet5.",						"\tself initializeVariablesSet6.",						"\tself initializeVariablesSet7"					],					"body" : [						"self initializeVariablesSet1.",						"self initializeVariablesSet2.",						"self initializeVariablesSet3.",						"self initializeVariablesSet4.",						"self initializeVariablesSet5.",						"self initializeVariablesSet6.",						"self initializeVariablesSet7"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Spliting the initialization of constants. ",						"The Pharo 9 bootstrap is still building the image first in V3 bytecode and the number of literals is limited.",						"These methods can be inlined when V3 bytecode is left behind in the bootstrap."					],					"hash" : 4863657,					"argumentNames" : [ ]				},				"RSBoundingShape" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tinitializeMatrix;",						"\t\tupdateEdgesON.",						"",						"\tbaseRectangle := 0 @ 0 corner: 0 @ 0.",						"\tself extent: 10 @ 10"					],					"body" : [						"super initialize.",						"self",						"\tinitializeMatrix;",						"\tupdateEdgesON.",						"",						"baseRectangle := 0 @ 0 corner: 0 @ 0.",						"self extent: 10 @ 10"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6469754,					"argumentNames" : [ ]				},				"SpDemoTablePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tselectedClasses := OrderedCollection",						"\t\t                   with: ASTCache",						"\t\t                   with: ASTEvaluationTest",						"\t\t                   with: Abort.",						"\tsuper initialize"					],					"body" : [						"selectedClasses := OrderedCollection",						"\t                   with: ASTCache",						"\t                   with: ASTEvaluationTest",						"\t                   with: Abort.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3261836,					"argumentNames" : [ ]				},				"SpDialogWindow" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself beResizeable"					],					"body" : [						"super initialize.",						"self beResizeable"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3380073,					"argumentNames" : [ ]				},				"SpEventHandler" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tevents := Set new"					],					"body" : [						"super initialize.",						"events := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2975770,					"argumentNames" : [ ]				},				"OmSTONEntryWriter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\twriter := self newSTONWriter"					],					"body" : [						"super initialize.",						"writer := self newSTONWriter"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4969562,					"argumentNames" : [ ]				},				"TestSharedPool class" : {					"sourceCode" : [						"initialize",						"",						"\tOne := 1"					],					"body" : [						"One := 1"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4260578,					"argumentNames" : [ ]				},				"SpToolbarMenuButtonPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself addStyle: 'button'"					],					"body" : [						"super initialize.",						"self addStyle: 'button'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3019437,					"argumentNames" : [ ]				},				"TreeNodePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tchildren := [ self container childrenFor: self content ]",						"\t\t            asValueHolder.",						"\thasChildren := [ self container hasChildrenFor: self content ]",						"\t\t               asValueHolder.",						"\tcontent := nil asValueHolder.",						"\ticon := nil asValueHolder.",						"\tcontainer := nil asValueHolder.",						"\tmatchTokenFilter := [ :aFilter | false ] asValueHolder.",						"\tparentNode := nil asValueHolder.",						"\tchildNodeClass := self class asValueHolder.",						"\tselected := false asValueHolder.",						"\tlastClicked := false asValueHolder.",						"\tmouseDownAction := [ :event |  ] asValueHolder.",						"\thasContentToShow := false asValueHolder.",						"\tisExpanded := false asValueHolder.",						"",						"\tselected whenChangedDo: [ :aBoolean | ",						"\t\tself changed: #selected: with: { aBoolean } ].",						"\tisExpanded whenChangedDo: [ :aBoolean | ",						"\t\tself changed: #isExpanded: with: { aBoolean } ]"					],					"body" : [						"super initialize.",						"",						"children := [ self container childrenFor: self content ] asValueHolder.",						"hasChildren := [ self container hasChildrenFor: self content ]",						"\t               asValueHolder.",						"content := nil asValueHolder.",						"icon := nil asValueHolder.",						"container := nil asValueHolder.",						"matchTokenFilter := [ :aFilter | false ] asValueHolder.",						"parentNode := nil asValueHolder.",						"childNodeClass := self class asValueHolder.",						"selected := false asValueHolder.",						"lastClicked := false asValueHolder.",						"mouseDownAction := [ :event |  ] asValueHolder.",						"hasContentToShow := false asValueHolder.",						"isExpanded := false asValueHolder.",						"",						"selected whenChangedDo: [ :aBoolean | ",						"\tself changed: #selected: with: { aBoolean } ].",						"isExpanded whenChangedDo: [ :aBoolean | ",						"\tself changed: #isExpanded: with: { aBoolean } ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1708377,					"argumentNames" : [ ]				},				"GZipConstants class" : {					"sourceCode" : [						"initialize",						"",						"\t\"GZipConstants initialize\"",						"",						"\tGZipMagic := 16r8B1F. \"GZIP magic number\"",						"\tGZipDeflated := 8. \"Compression method\"",						"",						"\tGZipAsciiFlag := 16r01. \"Contents is ASCII\"",						"\tGZipContinueFlag := 16r02. \"Part of a multi-part archive\"",						"\tGZipExtraField := 16r04. \"Archive has extra fields\"",						"\tGZipNameFlag := 16r08. \"Archive has original file name\"",						"\tGZipCommentFlag := 16r10. \"Archive has comment\"",						"\tGZipEncryptFlag := 16r20. \"Archive is encrypted\"",						"\tGZipReservedFlags := 16rC0 \"Reserved\""					],					"body" : [						"GZipMagic := 16r8B1F. \"GZIP magic number\"",						"GZipDeflated := 8. \"Compression method\"",						"",						"GZipAsciiFlag := 16r01. \"Contents is ASCII\"",						"GZipContinueFlag := 16r02. \"Part of a multi-part archive\"",						"GZipExtraField := 16r04. \"Archive has extra fields\"",						"GZipNameFlag := 16r08. \"Archive has original file name\"",						"GZipCommentFlag := 16r10. \"Archive has comment\"",						"GZipEncryptFlag := 16r20. \"Archive is encrypted\"",						"GZipReservedFlags := 16rC0 \"Reserved\""					],					"isTestMethod" : false,					"category" : "pool initialization",					"comment" : [						"GZipConstants initialize"					],					"hash" : 2137083,					"argumentNames" : [ ]				},				"RBCompositeTransformation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdelegatesPreconditions := true"					],					"body" : [						"super initialize.",						"delegatesPreconditions := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5284556,					"argumentNames" : [ ]				},				"HEInstaller" : {					"sourceCode" : [						"initialize",						"",						"\tenvironment := self class environment.",						"\toriginalUndeclareds := Undeclared copy.",						"\thasTraits := Smalltalk globals hasClassNamed: #Trait"					],					"body" : [						"environment := self class environment.",						"originalUndeclareds := Undeclared copy.",						"hasTraits := Smalltalk globals hasClassNamed: #Trait"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1785011,					"argumentNames" : [ ]				},				"AnnouncementMockC" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tannouncingCounter := 0"					],					"body" : [						"super initialize.",						"announcingCounter := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4513483,					"argumentNames" : [ ]				},				"SmalllintManifestChecker" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmanifestClassCache := Dictionary new"					],					"body" : [						"super initialize.",						"manifestClassCache := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2494493,					"argumentNames" : [ ]				},				"RSMultilineLabelBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tlabelShape: RSLabel new;",						"\t\ttextBlock: #asString.",						"\tself wrapStrategy: RSNoWrapStrategy new"					],					"body" : [						"super initialize.",						"self",						"\tlabelShape: RSLabel new;",						"\ttextBlock: #asString.",						"self wrapStrategy: RSNoWrapStrategy new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6463892,					"argumentNames" : [ ]				},				"DelayBasicScheduler" : {					"sourceCode" : [						"initialize",						"",						"\t\"Default configuration.\"",						"",						"\tself",						"\t\tinitializeTicker: DelayMicrosecondTicker new",						"\t\tsuspendedDelaysHeap: DelayBasicScheduler defaultSuspendedDelaysHeap"					],					"body" : [						"self",						"\tinitializeTicker: DelayMicrosecondTicker new",						"\tsuspendedDelaysHeap: DelayBasicScheduler defaultSuspendedDelaysHeap"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Default configuration."					],					"hash" : 1722045,					"argumentNames" : [ ]				},				"ByteTextConverter class" : {					"sourceCode" : [						"initialize",						"",						"\t\"ByteTextConverter initialize\"",						"",						"\tself allSubclassesDo: [ :subclass | subclass initializeTables ]"					],					"body" : [						"self allSubclassesDo: [ :subclass | subclass initializeTables ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"ByteTextConverter initialize"					],					"hash" : 3031394,					"argumentNames" : [ ]				},				"ClyUnknownScope" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tbasisObjects := #(  )"					],					"body" : [						"super initialize.",						"",						"basisObjects := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5655725,					"argumentNames" : [ ]				},				"OSTouchSwipeDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tminDistToBorder := self class minDistToBorder"					],					"body" : [						"super initialize.",						"minDistToBorder := self class minDistToBorder"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4847091,					"argumentNames" : [ ]				},				"ClyAsyncQuery" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tasyncResult := ClyAsyncQueryResult new"					],					"body" : [						"super initialize.",						"",						"asyncResult := ClyAsyncQueryResult new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5646108,					"argumentNames" : [ ]				},				"RGObject" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tname := self unresolvedValue: self unresolvedName"					],					"body" : [						"super initialize.",						"",						"name := self unresolvedValue: self unresolvedName"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6045771,					"argumentNames" : [ ]				},				"SpTreeTablePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself withScrollBars.",						"",						"\tactivationBlock := [  ].",						"",						"\tshowColumnHeaders := true.",						"\tcolumns := #(  ).",						"\tisResizable := false.",						"\tchildrenBlock := [ :item | #(  ) ].",						"\troots := #(  ).",						"\tlazilyComputeChildren := false.",						"\tverticalAlignment := SpVerticalAlignment new.",						"",						"",						"\tself beSingleSelection.",						"\tself activateOnDoubleClick.",						"\tself registerEvents"					],					"body" : [						"super initialize.",						"",						"self withScrollBars.",						"",						"activationBlock := [  ].",						"",						"showColumnHeaders := true.",						"columns := #(  ).",						"isResizable := false.",						"childrenBlock := [ :item | #(  ) ].",						"roots := #(  ).",						"lazilyComputeChildren := false.",						"verticalAlignment := SpVerticalAlignment new.",						"",						"",						"self beSingleSelection.",						"self activateOnDoubleClick.",						"self registerEvents"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3274842,					"argumentNames" : [ ]				},				"StrikeFont class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerGuiClassNamed: self name"					],					"body" : [						"SessionManager default registerGuiClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1440928,					"argumentNames" : [ ]				},				"RSClusterLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tverticalGap := 30.",						"\thorizontalGap := 20.",						"\texternalLayer := OrderedCollection new"					],					"body" : [						"super initialize.",						"verticalGap := 30.",						"horizontalGap := 20.",						"externalLayer := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6559315,					"argumentNames" : [ ]				},				"IconicButtonMorph class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tDefaultGraphics := self defaultGraphics"					],					"body" : [						"DefaultGraphics := self defaultGraphics"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [						"self initialize"					],					"hash" : 2754928,					"argumentNames" : [ ]				},				"ClyClassGroup" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tsubgroupsQuery := ClyUnknownQuery instance"					],					"body" : [						"super initialize.",						"",						"subgroupsQuery := ClyUnknownQuery instance"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5726515,					"argumentNames" : [ ]				},				"PlainGroupboxMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tborderStyle: (self theme plainGroupPanelBorderStyleFor: self);",						"\t\tchangeTableLayout;",						"\t\tlayoutInset: 4;",						"\t\tcellInset: 8;",						"\t\tvResizing: #spaceFill;",						"\t\thResizing: #spaceFill"					],					"body" : [						"super initialize.",						"self",						"\tborderStyle: (self theme plainGroupPanelBorderStyleFor: self);",						"\tchangeTableLayout;",						"\tlayoutInset: 4;",						"\tcellInset: 8;",						"\tvResizing: #spaceFill;",						"\thResizing: #spaceFill"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2752579,					"argumentNames" : [ ]				},				"OSSDL2BackendWindow" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself class initializeSlots: self"					],					"body" : [						"super initialize.",						"self class initializeSlots: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4867162,					"argumentNames" : [ ]				},				"RSInterference" : {					"sourceCode" : [						"initialize",						"",						"\t| r |",						"\tsuper initialize.",						"\tr := SharedRandom globalGenerator.",						"\tself mode: (r next < 0.5",						"\t\t\t ifTrue: [ #attract ]",						"\t\t\t ifFalse: [ #reject ]).",						"\tself radius: r next * 300"					],					"body" : [						"| r |",						"super initialize.",						"r := SharedRandom globalGenerator.",						"self mode: (r next < 0.5",						"\t\t ifTrue: [ #attract ]",						"\t\t ifFalse: [ #reject ]).",						"self radius: r next * 300"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3344747,					"argumentNames" : [ ]				},				"FTBasicTreeListItem" : {					"sourceCode" : [						"initialize",						"",						"\texpanded := false.",						"\tdepth := 0.",						"\tchildren := #(  )"					],					"body" : [						"expanded := false.",						"depth := 0.",						"children := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1529277,					"argumentNames" : [ ]				},				"CommandLineUIManager" : {					"sourceCode" : [						"initialize",						"",						"\tdoNotQuitOnRestart := false"					],					"body" : [						"doNotQuitOnRestart := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1706148,					"argumentNames" : [ ]				},				"CairoFreetypeFontRenderer" : {					"sourceCode" : [						"initialize",						"",						"\tutfConverter := CairoUTF8Converter new.",						"\tadvance := 0 @ 0.",						"\tglyphExtents := CairoTextExtents new"					],					"body" : [						"utfConverter := CairoUTF8Converter new.",						"advance := 0 @ 0.",						"glyphExtents := CairoTextExtents new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3882814,					"argumentNames" : [ ]				},				"MalBfsNode" : {					"sourceCode" : [						"initialize",						"",						"\tnextEdges := OrderedCollection new"					],					"body" : [						"nextEdges := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2561013,					"argumentNames" : [ ]				},				"Color class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Details: Externally, the red, green, and blue components of color",						"\tare floats in the range [0.0..1.0]. Internally, they are represented",						"\tas integers in the range [0..ComponentMask] packing into a",						"\tsmall integer to save space and to allow fast hashing and",						"\tequality testing.",						"",						"\tFor a general description of color representations for computer",						"\tgraphics, including the relationship between the RGB and HSV",						"\tcolor models used here, see Chapter 17 of Foley and van Dam,",						"\tFundamentals of Interactive Computer Graphics, Addison-Wesley,",						"\t1982.\"",						"",						"\tComponentMask := 1023.",						"\tHalfComponentMask := 512. \"used to round up in integer calculations\"",						"\tComponentMax := 1023.0. \"a Float used to normalize components\"",						"\tRedShift := 20.",						"\tGreenShift := 10.",						"\tBlueShift := 0.",						"",						"\tself",						"\t\tinitializeIndexedColors;",						"\t\tinitializeColorRegistry;",						"\t\tinitializeGrayToIndexMap.",						"",						"\tSessionManager default registerGuiClassNamed: self name"					],					"body" : [						"ComponentMask := 1023.",						"HalfComponentMask := 512. \"used to round up in integer calculations\"",						"ComponentMax := 1023.0. \"a Float used to normalize components\"",						"RedShift := 20.",						"GreenShift := 10.",						"BlueShift := 0.",						"",						"self",						"\tinitializeIndexedColors;",						"\tinitializeColorRegistry;",						"\tinitializeGrayToIndexMap.",						"",						"SessionManager default registerGuiClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Details: Externally, the red, green, and blue components of color",						"\tare floats in the range [0.0..1.0]. Internally, they are represented",						"\tas integers in the range [0..ComponentMask] packing into a",						"\tsmall integer to save space and to allow fast hashing and",						"\tequality testing.",						"",						"\tFor a general description of color representations for computer",						"\tgraphics, including the relationship between the RGB and HSV",						"\tcolor models used here, see Chapter 17 of Foley and van Dam,",						"\tFundamentals of Interactive Computer Graphics, Addison-Wesley,",						"\t1982."					],					"hash" : 1707130,					"argumentNames" : [ ]				},				"MCFileRepositoryInspector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tloaded := Set new.",						"\tloadedPackages := Set new.",						"\tversionPattern := ''.",						"\tpackagePattern := ''.",						"\tpackageList := #(  )"					],					"body" : [						"super initialize.",						"loaded := Set new.",						"loadedPackages := Set new.",						"versionPattern := ''.",						"packagePattern := ''.",						"packageList := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4009319,					"argumentNames" : [ ]				},				"CTOrderPreservingTree" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tparent := IdentityDictionary new"					],					"body" : [						"super initialize.",						"",						"parent := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4187161,					"argumentNames" : [ ]				},				"IncrementalSliderMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself sliderMorph: self newSliderMorph.",						"\tself",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\tcellInset: 0;",						"\t\tborderWidth: 0;",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #spaceFill;",						"\t\tborderColor: Color transparent;",						"\t\taddMorphBack: self newDecrementButton;",						"\t\taddMorphBack: self sliderMorph;",						"\t\taddMorphBack: self newIncrementButton"					],					"body" : [						"super initialize.",						"self sliderMorph: self newSliderMorph.",						"self",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\tcellInset: 0;",						"\tborderWidth: 0;",						"\thResizing: #spaceFill;",						"\tvResizing: #spaceFill;",						"\tborderColor: Color transparent;",						"\taddMorphBack: self newDecrementButton;",						"\taddMorphBack: self sliderMorph;",						"\taddMorphBack: self newIncrementButton"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2721786,					"argumentNames" : [ ]				},				"IceTipEditProjectDialog" : {					"sourceCode" : [						"initialize",						"",						"\tselectedDirectoryPath := RelativePath new.",						"\tformats := TIceRepositoryWriter users sorted: [ :a :b | ",						"\t\t           a description < b description ].",						"\tdefaultFormat := IceLibgitRepository defaultFileFormat.",						"",						"\tsuper initialize"					],					"body" : [						"selectedDirectoryPath := RelativePath new.",						"formats := TIceRepositoryWriter users sorted: [ :a :b | ",						"\t           a description < b description ].",						"defaultFormat := IceLibgitRepository defaultFileFormat.",						"",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7105496,					"argumentNames" : [ ]				},				"SpStringTableColumn" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\teditable := false.",						"\tsortable := false"					],					"body" : [						"super initialize.",						"editable := false.",						"sortable := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2989292,					"argumentNames" : [ ]				},				"AsyncFile class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Possible abnormal I/O completion results.\"",						"",						"\tBusy := -1.",						"\tErrorCode := -2"					],					"body" : [						"Busy := -1.",						"ErrorCode := -2"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Possible abnormal I/O completion results."					],					"hash" : 1655550,					"argumentNames" : [ ]				},				"KMMetaModifier" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tidentifier := #m.",						"\tname := 'Meta'"					],					"body" : [						"super initialize.",						"identifier := #m.",						"name := 'Meta'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1576106,					"argumentNames" : [ ]				},				"SimpleServiceEntry" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself useLineAfter"					],					"body" : [						"super initialize.",						"self useLineAfter"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2227305,					"argumentNames" : [ ]				},				"MenuItemMorph class" : {					"sourceCode" : [						"initialize",						"",						"\t\"MenuItemMorph initialize\"",						"",						"\t| f |",						"\tf := Form",						"\t\t     extent: 5 @ 9",						"\t\t     fromArray:",						"\t\t\t     #( 2147483648 3221225472 3758096384 4026531840 4160749568",						"\t\t\t        4026531840 3758096384 3221225472 2147483648 )",						"\t\t     offset: 0 @ 0.",						"",						"\tSubMenuMarker := (ColorForm mappingWhiteToTransparentFrom: f) ",						"\t\t                 asFormOfDepth: 32.",						"\tBottomArrow := SubMenuMarker rotateBy: 90.",						"\tLeftArrow := SubMenuMarker rotateBy: 180.",						"\tUpArrow := SubMenuMarker rotateBy: 270"					],					"body" : [						"| f |",						"f := Form",						"\t     extent: 5 @ 9",						"\t     fromArray:",						"\t\t     #( 2147483648 3221225472 3758096384 4026531840 4160749568",						"\t\t        4026531840 3758096384 3221225472 2147483648 )",						"\t     offset: 0 @ 0.",						"",						"SubMenuMarker := (ColorForm mappingWhiteToTransparentFrom: f) ",						"\t                 asFormOfDepth: 32.",						"BottomArrow := SubMenuMarker rotateBy: 90.",						"LeftArrow := SubMenuMarker rotateBy: 180.",						"UpArrow := SubMenuMarker rotateBy: 270"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"MenuItemMorph initialize"					],					"hash" : 1666778,					"argumentNames" : [ ]				},				"StSpotterContext" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tcache := self defaultCache.",						"\ttext := self defaultText.",						"\tcontinuing := self defaultContinuing"					],					"body" : [						"super initialize.",						"",						"cache := self defaultCache.",						"text := self defaultText.",						"continuing := self defaultContinuing"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6302742,					"argumentNames" : [ ]				},				"MorphicTreeAdapter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttreeModel := SpecTreeModel model: self.",						"\ttreeModel announcer",						"\t\twhen: MorphTreeSelectionChanged",						"\t\tsend: #onMorphTreeSelectionChanged:",						"\t\tto: self"					],					"body" : [						"super initialize.",						"",						"treeModel := SpecTreeModel model: self.",						"treeModel announcer",						"\twhen: MorphTreeSelectionChanged",						"\tsend: #onMorphTreeSelectionChanged:",						"\tto: self"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 1818848,					"argumentNames" : [ ]				},				"AdvancedHelpBrowserDummy" : {					"sourceCode" : [						"initialize",						"",						"\tisOpen := false"					],					"body" : [						"isOpen := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5135013,					"argumentNames" : [ ]				},				"Socket class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Socket initialize\"",						"",						"\t\"Socket Types\"",						"",						"\tTCPSocketType := 0.",						"\tUDPSocketType := 1.",						"",						"\t\"Socket Status Values\"",						"\tInvalidSocket := -1.",						"\tUnconnected := 0.",						"\tWaitingForConnection := 1.",						"\tConnected := 2.",						"\tOtherEndClosed := 3.",						"\tThisEndClosed := 4.",						"",						"\tRegistryThreshold := 100 \"# of sockets\""					],					"body" : [						"TCPSocketType := 0.",						"UDPSocketType := 1.",						"",						"\"Socket Status Values\"",						"InvalidSocket := -1.",						"Unconnected := 0.",						"WaitingForConnection := 1.",						"Connected := 2.",						"OtherEndClosed := 3.",						"ThisEndClosed := 4.",						"",						"RegistryThreshold := 100 \"# of sockets\""					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Socket initialize"					],					"hash" : 2162507,					"argumentNames" : [ ]				},				"UUID" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tUUIDGenerator default placeFields: self"					],					"body" : [						"super initialize.",						"UUIDGenerator default placeFields: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1954098,					"argumentNames" : [ ]				},				"StSpotterQuery" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeCandidatesList.",						"\tfinished := false.",						"\tcandidateLinks := Set new"					],					"body" : [						"super initialize.",						"self initializeCandidatesList.",						"finished := false.",						"candidateLinks := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6304497,					"argumentNames" : [ ]				},				"RGTraitStrategy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\t\"classTrait is set in the superclass\"",						"\tcomment := self unresolvedValue: self defaultComment.",						"\tpackage := self unresolvedValue: self defaultPackage"					],					"body" : [						"super initialize.",						"",						"\"classTrait is set in the superclass\"",						"comment := self unresolvedValue: self defaultComment.",						"package := self unresolvedValue: self defaultPackage"					],					"isTestMethod" : false,					"category" : "testing",					"comment" : [ ],					"hash" : 6042330,					"argumentNames" : [ ]				},				"SpGridLayoutBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlayout := SpGridLayout new.",						"\tcurrentRow := 1.",						"\tself resetCurrentColumn"					],					"body" : [						"super initialize.",						"layout := SpGridLayout new.",						"currentRow := 1.",						"self resetCurrentColumn"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2946289,					"argumentNames" : [ ]				},				"MicPathResolver" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself resolutionSource: FileSystem workingDirectory"					],					"body" : [						"super initialize.",						"self resolutionSource: FileSystem workingDirectory"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7360818,					"argumentNames" : [ ]				},				"ClyActiveBreakpointsQuery" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\texcludesHaltsForTesting := true"					],					"body" : [						"super initialize.",						"excludesHaltsForTesting := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5836745,					"argumentNames" : [ ]				},				"Microdown" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tparser := MicroDownParser new"					],					"body" : [						"super initialize.",						"parser := MicroDownParser new"					],					"isTestMethod" : false,					"category" : "parsing",					"comment" : [ ],					"hash" : 7359001,					"argumentNames" : [ ]				},				"AbstractMethodReferenceConverter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\treferencesList := #(  )"					],					"body" : [						"super initialize.",						"referencesList := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1507757,					"argumentNames" : [ ]				},				"Breakpoint" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\toptions := #( + optionCompileOnLinkInstallation )"					],					"body" : [						"self class initializeSlots: self.",						"options := #( + optionCompileOnLinkInstallation )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3818549,					"argumentNames" : [ ]				},				"ReRefactoringCritique" : {					"sourceCode" : [						"initialize",						"",						"\talreadyExecuted := false"					],					"body" : [						"alreadyExecuted := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2505642,					"argumentNames" : [ ]				},				"ReUnoptimizedAndOrRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny:",						"\t\t#( '(`@a and: `@b) and: `@c' '(`@a or: `@b) or: `@c' )"					],					"body" : [						"super initialize.",						"self matchesAny:",						"\t#( '(`@a and: `@b) and: `@c' '(`@a or: `@b) or: `@c' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4749741,					"argumentNames" : [ ]				},				"ZnHeaders class" : {					"sourceCode" : [						"initialize",						"",						"\tCommonHeaders := (#( 'Content-Length' 'Content-Type' 'Date' 'Server'",						"\t                     'Connection' 'User-Agent' 'Host' 'Accept'",						"\t                     'Accept-Language' 'Accept-Encoding'",						"\t                     'Referer' 'Dnt' 'Cookie' 'Set-Cookie'",						"\t                     'Authorization' 'WWW-Authenticate'",						"\t                     'Proxy-Authorization' 'Content-Encoding'",						"\t                     'Transfer-Encoding' 'Location' 'If-Modified-Since'",						"\t                     'Content-Disposition' 'X-Zinc-Remote-Address'",						"\t                     'X-Forwarded-Server' 'X-Forwarded-For'",						"\t                     'X-Forwarded-Host' ) collect: [ :each | ",						"\t\t                  ZnUtils capitalizeString: each ]) asSet"					],					"body" : [						"CommonHeaders := (#( 'Content-Length' 'Content-Type' 'Date' 'Server'",						"                     'Connection' 'User-Agent' 'Host' 'Accept'",						"                     'Accept-Language' 'Accept-Encoding'",						"                     'Referer' 'Dnt' 'Cookie' 'Set-Cookie'",						"                     'Authorization' 'WWW-Authenticate'",						"                     'Proxy-Authorization' 'Content-Encoding'",						"                     'Transfer-Encoding' 'Location' 'If-Modified-Since'",						"                     'Content-Disposition' 'X-Zinc-Remote-Address'",						"                     'X-Forwarded-Server' 'X-Forwarded-For'",						"                     'X-Forwarded-Host' ) collect: [ :each | ",						"\t                  ZnUtils capitalizeString: each ]) asSet"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2210061,					"argumentNames" : [ ]				},				"OmBlockFileStore" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tblocks := OrderedCollection with: (OmBlock",						"\t\t\t           store: self",						"\t\t\t           startPosition: 0",						"\t\t\t           endPosition: self blockSize - 1",						"\t\t\t           firstEntryReference: (self referenceToLocalName: '1'))"					],					"body" : [						"super initialize.",						"",						"blocks := OrderedCollection with: (OmBlock",						"\t\t           store: self",						"\t\t           startPosition: 0",						"\t\t           endPosition: self blockSize - 1",						"\t\t           firstEntryReference: (self referenceToLocalName: '1'))"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4974892,					"argumentNames" : [ ]				},				"IceUnknownCommit" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdatetime := DateAndTime now"					],					"body" : [						"super initialize.",						"datetime := DateAndTime now"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6971442,					"argumentNames" : [ ]				},				"IRTranslator" : {					"sourceCode" : [						"initialize",						"",						"\tcurrentScope := Stack new.",						"\ttempVectorStack := Stack new"					],					"body" : [						"currentScope := Stack new.",						"tempVectorStack := Stack new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2046799,					"argumentNames" : [ ]				},				"RBEntity" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmodelFactory := RBClassModelFactory new.",						"\tchangeFactory := RBRefactoryChangeManager changeFactory"					],					"body" : [						"super initialize.",						"modelFactory := RBClassModelFactory new.",						"changeFactory := RBRefactoryChangeManager changeFactory"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3933596,					"argumentNames" : [ ]				},				"MD5NonPrimitive class" : {					"sourceCode" : [						"initialize",						"",						"\t\"MD5NonPrimitive initialize\"",						"",						"\t\"Obscure fact: those magic hex numbers that are hard to type in correctly are",						"\tactually the result of a simple trigonometric function and are therefore",						"\teasier to compute than proofread.  Laziness is sometimes a virtue.\"",						"",						"\t| c |",						"\tc := 2 raisedTo: 32.",						"\tSinTable := Array new: 64.",						"\t1 to: 64 do: [ :i | ",						"\t\tSinTable",						"\t\t\tat: i",						"\t\t\tput: (ThirtyTwoBitRegister new load: (c * i sin abs) truncated) ].",						"\tShiftTable := { ",						"\t\t              #( 7 12 17 22 ).",						"\t\t              #( 5 9 14 20 ).",						"\t\t              #( 4 11 16 23 ).",						"\t\t              #( 6 10 15 21 ) }.",						"\tIndexTable := { ",						"\t\t              #( 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 ).",						"\t\t              #( 2 7 12 1 6 11 16 5 10 15 4 9 14 3 8 13 ).",						"\t\t              #( 6 9 12 15 2 5 8 11 14 1 4 7 10 13 16 3 ).",						"\t\t              #( 1 8 15 6 13 4 11 2 9 16 7 14 5 12 3 10 ) }.",						"\tABCDTable := { ",						"\t\t             #( 1 2 3 4 ).",						"\t\t             #( 4 1 2 3 ).",						"\t\t             #( 3 4 1 2 ).",						"\t\t             #( 2 3 4 1 ) }"					],					"body" : [						"| c |",						"c := 2 raisedTo: 32.",						"SinTable := Array new: 64.",						"1 to: 64 do: [ :i | ",						"\tSinTable",						"\t\tat: i",						"\t\tput: (ThirtyTwoBitRegister new load: (c * i sin abs) truncated) ].",						"ShiftTable := { ",						"\t              #( 7 12 17 22 ).",						"\t              #( 5 9 14 20 ).",						"\t              #( 4 11 16 23 ).",						"\t              #( 6 10 15 21 ) }.",						"IndexTable := { ",						"\t              #( 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 ).",						"\t              #( 2 7 12 1 6 11 16 5 10 15 4 9 14 3 8 13 ).",						"\t              #( 6 9 12 15 2 5 8 11 14 1 4 7 10 13 16 3 ).",						"\t              #( 1 8 15 6 13 4 11 2 9 16 7 14 5 12 3 10 ) }.",						"ABCDTable := { ",						"\t             #( 1 2 3 4 ).",						"\t             #( 4 1 2 3 ).",						"\t             #( 3 4 1 2 ).",						"\t             #( 2 3 4 1 ) }"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"MD5NonPrimitive initialize"					],					"hash" : 2347958,					"argumentNames" : [ ]				},				"Gofer" : {					"sourceCode" : [						"initialize",						"",						"\tself",						"\t\tenablePackageCache;",						"\t\tenableRepositoryErrors.",						"\treferences := OrderedCollection new.",						"\trepositories := OrderedCollection new"					],					"body" : [						"self",						"\tenablePackageCache;",						"\tenableRepositoryErrors.",						"references := OrderedCollection new.",						"repositories := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2256584,					"argumentNames" : [ ]				},				"OCOptimizedBlockScope" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tisInlinedLoop := false"					],					"body" : [						"super initialize.",						"isInlinedLoop := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2053839,					"argumentNames" : [ ]				},				"RSCairoCachedMetricsProvider" : {					"sourceCode" : [						"initialize",						"",						"\tcache := Dictionary new"					],					"body" : [						"cache := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6483956,					"argumentNames" : [ ]				},				"StNodeHelpTopic" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tnode := MicRootBlock new.",						"\ticonBuilder := StIconBookBuilder new.",						"\ticonBuilder setIconOf: self"					],					"body" : [						"super initialize.",						"node := MicRootBlock new.",						"iconBuilder := StIconBookBuilder new.",						"iconBuilder setIconOf: self"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 7383907,					"argumentNames" : [ ]				},				"ClySortFunction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdirection := 1"					],					"body" : [						"super initialize.",						"direction := 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5656267,					"argumentNames" : [ ]				},				"FFICallbackArgumentReader" : {					"sourceCode" : [						"initialize",						"",						"\t| returnType |",						"\tsuper initialize.",						"",						"\tcurrentStackOffset := 1.",						"\textractedArguments := Array new: callback functionSpec arguments size.",						"\tnextArgumentIndex := 1.",						"",						"\t\"If the function returns an struct by copy there is a hidden parameter with a pointer storing it\"",						"\treturnType := callback functionSpec returnType resolvedType.",						"\t(returnType isExternalStructure and: [ returnType isPointer not ]) ",						"\t\tifTrue: [ ",						"\t\t\treturnValueHolder := self stackPointer pointerAt: 1.",						"\t\t\tcurrentStackOffset := currentStackOffset + Smalltalk wordSize ]"					],					"body" : [						"| returnType |",						"super initialize.",						"",						"currentStackOffset := 1.",						"extractedArguments := Array new: callback functionSpec arguments size.",						"nextArgumentIndex := 1.",						"",						"\"If the function returns an struct by copy there is a hidden parameter with a pointer storing it\"",						"returnType := callback functionSpec returnType resolvedType.",						"(returnType isExternalStructure and: [ returnType isPointer not ]) ",						"\tifTrue: [ ",						"\t\treturnValueHolder := self stackPointer pointerAt: 1.",						"\t\tcurrentStackOffset := currentStackOffset + Smalltalk wordSize ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1545473,					"argumentNames" : [ ]				},				"SpToolbarButtonPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize"					],					"body" : [						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3018416,					"argumentNames" : [ ]				},				"ExecutionEnvironmentStub" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tforkedProcesses := OrderedCollection new"					],					"body" : [						"super initialize.",						"",						"forkedProcesses := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4469529,					"argumentNames" : [ ]				},				"RBAbstractClass class" : {					"sourceCode" : [						"initialize",						"",						"\tLookupSuperclass := Object new"					],					"body" : [						"LookupSuperclass := Object new"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 3932976,					"argumentNames" : [ ]				},				"SettingDeclaration class" : {					"sourceCode" : [						"initialize",						"",						"\tUniqueObject := Object new"					],					"body" : [						"UniqueObject := Object new"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1483568,					"argumentNames" : [ ]				},				"ZnSingleThreadedServer" : {					"sourceCode" : [						"initialize",						"",						"\tself loggingOn"					],					"body" : [						"self loggingOn"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2214980,					"argumentNames" : [ ]				},				"RBNamespace" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tchanges := changeFactory compositeRefactoryChange ",						"\t\t           onSystemDictionary: self environment.",						"\tnewClasses := IdentityDictionary new.",						"\tnewPackages := IdentityDictionary new.",						"\tchangedClasses := IdentityDictionary new.",						"\tchangedPackages := IdentityDictionary new.",						"\tremovedClasses := Set new.",						"\tremovedPackages := Set new.",						"\timplementorsCache := IdentityDictionary new.",						"\tsendersCache := IdentityDictionary new"					],					"body" : [						"super initialize.",						"changes := changeFactory compositeRefactoryChange onSystemDictionary:",						"\t           self environment.",						"newClasses := IdentityDictionary new.",						"newPackages := IdentityDictionary new.",						"changedClasses := IdentityDictionary new.",						"changedPackages := IdentityDictionary new.",						"removedClasses := Set new.",						"removedPackages := Set new.",						"implementorsCache := IdentityDictionary new.",						"sendersCache := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3940256,					"argumentNames" : [ ]				},				"FreeTypeCacheConstants class" : {					"sourceCode" : [						"initialize",						"",						"\tFreeTypeCacheWidth := 0.",						"\tFreeTypeCacheGlyph := 100. \"start at 100 and allow room for 64 subpixel positioned glyphs\"",						"\tFreeTypeCacheGlyphLCD := 200. \"start at 200 and allow room for 64 subpixel positioned glyphs\"",						"\tFreeTypeCacheGlyphMono := 3.",						"\tFreeTypeCacheLinearWidth := 4"					],					"body" : [						"FreeTypeCacheWidth := 0.",						"FreeTypeCacheGlyph := 100. \"start at 100 and allow room for 64 subpixel positioned glyphs\"",						"FreeTypeCacheGlyphLCD := 200. \"start at 200 and allow room for 64 subpixel positioned glyphs\"",						"FreeTypeCacheGlyphMono := 3.",						"FreeTypeCacheLinearWidth := 4"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2697181,					"argumentNames" : [ ]				},				"RSAbstractFlowLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmaxWidth := self defaultMaxWidth.",						"\tgapSize := self defaultGapSize"					],					"body" : [						"super initialize.",						"maxWidth := self defaultMaxWidth.",						"gapSize := self defaultGapSize"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6546438,					"argumentNames" : [ ]				},				"ObservablePoint" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself class initializeSlots: self"					],					"body" : [						"super initialize.",						"self class initializeSlots: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4273498,					"argumentNames" : [ ]				},				"ColorChooserMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tenabled := true.",						"\tsuper initialize"					],					"body" : [						"enabled := true.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2714622,					"argumentNames" : [ ]				},				"SpTestLocalizedString" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trequestsCount := 0"					],					"body" : [						"super initialize.",						"requestsCount := 0"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 3295691,					"argumentNames" : [ ]				},				"ClyExpandedDataSource" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tcollapsedItems := SortedCollection sortBlock: [ :a :b | ",						"\t\t                  a position < b position ]"					],					"body" : [						"super initialize.",						"",						"collapsedItems := SortedCollection sortBlock: [ :a :b | ",						"\t                  a position < b position ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5883777,					"argumentNames" : [ ]				},				"RxmBranch" : {					"sourceCode" : [						"initialize",						"",						"\t\"See class comment for instance variable description.\"",						"",						"\tsuper initialize.",						"\tloopback := false"					],					"body" : [						"super initialize.",						"loopback := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"See class comment for instance variable description."					],					"hash" : 2237897,					"argumentNames" : [ ]				},				"TreeColumnPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tcontainer := nil asValueHolder.",						"\tdisplayBlock := [ :node | node printString ] asValueHolder.",						"\tinitialWidth := 100 asValueHolder.",						"\tresizable := true asValueHolder.",						"\theaderLabel := nil asValueHolder.",						"\theaderFont := self class defaultFont asValueHolder.",						"\theaderIcon := nil asValueHolder.",						"\theaderAction := nil asValueHolder.",						"",						"\tself registerEvents"					],					"body" : [						"super initialize.",						"",						"container := nil asValueHolder.",						"displayBlock := [ :node | node printString ] asValueHolder.",						"initialWidth := 100 asValueHolder.",						"resizable := true asValueHolder.",						"headerLabel := nil asValueHolder.",						"headerFont := self class defaultFont asValueHolder.",						"headerIcon := nil asValueHolder.",						"headerAction := nil asValueHolder.",						"",						"self registerEvents"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1707068,					"argumentNames" : [ ]				},				"AthensDisplayScanner" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize"					],					"body" : [						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4211376,					"argumentNames" : [ ]				},				"Locale class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2636448,					"argumentNames" : [ ]				},				"OCAbstractMethodScope" : {					"sourceCode" : [						"initialize",						"",						"\ttempVars := OrderedDictionary new.",						"\ttempVector := OrderedDictionary new.",						"\tcopiedVars := OrderedDictionary new.",						"\tid := 0"					],					"body" : [						"tempVars := OrderedDictionary new.",						"tempVector := OrderedDictionary new.",						"copiedVars := OrderedDictionary new.",						"id := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2046662,					"argumentNames" : [ ]				},				"TraitChange" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tupdatedSelectors := Set new.",						"\taddedSelectors := Set new.",						"\tremovedSelectors := Set new"					],					"body" : [						"super initialize.",						"",						"updatedSelectors := Set new.",						"addedSelectors := Set new.",						"removedSelectors := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2094284,					"argumentNames" : [ ]				},				"NSOrdinalScale" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tranger := #range:.",						"\targument := #( #(  ) ).",						"\tself domain: #(  )"					],					"body" : [						"super initialize.",						"ranger := #range:.",						"argument := #( #(  ) ).",						"self domain: #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6423732,					"argumentNames" : [ ]				},				"RubWorkspaceBarRuler" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself side: #bottom"					],					"body" : [						"super initialize.",						"self side: #bottom"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3791533,					"argumentNames" : [ ]				},				"SpPaginatorEdgeGripMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\thResizing: #rigid;",						"\t\tvResizing: #spaceFill"					],					"body" : [						"super initialize.",						"self",						"\thResizing: #rigid;",						"\tvResizing: #spaceFill"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3370421,					"argumentNames" : [ ]				},				"RSPopup" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself model: #model.",						"\tshapeBuilder := RSSimplePopupBuilder new"					],					"body" : [						"super initialize.",						"self model: #model.",						"shapeBuilder := RSSimplePopupBuilder new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6523672,					"argumentNames" : [ ]				},				"OSWindowJoystickExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbullets := OrderedCollection new.",						"\tself reset"					],					"body" : [						"super initialize.",						"bullets := OrderedCollection new.",						"self reset"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4911065,					"argumentNames" : [ ]				},				"AthensBalloonImagePaint" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tdirection := 0 @ 0.",						"\torigin := 0 @ 0.",						"\ttileFlag := false"					],					"body" : [						"super initialize.",						"",						"direction := 0 @ 0.",						"origin := 0 @ 0.",						"tileFlag := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2628476,					"argumentNames" : [ ]				},				"CoCompletionEngine" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcontextClass := CoCompletionContext"					],					"body" : [						"super initialize.",						"contextClass := CoCompletionContext"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6122908,					"argumentNames" : [ ]				},				"SpecTableLayoutAddSpacer" : {					"sourceCode" : [						"initialize",						"",						"\tsubwidget := #( PanelMorph ).",						"\tspaceFillWeight := 1.",						"\tsize := 0.",						"\torientation := #vertical.",						"\tsuper initialize"					],					"body" : [						"subwidget := #( PanelMorph ).",						"spaceFillWeight := 1.",						"size := 0.",						"orientation := #vertical.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1765882,					"argumentNames" : [ ]				},				"CompositionScanner" : {					"sourceCode" : [						"initialize",						"",						"\twantsColumnBreaks := false.",						"\tsuper initialize"					],					"body" : [						"wantsColumnBreaks := false.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1517581,					"argumentNames" : [ ]				},				"SpPanedLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself positionOfSlider: 50 percent.",						"\tchildrenByPosition := Array new: 2"					],					"body" : [						"super initialize.",						"self positionOfSlider: 50 percent.",						"childrenByPosition := Array new: 2"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2942699,					"argumentNames" : [ ]				},				"StSpotterCandidatesList" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcount := 0"					],					"body" : [						"super initialize.",						"count := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6301134,					"argumentNames" : [ ]				},				"RxmSubstring" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself beCaseSensitive"					],					"body" : [						"super initialize.",						"self beCaseSensitive"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2240617,					"argumentNames" : [ ]				},				"ReFloatEqualityComparisonRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny:",						"\t\t#( '`#floatLiteral = `@expr' '`#floatLiteral ~= `@expr'",						"\t\t   '`@expr = `#floatLiteral' '`@expr ~= `#floatLiteral' )"					],					"body" : [						"super initialize.",						"self matchesAny:",						"\t#( '`#floatLiteral = `@expr' '`#floatLiteral ~= `@expr'",						"\t   '`@expr = `#floatLiteral' '`@expr ~= `#floatLiteral' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4743085,					"argumentNames" : [ ]				},				"MenuMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself setDefaultParameters.",						"\tself listDirection: #topToBottom.",						"\tself hResizing: #shrinkWrap.",						"\tself vResizing: #shrinkWrap.",						"\tstayUp := false.",						"\tself",						"\t\tsetProperty: #morphicLayerNumber",						"\t\ttoValue: self morphicLayerNumber.",						"\tself theme currentSettings preferRoundCorner ifTrue: [ ",						"\t\tself useRoundedCorners ]"					],					"body" : [						"super initialize.",						"",						"self setDefaultParameters.",						"self listDirection: #topToBottom.",						"self hResizing: #shrinkWrap.",						"self vResizing: #shrinkWrap.",						"stayUp := false.",						"self setProperty: #morphicLayerNumber toValue: self morphicLayerNumber.",						"self theme currentSettings preferRoundCorner ifTrue: [ ",						"\tself useRoundedCorners ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2706256,					"argumentNames" : [ ]				},				"FinderUI class" : {					"sourceCode" : [						"initialize",						"",						"\tsearchedTextListMaxSize := 15"					],					"body" : [						"searchedTextListMaxSize := 15"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4127675,					"argumentNames" : [ ]				},				"FreeTypeFontFamily" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmembers := OrderedCollection new"					],					"body" : [						"super initialize.",						"members := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1503770,					"argumentNames" : [ ]				},				"FreeTypeFontProvider" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfileInfos := OrderedCollection new: 100.",						"\tfileInfoCache := Dictionary new: 100. \"keyed by file size\"",						"\tfamilies := Dictionary new.",						"\tfontInstallers := OrderedCollection new"					],					"body" : [						"super initialize.",						"fileInfos := OrderedCollection new: 100.",						"fileInfoCache := Dictionary new: 100. \"keyed by file size\"",						"families := Dictionary new.",						"fontInstallers := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1507992,					"argumentNames" : [ ]				},				"ImmediateLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself host: SmallInteger"					],					"body" : [						"super initialize.",						"self host: SmallInteger"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1610909,					"argumentNames" : [ ]				},				"ReKeysDoRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: '``@object keys do: ``@block'",						"\t\twith: '``@object keysDo: ``@block';",						"\t\treplace: '``@object values do: ``@block'",						"\t\twith: '``@object valuesDo: ``@block'"					],					"body" : [						"super initialize.",						"self",						"\treplace: '``@object keys do: ``@block'",						"\twith: '``@object keysDo: ``@block';",						"\treplace: '``@object values do: ``@block'",						"\twith: '``@object valuesDo: ``@block'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4733488,					"argumentNames" : [ ]				},				"MD5" : {					"sourceCode" : [						"initialize",						"",						"\t\"Some magic numbers to get the process started\"",						"",						"\tstate := #[ 1 35 69 103 137 171 205 239 254 220 186 152 118 84 50 16 ]"					],					"body" : [						"state := #[ 1 35 69 103 137 171 205 239 254 220 186 152 118 84 50 16 ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Some magic numbers to get the process started"					],					"hash" : 1820807,					"argumentNames" : [ ]				},				"TextMethodLink" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbrowseSenders := false"					],					"body" : [						"super initialize.",						"browseSenders := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2429387,					"argumentNames" : [ ]				},				"TextEditorDialogWindow" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself beResizeable.",						"\tentryText := ''.",						"\tself changed: #entryText.",						"\tself textEditorMorph selectAll"					],					"body" : [						"super initialize.",						"self beResizeable.",						"entryText := ''.",						"self changed: #entryText.",						"self textEditorMorph selectAll"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2742787,					"argumentNames" : [ ]				},				"SimpleBalloonMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself beStraightSegments"					],					"body" : [						"super initialize.",						"self beStraightSegments"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2753129,					"argumentNames" : [ ]				},				"AnnouncementSetWithExclusions" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\texclusions := OrderedCollection new"					],					"body" : [						"super initialize.",						"exclusions := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1647131,					"argumentNames" : [ ]				},				"RPackage" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tclasses := Set new.",						"\tmetaclassExtensionSelectors := Dictionary new.",						"\tclassExtensionSelectors := Dictionary new.",						"\tclassDefinedSelectors := Dictionary new.",						"\tmetaclassDefinedSelectors := Dictionary new.",						"\tclassTags := Set new"					],					"body" : [						"super initialize.",						"classes := Set new.",						"metaclassExtensionSelectors := Dictionary new.",						"classExtensionSelectors := Dictionary new.",						"classDefinedSelectors := Dictionary new.",						"metaclassDefinedSelectors := Dictionary new.",						"classTags := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1894902,					"argumentNames" : [ ]				},				"EditableList" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialization code for EditableList\"",						"",						"\ttitle := 'Title' asValueHolder.",						"",						"\tsuper initialize.",						"\tokBlock := [  ]"					],					"body" : [						"title := 'Title' asValueHolder.",						"",						"super initialize.",						"okBlock := [  ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialization code for EditableList"					],					"hash" : 2895520,					"argumentNames" : [ ]				},				"SourceCodeProRegular class" : {					"sourceCode" : [						"initialize",						"",						"\tEmbeddedFreeTypeFontInstaller registerFont: self"					],					"body" : [						"EmbeddedFreeTypeFontInstaller registerFont: self"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1521015,					"argumentNames" : [ ]				},				"MicMinimalConfiguration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tnewLine := String cr.",						"\theadingLevelOffset := 0"					],					"body" : [						"super initialize.",						"newLine := String cr.",						"headingLevelOffset := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7355723,					"argumentNames" : [ ]				},				"RSAbstractLineLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tverticalGap := 10.",						"\thorizontalGap := 10"					],					"body" : [						"super initialize.",						"verticalGap := 10.",						"horizontalGap := 10"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6549660,					"argumentNames" : [ ]				},				"RSTransitionAnimation" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself onStepDo: [ :t |  ]"					],					"body" : [						"super initialize.",						"self onStepDo: [ :t |  ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6500744,					"argumentNames" : [ ]				},				"SUnitTestsCounter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself count: 0"					],					"body" : [						"super initialize.",						"self count: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1163466,					"argumentNames" : [ ]				},				"ClyCollapsedDataSource" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\texpandedItems := SortedCollection sortBlock: [ :a :b | ",						"\t\t                 a position < b position ]"					],					"body" : [						"super initialize.",						"",						"expandedItems := SortedCollection sortBlock: [ :a :b | ",						"\t                 a position < b position ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5883265,					"argumentNames" : [ ]				},				"ZnSimplifiedClientTransactionEvent" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tduration := 0"					],					"body" : [						"super initialize.",						"duration := 0"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 2181585,					"argumentNames" : [ ]				},				"AthensCairoPath" : {					"sourceCode" : [						"initialize",						"",						"\thandle value = 0 ifTrue: [ self error: 'Error creating new path' ].",						"\tFFIExternalResourceManager addResource: self data: handle"					],					"body" : [						"handle value = 0 ifTrue: [ self error: 'Error creating new path' ].",						"FFIExternalResourceManager addResource: self data: handle"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3875983,					"argumentNames" : [ ]				},				"MetaLink" : {					"sourceCode" : [						"initialize",						"",						"\tnodes := IdentitySet new.",						"\tcontrol := #before.",						"\tselector := #value.",						"\targuments := #(  ).",						"\toptions := Set new.",						"\tself parseOptions: self class defaultOptions"					],					"body" : [						"nodes := IdentitySet new.",						"control := #before.",						"selector := #value.",						"arguments := #(  ).",						"options := Set new.",						"self parseOptions: self class defaultOptions"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3822563,					"argumentNames" : [ ]				},				"RSContextInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tinteractions := OrderedCollection new",						"\t\t                add: RSSelectionPresentationInteraction new;",						"\t\t                yourself"					],					"body" : [						"super initialize.",						"interactions := OrderedCollection new",						"\t                add: RSSelectionPresentationInteraction new;",						"\t                yourself"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6588964,					"argumentNames" : [ ]				},				"MicCodeBlock" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\targuments := OrderedDictionary new"					],					"body" : [						"super initialize.",						"arguments := OrderedDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7344672,					"argumentNames" : [ ]				},				"LayoutProperties" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thResizing := vResizing := #rigid.",						"\tdisableLayout := false"					],					"body" : [						"super initialize.",						"hResizing := vResizing := #rigid.",						"disableLayout := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2636220,					"argumentNames" : [ ]				},				"HelpBrowser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initWindow"					],					"body" : [						"super initialize.",						"self initWindow"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3802729,					"argumentNames" : [ ]				},				"SpEditableListPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttitle := 'Title'.",						"\tokBlock := [  ].",						"\tremoveItemBlock := [ :item | ",						"\t                   item ifNotNil: [ ",						"\t\t                   self items remove: item.",						"\t\t                   self refresh ] ]"					],					"body" : [						"super initialize.",						"title := 'Title'.",						"okBlock := [  ].",						"removeItemBlock := [ :item | ",						"                   item ifNotNil: [ ",						"\t                   self items remove: item.",						"\t                   self refresh ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3025954,					"argumentNames" : [ ]				},				"RBParser" : {					"sourceCode" : [						"initialize",						"",						"\tcomments := OrderedCollection new"					],					"body" : [						"comments := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1938681,					"argumentNames" : [ ]				},				"RGBehaviorDefinition" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmethods := IdentityDictionary new.",						"\tprotocols := Set new"					],					"body" : [						"super initialize.",						"methods := IdentityDictionary new.",						"protocols := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2123658,					"argumentNames" : [ ]				},				"MCDictionaryRepository" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdict := Dictionary new"					],					"body" : [						"super initialize.",						"dict := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1082907,					"argumentNames" : [ ]				},				"GoferOperation" : {					"sourceCode" : [						"initialize",						"",						"\tmodel := self defaultModel"					],					"body" : [						"model := self defaultModel"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2255925,					"argumentNames" : [ ]				},				"ClyEnvironmentPlugin class" : {					"sourceCode" : [						"initialize",						"",						"\tself isAbstract ifTrue: [ ^ self ].",						"",						"\tClyNavigationEnvironment installNewPlugin: self"					],					"body" : [						"self isAbstract ifTrue: [ ^ self ].",						"",						"ClyNavigationEnvironment installNewPlugin: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5636227,					"argumentNames" : [ ]				},				"MicMicrodownTextualBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tprefixStack := OrderedCollection new.",						"\tcurrentLevel := -1"					],					"body" : [						"super initialize.",						"prefixStack := OrderedCollection new.",						"currentLevel := -1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7331103,					"argumentNames" : [ ]				},				"SpTableColumn" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself beExpandable"					],					"body" : [						"super initialize.",						"self beExpandable"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2986089,					"argumentNames" : [ ]				},				"ProtocolOrganizer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself reset"					],					"body" : [						"super initialize.",						"self reset"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1889385,					"argumentNames" : [ ]				},				"ColorPresenterMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tborderWidth: 0;",						"\t\tchangeTableLayout;",						"\t\tlabelMorph: self newLabelMorph;",						"\t\tsolidLabelMorph: self newLabelMorph;",						"\t\tcontentMorph: self newContentMorph;",						"\t\taddMorphBack: self contentMorph"					],					"body" : [						"super initialize.",						"self",						"\tborderWidth: 0;",						"\tchangeTableLayout;",						"\tlabelMorph: self newLabelMorph;",						"\tsolidLabelMorph: self newLabelMorph;",						"\tcontentMorph: self newContentMorph;",						"\taddMorphBack: self contentMorph"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2717535,					"argumentNames" : [ ]				},				"MWHandlerMemoing" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttable := Dictionary new"					],					"body" : [						"super initialize.",						"",						"table := Dictionary new"					],					"isTestMethod" : false,					"category" : "as yet unclassified",					"comment" : [ ],					"hash" : 4175386,					"argumentNames" : [ ]				},				"TKTCommonQueueWorkerPool" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tworkers := Set new.",						"\tfailedTasks := OrderedCollection new.",						"\ttaskQueue := AtomicSharedQueue new.",						"\tmutex := Mutex new.",						"\tself name: 'Worker' , self identityHash asString"					],					"body" : [						"super initialize.",						"workers := Set new.",						"failedTasks := OrderedCollection new.",						"taskQueue := AtomicSharedQueue new.",						"mutex := Mutex new.",						"self name: 'Worker' , self identityHash asString"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1207957,					"argumentNames" : [ ]				},				"Clipboard" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcontents := '' asText.",						"\trecent := OrderedCollection new"					],					"body" : [						"super initialize.",						"contents := '' asText.",						"recent := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2445228,					"argumentNames" : [ ]				},				"FreeTypeFontFamilyMember" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tisSimulatedStyle := false"					],					"body" : [						"super initialize.",						"isSimulatedStyle := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1505274,					"argumentNames" : [ ]				},				"ZnServerSession" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tattributes := SmallDictionary new.",						"\tcreated := modified := DateAndTime now"					],					"body" : [						"super initialize.",						"attributes := SmallDictionary new.",						"created := modified := DateAndTime now"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2217622,					"argumentNames" : [ ]				},				"MessageDialogWindow" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttextFont := self defaultTextFont"					],					"body" : [						"super initialize.",						"textFont := self defaultTextFont"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2735262,					"argumentNames" : [ ]				},				"RSAbstractCompactTreeLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tverticalGap := 20.",						"\thorizontalGap := 30.",						"\tmargin := 40.",						"\tsonsDictionary := Dictionary new"					],					"body" : [						"super initialize.",						"verticalGap := 20.",						"horizontalGap := 30.",						"margin := 40.",						"sonsDictionary := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6553993,					"argumentNames" : [ ]				},				"OSWorldRenderer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\twindowCloseAction := [ ",						"\t                     self currentWorld defer: [ ",						"\t\t                     WorldState quitSession ] ]"					],					"body" : [						"super initialize.",						"windowCloseAction := [ ",						"                     self currentWorld defer: [ ",						"\t                     WorldState quitSession ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4796812,					"argumentNames" : [ ]				},				"ShClassSlotChangeDetector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbuilderAccessor := [ :e | e layoutDefinition classSlots ].",						"\tclassAccessor := [ :e | e class slots ].",						"\tcomparer := [ :a :b | self compareSlotCollection: a with: b ]"					],					"body" : [						"super initialize.",						"builderAccessor := [ :e | e layoutDefinition classSlots ].",						"classAccessor := [ :e | e class slots ].",						"comparer := [ :a :b | self compareSlotCollection: a with: b ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1621060,					"argumentNames" : [ ]				},				"CairoBackendCache" : {					"sourceCode" : [						"initialize",						"",						"\tself flush"					],					"body" : [						"self flush"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3881028,					"argumentNames" : [ ]				},				"MicroDownParser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdispatchTable := Dictionary new.",						"\t\"should use a registration with classes, but later\"",						"\tdispatchTable at: self anchorMarkup put: MicAnchorBlock.",						"\tdispatchTable at: self headerMarkup put: MicHeaderBlock.",						"\tdispatchTable at: self codeblockMarkup put: MicCodeBlock.",						"\tdispatchTable",						"\t\tat: self annotatedParagraphMarkup",						"\t\tput: MicAnnotatedBlock.",						"\tdispatchTable at: self commentedLineMarkup put: MicCommentBlock.",						"\tdispatchTable",						"\t\tat: self horizontalLineMarkup",						"\t\tput: MicHorizontalLineBlock.",						"\tdispatchTable at: self mathOpeningBlockMarkup put: MicMathBlock.",						"\tdispatchTable",						"\t\tat: self environmentOpeningBlockMarkup",						"\t\tput: MicEnvironmentBlock.",						"\tdispatchTable",						"\t\tat: self metaDataOpeningBlockMarkup",						"\t\tput: MicMetaDataBlock.",						"\tdispatchTable",						"\t\tat: self unorderedListPlusMarkup",						"\t\tput: MicUnorderedListBlock.",						"\tdispatchTable at: self unorderedListMarkup put: MicUnorderedListBlock.",						"\tdispatchTable",						"\t\tat: self unorderedListStarMarkup",						"\t\tput: MicUnorderedListBlock.",						"\tdispatchTable at: self preformattedMarkup put: MicQuoteBlock.",						"\tdispatchTable at: self tableCellMarkup put: MicTableBlock"					],					"body" : [						"super initialize.",						"dispatchTable := Dictionary new.",						"\"should use a registration with classes, but later\"",						"dispatchTable at: self anchorMarkup put: MicAnchorBlock.",						"dispatchTable at: self headerMarkup put: MicHeaderBlock.",						"dispatchTable at: self codeblockMarkup put: MicCodeBlock.",						"dispatchTable at: self annotatedParagraphMarkup put: MicAnnotatedBlock.",						"dispatchTable at: self commentedLineMarkup put: MicCommentBlock.",						"dispatchTable",						"\tat: self horizontalLineMarkup",						"\tput: MicHorizontalLineBlock.",						"dispatchTable at: self mathOpeningBlockMarkup put: MicMathBlock.",						"dispatchTable",						"\tat: self environmentOpeningBlockMarkup",						"\tput: MicEnvironmentBlock.",						"dispatchTable",						"\tat: self metaDataOpeningBlockMarkup",						"\tput: MicMetaDataBlock.",						"dispatchTable",						"\tat: self unorderedListPlusMarkup",						"\tput: MicUnorderedListBlock.",						"dispatchTable at: self unorderedListMarkup put: MicUnorderedListBlock.",						"dispatchTable",						"\tat: self unorderedListStarMarkup",						"\tput: MicUnorderedListBlock.",						"dispatchTable at: self preformattedMarkup put: MicQuoteBlock.",						"dispatchTable at: self tableCellMarkup put: MicTableBlock"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7360520,					"argumentNames" : [ ]				},				"RBEnglobingErrorNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcontent := OrderedCollection new.",						"\tvalue := ''"					],					"body" : [						"super initialize.",						"content := OrderedCollection new.",						"value := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1980449,					"argumentNames" : [ ]				},				"SpAbstractButtonPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tlabel := ''.",						"",						"\tself whenLabelChangedDo: [ self changed: #label ].",						"\tself whenIconChangedDo: [ self changed: #label ]"					],					"body" : [						"super initialize.",						"",						"label := ''.",						"",						"self whenLabelChangedDo: [ self changed: #label ].",						"self whenIconChangedDo: [ self changed: #label ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3265261,					"argumentNames" : [ ]				},				"ReFileBlocksRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny: #( '[| `@temps | ",						"\t\t\t\t`var := `@object.  ",						"\t\t\t\t`@.statements] ",						"\t\t\t\t\t\tensure: ",						"\t\t\t\t\t\t\t[`var `@messages: `@args]' '[| `@temps | ",						"\t\t\t\t`var := `@object.  ",						"\t\t\t\t`@.statements] ",						"\t\t\t\t\t\tifCurtailed: ",						"\t\t\t\t\t\t\t[`var `@messages: `@args]' )"					],					"body" : [						"super initialize.",						"self matchesAny: #( '[| `@temps | ",						"\t\t\t\t`var := `@object.  ",						"\t\t\t\t`@.statements] ",						"\t\t\t\t\t\tensure: ",						"\t\t\t\t\t\t\t[`var `@messages: `@args]' '[| `@temps | ",						"\t\t\t\t`var := `@object.  ",						"\t\t\t\t`@.statements] ",						"\t\t\t\t\t\tifCurtailed: ",						"\t\t\t\t\t\t\t[`var `@messages: `@args]' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4742573,					"argumentNames" : [ ]				},				"TFBasicType class" : {					"sourceCode" : [						"initialize",						"",						"\tTypes := self createBasicTypes.",						"\tTypeMap := (Types collect: [ :t | t typeName -> t ]) asDictionary"					],					"body" : [						"Types := self createBasicTypes.",						"TypeMap := (Types collect: [ :t | t typeName -> t ]) asDictionary"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2811349,					"argumentNames" : [ ]				},				"WorldMorph class" : {					"sourceCode" : [						"initialize",						"",						"\tExtraWorldListMutex := Semaphore forMutualExclusion"					],					"body" : [						"ExtraWorldListMutex := Semaphore forMutualExclusion"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2447687,					"argumentNames" : [ ]				},				"FFIMethodRegistry class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default",						"\t\tregisterSystemClassNamed: self name",						"\t\tatPriority: 60"					],					"body" : [						"SessionManager default",						"\tregisterSystemClassNamed: self name",						"\tatPriority: 60"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2370022,					"argumentNames" : [ ]				},				"OSWindowGestureHandler" : {					"sourceCode" : [						"initialize",						"",						"\tregisteredGestures := OrderedCollection new.",						"\tdevicesFingers := Dictionary new.",						"\tfingers := Dictionary new.",						"\tfingerCount := 0"					],					"body" : [						"registeredGestures := OrderedCollection new.",						"devicesFingers := Dictionary new.",						"fingers := Dictionary new.",						"fingerCount := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4850389,					"argumentNames" : [ ]				},				"RBSmalllintContext" : {					"sourceCode" : [						"initialize",						"",						"\tself computeLiterals"					],					"body" : [						"self computeLiterals"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2492484,					"argumentNames" : [ ]				},				"IceRepository" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tworkingCopy := IceWorkingCopy basicNew.",						"\tworkingCopy repository: self.",						"\tworkingCopy initialize.",						"",						"\tindex := self newIndex"					],					"body" : [						"super initialize.",						"",						"workingCopy := IceWorkingCopy basicNew.",						"workingCopy repository: self.",						"workingCopy initialize.",						"",						"index := self newIndex"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7001352,					"argumentNames" : [ ]				},				"SpModalWindowPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcloseOnBackdropClick := false"					],					"body" : [						"super initialize.",						"closeOnBackdropClick := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3286388,					"argumentNames" : [ ]				},				"RBVariableEnvironment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tinstanceVariables := Dictionary new.",						"\tclassVariables := Dictionary new.",						"\tinstanceVariableReaders := Dictionary new.",						"\tinstanceVariableWriters := Dictionary new"					],					"body" : [						"super initialize.",						"instanceVariables := Dictionary new.",						"classVariables := Dictionary new.",						"instanceVariableReaders := Dictionary new.",						"instanceVariableWriters := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3933419,					"argumentNames" : [ ]				},				"ReflectivityExamples" : {					"sourceCode" : [						"initialize",						"",						"\tivar := 33.",						"\tClassVar := #AClassVar"					],					"body" : [						"ivar := 33.",						"ClassVar := #AClassVar"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4324800,					"argumentNames" : [ ]				},				"RSRectanglePackLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself doNotUseProgressBar.",						"\tgap := 0.2.",						"\tpreferredAngle := Float pi / 4 \"Squared\""					],					"body" : [						"super initialize.",						"self doNotUseProgressBar.",						"gap := 0.2.",						"preferredAngle := Float pi / 4 \"Squared\""					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6562706,					"argumentNames" : [ ]				},				"FLLargeIdentityHashedCollection" : {					"sourceCode" : [						"initialize",						"",						"\ttally := 0.",						"\ttallies := Array new: 4096 withAll: 0"					],					"body" : [						"tally := 0.",						"tallies := Array new: 4096 withAll: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1352138,					"argumentNames" : [ ]				},				"ZnLogEvent class" : {					"sourceCode" : [						"initialize",						"",						"\tIdCounter := 0.",						"\tself environment",						"\t\tat: #SessionManager",						"\t\tifPresent: [ :manager | ",						"\t\tmanager default registerNetworkClassNamed: self name ]",						"\t\tifAbsent: [ Smalltalk addToStartUpList: self ]"					],					"body" : [						"IdCounter := 0.",						"self environment",						"\tat: #SessionManager",						"\tifPresent: [ :manager | ",						"\tmanager default registerNetworkClassNamed: self name ]",						"\tifAbsent: [ Smalltalk addToStartUpList: self ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2177047,					"argumentNames" : [ ]				},				"TreeColumnButtonMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself enableDragNDrop: true.",						"\tself fillStyle: (self theme morphTreeColumnFillStyleFor: self).",						"\tself borderStyle: (self theme morphTreeColumnBorderStyleFor: self)"					],					"body" : [						"super initialize.",						"self enableDragNDrop: true.",						"self fillStyle: (self theme morphTreeColumnFillStyleFor: self).",						"self borderStyle: (self theme morphTreeColumnBorderStyleFor: self)"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2759672,					"argumentNames" : [ ]				},				"SpSelectEntity" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdisplaySymbol := #displayString.",						"\tplaceholder := 'Choose one'.",						"\tpossibleEntities := #(  ).",						"\tselectDialog := [  ]"					],					"body" : [						"super initialize.",						"displaySymbol := #displayString.",						"placeholder := 'Choose one'.",						"possibleEntities := #(  ).",						"selectDialog := [  ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2623874,					"argumentNames" : [ ]				},				"MessageNotUnderstood" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\treachedDefaultHandler := false"					],					"body" : [						"super initialize.",						"reachedDefaultHandler := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1853177,					"argumentNames" : [ ]				},				"FuzzyMatcherExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tpattern := ''.",						"",						"\tdataSource := FTEasyListDataSource new",						"\t\t              elements: #(  );",						"\t\t              display: [ :item | ",						"\t\t\t              String streamContents: [ :stream | ",						"\t\t\t\t\t              stream",						"\t\t\t\t\t\t              nextPutAll: item value asString;",						"\t\t\t\t\t\t              space: 10 - (stream position * 2 min: 8);",						"\t\t\t\t\t\t              nextPutAll: item key asString ] ];",						"\t\t              yourself.",						"",						"\ttextModel := RubScrolledTextModel new.",						"\ttextModel announcer",						"\t\twhen: RubEditsStateChangedInModel",						"\t\tsend: #update",						"\t\tto: self.",						"",						"\tstringMorph := StringMorph contents: '' font: self aquireFont"					],					"body" : [						"super initialize.",						"",						"pattern := ''.",						"",						"dataSource := FTEasyListDataSource new",						"\t              elements: #(  );",						"\t              display: [ :item | ",						"\t\t              String streamContents: [ :stream | ",						"\t\t\t\t              stream",						"\t\t\t\t\t              nextPutAll: item value asString;",						"\t\t\t\t\t              space: 10 - (stream position * 2 min: 8);",						"\t\t\t\t\t              nextPutAll: item key asString ] ];",						"\t              yourself.",						"",						"textModel := RubScrolledTextModel new.",						"textModel announcer",						"\twhen: RubEditsStateChangedInModel",						"\tsend: #update",						"\tto: self.",						"",						"stringMorph := StringMorph contents: '' font: self aquireFont"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2488427,					"argumentNames" : [ ]				},				"MalHits" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tk := 20"					],					"body" : [						"super initialize.",						"k := 20"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2552751,					"argumentNames" : [ ]				},				"IceGitHubRemoveBranchesModel" : {					"sourceCode" : [						"initialize",						"",						"\tselectedItems := Set new.",						"\tsuper initialize"					],					"body" : [						"selectedItems := Set new.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7272027,					"argumentNames" : [ ]				},				"ExternalType class" : {					"sourceCode" : [						"initialize",						"",						"\t\"ExternalType initialize\"",						"",						"\tself initializeFFIConstants.",						"\tself initializeDefaultTypes"					],					"body" : [						"self initializeFFIConstants.",						"self initializeDefaultTypes"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"ExternalType initialize"					],					"hash" : 1757181,					"argumentNames" : [ ]				},				"ClassHierarchyPrinter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\texcludedClasses := #(  ).",						"\tlimitedToClasses := #(  ).",						"\tself resetLevel.",						"\tshowSuperclasses := true.",						"\tshowState := true.",						"\tself initializeStream"					],					"body" : [						"super initialize.",						"excludedClasses := #(  ).",						"limitedToClasses := #(  ).",						"self resetLevel.",						"showSuperclasses := true.",						"showState := true.",						"self initializeStream"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2849352,					"argumentNames" : [ ]				},				"MockSourceEditor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tselectionStart := selectionEnd := 0"					],					"body" : [						"super initialize.",						"selectionStart := selectionEnd := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4540354,					"argumentNames" : [ ]				},				"ClyQueryBrowserFilter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tbadScript := false"					],					"body" : [						"super initialize.",						"",						"badScript := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5725898,					"argumentNames" : [ ]				},				"SpPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tvisible := true.",						"\tstyles := #(  ).",						"",						"\tself initializePrivateAnnouncer.",						"\tself initializePrivateValueHolders.",						"\tself initializePrivateHooks.",						"\tself initializePrivateAnnouncements"					],					"body" : [						"super initialize.",						"",						"visible := true.",						"styles := #(  ).",						"",						"self initializePrivateAnnouncer.",						"self initializePrivateValueHolders.",						"self initializePrivateHooks.",						"self initializePrivateAnnouncements"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3264663,					"argumentNames" : [ ]				},				"SpFilteringSelectableListPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tselectedItems := Set new.",						"\tdisplayBlock := [ :anObject | anObject asString ].",						"\tsuper initialize"					],					"body" : [						"selectedItems := Set new.",						"displayBlock := [ :anObject | anObject asString ].",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3197569,					"argumentNames" : [ ]				},				"AthensCairoSurface" : {					"sourceCode" : [						"initialize",						"",						"\t\"the handle should be set already since we using an NB callout to create an instance\"",						"",						"\thandle value = 0 ifTrue: [ self error: 'Error creating new surface' ].",						"",						"\tsession := Smalltalk session.",						"",						"\tid := self class registerSurface: self.",						"",						"\tcontext := self newCanvas.",						"\tbuilder := AthensCairoPathBuilder new.",						"\tbuilder context: context.",						"\tftFontRenderer := CairoFreetypeFontRenderer new canvas: context.",						"",						"\tFFIExternalResourceManager addResource: self"					],					"body" : [						"handle value = 0 ifTrue: [ self error: 'Error creating new surface' ].",						"",						"session := Smalltalk session.",						"",						"id := self class registerSurface: self.",						"",						"context := self newCanvas.",						"builder := AthensCairoPathBuilder new.",						"builder context: context.",						"ftFontRenderer := CairoFreetypeFontRenderer new canvas: context.",						"",						"FFIExternalResourceManager addResource: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"the handle should be set already since we using an NB callout to create an instance"					],					"hash" : 3875214,					"argumentNames" : [ ]				},				"SpLabelPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tlabel := ''.",						"\tself whenLabelChangedDo: [ self changed: #getText ]"					],					"body" : [						"super initialize.",						"",						"label := ''.",						"self whenLabelChangedDo: [ self changed: #getText ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3276834,					"argumentNames" : [ ]				},				"JPEGHuffmanTable class" : {					"sourceCode" : [						"initialize",						"",						"\tLookahead := 8.",						"\tBitBufferSize := 16"					],					"body" : [						"Lookahead := 8.",						"BitBufferSize := 16"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1565694,					"argumentNames" : [ ]				},				"StPlayground class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Make playground active by default\"",						"",						"\tself register"					],					"body" : [						"self register"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Make playground active by default"					],					"hash" : 6248004,					"argumentNames" : [ ]				},				"DashedBorderStyle" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tdashColors: { ",						"\t\t\t\tColor black.",						"\t\t\t\tColor white };",						"\t\tdashLengths: #( 1 1 )"					],					"body" : [						"super initialize.",						"self",						"\tdashColors: { ",						"\t\t\tColor black.",						"\t\t\tColor white };",						"\tdashLengths: #( 1 1 )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1450321,					"argumentNames" : [ ]				},				"RGUnknownSlot" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\texpression := self unresolvedValue: self defaultExpression"					],					"body" : [						"super initialize.",						"",						"expression := self unresolvedValue: self defaultExpression"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6051917,					"argumentNames" : [ ]				},				"RSElasticInterpolator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttau := 2 * Float pi.",						"\tamplitude := 1.",						"\tperiod := 0.3.",						"",						"\tself calculateS"					],					"body" : [						"super initialize.",						"tau := 2 * Float pi.",						"amplitude := 1.",						"period := 0.3.",						"",						"self calculateS"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6508206,					"argumentNames" : [ ]				},				"RSGraphCanvasMonitorInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tpolyScale := NSScale linear",						"\t\t             domain: { ",						"\t\t\t\t             (1 @ 0).",						"\t\t\t\t             (100 @ 65) };",						"\t\t             range: { ",						"\t\t\t\t             (-50 @ 25).",						"\t\t\t\t             (50 @ -25) }.",						"\tframes := OrderedCollection new.",						"\tsuper initialize"					],					"body" : [						"polyScale := NSScale linear",						"\t             domain: { ",						"\t\t\t             (1 @ 0).",						"\t\t\t             (100 @ 65) };",						"\t             range: { ",						"\t\t\t             (-50 @ 25).",						"\t\t\t             (50 @ -25) }.",						"frames := OrderedCollection new.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6518261,					"argumentNames" : [ ]				},				"CompositeFillStyle" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself fillStyles: OrderedCollection new"					],					"body" : [						"super initialize.",						"self fillStyles: OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2410010,					"argumentNames" : [ ]				},				"MetacelloCommonMCSpecLoader" : {					"sourceCode" : [						"initialize",						"",						"\tself loaderPolicy"					],					"body" : [						"self loaderPolicy"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1115716,					"argumentNames" : [ ]				},				"StQuery" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmodifiers := OrderedCollection new.",						"\tquery := ''"					],					"body" : [						"super initialize.",						"modifiers := OrderedCollection new.",						"query := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6278937,					"argumentNames" : [ ]				},				"FuzzyLabelMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\toffset := 1.",						"\talpha := 0.5.",						"\tsuper initialize"					],					"body" : [						"offset := 1.",						"alpha := 0.5.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1402177,					"argumentNames" : [ ]				},				"RGEnvironmentBackend" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tprovidedDefinitions := IdentityDictionary new"					],					"body" : [						"super initialize.",						"",						"providedDefinitions := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6043418,					"argumentNames" : [ ]				},				"ClyRing2Environment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tenvironment := RGEnvironment new.",						"\tprojectManager := ClyProjectManagerRegistry new"					],					"body" : [						"super initialize.",						"",						"environment := RGEnvironment new.",						"projectManager := ClyProjectManagerRegistry new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6089606,					"argumentNames" : [ ]				},				"OmFuelEntryWriter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tserializer := FLSerializer new"					],					"body" : [						"super initialize.",						"serializer := FLSerializer new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4968986,					"argumentNames" : [ ]				},				"RSAbstractVerticalTreeLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tverticalGap := 20.",						"\thorizontalGap := 3"					],					"body" : [						"super initialize.",						"verticalGap := 20.",						"horizontalGap := 3"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6556852,					"argumentNames" : [ ]				},				"ClyTextMorphToolMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tchangeTableLayout;",						"\t\tvResizing: #shrinkWrap;",						"\t\thResizing: #shrinkWrap"					],					"body" : [						"super initialize.",						"self",						"\tchangeTableLayout;",						"\tvResizing: #shrinkWrap;",						"\thResizing: #shrinkWrap"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5888613,					"argumentNames" : [ ]				},				"SignalLogger" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\t\"by default we hook to the central ==Beacon== instance\"",						"\tbeacon := Beacon instance.",						"\tname := 'unnamed'"					],					"body" : [						"super initialize.",						"\"by default we hook to the central ==Beacon== instance\"",						"beacon := Beacon instance.",						"name := 'unnamed'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1180975,					"argumentNames" : [ ]				},				"TabBuildingIconMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tclipLayoutCells: true;",						"\t\tcolor: Color transparent.",						"\tprogress := 1.",						"\tprogressIconMorph := self currentIcon asMorph.",						"\tself addMorphBack: progressIconMorph.",						"\tself extent: progressIconMorph extent"					],					"body" : [						"super initialize.",						"self",						"\tclipLayoutCells: true;",						"\tcolor: Color transparent.",						"progress := 1.",						"progressIconMorph := self currentIcon asMorph.",						"self addMorphBack: progressIconMorph.",						"self extent: progressIconMorph extent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1409288,					"argumentNames" : [ ]				},				"EDEmergencyDebugger" : {					"sourceCode" : [						"initialize",						"",						"\trepl := EDREPLInterface forDebugger: self.",						"\trawDisplay := EDDisplayInterface new",						"\t\t              whenCharacterReceivedDo: [ :aChar | ",						"\t\t\t              repl pushChar: aChar ];",						"\t\t              whenWindowClosedDo: [ self terminate ].",						"",						"\tstackSelectionIndex := 1.",						"\tshortStackIndex := 1.",						"\tmethodVersionSelectionIndex := 0.",						"\tinput := Text new.",						"\tself composeResult: Text new title: self defaultResultText.",						"\tisRunning := false.",						"\terrorText := Text new"					],					"body" : [						"repl := EDREPLInterface forDebugger: self.",						"rawDisplay := EDDisplayInterface new",						"\t              whenCharacterReceivedDo: [ :aChar | ",						"\t\t              repl pushChar: aChar ];",						"\t              whenWindowClosedDo: [ self terminate ].",						"",						"stackSelectionIndex := 1.",						"shortStackIndex := 1.",						"methodVersionSelectionIndex := 0.",						"input := Text new.",						"self composeResult: Text new title: self defaultResultText.",						"isRunning := false.",						"errorText := Text new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4921155,					"argumentNames" : [ ]				},				"StPharoDefaultIconProvider" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsynonyms := Dictionary new.",						"\tself initializeSynonyms"					],					"body" : [						"super initialize.",						"synonyms := Dictionary new.",						"self initializeSynonyms"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 6179027,					"argumentNames" : [ ]				},				"TabMorph class" : {					"sourceCode" : [						"initialize",						"",						"\tIcons := Dictionary new"					],					"body" : [						"Icons := Dictionary new"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1406256,					"argumentNames" : [ ]				},				"SpMorphicPanedAdapter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tchildren := OrderedCollection new"					],					"body" : [						"super initialize.",						"children := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3401034,					"argumentNames" : [ ]				},				"FTFilterFunction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfilterClass := FTRegexFilter"					],					"body" : [						"super initialize.",						"filterClass := FTRegexFilter"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1541537,					"argumentNames" : [ ]				},				"ReIfNotNilDoRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: '`@receiver ifNotNilDo: `@statements'",						"\t\twith: '`@receiver ifNotNil: `@statements';",						"\t\treplace: '`@receiver ifNotNilDo: `@statements1 ifNil: `@statements2'",						"\t\twith: '`@receiver ifNotNil: `@statements1 ifNil: `@statements2';",						"\t\treplace: '`@receiver ifNil: `@statements1 ifNotNilDo: `@statements2'",						"\t\twith: '`@receiver ifNil: `@statements1 ifNotNil: `@statements2'"					],					"body" : [						"super initialize.",						"self",						"\treplace: '`@receiver ifNotNilDo: `@statements'",						"\twith: '`@receiver ifNotNil: `@statements';",						"\treplace: '`@receiver ifNotNilDo: `@statements1 ifNil: `@statements2'",						"\twith: '`@receiver ifNotNil: `@statements1 ifNil: `@statements2';",						"\treplace: '`@receiver ifNil: `@statements1 ifNotNilDo: `@statements2'",						"\twith: '`@receiver ifNil: `@statements1 ifNotNil: `@statements2'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4733042,					"argumentNames" : [ ]				},				"RBRefactoryPackageChange" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbrowserEnvironment := RBBrowserEnvironment default"					],					"body" : [						"super initialize.",						"browserEnvironment := RBBrowserEnvironment default"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3990067,					"argumentNames" : [ ]				},				"GIFReadWriter class" : {					"sourceCode" : [						"initialize",						"",						"\t\"GIFReadWriter initialize\"",						"",						"\tImageSeparator := $, asInteger.",						"\tExtension := $! asInteger.",						"\tTerminator := $; asInteger"					],					"body" : [						"ImageSeparator := $, asInteger.",						"Extension := $! asInteger.",						"Terminator := $; asInteger"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"GIFReadWriter initialize"					],					"hash" : 1563865,					"argumentNames" : [ ]				},				"RBSlotInitializationNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tselectorParts := #(  ).",						"\targumentParts := #(  )"					],					"body" : [						"super initialize.",						"selectorParts := #(  ).",						"argumentParts := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5469336,					"argumentNames" : [ ]				},				"BalloonEngine class" : {					"sourceCode" : [						"initialize",						"",						"\tBufferCache := WeakArray new: 1.",						"\tSmalltalk garbageCollect. \"Make the cache old\"",						"\tCacheProtect := Semaphore forMutualExclusion.",						"\tTimes := WordArray new: 10.",						"\tCounts := WordArray new: 10.",						"\tBezierStats := WordArray new: 4.",						"\tDebug ifNil: [ Debug := false ]"					],					"body" : [						"BufferCache := WeakArray new: 1.",						"Smalltalk garbageCollect. \"Make the cache old\"",						"CacheProtect := Semaphore forMutualExclusion.",						"Times := WordArray new: 10.",						"Counts := WordArray new: 10.",						"BezierStats := WordArray new: 4.",						"Debug ifNil: [ Debug := false ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2423443,					"argumentNames" : [ ]				},				"HandMorph class" : {					"sourceCode" : [						"initialize",						"",						"\t\"HandMorph initialize\"",						"",						"\tPasteBuffer := nil.",						"\tDoubleClickTime := 350.",						"\tNormalCursor := CursorWithMask normal asCursorForm"					],					"body" : [						"PasteBuffer := nil.",						"DoubleClickTime := 350.",						"NormalCursor := CursorWithMask normal asCursorForm"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"HandMorph initialize"					],					"hash" : 2449013,					"argumentNames" : [ ]				},				"OverflowRowMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tbaseMorphs: #(  );",						"\t\tmoreButton: self newMoreButton;",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\tvResizing: #shrinkWrap"					],					"body" : [						"super initialize.",						"self",						"\tbaseMorphs: #(  );",						"\tmoreButton: self newMoreButton;",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\tvResizing: #shrinkWrap"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2751302,					"argumentNames" : [ ]				},				"DropListMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tlistSelectionIndex := 0.",						"\tenabled := true.",						"\tlist := #(  ).",						"\tself",						"\t\tuseSelectionIndex: true;",						"\t\tclipSubmorphs: true;",						"\t\tlayoutPolicy: RowLayout new;",						"\t\tlayoutInset: self layoutInsetToUse;",						"\t\tcellPositioning: #center;",						"\t\tlistMorph: self newListMorph;",						"\t\tcontentMorph: self newContentMorph;",						"\t\tbuttonMorph: self newButtonMorph;",						"\t\tfillStyle: self fillStyleToUse;",						"\t\tborderStyle: self borderStyleToUse;",						"\t\taddMorphBack: self contentMorph;",						"\t\taddMorphBack: (self addDependent: self buttonMorph);",						"\t\ton: #mouseDown send: #popList to: self;",						"\t\tvResizing: #rigid;",						"\t\thResizing: #spaceFill;",						"\t\theight: self font height + 10.",						"\tself listMorph fillStyle:",						"\t\t(self theme dropListNormalListFillStyleFor: self)"					],					"body" : [						"super initialize.",						"listSelectionIndex := 0.",						"enabled := true.",						"list := #(  ).",						"self",						"\tuseSelectionIndex: true;",						"\tclipSubmorphs: true;",						"\tlayoutPolicy: RowLayout new;",						"\tlayoutInset: self layoutInsetToUse;",						"\tcellPositioning: #center;",						"\tlistMorph: self newListMorph;",						"\tcontentMorph: self newContentMorph;",						"\tbuttonMorph: self newButtonMorph;",						"\tfillStyle: self fillStyleToUse;",						"\tborderStyle: self borderStyleToUse;",						"\taddMorphBack: self contentMorph;",						"\taddMorphBack: (self addDependent: self buttonMorph);",						"\ton: #mouseDown send: #popList to: self;",						"\tvResizing: #rigid;",						"\thResizing: #spaceFill;",						"\theight: self font height + 10.",						"self listMorph fillStyle:",						"\t(self theme dropListNormalListFillStyleFor: self)"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2717979,					"argumentNames" : [ ]				},				"KeyboardEvent" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsupressNextKeyPress := false"					],					"body" : [						"super initialize.",						"supressNextKeyPress := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2452477,					"argumentNames" : [ ]				},				"StInspectorRefreshService" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself stepDelay: 1000 milliSeconds.",						"\tmutex := Mutex new.",						"\tinspectors := Set new"					],					"body" : [						"super initialize.",						"self stepDelay: 1000 milliSeconds.",						"mutex := Mutex new.",						"inspectors := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6198056,					"argumentNames" : [ ]				},				"PopupChoiceDialogWindow" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tupdatingFilter := false.",						"\tself",						"\t\tlabels: #(  );",						"\t\tlines: #(  );",						"\t\tfilter: ''"					],					"body" : [						"super initialize.",						"updatingFilter := false.",						"self",						"\tlabels: #(  );",						"\tlines: #(  );",						"\tfilter: ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2745358,					"argumentNames" : [ ]				},				"MorphicEventHandler" : {					"sourceCode" : [						"initialize",						"",						"\tsubscriptions := Dictionary new"					],					"body" : [						"subscriptions := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2642932,					"argumentNames" : [ ]				},				"ExternalObject class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default",						"\t\tregisterSystemClassNamed: self name",						"\t\tatPriority: 60.",						"",						"\tSmalltalk recreateSpecialObjectsArray"					],					"body" : [						"SessionManager default",						"\tregisterSystemClassNamed: self name",						"\tatPriority: 60.",						"",						"Smalltalk recreateSpecialObjectsArray"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1754750,					"argumentNames" : [ ]				},				"AthensTextLine" : {					"sourceCode" : [						"initialize",						"",						"\twidth := height := maxAscent := maxDescent := 0"					],					"body" : [						"width := height := maxAscent := maxDescent := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2363287,					"argumentNames" : [ ]				},				"DigitalSignatureAlgorithm class" : {					"sourceCode" : [						"initialize",						"",						"\t\"DigitalSignatureAlgorithm initialize\"",						"",						"\t\"SmallPrimes is a list of small primes greater than two.\"",						"",						"\tSmallPrimes := Integer primesUpTo: 2000.",						"\tSmallPrimes := SmallPrimes copyFrom: 2 to: SmallPrimes size.",						"",						"\t\"HighBitOfByte maps a byte to the index of its top non-zero bit.\"",						"\tHighBitOfByte := (0 to: 255) collect: [ :byte | byte highBit ]"					],					"body" : [						"SmallPrimes := Integer primesUpTo: 2000.",						"SmallPrimes := SmallPrimes copyFrom: 2 to: SmallPrimes size.",						"",						"\"HighBitOfByte maps a byte to the index of its top non-zero bit.\"",						"HighBitOfByte := (0 to: 255) collect: [ :byte | byte highBit ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"DigitalSignatureAlgorithm initialize"					],					"hash" : 1735434,					"argumentNames" : [ ]				},				"RSAbstractGraphLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself doNotValidateCycles"					],					"body" : [						"super initialize.",						"self doNotValidateCycles"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6552681,					"argumentNames" : [ ]				},				"LGitReadStream" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tposition := 0"					],					"body" : [						"super initialize.",						"position := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6953419,					"argumentNames" : [ ]				},				"DiffChangeMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself buildUI"					],					"body" : [						"super initialize.",						"self buildUI"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4136297,					"argumentNames" : [ ]				},				"SpNotebookPage" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tsuper initialize.",						"\tcloseable := false"					],					"body" : [						"self class initializeSlots: self.",						"super initialize.",						"closeable := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2980484,					"argumentNames" : [ ]				},				"FadingMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself",						"\t\tinitializeAppearance;",						"\t\tinitializeLayout;",						"\t\tbeResetable;",						"\t\tresetAlpha.",						"",						"\tfadingFactor := self defaultFadingFactor"					],					"body" : [						"super initialize.",						"",						"self",						"\tinitializeAppearance;",						"\tinitializeLayout;",						"\tbeResetable;",						"\tresetAlpha.",						"",						"fadingFactor := self defaultFadingFactor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2711950,					"argumentNames" : [ ]				},				"VTermOutputStyles class" : {					"sourceCode" : [						"initialize",						"",						"\tResetStyle := '0m'.",						"\tBold := '1m'.",						"\tUnderline := '4m'.",						"\tBlink := '5m'.",						"\tReverse := '7m'.",						"\tStandout := '1;7m'.",						"\tInvisibleFont := '8m'",						"",						"\t\"Home := 'home'.",						"\tSavePosition := 'sc'.",						"\tRestorePosition := 'rc'.",						"\tMoveLeft := 'cub1'.",						"\tInvisibleCursor := 'civis'.",						"\tVisibleCursor := 'cvvis'.",						"\tClearToEnd := 'e1'.",						"\tClearFromBegin := 'el1'.",						"\tClearWholeLine := 'el2'.",						"\tDim := 'dim'.",						"\tUnderlineoff := 'rmul'.",						"\tClearScreen := 'clear'\""					],					"body" : [						"ResetStyle := '0m'.",						"Bold := '1m'.",						"Underline := '4m'.",						"Blink := '5m'.",						"Reverse := '7m'.",						"Standout := '1;7m'.",						"InvisibleFont := '8m'",						"",						"\"Home := 'home'.",						"\tSavePosition := 'sc'.",						"\tRestorePosition := 'rc'.",						"\tMoveLeft := 'cub1'.",						"\tInvisibleCursor := 'civis'.",						"\tVisibleCursor := 'cvvis'.",						"\tClearToEnd := 'e1'.",						"\tClearFromBegin := 'el1'.",						"\tClearWholeLine := 'el2'.",						"\tDim := 'dim'.",						"\tUnderlineoff := 'rmul'.",						"\tClearScreen := 'clear'\""					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1964641,					"argumentNames" : [ ]				},				"SharedQueue" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmonitor := Monitor new.",						"\titems := OrderedCollection new"					],					"body" : [						"super initialize.",						"monitor := Monitor new.",						"items := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1924228,					"argumentNames" : [ ]				},				"DangerousClassNotifier class" : {					"sourceCode" : [						"initialize",						"",						"\tenabled := true"					],					"body" : [						"enabled := true"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 1595607,					"argumentNames" : [ ]				},				"ZnChunkedWriteStream" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttotalSize := 0.",						"\tchunkCount := 0"					],					"body" : [						"super initialize.",						"totalSize := 0.",						"chunkCount := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2200297,					"argumentNames" : [ ]				},				"ShLayoutDefinition" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tslots := #(  ).",						"\tsharedPools := #(  ).",						"\tsharedVariables := #(  )"					],					"body" : [						"super initialize.",						"",						"slots := #(  ).",						"sharedPools := #(  ).",						"sharedVariables := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1614218,					"argumentNames" : [ ]				},				"OSKeyboardEvent" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmodifiers := OSStateModifiers new.",						"\thandled := false"					],					"body" : [						"super initialize.",						"modifiers := OSStateModifiers new.",						"handled := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4804199,					"argumentNames" : [ ]				},				"ClyBrowserButtonMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself layoutInset: 4 @ 0"					],					"body" : [						"super initialize.",						"self layoutInset: 4 @ 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5885290,					"argumentNames" : [ ]				},				"CairoFontMetricsProvider" : {					"sourceCode" : [						"initialize",						"",						"\tutfConverter := CairoUTF8Converter new.",						"\tglyphExtents := CairoTextExtents new.",						"\tcache := CairoBackendCache soleInstance"					],					"body" : [						"utfConverter := CairoUTF8Converter new.",						"glyphExtents := CairoTextExtents new.",						"cache := CairoBackendCache soleInstance"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3882217,					"argumentNames" : [ ]				},				"TMockWithComplexSlot" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself class initializeSlots: self"					],					"body" : [						"super initialize.",						"self class initializeSlots: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4234586,					"argumentNames" : [ ]				},				"CharacterSet" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmap := ByteArray new: 256 withAll: 0"					],					"body" : [						"super initialize.",						"map := ByteArray new: 256 withAll: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1679318,					"argumentNames" : [ ]				},				"FixedFaceFont" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbaseFont := TextStyle defaultFont.",						"\tself passwordFont"					],					"body" : [						"super initialize.",						"baseFont := TextStyle defaultFont.",						"self passwordFont"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1419243,					"argumentNames" : [ ]				},				"SDL2TouchStateMachine" : {					"sourceCode" : [						"initialize",						"",						"\tmove := OrderedCollection new.",						"\tcolor := Color random"					],					"body" : [						"move := OrderedCollection new.",						"color := Color random"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4914041,					"argumentNames" : [ ]				},				"SpMorphicGridLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcalculating := false"					],					"body" : [						"super initialize.",						"calculating := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3370184,					"argumentNames" : [ ]				},				"OSWindowGLAttributes class" : {					"sourceCode" : [						"initialize",						"",						"\tDefaultRedSize := 5.",						"\tDefaultGreenSize := 5.",						"\tDefaultBlueSize := 5.",						"\tDefaultAlphaSize := 5.",						"\tDefaultDepthSize := 16.",						"\tDefaultDoubleBuffer := 1.",						"\tDefaultStencilSize := 0.",						"\tDefaultSwapControl := 0.",						"\tDefaultMajorVersion := nil.",						"\tDefaultMinorVersion := nil.",						"\tDefaultProfileType := nil.",						"\tDefaultSRGBFramebuffer := false"					],					"body" : [						"DefaultRedSize := 5.",						"DefaultGreenSize := 5.",						"DefaultBlueSize := 5.",						"DefaultAlphaSize := 5.",						"DefaultDepthSize := 16.",						"DefaultDoubleBuffer := 1.",						"DefaultStencilSize := 0.",						"DefaultSwapControl := 0.",						"DefaultMajorVersion := nil.",						"DefaultMinorVersion := nil.",						"DefaultProfileType := nil.",						"DefaultSRGBFramebuffer := false"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4853777,					"argumentNames" : [ ]				},				"CompiledMethod class" : {					"sourceCode" : [						"initialize",						"",						"\t\"CompiledMethod initialize\"",						"",						"\t\"Initialize class variables specifying the size of the temporary frame",						"\tneeded to run instances of me.\"",						"",						"\tSmallFrame := 16. \"Context range for temps+stack\"",						"\tLargeFrame := 56.",						"\tPrimaryBytecodeSetEncoderClass := nil. \"Old encoder was removed\"",						"\tSecondaryBytecodeSetEncoderClass := EncoderForSistaV1"					],					"body" : [						"SmallFrame := 16. \"Context range for temps+stack\"",						"LargeFrame := 56.",						"PrimaryBytecodeSetEncoderClass := nil. \"Old encoder was removed\"",						"SecondaryBytecodeSetEncoderClass := EncoderForSistaV1"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"CompiledMethod initialize"					],					"hash" : 1588871,					"argumentNames" : [ ]				},				"ReEndTrueFalseRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself matchesAny: #( '`@object ",						"\t\t\t\tifTrue: [| `@temps1 | `@.Statements1. `.Statement] ",						"\t\t\t\tifFalse: [| `@temps2 | `@.Statements2. `.Statement]' '`@object ",						"\t\t\t\tifTrue: [| `@temps1 | `.Statement. `@.Statements1] ",						"\t\t\t\tifFalse: [| `@temps2 | `.Statement. `@.Statements2]' '`@object ",						"\t\t\t\tifFalse: [| `@temps1 | `@.Statements1. `.Statement] ",						"\t\t\t\tifTrue: [| `@temps2 | `@.Statements2. `.Statement]' '`@object ",						"\t\t\t\tifFalse: [| `@temps1 | `.Statement. `@.Statements1] ",						"\t\t\t\tifTrue: [| `@temps2 | `.Statement. `@.Statement2]' )"					],					"body" : [						"super initialize.",						"self matchesAny: #( '`@object ",						"\t\t\t\tifTrue: [| `@temps1 | `@.Statements1. `.Statement] ",						"\t\t\t\tifFalse: [| `@temps2 | `@.Statements2. `.Statement]' '`@object ",						"\t\t\t\tifTrue: [| `@temps1 | `.Statement. `@.Statements1] ",						"\t\t\t\tifFalse: [| `@temps2 | `.Statement. `@.Statements2]' '`@object ",						"\t\t\t\tifFalse: [| `@temps1 | `@.Statements1. `.Statement] ",						"\t\t\t\tifTrue: [| `@temps2 | `@.Statements2. `.Statement]' '`@object ",						"\t\t\t\tifFalse: [| `@temps1 | `.Statement. `@.Statements1] ",						"\t\t\t\tifTrue: [| `@temps2 | `.Statement. `@.Statement2]' )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2519213,					"argumentNames" : [ ]				},				"SpCompositeOutputPort" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tports := #(  )"					],					"body" : [						"super initialize.",						"ports := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3184048,					"argumentNames" : [ ]				},				"PluggableButtonMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the state of the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\trubberBandCells: false;",						"\t\tlistDirection: #topToBottom;",						"\t\thResizing: #shrinkWrap;",						"\t\tvResizing: #shrinkWrap;",						"\t\twrapCentering: #center;",						"\t\tcellPositioning: #center.",						"\tenabled := true.",						"\tself initializeLabelMorph. \"this is a safe guard for enabled: among others.\"",						"\taskBeforeChanging := false.",						"\ttriggerOnMouseDown := false.",						"\tshowSelectionFeedback := false.",						"\targuments := #(  ).",						"\tself",						"\t\tlayoutInset: (self theme buttonLabelInsetFor: self);",						"\t\textent: 20 @ 15;",						"\t\tlastState: false;",						"\t\tcornerStyle: (self theme buttonCornerStyleIn: nil);",						"\t\tborderStyle: (self theme buttonNormalBorderStyleFor: self).",						"",						"\tself clipSubmorphs: true"					],					"body" : [						"super initialize.",						"self",						"\trubberBandCells: false;",						"\tlistDirection: #topToBottom;",						"\thResizing: #shrinkWrap;",						"\tvResizing: #shrinkWrap;",						"\twrapCentering: #center;",						"\tcellPositioning: #center.",						"enabled := true.",						"self initializeLabelMorph. \"this is a safe guard for enabled: among others.\"",						"askBeforeChanging := false.",						"triggerOnMouseDown := false.",						"showSelectionFeedback := false.",						"arguments := #(  ).",						"self",						"\tlayoutInset: (self theme buttonLabelInsetFor: self);",						"\textent: 20 @ 15;",						"\tlastState: false;",						"\tcornerStyle: (self theme buttonCornerStyleIn: nil);",						"\tborderStyle: (self theme buttonNormalBorderStyleFor: self).",						"",						"self clipSubmorphs: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the state of the receiver."					],					"hash" : 2708271,					"argumentNames" : [ ]				},				"QuoRemMinimal" : {					"sourceCode" : [						"initialize",						"",						"\t| floor ceil r |",						"\tsuper initialize.",						"",						"\tr := self value.",						"",						"\tfloor := r floor.",						"\tceil := r ceiling.",						"",						"\tquo := r - floor < (ceil - r)",						"\t\t       ifTrue: [ floor ]",						"\t\t       ifFalse: [ ceil ].",						"",						"\trem := a - (quo * b)"					],					"body" : [						"| floor ceil r |",						"super initialize.",						"",						"r := self value.",						"",						"floor := r floor.",						"ceil := r ceiling.",						"",						"quo := r - floor < (ceil - r)",						"\t       ifTrue: [ floor ]",						"\t       ifFalse: [ ceil ].",						"",						"rem := a - (quo * b)"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 3904828,					"argumentNames" : [ ]				},				"SelectionMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"",						"\tselectedItems := OrderedCollection new.",						"\titemsAlreadySelected := OrderedCollection new.",						"\tslippage := 0 @ 0"					],					"body" : [						"super initialize.",						"",						"selectedItems := OrderedCollection new.",						"itemsAlreadySelected := OrderedCollection new.",						"slippage := 0 @ 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 2755552,					"argumentNames" : [ ]				},				"CmCommandCollector" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcommandsCollected := OrderedCollection new"					],					"body" : [						"super initialize.",						"commandsCollected := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1635353,					"argumentNames" : [ ]				},				"ByteString class" : {					"sourceCode" : [						"initialize",						"",						"\tNonAsciiMap := ByteArray new: 256.",						"\t0 to: 255 do: [ :i | ",						"\t\ti < 128",						"\t\t\tifTrue: [ NonAsciiMap at: i + 1 put: 0 \"valid ASCII subset\" ]",						"\t\t\tifFalse: [ NonAsciiMap at: i + 1 put: 1 \"extended charset\" ] ]"					],					"body" : [						"NonAsciiMap := ByteArray new: 256.",						"0 to: 255 do: [ :i | ",						"\ti < 128",						"\t\tifTrue: [ NonAsciiMap at: i + 1 put: 0 \"valid ASCII subset\" ]",						"\t\tifFalse: [ NonAsciiMap at: i + 1 put: 1 \"extended charset\" ] ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1850790,					"argumentNames" : [ ]				},				"AbstractMessageCentricBrowser" : {					"sourceCode" : [						"initialize",						"",						"\ttextConverter := self newTextConverter.",						"\tsuper initialize"					],					"body" : [						"textConverter := self newTextConverter.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6187420,					"argumentNames" : [ ]				},				"RxmLookahaed" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpositive := true"					],					"body" : [						"super initialize.",						"positive := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2238409,					"argumentNames" : [ ]				},				"MicElement" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tproperties := OrderedDictionary new"					],					"body" : [						"super initialize.",						"properties := OrderedDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7331866,					"argumentNames" : [ ]				},				"ClyToolbarSeparatorMorph" : {					"sourceCode" : [						"initialize",						"",						"\t| separator |",						"\tsuper initialize.",						"\tself",						"\t\tchangeTableLayout;",						"\t\thResizing: #shrinkWrap;",						"\t\tvResizing: #shrinkWrap;",						"\t\tlayoutInset: 4 @ 0.",						"\tseparator := self theme newLabelIn: self label: '|'.",						"",						"\tself addMorph: separator"					],					"body" : [						"| separator |",						"super initialize.",						"self",						"\tchangeTableLayout;",						"\thResizing: #shrinkWrap;",						"\tvResizing: #shrinkWrap;",						"\tlayoutInset: 4 @ 0.",						"separator := self theme newLabelIn: self label: '|'.",						"",						"self addMorph: separator"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6154810,					"argumentNames" : [ ]				},				"KMStorage" : {					"sourceCode" : [						"initialize",						"",						"\tanonymousRegistry := Set new.",						"\tnamedRegistry := Dictionary new"					],					"body" : [						"anonymousRegistry := Set new.",						"namedRegistry := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2630494,					"argumentNames" : [ ]				},				"SDL_Event class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tSDL2Types initialize. \"make sure its initialized\"",						"\tself initializeEventTypeMap"					],					"body" : [						"SDL2Types initialize. \"make sure its initialized\"",						"self initializeEventTypeMap"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self initialize"					],					"hash" : 4871636,					"argumentNames" : [ ]				},				"SpDropListPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tmodel := SpCollectionListModel on: #(  ).",						"\tselection := SpSingleSelectionMode on: self.",						"\tdisplayBlock := [ :itemModel :item | item label ].",						"\ticonBlock := [ :itemModel :item | item icon ].",						"\tstartsWithSelection := true"					],					"body" : [						"super initialize.",						"",						"model := SpCollectionListModel on: #(  ).",						"selection := SpSingleSelectionMode on: self.",						"displayBlock := [ :itemModel :item | item label ].",						"iconBlock := [ :itemModel :item | item icon ].",						"startsWithSelection := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3276347,					"argumentNames" : [ ]				},				"DateAndTime class" : {					"sourceCode" : [						"initialize",						"",						"\tClockProvider := Time"					],					"body" : [						"ClockProvider := Time"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 1601203,					"argumentNames" : [ ]				},				"StDebuggerObjectForTests" : {					"sourceCode" : [						"initialize",						"",						"\tinstVar := 0"					],					"body" : [						"instVar := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6345894,					"argumentNames" : [ ]				},				"NECTestSuperClass class" : {					"sourceCode" : [						"initialize",						"",						"\tSuperClassVar := Dictionary new"					],					"body" : [						"SuperClassVar := Dictionary new"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 5152816,					"argumentNames" : [ ]				},				"TransformMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"",						"\tsmoothing := 1.",						"\ttransform := MorphicTransform identity"					],					"body" : [						"super initialize.",						"",						"smoothing := 1.",						"transform := MorphicTransform identity"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 2449752,					"argumentNames" : [ ]				},				"SpRequestDialog" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself title: 'Request'"					],					"body" : [						"super initialize.",						"self title: 'Request'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3131053,					"argumentNames" : [ ]				},				"StoredSettingsMerger" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstoredSettings := OrderedCollection new"					],					"body" : [						"super initialize.",						"storedSettings := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2679321,					"argumentNames" : [ ]				},				"UIThemeDecorator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tthemeOverrideDict := Dictionary new"					],					"body" : [						"super initialize.",						"themeOverrideDict := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1840922,					"argumentNames" : [ ]				},				"EventManager class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize.\"",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"self initialize."					],					"hash" : 2399648,					"argumentNames" : [ ]				},				"SpVersatileDialogPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tmoreOptionsVisible := false.",						"\tbuttons := OrderedDictionary new"					],					"body" : [						"super initialize.",						"",						"moreOptionsVisible := false.",						"buttons := OrderedDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2355894,					"argumentNames" : [ ]				},				"RubCharacterScanner" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdestX := destY := leftMargin := 0"					],					"body" : [						"super initialize.",						"destX := destY := leftMargin := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2651581,					"argumentNames" : [ ]				},				"StMockCandidatesList" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tresults := OrderedCollection new"					],					"body" : [						"super initialize.",						"results := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "adding",					"comment" : [ ],					"hash" : 6315545,					"argumentNames" : [ ]				},				"HiSimpleRenderer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself useWheelColorStrategy.",						"",						"\tnodeRadio := 3.0.",						"\tnodeBorderWidth := 1.1.",						"\tnodeConnectionOffset := 0.",						"",						"\tlinkWidth := 1.3.",						"\tlinkDashes := #(  ).",						"\tlinkCurveAngle := 45 degreesToRadians.",						"",						"\tarrowSize := linkWidth * 0.75.",						"",						"\tcellWidth := linkWidth * 3"					],					"body" : [						"super initialize.",						"",						"self useWheelColorStrategy.",						"",						"nodeRadio := 3.0.",						"nodeBorderWidth := 1.1.",						"nodeConnectionOffset := 0.",						"",						"linkWidth := 1.3.",						"linkDashes := #(  ).",						"linkCurveAngle := 45 degreesToRadians.",						"",						"arrowSize := linkWidth * 0.75.",						"",						"cellWidth := linkWidth * 3"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5008292,					"argumentNames" : [ ]				},				"StDebuggerCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself description: (String streamContents: [ :stream | ",						"\t\t\t stream << self class defaultName << ': '",						"\t\t\t << self class defaultDescription ])"					],					"body" : [						"super initialize.",						"self description: (String streamContents: [ :stream | ",						"\t\t stream << self class defaultName << ': '",						"\t\t << self class defaultDescription ])"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6219091,					"argumentNames" : [ ]				},				"ReAllAnyNoneSatisfyRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\taddMatchingMethod: '`@method: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.statements.",						"\t\t\t`@collection do: [ :`each |",						"\t\t\t\t| `@blocktemps |",						"\t\t\t\t`@.blockstatements.",						"\t\t\t\t`@condition",						"\t\t\t\t\tifFalse: [ ^ false ] ].",						"\t\t\t^ true'",						"\t\trewriteTo: '`@method: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.statements. ",						"\t\t\t^ `@collection allSatisfy: [ :`each |",						"\t\t\t\t| `@blocktemps |",						"\t\t\t\t`@.blockstatements.",						"\t\t\t\t`@condition ]';",						"\t\t\" anySatisfy: \"addMatchingMethod: '`@method: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.statements.",						"\t\t\t`@collection do: [ :`each |",						"\t\t\t\t| `@blocktemps |",						"\t\t\t\t`@.blockstatements.",						"\t\t\t\t`@condition",						"\t\t\t\t\tifTrue: [ ^ true ] ].",						"\t\t\t^ false'",						"\t\trewriteTo: '`@method: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.statements.",						"\t\t\t^ `@collection anySatisfy: [ :`each | ",						"\t\t\t\t| `@blocktemps |",						"\t\t\t\t`@.blockstatements.",						"\t\t\t\t`@condition ]';",						"\t\t\" noneSatisfy: \"addMatchingMethod: '`@method: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.statements.",						"\t\t\t`@collection do: [ :`each |",						"\t\t\t\t| `@blocktemps |",						"\t\t\t\t`@.blockstatements.",						"\t\t\t\t`@condition",						"\t\t\t\t\tifTrue: [ ^ false ] ].",						"\t\t\t^ true'",						"\t\trewriteTo: '`@method: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.statements.",						"\t\t\t^ `@collection noneSatisfy: [ :`each | ",						"\t\t\t\t| `@blocktemps |",						"\t\t\t\t`@.blockstatements.\t\t\t\t",						"\t\t\t\t`@condition ]'",						"",						"\t\" allSatisfy: \""					],					"body" : [						"super initialize.",						"self",						"\taddMatchingMethod: '`@method: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.statements.",						"\t\t\t`@collection do: [ :`each |",						"\t\t\t\t| `@blocktemps |",						"\t\t\t\t`@.blockstatements.",						"\t\t\t\t`@condition",						"\t\t\t\t\tifFalse: [ ^ false ] ].",						"\t\t\t^ true'",						"\trewriteTo: '`@method: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.statements. ",						"\t\t\t^ `@collection allSatisfy: [ :`each |",						"\t\t\t\t| `@blocktemps |",						"\t\t\t\t`@.blockstatements.",						"\t\t\t\t`@condition ]';",						"\t\" anySatisfy: \"addMatchingMethod: '`@method: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.statements.",						"\t\t\t`@collection do: [ :`each |",						"\t\t\t\t| `@blocktemps |",						"\t\t\t\t`@.blockstatements.",						"\t\t\t\t`@condition",						"\t\t\t\t\tifTrue: [ ^ true ] ].",						"\t\t\t^ false'",						"\trewriteTo: '`@method: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.statements.",						"\t\t\t^ `@collection anySatisfy: [ :`each | ",						"\t\t\t\t| `@blocktemps |",						"\t\t\t\t`@.blockstatements.",						"\t\t\t\t`@condition ]';",						"\t\" noneSatisfy: \"addMatchingMethod: '`@method: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.statements.",						"\t\t\t`@collection do: [ :`each |",						"\t\t\t\t| `@blocktemps |",						"\t\t\t\t`@.blockstatements.",						"\t\t\t\t`@condition",						"\t\t\t\t\tifTrue: [ ^ false ] ].",						"\t\t\t^ true'",						"\trewriteTo: '`@method: `@args",						"\t\t\t| `@temps |",						"\t\t\t`@.statements.",						"\t\t\t^ `@collection noneSatisfy: [ :`each | ",						"\t\t\t\t| `@blocktemps |",						"\t\t\t\t`@.blockstatements.\t\t\t\t",						"\t\t\t\t`@condition ]'",						"",						"\" allSatisfy: \""					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2891634,					"argumentNames" : [ ]				},				"SpMorphicBoxLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcalculating := false"					],					"body" : [						"super initialize.",						"calculating := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3368141,					"argumentNames" : [ ]				},				"RSForceBasedLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trandom := Random seed: 42.",						"\tself",						"\t\tautoRepulse: false;",						"\t\titerations: 0;",						"\t\tedges: #(  );",						"\t\tnodes: #(  );",						"\t\tinitialLayout: RSGridLayout new;",						"\t\tgravity: 0.1;",						"\t\tfriction: 0.9;",						"\t\ttheta: 0.8;",						"\t\tstrength: 1;",						"\t\tlength: 20;",						"\t\tcharge: -30;",						"\t\tcenter: 0 @ 0;",						"\t\tuseProgressBar"					],					"body" : [						"super initialize.",						"random := Random seed: 42.",						"self",						"\tautoRepulse: false;",						"\titerations: 0;",						"\tedges: #(  );",						"\tnodes: #(  );",						"\tinitialLayout: RSGridLayout new;",						"\tgravity: 0.1;",						"\tfriction: 0.9;",						"\ttheta: 0.8;",						"\tstrength: 1;",						"\tlength: 20;",						"\tcharge: -30;",						"\tcenter: 0 @ 0;",						"\tuseProgressBar"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6563028,					"argumentNames" : [ ]				},				"ReflectivityCodeMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tlayoutPolicy: TableLayout new;",						"\t\tlistDirection: #leftToRight;",						"\t\twrapDirection: #topToBottom;",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #rigid;",						"\t\theight: 150;",						"\t\tlayoutInset: (Margin",						"\t\t\t\t top: 30",						"\t\t\t\t left: 2",						"\t\t\t\t bottom: 2",						"\t\t\t\t right: 2);",						"\t\tcellInset: 1"					],					"body" : [						"super initialize.",						"self",						"\tlayoutPolicy: TableLayout new;",						"\tlistDirection: #leftToRight;",						"\twrapDirection: #topToBottom;",						"\thResizing: #spaceFill;",						"\tvResizing: #rigid;",						"\theight: 150;",						"\tlayoutInset: (Margin",						"\t\t\t top: 30",						"\t\t\t left: 2",						"\t\t\t bottom: 2",						"\t\t\t right: 2);",						"\tcellInset: 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4318868,					"argumentNames" : [ ]				},				"SpProgressingProgressBarState" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tsuper initialize.",						"\tcurrentValue := 0"					],					"body" : [						"self class initializeSlots: self.",						"super initialize.",						"currentValue := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2985604,					"argumentNames" : [ ]				},				"RSNormalizer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tscale := NSScale linear.",						"\tshapes := #(  ).",						"\tminAndMaxBlock := #yourself"					],					"body" : [						"super initialize.",						"scale := NSScale linear.",						"shapes := #(  ).",						"minAndMaxBlock := #yourself"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6486066,					"argumentNames" : [ ]				},				"HiUniformColorStrategy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlinkColor := nodeColor := Smalltalk ui theme caretColor"					],					"body" : [						"super initialize.",						"linkColor := nodeColor := Smalltalk ui theme caretColor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5004625,					"argumentNames" : [ ]				},				"StAbstractStringFilter" : {					"sourceCode" : [						"initialize",						"",						"\tfilteringText := ''.",						"\tresults := OrderedCollection new.",						"\treturnedIndex := ''"					],					"body" : [						"filteringText := ''.",						"results := OrderedCollection new.",						"returnedIndex := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6272997,					"argumentNames" : [ ]				},				"ZnSingleThreadedServer class" : {					"sourceCode" : [						"initialize",						"",						"\tdefault := nil"					],					"body" : [						"default := nil"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2214617,					"argumentNames" : [ ]				},				"ClySortSystemItemFunction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tfunctionsForTypes := IdentityDictionary new"					],					"body" : [						"super initialize.",						"",						"functionsForTypes := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5742874,					"argumentNames" : [ ]				},				"TestExecutionService" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tisEnabled := self isEnabledByDefault"					],					"body" : [						"super initialize.",						"",						"isEnabled := self isEnabledByDefault"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1152090,					"argumentNames" : [ ]				},				"ClyScopeCompoBoxMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tchangeTableLayout;",						"\t\thResizing: #rigid;",						"\t\twidth: 200"					],					"body" : [						"super initialize.",						"self",						"\tchangeTableLayout;",						"\thResizing: #rigid;",						"\twidth: 200"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5988985,					"argumentNames" : [ ]				},				"SpAbstractListPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeTHaveWrappingScrollBars.",						"",						"\tactivationBlock := [  ].",						"\tverticalAlignment := SpVerticalAlignment new.",						"",						"\tself withScrollBars.",						"\tself model: self newEmptyModel.",						"",						"\tself beSingleSelection.",						"\tself activateOnDoubleClick.",						"",						"\tself registerEvents"					],					"body" : [						"super initialize.",						"self initializeTHaveWrappingScrollBars.",						"",						"activationBlock := [  ].",						"verticalAlignment := SpVerticalAlignment new.",						"",						"self withScrollBars.",						"self model: self newEmptyModel.",						"",						"self beSingleSelection.",						"self activateOnDoubleClick.",						"",						"self registerEvents"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3007978,					"argumentNames" : [ ]				},				"SharedRandom class" : {					"sourceCode" : [						"initialize",						"",						"\tglobal := self new"					],					"body" : [						"global := self new"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1923923,					"argumentNames" : [ ]				},				"IceGitCheckoutProgress" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tjob := IceExternalJob new",						"\t\t       title: 'Checking out...';",						"\t\t       yourself.",						"",						"\tself initializeBlock"					],					"body" : [						"super initialize.",						"",						"job := IceExternalJob new",						"\t       title: 'Checking out...';",						"\t       yourself.",						"",						"self initializeBlock"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7012983,					"argumentNames" : [ ]				},				"NSLnScale" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlinear := self class linear"					],					"body" : [						"super initialize.",						"linear := self class linear"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 6421236,					"argumentNames" : [ ]				},				"SpDualChangeSorterPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tmodel := ChangeSorterModel new.",						"\tisRefreshing := false.",						"\tsuper initialize.",						"\tSystemAnnouncer uniqueInstance weak",						"\t\twhen: CurrentChangeSetChanged",						"\t\tsend: #updateTitle",						"\t\tto: self"					],					"body" : [						"model := ChangeSorterModel new.",						"isRefreshing := false.",						"super initialize.",						"SystemAnnouncer uniqueInstance weak",						"\twhen: CurrentChangeSetChanged",						"\tsend: #updateTitle",						"\tto: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6192829,					"argumentNames" : [ ]				},				"AbstractWidgetPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\thelpHolder := nil asValueHolder.",						"\tborderWidth := 0 asValueHolder.",						"\tborderColor := Color transparent asValueHolder.",						"\tenabledHolder := true asValueHolder.",						"\tdragEnabled := false asValueHolder.",						"\tdropEnabled := false asValueHolder.",						"\tdragTransformationBlock := [ :item :source | item ] asValueHolder.",						"\twantDropBlock := [ :draggedItem :event :source | self dropEnabled ]",						"\t\t                 asValueHolder.",						"\tacceptDropBlock := [ :draggedItem :event :source |  ] asValueHolder.",						"\ttransferBlock := [ :passenger :source | ",						"\t                 self defaultTransferFor: passenger from: source ]",						"\t\t                 asValueHolder.",						"\tcolor := self defaultColor asValueHolder.",						"",						"\thelpHolder whenChangedDo: [ :string | ",						"\t\tself widget ifNotNil: [ :w | ",						"\t\t\tw update: #setBalloonText: with: { string } ] ].",						"",						"\tborderWidth whenChangedDo: [ :int | ",						"\t\tself widget ifNotNil: [ :w | w update: #borderWidth: with: { int } ] ].",						"",						"\tborderColor whenChangedDo: [ :newColor | ",						"\t\tself widget ifNotNil: [ :w | ",						"\t\t\tw update: #borderColor: with: { newColor } ] ].",						"",						"\tcolor whenChangedDo: [ :newColor | ",						"\t\tself widget ifNotNil: [ :w | w update: #color: with: { newColor } ] ].",						"",						"\tenabledHolder whenChangedDo: [ :b | ",						"\t\tself widget ifNotNil: [ :w | w update: #enabled: with: { b } ] ].",						"",						"\tdragEnabled whenChangedDo: [ :b | ",						"\t\tself widget ifNotNil: [ :w | w update: #dragEnabled: with: { b } ] ].",						"",						"\tdropEnabled whenChangedDo: [ :b | ",						"\t\tself widget ifNotNil: [ :w | w update: #dropEnabled: with: { b } ] ]"					],					"body" : [						"super initialize.",						"",						"helpHolder := nil asValueHolder.",						"borderWidth := 0 asValueHolder.",						"borderColor := Color transparent asValueHolder.",						"enabledHolder := true asValueHolder.",						"dragEnabled := false asValueHolder.",						"dropEnabled := false asValueHolder.",						"dragTransformationBlock := [ :item :source | item ] asValueHolder.",						"wantDropBlock := [ :draggedItem :event :source | self dropEnabled ]",						"\t                 asValueHolder.",						"acceptDropBlock := [ :draggedItem :event :source |  ] asValueHolder.",						"transferBlock := [ :passenger :source | ",						"                 self defaultTransferFor: passenger from: source ]",						"\t                 asValueHolder.",						"color := self defaultColor asValueHolder.",						"",						"helpHolder whenChangedDo: [ :string | ",						"\tself widget ifNotNil: [ :w | ",						"\t\tw update: #setBalloonText: with: { string } ] ].",						"",						"borderWidth whenChangedDo: [ :int | ",						"\tself widget ifNotNil: [ :w | w update: #borderWidth: with: { int } ] ].",						"",						"borderColor whenChangedDo: [ :newColor | ",						"\tself widget ifNotNil: [ :w | ",						"\t\tw update: #borderColor: with: { newColor } ] ].",						"",						"color whenChangedDo: [ :newColor | ",						"\tself widget ifNotNil: [ :w | w update: #color: with: { newColor } ] ].",						"",						"enabledHolder whenChangedDo: [ :b | ",						"\tself widget ifNotNil: [ :w | w update: #enabled: with: { b } ] ].",						"",						"dragEnabled whenChangedDo: [ :b | ",						"\tself widget ifNotNil: [ :w | w update: #dragEnabled: with: { b } ] ].",						"",						"dropEnabled whenChangedDo: [ :b | ",						"\tself widget ifNotNil: [ :w | w update: #dropEnabled: with: { b } ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1674546,					"argumentNames" : [ ]				},				"AthensBackgroundChange" : {					"sourceCode" : [						"initialize",						"",						"\twidth := 0.",						"\tcolor := Color transparent"					],					"body" : [						"width := 0.",						"color := Color transparent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2354216,					"argumentNames" : [ ]				},				"CacheStatistics" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\thits := misses := 0"					],					"body" : [						"super initialize.",						"hits := misses := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2404288,					"argumentNames" : [ ]				},				"SimpleButtonMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself borderWidth: 1.",						"\tself color: (Color r: 0.4 g: 0.8 b: 0.6).",						"\tself borderColor: self color darker.",						"\tself borderStyle: BorderStyle thinGray.",						"\tactionSelector := #flash.",						"\targuments := EmptyArray.",						"\tactWhen := #buttonUp.",						"\tself setDefaultLabel"					],					"body" : [						"super initialize.",						"",						"self borderWidth: 1.",						"self color: (Color r: 0.4 g: 0.8 b: 0.6).",						"self borderColor: self color darker.",						"self borderStyle: BorderStyle thinGray.",						"actionSelector := #flash.",						"arguments := EmptyArray.",						"actWhen := #buttonUp.",						"self setDefaultLabel"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2756576,					"argumentNames" : [ ]				},				"RBMethodNode" : {					"sourceCode" : [						"initialize",						"",						"\tpragmas := #(  ).",						"\treplacements := SortedCollection sortBlock: [ :a :b | ",						"\t\t                a startPosition < b startPosition or: [ ",						"\t\t\t                a startPosition = b startPosition and: [ ",						"\t\t\t\t                a stopPosition < b stopPosition ] ] ].",						"\tnodeReplacements := IdentityDictionary new"					],					"body" : [						"pragmas := #(  ).",						"replacements := SortedCollection sortBlock: [ :a :b | ",						"\t                a startPosition < b startPosition or: [ ",						"\t\t                a startPosition = b startPosition and: [ ",						"\t\t\t                a stopPosition < b stopPosition ] ] ].",						"nodeReplacements := IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1965609,					"argumentNames" : [ ]				},				"TabPresenter" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialization code for TabPresenter\"",						"",						"\tsuper initialize.",						"",						"\tlabelHolder := '' asValueHolder.",						"\ticonHolder := self defaultIcon asValueHolder.",						"\tmorphHolder := nil asValueHolder.",						"\tretrievingBlockHolder := nil asValueHolder.",						"\tmenuHolder := nil asValueHolder.",						"\tactionsHolder := OrderedCollection new asValueHolder.",						"\tcloseableHolder := true asValueHolder.",						"\ttabSelectedActionHolder := [  ] asValueHolder.",						"\tselectedHolder := false asValueHolder"					],					"body" : [						"super initialize.",						"",						"labelHolder := '' asValueHolder.",						"iconHolder := self defaultIcon asValueHolder.",						"morphHolder := nil asValueHolder.",						"retrievingBlockHolder := nil asValueHolder.",						"menuHolder := nil asValueHolder.",						"actionsHolder := OrderedCollection new asValueHolder.",						"closeableHolder := true asValueHolder.",						"tabSelectedActionHolder := [  ] asValueHolder.",						"selectedHolder := false asValueHolder"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialization code for TabPresenter"					],					"hash" : 1700885,					"argumentNames" : [ ]				},				"RSCat" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcanvas := RSCanvas new.",						"\tpixel := 10.",						"\trainbowColors := NSScale ordinal rangeFrom:",						"\t\t                 { '#f1944e'. '#f9d448'. '#feef50'. '#66d841'.",						"\t\t                 '#56c5f9'. '#9294f8' }.",						"\ttileColor := NSScale ordinal",						"\t\t             domain: { $1. $2. $3. $4. $5. $6. $7 };",						"\t\t             rangeFrom:",						"\t\t\t             { 'black'. '#f6d4ac'. '#f1a9f8'. '#dd63b6'. '#a8c5e9'.",						"\t\t\t             '#f9deeb'. 'white' }"					],					"body" : [						"super initialize.",						"canvas := RSCanvas new.",						"pixel := 10.",						"rainbowColors := NSScale ordinal rangeFrom:",						"\t                 { '#f1944e'. '#f9d448'. '#feef50'. '#66d841'.",						"\t                 '#56c5f9'. '#9294f8' }.",						"tileColor := NSScale ordinal",						"\t             domain: { $1. $2. $3. $4. $5. $6. $7 };",						"\t             rangeFrom:",						"\t\t             { 'black'. '#f6d4ac'. '#f1a9f8'. '#dd63b6'. '#a8c5e9'.",						"\t\t             '#f9deeb'. 'white' }"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3088374,					"argumentNames" : [ ]				},				"OmStoreFactory" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tstoreByPath := WeakValueDictionary new"					],					"body" : [						"super initialize.",						"",						"storeByPath := WeakValueDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4975642,					"argumentNames" : [ ]				},				"HiColumnController" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trenderer := HiSimpleRenderer new.",						"\tpageSize := 30.",						"\tsession := Smalltalk session.",						"\tself reset"					],					"body" : [						"super initialize.",						"renderer := HiSimpleRenderer new.",						"pageSize := 30.",						"session := Smalltalk session.",						"self reset"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5007709,					"argumentNames" : [ ]				},				"ZnApplicationFormUrlEncodedEntity" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfields := ZnMultiValueDictionary new.",						"\tself contentType: self class designatedMimeType"					],					"body" : [						"super initialize.",						"fields := ZnMultiValueDictionary new.",						"self contentType: self class designatedMimeType"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2207581,					"argumentNames" : [ ]				},				"SpTabLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tinitialPageIndex := 1"					],					"body" : [						"super initialize.",						"initialPageIndex := 1"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 2944463,					"argumentNames" : [ ]				},				"ClyTestResultProperty" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tallCount := 0.",						"\tsuccessCount := 0.",						"\tfailureCount := 0.",						"\terrorCount := 0"					],					"body" : [						"super initialize.",						"allCount := 0.",						"successCount := 0.",						"failureCount := 0.",						"errorCount := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5845278,					"argumentNames" : [ ]				},				"RSAbstractCircleLayout" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize a newly created instance. This method must answer the receiver.\"",						"",						"\tsuper initialize.",						"\tself scaleBy: 11.",						"",						"\t\"Represent the initial angle to place the elements\"",						"\tinitialAngle := 0.",						"",						"\t\"Distance of the circle. If it is 0 when entering doExecute, then it is computed\"",						"\tinitialRadius := 0.",						"",						"\t\"0 means that it is computed, and not set by the user\"",						"\tinitialIncrementalAngle := 0"					],					"body" : [						"super initialize.",						"self scaleBy: 11.",						"",						"\"Represent the initial angle to place the elements\"",						"initialAngle := 0.",						"",						"\"Distance of the circle. If it is 0 when entering doExecute, then it is computed\"",						"initialRadius := 0.",						"",						"\"0 means that it is computed, and not set by the user\"",						"initialIncrementalAngle := 0"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [						"Initialize a newly created instance. This method must answer the receiver."					],					"hash" : 6544385,					"argumentNames" : [ ]				},				"UUIDGenerator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trandom := Random new.",						"\t\"This prior usage of a Semaphore has been exchanged because there are reports that",						"\tthe Semaphore did not work in concurrent situations. So the Mutex adds some extra ",						"\tbits here for usage in multi threaded environments\"",						"\tlock := Mutex new.",						"\tnode := self computeNodeIdentifier.",						"\tcounter := self nextRandom16"					],					"body" : [						"super initialize.",						"random := Random new.",						"\"This prior usage of a Semaphore has been exchanged because there are reports that",						"\tthe Semaphore did not work in concurrent situations. So the Mutex adds some extra ",						"\tbits here for usage in multi threaded environments\"",						"lock := Mutex new.",						"node := self computeNodeIdentifier.",						"counter := self nextRandom16"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1955808,					"argumentNames" : [ ]				},				"PharoCommonTools" : {					"sourceCode" : [						"initialize",						"",						"\trecentTools := Dictionary new.",						"\tsuper initialize"					],					"body" : [						"recentTools := Dictionary new.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2423842,					"argumentNames" : [ ]				},				"ReSmalllintChecker" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself resetResult"					],					"body" : [						"super initialize.",						"self resetResult"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2510441,					"argumentNames" : [ ]				},				"GeneralScrollPaneMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tscroller: self newScroller;",						"\t\thScrollbar: self newHScrollbar;",						"\t\tvScrollbar: self newVScrollbar;",						"\t\tscrollTarget: self defaultScrollTarget.",						"\tself",						"\t\taddMorph: self scroller;",						"\t\tresizeScroller"					],					"body" : [						"super initialize.",						"self",						"\tscroller: self newScroller;",						"\thScrollbar: self newHScrollbar;",						"\tvScrollbar: self newVScrollbar;",						"\tscrollTarget: self defaultScrollTarget.",						"self",						"\taddMorph: self scroller;",						"\tresizeScroller"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1374729,					"argumentNames" : [ ]				},				"CoFetcherSequence" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsubcompletions := OrderedCollection new"					],					"body" : [						"super initialize.",						"subcompletions := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6107163,					"argumentNames" : [ ]				},				"MCRepositoryGroup" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trepositories := OrderedCollection new"					],					"body" : [						"super initialize.",						"repositories := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1087257,					"argumentNames" : [ ]				},				"StDebuggerActionModel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself computeInitialTopContext.",						"\tfilterStack := true"					],					"body" : [						"super initialize.",						"self computeInitialTopContext.",						"filterStack := true"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 6324867,					"argumentNames" : [ ]				},				"SpMorphicBaseTextAdapter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tupdating := false"					],					"body" : [						"super initialize.",						"updating := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3390713,					"argumentNames" : [ ]				},				"Unit class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Unit initialize.\"",						"",						"\t\"This is the master 'initialize' method.  It calls the #initializeClass methods of the",						"\t classes in this package *in the appropriate order*.  The reason I don't just have the",						"\t fileout code call #initialize for each class that needs initialization is that this",						"\t package depends on classes being initialized in a certain order, and the 'topological'",						"\t fileout order generated by some Smalltalks does not match this order.\"",						"",						"\tSIPrefix initializeClass.",						"\tBaseUnit initializeClass.",						"\tNamedUnit initializeClass"					],					"body" : [						"SIPrefix initializeClass.",						"BaseUnit initializeClass.",						"NamedUnit initializeClass"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Unit initialize."					],					"hash" : 3099929,					"argumentNames" : [ ]				},				"TransferMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"\tself layoutPolicy: TableLayout new.",						"",						"\tself",						"\t\tlistDirection: #leftToRight;",						"\t\thResizing: #shrinkWrap;",						"\t\tvResizing: #shrinkWrap;",						"\t\tlayoutInset: 3;",						"\t\tcellInset: 3;",						"\t\twrapCentering: #center;",						"\t\tcellPositioning: #leftCenter.",						"",						"\tself borderStyle: (BorderStyle width: 1 color: Color lightGray).",						"",						"\taccepted := false.",						"\tcopy := false.",						"\tself on: #keyStroke send: #keyStroke: to: self"					],					"body" : [						"super initialize.",						"self layoutPolicy: TableLayout new.",						"",						"self",						"\tlistDirection: #leftToRight;",						"\thResizing: #shrinkWrap;",						"\tvResizing: #shrinkWrap;",						"\tlayoutInset: 3;",						"\tcellInset: 3;",						"\twrapCentering: #center;",						"\tcellPositioning: #leftCenter.",						"",						"self borderStyle: (BorderStyle width: 1 color: Color lightGray).",						"",						"accepted := false.",						"copy := false.",						"self on: #keyStroke send: #keyStroke: to: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 1411121,					"argumentNames" : [ ]				},				"QuoRemComplementary" : {					"sourceCode" : [						"initialize",						"",						"\tratio := a / b.",						"",						"\tquo := self value ceiling.",						"\trem := a - (quo * b)"					],					"body" : [						"ratio := a / b.",						"",						"quo := self value ceiling.",						"rem := a - (quo * b)"					],					"isTestMethod" : false,					"category" : "accessing",					"comment" : [ ],					"hash" : 3114632,					"argumentNames" : [ ]				},				"ClyFormatAsReadSwitchMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tcheckbox := CheckboxMorph",						"\t\t            on: self",						"\t\t            selected: #formatAsYouRead",						"\t\t            changeSelected: #toggle.",						"\tcheckbox",						"\t\tgetLabelSelector: #formatAsYouReadLabel;",						"\t\tlabelClickable: true;",						"\t\tvResizing: #shrinkWrap;",						"\t\thResizing: #shrinkWrap;",						"\t\tsetBalloonText:",						"\t\t\t'Autoformat code without editing. Useful when reading some old/unformatted code. You can configure your own format in the settings browser.'.",						"\tself addMorph: checkbox"					],					"body" : [						"super initialize.",						"",						"checkbox := CheckboxMorph",						"\t            on: self",						"\t            selected: #formatAsYouRead",						"\t            changeSelected: #toggle.",						"checkbox",						"\tgetLabelSelector: #formatAsYouReadLabel;",						"\tlabelClickable: true;",						"\tvResizing: #shrinkWrap;",						"\thResizing: #shrinkWrap;",						"\tsetBalloonText:",						"\t\t'Autoformat code without editing. Useful when reading some old/unformatted code. You can configure your own format in the settings browser.'.",						"self addMorph: checkbox"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5930598,					"argumentNames" : [ ]				},				"MessageBrowser" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself registerToAnnouncements.",						"\tself announcer when: SpWidgetBuilt send: #buildUpdateTitle to: self"					],					"body" : [						"super initialize.",						"self registerToAnnouncements.",						"self announcer when: SpWidgetBuilt send: #buildUpdateTitle to: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6188787,					"argumentNames" : [ ]				},				"Categorizer class" : {					"sourceCode" : [						"initialize",						"",						"\tDefault := Protocol unclassified.",						"\tNullCategory := 'no messages' asSymbol"					],					"body" : [						"Default := Protocol unclassified.",						"NullCategory := 'no messages' asSymbol"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1622043,					"argumentNames" : [ ]				},				"SycRemoveMethodCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tremoveStrategy := SycSilentlyRemoveMethodStrategy new"					],					"body" : [						"super initialize.",						"",						"removeStrategy := SycSilentlyRemoveMethodStrategy new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5582363,					"argumentNames" : [ ]				},				"SpButtonPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\taction := [  ].",						"\tstate := false.",						"\taskBeforeChanging := false.",						"",						"\tself whenFontChangedDo: [ self changed: #font ].",						"\tself whenStateChangedDo: [ self changed: #state ].",						"\tself whenMenuChangedDo: [ ",						"\t\tself withAdapterDo: [ :anAdapter | anAdapter updateMenu ] ].",						"\tself property: #askBeforeChanging whenChangedDo: [ :newValue | ",						"\t\tself changed: { ",						"\t\t\t\t#askBeforeChanging:.",						"\t\t\t\tnewValue } ].",						"\tself",						"\t\tproperty: #shortcut",						"\t\twhenChangedDo: [ :newShortcut :oldShortcut | ",						"\t\t\tself unregisterShortcut: oldShortcut.",						"\t\t\tself registerShortcut: newShortcut.",						"\t\t\tself changed: #label ].",						"",						"\tself color: nil"					],					"body" : [						"super initialize.",						"",						"action := [  ].",						"state := false.",						"askBeforeChanging := false.",						"",						"self whenFontChangedDo: [ self changed: #font ].",						"self whenStateChangedDo: [ self changed: #state ].",						"self whenMenuChangedDo: [ ",						"\tself withAdapterDo: [ :anAdapter | anAdapter updateMenu ] ].",						"self property: #askBeforeChanging whenChangedDo: [ :newValue | ",						"\tself changed: { ",						"\t\t\t#askBeforeChanging:.",						"\t\t\tnewValue } ].",						"self",						"\tproperty: #shortcut",						"\twhenChangedDo: [ :newShortcut :oldShortcut | ",						"\t\tself unregisterShortcut: oldShortcut.",						"\t\tself registerShortcut: newShortcut.",						"\t\tself changed: #label ].",						"",						"self color: nil"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3265430,					"argumentNames" : [ ]				},				"Stdio class" : {					"sourceCode" : [						"initialize",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1940896,					"argumentNames" : [ ]				},				"RGTraitExclusion" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\texclusions := self unresolvedValue: self defaultExclusions"					],					"body" : [						"super initialize.",						"",						"exclusions := self unresolvedValue: self defaultExclusions"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6063182,					"argumentNames" : [ ]				},				"Duration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself seconds: 0 nanoSeconds: 0"					],					"body" : [						"super initialize.",						"self seconds: 0 nanoSeconds: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1625643,					"argumentNames" : [ ]				},				"ReAssertEqualSignIntoAssertEqualsRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: 'self assert: ``@object1 = ``@object2'",						"\t\twith: 'self assert: ``@object1 equals: ``@object2'.",						"\tself",						"\t\treplace: 'self deny: ``@object1 = ``@object2'",						"\t\twith: 'self deny: ``@object1 equals: ``@object2'.",						"\tself",						"\t\treplace: 'self assert: ``@object1 == ``@object2'",						"\t\twith: 'self assert: ``@object1 identicalTo: ``@object2'.",						"\tself",						"\t\treplace: 'self deny: ``@object1 == ``@object2'",						"\t\twith: 'self deny: ``@object1 identicalTo: ``@object2'"					],					"body" : [						"super initialize.",						"self",						"\treplace: 'self assert: ``@object1 = ``@object2'",						"\twith: 'self assert: ``@object1 equals: ``@object2'.",						"self",						"\treplace: 'self deny: ``@object1 = ``@object2'",						"\twith: 'self deny: ``@object1 equals: ``@object2'.",						"self",						"\treplace: 'self assert: ``@object1 == ``@object2'",						"\twith: 'self assert: ``@object1 identicalTo: ``@object2'.",						"self",						"\treplace: 'self deny: ``@object1 == ``@object2'",						"\twith: 'self deny: ``@object1 identicalTo: ``@object2'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4926371,					"argumentNames" : [ ]				},				"TKTTaskExecution" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tstate := TKTReadyTaskState new"					],					"body" : [						"super initialize.",						"state := TKTReadyTaskState new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1216028,					"argumentNames" : [ ]				},				"NSSymLogScale" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself constant: 1.",						"\tlinear := self class linear"					],					"body" : [						"super initialize.",						"self constant: 1.",						"linear := self class linear"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6423355,					"argumentNames" : [ ]				},				"StIconBookBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbookIcon := #bookIcon.",						"\tpageIcon := #pageIcon"					],					"body" : [						"super initialize.",						"bookIcon := #bookIcon.",						"pageIcon := #pageIcon"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7383722,					"argumentNames" : [ ]				},				"MCGitBasedNetworkRepository class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\t(Smalltalk classNamed: #SessionManager)",						"\t\tifNotNil: [ :c | ",						"\t\tc default perform: #registerNetworkClassNamed: with: self name ]",						"\t\tifNil: [ Smalltalk addToStartUpList: self ].",						"\tself flushDownloadCache.",						"\tself resetCacheDirectoryIfInvalid"					],					"body" : [						"(Smalltalk classNamed: #SessionManager)",						"\tifNotNil: [ :c | ",						"\tc default perform: #registerNetworkClassNamed: with: self name ]",						"\tifNil: [ Smalltalk addToStartUpList: self ].",						"self flushDownloadCache.",						"self resetCacheDirectoryIfInvalid"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"self initialize"					],					"hash" : 1400490,					"argumentNames" : [ ]				},				"DialogWindowPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttoolbar := OkCancelToolbar new asValueHolder.",						"\ttoolbar whenChangedDo: [ :t | self changed: #toolbar: with: { t } ]"					],					"body" : [						"super initialize.",						"",						"toolbar := OkCancelToolbar new asValueHolder.",						"toolbar whenChangedDo: [ :t | self changed: #toolbar: with: { t } ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1710473,					"argumentNames" : [ ]				},				"SpToolbarPresenterBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself toolbarPresenter: SpToolbarPresenter new"					],					"body" : [						"super initialize.",						"self toolbarPresenter: SpToolbarPresenter new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3194650,					"argumentNames" : [ ]				},				"RSUMLAbstractModelDescriptor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself forPharo"					],					"body" : [						"super initialize.",						"self forPharo"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6577769,					"argumentNames" : [ ]				},				"ZipStore" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\troot := ZipFileSystemDirectory new"					],					"body" : [						"super initialize.",						"root := ZipFileSystemDirectory new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2770969,					"argumentNames" : [ ]				},				"PSMCMergeMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\t| buttons buttonsHeight |",						"\tsuper initialize.",						"\tbuttons := self newButtonsMorph.",						"\tbuttonsHeight := buttons minExtent y.",						"\tself",						"\t\tmerged: false;",						"\t\tpatchMorph: self newPatchMorph;",						"\t\tcodeMorph: self newCodeMorph;",						"\t\tchangeProportionalLayout;",						"\t\taddMorph: self patchMorph",						"\t\tfullFrame: (0 @ 0 corner: 1 @ 0.6) asLayoutFrame;",						"\t\taddMorph: self codeMorph",						"\t\tfullFrame: ((0 @ 0.6 corner: 1 @ 1) asLayoutFrame bottomOffset:",						"\t\t\t\t\t buttonsHeight negated);",						"\t\taddMorph: self newButtonsMorph",						"\t\tfullFrame:",						"\t\t\t((0 @ 1 corner: 1 @ 1) asLayoutFrame topOffset:",						"\t\t\t\t\t buttonsHeight negated);",						"\t\taddPaneSplitters"					],					"body" : [						"| buttons buttonsHeight |",						"super initialize.",						"buttons := self newButtonsMorph.",						"buttonsHeight := buttons minExtent y.",						"self",						"\tmerged: false;",						"\tpatchMorph: self newPatchMorph;",						"\tcodeMorph: self newCodeMorph;",						"\tchangeProportionalLayout;",						"\taddMorph: self patchMorph",						"\tfullFrame: (0 @ 0 corner: 1 @ 0.6) asLayoutFrame;",						"\taddMorph: self codeMorph",						"\tfullFrame: ((0 @ 0.6 corner: 1 @ 1) asLayoutFrame bottomOffset:",						"\t\t\t\t buttonsHeight negated);",						"\taddMorph: self newButtonsMorph",						"\tfullFrame:",						"\t\t((0 @ 1 corner: 1 @ 1) asLayoutFrame topOffset:",						"\t\t\t\t buttonsHeight negated);",						"\taddPaneSplitters"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 4665995,					"argumentNames" : [ ]				},				"StRemoveBindingCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tname: 'Remove binding';",						"\t\tdescription: 'Remove current binding.'"					],					"body" : [						"super initialize.",						"self",						"\tname: 'Remove binding';",						"\tdescription: 'Remove current binding.'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6249909,					"argumentNames" : [ ]				},				"ControlButtonMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself layoutInset: (self theme controlButtonLabelInsetFor: self)"					],					"body" : [						"super initialize.",						"self layoutInset: (self theme controlButtonLabelInsetFor: self)"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2706508,					"argumentNames" : [ ]				},				"ConfigurableHistoryIterator" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tundoStack := Stack new.",						"\tredoStack := Stack new"					],					"body" : [						"super initialize.",						"undoStack := Stack new.",						"redoStack := Stack new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1519474,					"argumentNames" : [ ]				},				"RSAbstractTreeBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trootNodes := RSGroup new"					],					"body" : [						"super initialize.",						"rootNodes := RSGroup new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6459419,					"argumentNames" : [ ]				},				"MenuMorph class" : {					"sourceCode" : [						"initialize",						"",						"\t\"MenuMorph initialize\"",						"",						"\tPushPinImage := nil"					],					"body" : [						"PushPinImage := nil"					],					"isTestMethod" : false,					"category" : "instance creation",					"comment" : [						"MenuMorph initialize"					],					"hash" : 2701536,					"argumentNames" : [ ]				},				"RSAbstractWrapStrategy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself wrapMaxWidth: 200"					],					"body" : [						"super initialize.",						"self wrapMaxWidth: 200"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6460589,					"argumentNames" : [ ]				},				"KMAltModifier" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tidentifier := #a.",						"\tname := 'Alt'"					],					"body" : [						"super initialize.",						"identifier := #a.",						"name := 'Alt'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1574058,					"argumentNames" : [ ]				},				"RSForceLayoutInSpacesBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcolorForLinesInSameSpace := Color blue muchDarker alpha: 0.8.",						"\tcolorForLinesInDifferentSpace := Color blue muchDarker alpha: 0.1.",						"\tcolorScale := NSScale category20.",						"\tlinearScale := NSScale linear",						"\t\t               domain: #( 5 20 );",						"\t\t               range: #( 5 10 )"					],					"body" : [						"super initialize.",						"colorForLinesInSameSpace := Color blue muchDarker alpha: 0.8.",						"colorForLinesInDifferentSpace := Color blue muchDarker alpha: 0.1.",						"colorScale := NSScale category20.",						"linearScale := NSScale linear",						"\t               domain: #( 5 20 );",						"\t               range: #( 5 10 )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3086195,					"argumentNames" : [ ]				},				"Object class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Object initialize\"",						"",						"\tDependentsFields ifNil: [ self initializeDependentsFields ]"					],					"body" : [						"DependentsFields ifNil: [ self initializeDependentsFields ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Object initialize"					],					"hash" : 1600258,					"argumentNames" : [ ]				},				"Symbol class" : {					"sourceCode" : [						"initialize",						"",						"\tself rehash.",						"\tOneCharacterSymbols := nil.",						"\tOneCharacterSymbols := (1 to: 256) collect: [ :i | ",						"\t\t                       (i - 1) asCharacter asSymbol ].",						"",						"\tSessionManager default registerSystemClassNamed: #Symbol"					],					"body" : [						"self rehash.",						"OneCharacterSymbols := nil.",						"OneCharacterSymbols := (1 to: 256) collect: [ :i | ",						"\t                       (i - 1) asCharacter asSymbol ].",						"",						"SessionManager default registerSystemClassNamed: #Symbol"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 1588463,					"argumentNames" : [ ]				},				"MicMicrodownSnippetFactory" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tparserClass := MicroDownParser"					],					"body" : [						"super initialize.",						"parserClass := MicroDownParser"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7376284,					"argumentNames" : [ ]				},				"LazyMorphListMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tchangeTableLayout;",						"\t\tcellPositioning: #topLeft;",						"\t\tcellInset: 2;",						"\t\tvResizing: #shrinkWrap;",						"\t\thResizing: #rigid"					],					"body" : [						"super initialize.",						"self",						"\tchangeTableLayout;",						"\tcellPositioning: #topLeft;",						"\tcellInset: 2;",						"\tvResizing: #shrinkWrap;",						"\thResizing: #rigid"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1382041,					"argumentNames" : [ ]				},				"SpAbstractTextPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttext := ''.",						"\tplaceholder := ''.",						"\tactionToPerform := [ :txt |  ].",						"\treadSelection := [ selection ].",						"\thasUnacceptedEdits := false.",						"\tselection := 1 to: 0.",						"\twantsVisualFeedback := true.",						"\taskBeforeDiscardingEdits := true.",						"",						"\tself registerEvents"					],					"body" : [						"super initialize.",						"",						"text := ''.",						"placeholder := ''.",						"actionToPerform := [ :txt |  ].",						"readSelection := [ selection ].",						"hasUnacceptedEdits := false.",						"selection := 1 to: 0.",						"wantsVisualFeedback := true.",						"askBeforeDiscardingEdits := true.",						"",						"self registerEvents"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3270792,					"argumentNames" : [ ]				},				"LGitExternalEnumerationUInt32 class" : {					"sourceCode" : [						"initialize",						"",						"\tdeclaration := nil.",						"\trepresentationType := nil"					],					"body" : [						"declaration := nil.",						"representationType := nil"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2856999,					"argumentNames" : [ ]				},				"ClyBrowserMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tnavigationStarted := false.",						"\tnavigationHistory := ClyNavigationHistory new.",						"\tplugins := SortedCollection sortBlock: [ :a :b | ",						"\t\t           a priority <= b priority ].",						"\tself extent: self initialExtent.",						"\tself changeProportionalLayout.",						"\tself initializeToolsPanel.",						"\tself initializeNavigationPanel.",						"\tself addPaneSplitters"					],					"body" : [						"super initialize.",						"navigationStarted := false.",						"navigationHistory := ClyNavigationHistory new.",						"plugins := SortedCollection sortBlock: [ :a :b | ",						"\t           a priority <= b priority ].",						"self extent: self initialExtent.",						"self changeProportionalLayout.",						"self initializeToolsPanel.",						"self initializeNavigationPanel.",						"self addPaneSplitters"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5895725,					"argumentNames" : [ ]				},				"SpMockMenu" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tsuper initialize.",						"\tshown := false"					],					"body" : [						"self class initializeSlots: self.",						"super initialize.",						"shown := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3977246,					"argumentNames" : [ ]				},				"MemoryStore" : {					"sourceCode" : [						"initialize",						"",						"\troot := MemoryFileSystemDirectory new"					],					"body" : [						"root := MemoryFileSystemDirectory new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2229236,					"argumentNames" : [ ]				},				"RGOrganization" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself categories: OrderedCollection new"					],					"body" : [						"super initialize.",						"self categories: OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2130458,					"argumentNames" : [ ]				},				"RGContainer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself definedClasses: IdentityDictionary new.",						"\tself methods: IdentityDictionary new.",						"\tself packages: IdentityDictionary new"					],					"body" : [						"super initialize.",						"self definedClasses: IdentityDictionary new.",						"self methods: IdentityDictionary new.",						"self packages: IdentityDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2129615,					"argumentNames" : [ ]				},				"CalendarPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\ttitle: 'Calendar' translated;",						"\t\twhenDaySelectedBlock: [ :aDate |  ]"					],					"body" : [						"super initialize.",						"self",						"\ttitle: 'Calendar' translated;",						"\twhenDaySelectedBlock: [ :aDate |  ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2894375,					"argumentNames" : [ ]				},				"EFFormatter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlineStart := 0.",						"\tself indent: 0.",						"\tself isInCascadeNode: false.",						"\tself initializeCodeStream.",						"\tcontext := DefaultPrettyPrintContext.",						"\tself initializeTemporaryLookAheadCode"					],					"body" : [						"super initialize.",						"lineStart := 0.",						"self indent: 0.",						"self isInCascadeNode: false.",						"self initializeCodeStream.",						"context := DefaultPrettyPrintContext.",						"self initializeTemporaryLookAheadCode"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3901547,					"argumentNames" : [ ]				},				"RBCombinatorVisitor" : {					"sourceCode" : [						"initialize",						"",						"\tcombinations := OrderedCollection new"					],					"body" : [						"combinations := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "visiting",					"comment" : [ ],					"hash" : 4011508,					"argumentNames" : [ ]				},				"ExpanderMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #topToBottom;",						"\t\thResizing: #spaceFill;",						"\t\tvResizing: #spaceFill;",						"\t\ttitleMorph: self defaultTitleMorph;",						"\t\texpanded: false"					],					"body" : [						"super initialize.",						"self",						"\tchangeTableLayout;",						"\tlistDirection: #topToBottom;",						"\thResizing: #spaceFill;",						"\tvResizing: #spaceFill;",						"\ttitleMorph: self defaultTitleMorph;",						"\texpanded: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2750807,					"argumentNames" : [ ]				},				"RubFloatingEditorBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tannouncer := self defaultAnnouncer.",						"\tinitialContents := ''.",						"\tacceptOnCR := true.",						"\tautoAccept := false.",						"\tescapeBlock := [  ].",						"\tfont := StandardFonts defaultFont.",						"\tcustomizeValuable := [  ]"					],					"body" : [						"super initialize.",						"announcer := self defaultAnnouncer.",						"initialContents := ''.",						"acceptOnCR := true.",						"autoAccept := false.",						"escapeBlock := [  ].",						"font := StandardFonts defaultFont.",						"customizeValuable := [  ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2659528,					"argumentNames" : [ ]				},				"PragmaMenuAndShortcutRegistrationItem" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\twithSeparatorAfter := false"					],					"body" : [						"super initialize.",						"",						"withSeparatorAfter := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2461947,					"argumentNames" : [ ]				},				"TaskbarMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tinitializeLayout;",						"\t\tinitializeAppearance;",						"\t\ttasks: #(  );",						"\t\torderedTasks: OrderedCollection new"					],					"body" : [						"super initialize.",						"self",						"\tinitializeLayout;",						"\tinitializeAppearance;",						"\ttasks: #(  );",						"\torderedTasks: OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1410219,					"argumentNames" : [ ]				},				"RBSimpleFormatter class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tFormatAsYouReadPolicy := false"					],					"body" : [						"FormatAsYouReadPolicy := false"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self initialize"					],					"hash" : 1898975,					"argumentNames" : [ ]				},				"TFCallback" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsuccess := true.",						"\tcallbackData := ExternalAddress new.",						"\tparameterHandlers := #(  )"					],					"body" : [						"super initialize.",						"success := true.",						"callbackData := ExternalAddress new.",						"parameterHandlers := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2815330,					"argumentNames" : [ ]				},				"SerialPort" : {					"sourceCode" : [						"initialize",						"",						"\t\"Default port settings.\"",						"",						"\tsuper initialize.",						"\tbaudRate := 9600. \"9600 baud\"",						"\tstopBitsType := 1. \"one stop bit\"",						"\tparityType := 0. \"no parity\"",						"\tdataBits := 8. \"8 bits\"",						"\toutputFlowControlType := 0. \"none\"",						"\tinputFlowControlType := 0. \"none\"",						"\txOnByte := 19. \"ctrl-S\"",						"\txOffByte := 24 \"ctrl-X\""					],					"body" : [						"super initialize.",						"baudRate := 9600. \"9600 baud\"",						"stopBitsType := 1. \"one stop bit\"",						"parityType := 0. \"no parity\"",						"dataBits := 8. \"8 bits\"",						"outputFlowControlType := 0. \"none\"",						"inputFlowControlType := 0. \"none\"",						"xOnByte := 19. \"ctrl-S\"",						"xOffByte := 24 \"ctrl-X\""					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Default port settings."					],					"hash" : 5040988,					"argumentNames" : [ ]				},				"EphemeronRegistry" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tephemeronCollection := IdentitySet new"					],					"body" : [						"super initialize.",						"ephemeronCollection := IdentitySet new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1747481,					"argumentNames" : [ ]				},				"ShortIntegerArray class" : {					"sourceCode" : [						"initialize",						"",						"\tLastSaveOrder := self new: 2.",						"\tLastSaveOrder at: 1 put: 42.",						"\tLastSaveOrder at: 2 put: 13.",						"",						"\tSessionManager default registerSystemClassNamed: self name"					],					"body" : [						"LastSaveOrder := self new: 2.",						"LastSaveOrder at: 1 put: 42.",						"LastSaveOrder at: 2 put: 13.",						"",						"SessionManager default registerSystemClassNamed: self name"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2420552,					"argumentNames" : [ ]				},				"RBTransformation class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeRefactoringOptions"					],					"body" : [						"self initializeRefactoringOptions"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 5259844,					"argumentNames" : [ ]				},				"RSMockShape" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tisFixed := false"					],					"body" : [						"super initialize.",						"isFixed := false"					],					"isTestMethod" : false,					"category" : "actions",					"comment" : [ ],					"hash" : 6536139,					"argumentNames" : [ ]				},				"RGPackage" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\textensionMethods := self unresolvedValue:",						"\t\t                    self defaultExtensionMethods.",						"\tdefinedBehaviors := self unresolvedValue:",						"\t\t                    self defaultDefinedBehaviors.",						"\ttagsForClasses := self unresolvedValue: self defaultTagsForClasses"					],					"body" : [						"super initialize.",						"",						"extensionMethods := self unresolvedValue: self defaultExtensionMethods.",						"definedBehaviors := self unresolvedValue: self defaultDefinedBehaviors.",						"tagsForClasses := self unresolvedValue: self defaultTagsForClasses"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6062445,					"argumentNames" : [ ]				},				"RSClusteringLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tforEachLayout := RSHorizontalLineLayout new.",						"\tclustersLayout := RSFlowLayout new"					],					"body" : [						"super initialize.",						"forEachLayout := RSHorizontalLineLayout new.",						"clustersLayout := RSFlowLayout new"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6551430,					"argumentNames" : [ ]				},				"CharacterScanner" : {					"sourceCode" : [						"initialize",						"",						"\tdestX := destY := leftMargin := 0"					],					"body" : [						"destX := destY := leftMargin := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1516445,					"argumentNames" : [ ]				},				"FTExampleDropDataSource" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself elements: #(  )"					],					"body" : [						"super initialize.",						"self elements: #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1534637,					"argumentNames" : [ ]				},				"MCFileTreeStCypressWriter class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\t\"force initialization of specials ...\"",						"",						"\tspecials := nil"					],					"body" : [						"specials := nil"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"self initialize"					],					"hash" : 1105113,					"argumentNames" : [ ]				},				"ClassAPIHelpBuilder" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initializes the receiver\"",						"",						"\tsuper initialize.",						"\taddSubclasses := false.",						"\taddMethods := true.",						"\tsubclassesAsSeparateTopic := true.",						"\taddMethodsWithoutComment := true"					],					"body" : [						"super initialize.",						"addSubclasses := false.",						"addMethods := true.",						"subclassesAsSeparateTopic := true.",						"addMethodsWithoutComment := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initializes the receiver"					],					"hash" : 3804451,					"argumentNames" : [ ]				},				"RSQuadTreeF" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tleaf := true"					],					"body" : [						"super initialize.",						"",						"leaf := true"					],					"isTestMethod" : false,					"category" : "initialize-release",					"comment" : [ ],					"hash" : 6536648,					"argumentNames" : [ ]				},				"TraitedMetaclass" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlocalMethods := self emptyMethodDictionary.",						"\tcomposition := TaEmptyComposition new.",						"",						"\tbaseComposition := TaEmptyComposition new.",						"\tbaseLocalMethods := self emptyMethodDictionary"					],					"body" : [						"super initialize.",						"localMethods := self emptyMethodDictionary.",						"composition := TaEmptyComposition new.",						"",						"baseComposition := TaEmptyComposition new.",						"baseLocalMethods := self emptyMethodDictionary"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2095396,					"argumentNames" : [ ]				},				"SpExecutableLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tchildren := OrderedDictionary new"					],					"body" : [						"super initialize.",						"children := OrderedDictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2940441,					"argumentNames" : [ ]				},				"RBPragmaEnvironment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tkeywords := IdentitySet new.",						"\tcondition := [ :pragma | true ]"					],					"body" : [						"super initialize.",						"keywords := IdentitySet new.",						"condition := [ :pragma | true ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3931220,					"argumentNames" : [ ]				},				"AthensFontDescription" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfamily := 'monospace'.",						"\toptions := Dictionary new.",						"\toptions",						"\t\tat: #weight put: #normal;",						"\t\tat: #slant put: #normal.",						"\tsize := 14"					],					"body" : [						"super initialize.",						"family := 'monospace'.",						"options := Dictionary new.",						"options",						"\tat: #weight put: #normal;",						"\tat: #slant put: #normal.",						"size := 14"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3881933,					"argumentNames" : [ ]				},				"SpPaginatorMorph" : {					"sourceCode" : [						"initialize",						"",						"\tself class initializeSlots: self.",						"\tsuper initialize.",						"\tself",						"\t\tvResizing: #shrinkWrap;",						"\t\thResizing: #shrinkWrap.",						"",						"\tself addMorphBack: (selectionMorph := self newSelectionMorph).",						"\tself addMorphBack: (pagesMorph := self newPagesMorph).",						"",						"\tself numberOfPagesShown: self class defaultNumberOfPagesShown.",						"\t\"We select the first page first\"",						"\tself basicSelectPage: 1"					],					"body" : [						"self class initializeSlots: self.",						"super initialize.",						"self",						"\tvResizing: #shrinkWrap;",						"\thResizing: #shrinkWrap.",						"",						"self addMorphBack: (selectionMorph := self newSelectionMorph).",						"self addMorphBack: (pagesMorph := self newPagesMorph).",						"",						"self numberOfPagesShown: self class defaultNumberOfPagesShown.",						"\"We select the first page first\"",						"self basicSelectPage: 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3362204,					"argumentNames" : [ ]				},				"StMicrodownClassAPIHelpBuilder" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initializes the receiver\"",						"",						"\tsuper initialize.",						"\taddSubclasses := false.",						"\taddMethods := true.",						"\tsubclassesAsSeparateTopic := true.",						"\taddMethodsWithoutComment := true.",						"\ticonBuilder := StIconClassBuilder new"					],					"body" : [						"super initialize.",						"addSubclasses := false.",						"addMethods := true.",						"subclassesAsSeparateTopic := true.",						"addMethodsWithoutComment := true.",						"iconBuilder := StIconClassBuilder new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initializes the receiver"					],					"hash" : 7383741,					"argumentNames" : [ ]				},				"NSLinearScale" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trange := domain := #( 0 1 ).",						"\tclamp := false.",						"\tinterpolate := NSInterpolator.",						"\tself rescale"					],					"body" : [						"super initialize.",						"range := domain := #( 0 1 ).",						"clamp := false.",						"interpolate := NSInterpolator.",						"self rescale"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6421608,					"argumentNames" : [ ]				},				"GeneralScrollBarMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself showWhenNeeded"					],					"body" : [						"super initialize.",						"self showWhenNeeded"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2729065,					"argumentNames" : [ ]				},				"SlotExamplePerson" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself class initializeSlots: self"					],					"body" : [						"super initialize.",						"self class initializeSlots: self"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4261210,					"argumentNames" : [ ]				},				"RBFindAndReplaceRefactoring" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\toccurrences := 0"					],					"body" : [						"super initialize.",						"occurrences := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3952593,					"argumentNames" : [ ]				},				"CmCommandGroup" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself name: self class defaultName.",						"\tself description: self class defaultDescription.",						"\tentries := OrderedCollection new"					],					"body" : [						"super initialize.",						"self name: self class defaultName.",						"self description: self class defaultDescription.",						"entries := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1632399,					"argumentNames" : [ ]				},				"ClyBrowserToolbarItemMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\tchangeTableLayout;",						"\t\tlistDirection: #leftToRight;",						"\t\thResizing: #shrinkWrap;",						"\t\tvResizing: #shrinkWrap;",						"\t\tcellInset: 4"					],					"body" : [						"super initialize.",						"self",						"\tchangeTableLayout;",						"\tlistDirection: #leftToRight;",						"\thResizing: #shrinkWrap;",						"\tvResizing: #shrinkWrap;",						"\tcellInset: 4"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5886595,					"argumentNames" : [ ]				},				"PanelMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\tclipSubmorphs: true;",						"\t\t\"stop being grabbed\"beSticky"					],					"body" : [						"super initialize.",						"self",						"\tclipSubmorphs: true;",						"\t\"stop being grabbed\"beSticky"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 2748040,					"argumentNames" : [ ]				},				"MockSocketStream" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself resetInStream.",						"\tself resetOutStream"					],					"body" : [						"super initialize.",						"self resetInStream.",						"self resetOutStream"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4335907,					"argumentNames" : [ ]				},				"ClyDesiredSelection" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tisSameAsCurrent := true"					],					"body" : [						"super initialize.",						"isSameAsCurrent := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5901257,					"argumentNames" : [ ]				},				"RadioButtonGroup" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tbuttons := OrderedCollection new.",						"\tcanDeselectByClick := false asValueHolder.",						"\tcurrentlyActivated := nil asValueHolder.",						"",						"\tself whenCanDeselectByClickChanged: [ :aBoolean | ",						"\t\tbuttons do: [ :each | each canDeselectByClick: aBoolean ] ]"					],					"body" : [						"super initialize.",						"",						"buttons := OrderedCollection new.",						"canDeselectByClick := false asValueHolder.",						"currentlyActivated := nil asValueHolder.",						"",						"self whenCanDeselectByClickChanged: [ :aBoolean | ",						"\tbuttons do: [ :each | each canDeselectByClick: aBoolean ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1737024,					"argumentNames" : [ ]				},				"MorphTreeMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"initialize the state of the receiver\"",						"",						"\tsuper initialize.",						"\tcolumnColors := Array with: Color transparent with: Color transparent.",						"\trowColors := Array",						"\t\t             with: self theme backgroundColor",						"\t\t             with: self theme backgroundColor.",						"\tself borderWidth: 0"					],					"body" : [						"super initialize.",						"columnColors := Array with: Color transparent with: Color transparent.",						"rowColors := Array",						"\t             with: self theme backgroundColor",						"\t             with: self theme backgroundColor.",						"self borderWidth: 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"initialize the state of the receiver"					],					"hash" : 2722475,					"argumentNames" : [ ]				},				"AthensBezierConverter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdistanceTolerance := 0.5.",						"\tangleTolerance := 0.1"					],					"body" : [						"super initialize.",						"distanceTolerance := 0.5.",						"angleTolerance := 0.1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3854512,					"argumentNames" : [ ]				},				"RSDarkUMLClassRenderer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdarkColor := Color r: 0.130 g: 0.130 b: 0.130.",						"\tself",						"\t\tboxColor: darkColor;",						"\t\ttextColor: Color white.",						"\tself marker shape color: darkColor.",						"\tself border",						"\t\twidth: 2;",						"\t\tcolor: Color white"					],					"body" : [						"super initialize.",						"darkColor := Color r: 0.130 g: 0.130 b: 0.130.",						"self",						"\tboxColor: darkColor;",						"\ttextColor: Color white.",						"self marker shape color: darkColor.",						"self border",						"\twidth: 2;",						"\tcolor: Color white"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3067095,					"argumentNames" : [ ]				},				"FuzzyMatcher" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpattern := lowercasePattern := ''.",						"\tindexes := #(  )"					],					"body" : [						"super initialize.",						"pattern := lowercasePattern := ''.",						"indexes := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2484129,					"argumentNames" : [ ]				},				"KMComposedModifier" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmodifiers := OrderedCollection new"					],					"body" : [						"super initialize.",						"modifiers := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1574939,					"argumentNames" : [ ]				},				"IceTipCheckoutModel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcheckoutStrategies := (IceCheckoutStrategy allSubclasses sorted: [ ",						"\t\t                       :a ",						"\t\t                       :b | a order < b order ]) collect: #new.",						"\tcheckoutStrategy := checkoutStrategies first"					],					"body" : [						"super initialize.",						"checkoutStrategies := (IceCheckoutStrategy allSubclasses sorted: [ :a :b | ",						"\t                       a order < b order ]) collect: #new.",						"checkoutStrategy := checkoutStrategies first"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7064112,					"argumentNames" : [ ]				},				"SpCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself configureAsToolbarButton"					],					"body" : [						"super initialize.",						"self configureAsToolbarButton"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3190889,					"argumentNames" : [ ]				},				"CoHeuristicBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\theuristics := OrderedCollection new"					],					"body" : [						"super initialize.",						"heuristics := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6111769,					"argumentNames" : [ ]				},				"RSXmasFrontier" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfinished := false.",						"\tthickness := SharedRandom globalGenerator rsNext: 10 and: 20"					],					"body" : [						"super initialize.",						"finished := false.",						"thickness := SharedRandom globalGenerator rsNext: 10 and: 20"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3090799,					"argumentNames" : [ ]				},				"TransferMorph class" : {					"sourceCode" : [						"initialize",						"",						"\t\"TransferMorph initialize\"",						"",						"\tself initIcons"					],					"body" : [						"self initIcons"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"TransferMorph initialize"					],					"hash" : 1408324,					"argumentNames" : [ ]				},				"MetacelloVisitedPackages" : {					"sourceCode" : [						"initialize",						"",						"\tgroups := Set new.",						"\tpackages := Set new.",						"\tprojects := Set new"					],					"body" : [						"groups := Set new.",						"packages := Set new.",						"projects := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1127077,					"argumentNames" : [ ]				},				"MCConfiguration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tlog := DefaultLog"					],					"body" : [						"super initialize.",						"log := DefaultLog"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2253727,					"argumentNames" : [ ]				},				"FFICallout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\toptions := Dictionary new"					],					"body" : [						"super initialize.",						"options := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1284122,					"argumentNames" : [ ]				},				"RGTraitComposition" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\ttransformations := self unresolvedValue: self defaultTransformations"					],					"body" : [						"super initialize.",						"",						"transformations := self unresolvedValue: self defaultTransformations"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6061645,					"argumentNames" : [ ]				},				"AthensWorldMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tworldState := AthensWorldState new"					],					"body" : [						"super initialize.",						"worldState := AthensWorldState new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4211275,					"argumentNames" : [ ]				},				"ClyMainItemCellMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tfullIndentation := false.",						"\tself cellInset: 2 @ 0"					],					"body" : [						"super initialize.",						"fullIndentation := false.",						"self cellInset: 2 @ 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5895864,					"argumentNames" : [ ]				},				"RGTraitV2DescriptionStrategy" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tlayout := self unresolvedValue: self defaultLayout.",						"\tself owner environment backend createUnresolvedClassGroupFor:",						"\t\tself owner"					],					"body" : [						"super initialize.",						"",						"layout := self unresolvedValue: self defaultLayout.",						"self owner environment backend createUnresolvedClassGroupFor:",						"\tself owner"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6043308,					"argumentNames" : [ ]				},				"HSVAColorSelectorMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tsuper initialize.",						"\tself",						"\t\textent: 180 @ 168;",						"\t\tchangeTableLayout;",						"\t\tcellInset: 4;",						"\t\taMorph: self newAColorMorph;",						"\t\thsvMorph: self newHSVColorMorph;",						"\t\taddMorphBack: self hsvMorph;",						"\t\taddMorphBack: self aMorph.",						"\tself aMorph color: self hsvMorph selectedColor"					],					"body" : [						"super initialize.",						"self",						"\textent: 180 @ 168;",						"\tchangeTableLayout;",						"\tcellInset: 4;",						"\taMorph: self newAColorMorph;",						"\thsvMorph: self newHSVColorMorph;",						"\taddMorphBack: self hsvMorph;",						"\taddMorphBack: self aMorph.",						"self aMorph color: self hsvMorph selectedColor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1375387,					"argumentNames" : [ ]				},				"InstructionStream class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize an array of special constants returned by single-bytecode returns.\"",						"",						"\tSpecialConstants := (Array with: true with: false with: nil)",						"\t                    , (Array",						"\t\t\t                     with: -1",						"\t\t\t                     with: 0",						"\t\t\t                     with: 1",						"\t\t\t                     with: 2)",						"\t\"InstructionStream initialize.\""					],					"body" : [						"SpecialConstants := (Array with: true with: false with: nil) , (Array",						"\t                     with: -1",						"\t                     with: 0",						"\t                     with: 1",						"\t                     with: 2)",						"\"InstructionStream initialize.\""					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"Initialize an array of special constants returned by single-bytecode returns."					],					"hash" : 1806482,					"argumentNames" : [ ]				},				"RSDraggableCanvasInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself all.",						"\tisMoving := false"					],					"body" : [						"super initialize.",						"self all.",						"isMoving := false"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 6517379,					"argumentNames" : [ ]				},				"ReInvocationSequenceRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tpreConditions := Set new.",						"\tpostConditions := Set new"					],					"body" : [						"super initialize.",						"",						"preConditions := Set new.",						"postConditions := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2516338,					"argumentNames" : [ ]				},				"RSForceLayoutSteppingInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself draggable"					],					"body" : [						"super initialize.",						"self draggable"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6563945,					"argumentNames" : [ ]				},				"RbScriptingSetBeforeModel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself",						"\t\tadd: #( beForSmalltalkScripting beForSmalltalkCode )",						"\t\trequiresPreSend: #model:"					],					"body" : [						"super initialize.",						"",						"self",						"\tadd: #( beForSmalltalkScripting beForSmalltalkCode )",						"\trequiresPreSend: #model:"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4934130,					"argumentNames" : [ ]				},				"MicRichTextComposer class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tself offline: false.",						"\tself notRendering: false.",						"\tself resetCache.",						"\tself headerFontSizes: #( 18 14 12 11 10 10 ).",						"\tself initializeStylers.",						"\tself captureErrors: true"					],					"body" : [						"self offline: false.",						"self notRendering: false.",						"self resetCache.",						"self headerFontSizes: #( 18 14 12 11 10 10 ).",						"self initializeStylers.",						"self captureErrors: true"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"self initialize"					],					"hash" : 7379279,					"argumentNames" : [ ]				},				"ChangeSet class" : {					"sourceCode" : [						"initialize",						"",						"\tAllChangeSets ifNil: [ AllChangeSets := OrderedCollection new ].",						"\tself defaultChangeSetDirectoryName: nil.",						"\tself gatherChangeSets"					],					"body" : [						"AllChangeSets ifNil: [ AllChangeSets := OrderedCollection new ].",						"self defaultChangeSetDirectoryName: nil.",						"self gatherChangeSets"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2115250,					"argumentNames" : [ ]				},				"ClassFactoryForTestCase" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcreatedClasses := IdentitySet new.",						"\tcreatedTraits := IdentitySet new.",						"\tcreatedSilently := IdentitySet new"					],					"body" : [						"super initialize.",						"createdClasses := IdentitySet new.",						"createdTraits := IdentitySet new.",						"createdSilently := IdentitySet new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1146572,					"argumentNames" : [ ]				},				"ReGuardingClauseRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself addMatchingMethod: '`@MethodName: `@args ",						"\t\t\t\t| `@temps | ",						"\t\t\t\t`@.Statements. ",						"\t\t\t\t`@condition ifTrue: [| `@BlockTemps | `.Statement1. `.Statement2. `@.BStatements]'.",						"\tself addMatchingMethod: '`@MethodName ",						"\t\t\t\t`@.Statements. ",						"\t\t\t\t`@condition ifFalse: [| `@BlockTemps | `.Statement1. `.Statement2. `@.BStatements]'"					],					"body" : [						"super initialize.",						"self addMatchingMethod: '`@MethodName: `@args ",						"\t\t\t\t| `@temps | ",						"\t\t\t\t`@.Statements. ",						"\t\t\t\t`@condition ifTrue: [| `@BlockTemps | `.Statement1. `.Statement2. `@.BStatements]'.",						"self addMatchingMethod: '`@MethodName ",						"\t\t\t\t`@.Statements. ",						"\t\t\t\t`@condition ifFalse: [| `@BlockTemps | `.Statement1. `.Statement2. `@.BStatements]'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2520219,					"argumentNames" : [ ]				},				"SystemVersion" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\ttype := 'Pharo'.",						"\tmajor := 0.",						"\tminor := 0.",						"\tpatch := 0.",						"\tsuffix := ''.",						"\tbuild := self class invalidBuildNumber.",						"\tcommitHash := ''.",						"\tdate := Date today"					],					"body" : [						"super initialize.",						"type := 'Pharo'.",						"major := 0.",						"minor := 0.",						"patch := 0.",						"suffix := ''.",						"build := self class invalidBuildNumber.",						"commitHash := ''.",						"date := Date today"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1949176,					"argumentNames" : [ ]				},				"LGitAbstractError" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself messageText: LGitError lastMessage"					],					"body" : [						"super initialize.",						"self messageText: LGitError lastMessage"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6855986,					"argumentNames" : [ ]				},				"ISOLanguageDefinition class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tISO3Table := nil.",						"\tISO2Table := nil"					],					"body" : [						"ISO3Table := nil.",						"ISO2Table := nil"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"self initialize"					],					"hash" : 1561653,					"argumentNames" : [ ]				},				"ClyProjectManagerRegistry" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tprojectManagers := OrderedCollection new"					],					"body" : [						"super initialize.",						"projectManagers := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 5699865,					"argumentNames" : [ ]				},				"JPEGReadStream class" : {					"sourceCode" : [						"initialize",						"",						"\t\"JPEGReadStream initialize\"",						"",						"\tMaxBits := 16"					],					"body" : [						"MaxBits := 16"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"JPEGReadStream initialize"					],					"hash" : 1356483,					"argumentNames" : [ ]				},				"ComposablePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself initializePrivateAnnouncer.",						"\tself initializePrivateValueHolders.",						"",						"\tself initializePrivateHooks.",						"",						"\tself initializePrivateAnnouncements"					],					"body" : [						"super initialize.",						"",						"self initializePrivateAnnouncer.",						"self initializePrivateValueHolders.",						"",						"self initializePrivateHooks.",						"",						"self initializePrivateAnnouncements"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1672858,					"argumentNames" : [ ]				},				"RBBasicLintRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself resetResult"					],					"body" : [						"super initialize.",						"self resetResult"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2489961,					"argumentNames" : [ ]				},				"RSKeyNavigationCanvasInteraction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsteps := Set new.",						"\tspeed := 1"					],					"body" : [						"super initialize.",						"steps := Set new.",						"speed := 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6517815,					"argumentNames" : [ ]				},				"RSPolygon" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpoints := #(  )"					],					"body" : [						"super initialize.",						"points := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6472162,					"argumentNames" : [ ]				},				"ReEqualNilRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: '``@object = nil' with: '``@object isNil';",						"\t\treplace: '``@object == nil' with: '``@object isNil';",						"\t\treplace: '``@object ~= nil' with: '``@object notNil';",						"\t\treplace: '``@object ~~ nil' with: '``@object notNil'"					],					"body" : [						"super initialize.",						"self",						"\treplace: '``@object = nil' with: '``@object isNil';",						"\treplace: '``@object == nil' with: '``@object isNil';",						"\treplace: '``@object ~= nil' with: '``@object notNil';",						"\treplace: '``@object ~~ nil' with: '``@object notNil'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4732557,					"argumentNames" : [ ]				},				"MCServerRegistry" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tregistry := Dictionary new"					],					"body" : [						"super initialize.",						"registry := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2170393,					"argumentNames" : [ ]				},				"Process" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tterminating := false"					],					"body" : [						"super initialize.",						"",						"terminating := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1590223,					"argumentNames" : [ ]				},				"RBDeprecateClassRefactoring" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tshouldFixSubclasses := true.",						"\tshouldCopyExtensions := true.",						"\tshouldRemoveExtensions := true"					],					"body" : [						"super initialize.",						"",						"shouldFixSubclasses := true.",						"shouldCopyExtensions := true.",						"shouldRemoveExtensions := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3941895,					"argumentNames" : [ ]				},				"IceCritiquesVisitor" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcritiques := Set new"					],					"body" : [						"super initialize.",						"critiques := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7004186,					"argumentNames" : [ ]				},				"ProgressBarMorph class" : {					"sourceCode" : [						"initialize",						"",						"\tself defaultWidth: 120.",						"\tself defaultHeight: 10"					],					"body" : [						"self defaultWidth: 120.",						"self defaultHeight: 10"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2753926,					"argumentNames" : [ ]				},				"LGitId class" : {					"sourceCode" : [						"initialize",						"",						"\tByte20 := FFITypeArray ofType: 'uint8' size: 20"					],					"body" : [						"Byte20 := FFITypeArray ofType: 'uint8' size: 20"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4198610,					"argumentNames" : [ ]				},				"OSWindowAttributes class" : {					"sourceCode" : [						"initialize",						"",						"\t\"",						"\tself initialize",						"\t\"",						"",						"\tDefaultPosition := 0 @ 0.",						"\tDefaultExtent := 150 @ 150.",						"\tDefaultFullscreen := false.",						"\tDefaultWindowCentered := false.",						"\tDefaultTitle := 'New Window'.",						"\tDefaultVisible := true.",						"",						"\tDefaultBorderless := false.",						"\tDefaultResizable := true.",						"\tDefaultMaximized := false.",						"\tDefaultMinimized := false"					],					"body" : [						"DefaultPosition := 0 @ 0.",						"DefaultExtent := 150 @ 150.",						"DefaultFullscreen := false.",						"DefaultWindowCentered := false.",						"DefaultTitle := 'New Window'.",						"DefaultVisible := true.",						"",						"DefaultBorderless := false.",						"DefaultResizable := true.",						"DefaultMaximized := false.",						"DefaultMinimized := false"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"",						"\tself initialize",						"\t"					],					"hash" : 4840733,					"argumentNames" : [ ]				},				"MultistateButtonMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver.\"",						"",						"\tself stateMap: KeyedTree new.",						"\tenabled := true.",						"\tactive := true.",						"\tover := false.",						"\tdown := false.",						"\tsuper initialize"					],					"body" : [						"self stateMap: KeyedTree new.",						"enabled := true.",						"active := true.",						"over := false.",						"down := false.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver."					],					"hash" : 1384950,					"argumentNames" : [ ]				},				"Unicode class" : {					"sourceCode" : [						"initialize",						"",						"\t\"This class should be initialized using the textual unicode definitions that can be found in",						"\thttp://www.unicode.org/Public/UNIDATA/UnicodeData.txt",						"\thttp://www.unicode.org/Public/UNIDATA/CaseFolding.txt",						"\t",						"\tTo do that, this class posesses the class side methods:",						"\t#parseCaseMappingFrom:",						"\t#parseUnicodeDataFrom:",						"\t",						"\tThe initialization order is:",						"\t1) tag constants",						"\t2) unicode data",						"\t3) case mappings",						"\t\"",						"",						"\t\"If you are in a full image, you can try the following Zinc scripts to download the file automatically:",						"\t",						"\tUIManager default informUserDuring: [ :bar| | result |",						"            bar label: 'Downloading Unicode data'.",						"            (result := ZnEasy get: 'http://www.unicode.org/Public/UNIDATA/UnicodeData.txt') isSuccess",						"                ifFalse: [ ^ self error: 'Download failed' ].",						"            bar label: 'Updating Case Mappings'.",						"            self parseUnicodeDataFrom: result contents readStream ].",						"",						"\tUIManager default informUserDuring: [ :bar| | result |",						"\t\tbar label: 'Downloading Unicode case mappings data'.",						"\t\t(result := ZnEasy get: 'http://www.unicode.org/Public/UNIDATA/CaseFolding.txt') isSuccess",						"\t\t\tifFalse: [ ^ self error: 'Download failed' ].",						"\t\tbar label: 'Updating Case Mappings'.",						"\t\tself parseCaseMappingFrom: result contents readStream ].",						"\t\"",						"",						"\tEncodedCharSet declareEncodedCharSet: self atIndex: 0 + 1.",						"\tEncodedCharSet declareEncodedCharSet: self atIndex: 256"					],					"body" : [						"EncodedCharSet declareEncodedCharSet: self atIndex: 0 + 1.",						"EncodedCharSet declareEncodedCharSet: self atIndex: 256"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"This class should be initialized using the textual unicode definitions that can be found in",						"\thttp://www.unicode.org/Public/UNIDATA/UnicodeData.txt",						"\thttp://www.unicode.org/Public/UNIDATA/CaseFolding.txt",						"\t",						"\tTo do that, this class posesses the class side methods:",						"\t#parseCaseMappingFrom:",						"\t#parseUnicodeDataFrom:",						"\t",						"\tThe initialization order is:",						"\t1) tag constants",						"\t2) unicode data",						"\t3) case mappings",						"\t"					],					"hash" : 1875352,					"argumentNames" : [ ]				},				"SDL2Types class" : {					"sourceCode" : [						"initialize",						"",						"\t\"",						"\tself initialize",						"\t\"",						"",						"\tUint8 := #uint8.",						"\tInt8 := #int8.",						"\tSint8 := #int8.",						"\tUint16 := #uint16.",						"\tInt16 := #int16.",						"\tSint16 := #int16.",						"\tUint32 := #uint32.",						"\tInt32 := #int32.",						"\tSint32 := #int32.",						"\tUint64 := #uint64.",						"\tInt64 := #int64.",						"\tSint64 := #int64.",						"",						"\tSDL_Keycode := Sint32.",						"\tSDL_Keymod := Uint32.",						"\tSDL_Scancode := Uint32.",						"\tSDL_BlendMode := Uint32.",						"\tSDL_BlendFactor := Uint32.",						"\tSDL_BlendOperation := Uint32.",						"",						"\tSDL_GLattr := #int.",						"\tSDL_AudioDeviceID := #uint32.",						"\tSDL_AudioFormat := #uint16.",						"\tSDL_AudioCallback := #'void*' \"FIXME: use the proper type here.\""					],					"body" : [						"Uint8 := #uint8.",						"Int8 := #int8.",						"Sint8 := #int8.",						"Uint16 := #uint16.",						"Int16 := #int16.",						"Sint16 := #int16.",						"Uint32 := #uint32.",						"Int32 := #int32.",						"Sint32 := #int32.",						"Uint64 := #uint64.",						"Int64 := #int64.",						"Sint64 := #int64.",						"",						"SDL_Keycode := Sint32.",						"SDL_Keymod := Uint32.",						"SDL_Scancode := Uint32.",						"SDL_BlendMode := Uint32.",						"SDL_BlendFactor := Uint32.",						"SDL_BlendOperation := Uint32.",						"",						"SDL_GLattr := #int.",						"SDL_AudioDeviceID := #uint32.",						"SDL_AudioFormat := #uint16.",						"SDL_AudioCallback := #'void*' \"FIXME: use the proper type here.\""					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"",						"\tself initialize",						"\t"					],					"hash" : 4861508,					"argumentNames" : [ ]				},				"SpecAdapterBindings" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tbindings := Dictionary new.",						"\tself initializeBindings"					],					"body" : [						"super initialize.",						"",						"bindings := Dictionary new.",						"self initializeBindings"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 1737427,					"argumentNames" : [ ]				},				"MCAncestry" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tancestors := #(  ).",						"\tstepChildren := #(  )"					],					"body" : [						"super initialize.",						"ancestors := #(  ).",						"stepChildren := #(  )"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1059736,					"argumentNames" : [ ]				},				"FT2Constants class" : {					"sourceCode" : [						"initialize",						"",						"\t\"FT2Constants initialize\"",						"",						"\tLoadDefault := 0.",						"\tLoadNoScale := 1.",						"\tLoadNoHinting := 2.",						"\tLoadRender := 4.",						"\tLoadNoBitmap := 8.",						"\tLoadVerticalLayout := 16.",						"\tLoadForceAutohint := 32.",						"\tLoadCropBitmap := 64.",						"\tLoadPedantic := 128.",						"\tLoadIgnoreGlobalAdvanceWidth := 512.",						"\tLoadNoRecurse := 1024.",						"\tLoadIgnoreTransform := 2048.",						"\tLoadMonochrome := 4096.",						"\tLoadLinearDesign := 8192.",						"\tLoadSbitsOnly := 16384.",						"\tLoadNoAutohint := 32768.",						"",						"\t\"One of these flags may be OR'd with the above.\"",						"\tLoadTargetNormal := 0.",						"\tLoadTargetLight := 1 bitShift: 16.",						"\tLoadTargetMono := 2 bitShift: 16.",						"\tLoadTargetLCD := 3 bitShift: 16.",						"\tLoadTargetLCDV := 4 bitShift: 16.",						"",						"\t\"rendering mode constants\"",						"\tRenderModeNormal := 0.",						"\tRenderModeLight := 1.",						"\tRenderModeMono := 2.",						"\tRenderModeLCD := 3.",						"\tRenderModeLCDV := 4.",						"",						"\t\"pixel mode constants\"",						"\tPixelModeNone := 0.",						"\tPixelModeMono := 1.",						"\tPixelModeGray := 2.",						"\tPixelModeGray2 := 3.",						"\tPixelModeGray4 := 4.",						"\tPixelModeLCD := 5.",						"\tPixelModeLCDV := 6.",						"",						"\tStyleFlagItalic := 1.",						"\tStyleFlagBold := 2"					],					"body" : [						"LoadDefault := 0.",						"LoadNoScale := 1.",						"LoadNoHinting := 2.",						"LoadRender := 4.",						"LoadNoBitmap := 8.",						"LoadVerticalLayout := 16.",						"LoadForceAutohint := 32.",						"LoadCropBitmap := 64.",						"LoadPedantic := 128.",						"LoadIgnoreGlobalAdvanceWidth := 512.",						"LoadNoRecurse := 1024.",						"LoadIgnoreTransform := 2048.",						"LoadMonochrome := 4096.",						"LoadLinearDesign := 8192.",						"LoadSbitsOnly := 16384.",						"LoadNoAutohint := 32768.",						"",						"\"One of these flags may be OR'd with the above.\"",						"LoadTargetNormal := 0.",						"LoadTargetLight := 1 bitShift: 16.",						"LoadTargetMono := 2 bitShift: 16.",						"LoadTargetLCD := 3 bitShift: 16.",						"LoadTargetLCDV := 4 bitShift: 16.",						"",						"\"rendering mode constants\"",						"RenderModeNormal := 0.",						"RenderModeLight := 1.",						"RenderModeMono := 2.",						"RenderModeLCD := 3.",						"RenderModeLCDV := 4.",						"",						"\"pixel mode constants\"",						"PixelModeNone := 0.",						"PixelModeMono := 1.",						"PixelModeGray := 2.",						"PixelModeGray2 := 3.",						"PixelModeGray4 := 4.",						"PixelModeLCD := 5.",						"PixelModeLCDV := 6.",						"",						"StyleFlagItalic := 1.",						"StyleFlagBold := 2"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"FT2Constants initialize"					],					"hash" : 2693721,					"argumentNames" : [ ]				},				"RePropertyAction" : {					"sourceCode" : [						"initialize",						"",						"\ticon := (Form extent: 16 @ 16 depth: 32) fillColor: Color green.",						"\tdescription := ''.",						"\taction := [ :critic :entity |  ]"					],					"body" : [						"icon := (Form extent: 16 @ 16 depth: 32) fillColor: Color green.",						"description := ''.",						"action := [ :critic :entity |  ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2531689,					"argumentNames" : [ ]				},				"FilteredMorphTreeModel" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpatternModel := RubScrolledTextModel new.",						"\tpatternModel announcer",						"\t\twhen: RubTextUpdatedInModel",						"\t\tsend: #whenPatternChanged:",						"\t\tto: self.",						"\tautoAccept := true.",						"\tghostString := ''"					],					"body" : [						"super initialize.",						"patternModel := RubScrolledTextModel new.",						"patternModel announcer",						"\twhen: RubTextUpdatedInModel",						"\tsend: #whenPatternChanged:",						"\tto: self.",						"autoAccept := true.",						"ghostString := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1477142,					"argumentNames" : [ ]				},				"PoolDefiner class" : {					"sourceCode" : [						"initialize",						"",						"\t\"self initialize\"",						"",						"\tGloups := 42.",						"\tAnAuthor := 'Ducasse'"					],					"body" : [						"Gloups := 42.",						"AnAuthor := 'Ducasse'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"self initialize"					],					"hash" : 4452094,					"argumentNames" : [ ]				},				"RBReplaceRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tverificationBlock := [ :aNode | true ]"					],					"body" : [						"super initialize.",						"verificationBlock := [ :aNode | true ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1948809,					"argumentNames" : [ ]				},				"ZnNewLineWriterStream" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tcr := Character cr.",						"\tlf := Character lf.",						"\tself forPlatformLineEnding"					],					"body" : [						"super initialize.",						"cr := Character cr.",						"lf := Character lf.",						"self forPlatformLineEnding"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [ ],					"hash" : 2009447,					"argumentNames" : [ ]				},				"ReMinMaxRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: '``@a < ``@b ifTrue: [``@a] ifFalse: [``@b]'",						"\t\twith: '``@a min: ``@b';",						"\t\treplace: '``@a <= ``@b ifTrue: [``@a] ifFalse: [``@b]'",						"\t\twith: '``@a min: ``@b';",						"\t\treplace: '``@a > ``@b ifTrue: [``@a] ifFalse: [``@b]'",						"\t\twith: '``@a max: ``@b';",						"\t\treplace: '``@a >= ``@b ifTrue: [``@a] ifFalse: [``@b]'",						"\t\twith: '``@a max: ``@b';",						"\t\treplace: '``@a < ``@b ifTrue: [``@b] ifFalse: [``@a]'",						"\t\twith: '``@a max: ``@b';",						"\t\treplace: '``@a <= ``@b ifTrue: [``@b] ifFalse: [``@a]'",						"\t\twith: '``@a max: ``@b';",						"\t\treplace: '``@a > ``@b ifTrue: [``@b] ifFalse: [``@a]'",						"\t\twith: '``@a min: ``@b';",						"\t\treplace: '``@a >= ``@b ifTrue: [``@b] ifFalse: [``@a]'",						"\t\twith: '``@a min: ``@b';",						"\t\treplace: '`a < ``@b ifTrue: [`a := ``@b]'",						"\t\twith: '`a := `a max: ``@b';",						"\t\treplace: '`a <= ``@b ifTrue: [`a := ``@b]'",						"\t\twith: '`a := `a max: ``@b';",						"\t\treplace: '`a < ``@b ifFalse: [`a := ``@b]'",						"\t\twith: '`a := `a min: ``@b';",						"\t\treplace: '`a <= ``@b ifFalse: [`a := ``@b]'",						"\t\twith: '`a := `a min: ``@b';",						"\t\treplace: '`a > ``@b ifTrue: [`a := ``@b]'",						"\t\twith: '`a := `a min: ``@b';",						"\t\treplace: '`a >= ``@b ifTrue: [`a := ``@b]'",						"\t\twith: '`a := `a min: ``@b';",						"\t\treplace: '`a > ``@b ifFalse: [`a := ``@b]'",						"\t\twith: '`a := `a max: ``@b';",						"\t\treplace: '`a >= ``@b ifFalse: [`a := ``@b]'",						"\t\twith: '`a := `a max: ``@b';",						"\t\treplace: '``@b < `a ifTrue: [`a := ``@b]'",						"\t\twith: '`a := `a min: ``@b';",						"\t\treplace: '``@b <= `a ifTrue: [`a := ``@b]'",						"\t\twith: '`a := `a min: ``@b';",						"\t\treplace: '``@b < `a ifFalse: [`a := ``@b]'",						"\t\twith: '`a := `a max: ``@b';",						"\t\treplace: '``@b <= `a ifFalse: [`a := ``@b]'",						"\t\twith: '`a := `a max: ``@b';",						"\t\treplace: '``@b > `a ifTrue: [`a := ``@b]'",						"\t\twith: '`a := `a max: ``@b';",						"\t\treplace: '``@b >= `a ifTrue: [`a := ``@b]'",						"\t\twith: '`a := `a max: ``@b';",						"\t\treplace: '``@b > `a ifFalse: [`a := ``@b]'",						"\t\twith: '`a := `a min: ``@b';",						"\t\treplace: '``@b >= `a ifFalse: [`a := ``@b]'",						"\t\twith: '`a := `a min: ``@b'"					],					"body" : [						"super initialize.",						"self",						"\treplace: '``@a < ``@b ifTrue: [``@a] ifFalse: [``@b]'",						"\twith: '``@a min: ``@b';",						"\treplace: '``@a <= ``@b ifTrue: [``@a] ifFalse: [``@b]'",						"\twith: '``@a min: ``@b';",						"\treplace: '``@a > ``@b ifTrue: [``@a] ifFalse: [``@b]'",						"\twith: '``@a max: ``@b';",						"\treplace: '``@a >= ``@b ifTrue: [``@a] ifFalse: [``@b]'",						"\twith: '``@a max: ``@b';",						"\treplace: '``@a < ``@b ifTrue: [``@b] ifFalse: [``@a]'",						"\twith: '``@a max: ``@b';",						"\treplace: '``@a <= ``@b ifTrue: [``@b] ifFalse: [``@a]'",						"\twith: '``@a max: ``@b';",						"\treplace: '``@a > ``@b ifTrue: [``@b] ifFalse: [``@a]'",						"\twith: '``@a min: ``@b';",						"\treplace: '``@a >= ``@b ifTrue: [``@b] ifFalse: [``@a]'",						"\twith: '``@a min: ``@b';",						"\treplace: '`a < ``@b ifTrue: [`a := ``@b]' with: '`a := `a max: ``@b';",						"\treplace: '`a <= ``@b ifTrue: [`a := ``@b]'",						"\twith: '`a := `a max: ``@b';",						"\treplace: '`a < ``@b ifFalse: [`a := ``@b]'",						"\twith: '`a := `a min: ``@b';",						"\treplace: '`a <= ``@b ifFalse: [`a := ``@b]'",						"\twith: '`a := `a min: ``@b';",						"\treplace: '`a > ``@b ifTrue: [`a := ``@b]' with: '`a := `a min: ``@b';",						"\treplace: '`a >= ``@b ifTrue: [`a := ``@b]'",						"\twith: '`a := `a min: ``@b';",						"\treplace: '`a > ``@b ifFalse: [`a := ``@b]'",						"\twith: '`a := `a max: ``@b';",						"\treplace: '`a >= ``@b ifFalse: [`a := ``@b]'",						"\twith: '`a := `a max: ``@b';",						"\treplace: '``@b < `a ifTrue: [`a := ``@b]' with: '`a := `a min: ``@b';",						"\treplace: '``@b <= `a ifTrue: [`a := ``@b]'",						"\twith: '`a := `a min: ``@b';",						"\treplace: '``@b < `a ifFalse: [`a := ``@b]'",						"\twith: '`a := `a max: ``@b';",						"\treplace: '``@b <= `a ifFalse: [`a := ``@b]'",						"\twith: '`a := `a max: ``@b';",						"\treplace: '``@b > `a ifTrue: [`a := ``@b]' with: '`a := `a max: ``@b';",						"\treplace: '``@b >= `a ifTrue: [`a := ``@b]'",						"\twith: '`a := `a max: ``@b';",						"\treplace: '``@b > `a ifFalse: [`a := ``@b]'",						"\twith: '`a := `a min: ``@b';",						"\treplace: '``@b >= `a ifFalse: [`a := ``@b]'",						"\twith: '`a := `a min: ``@b'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4735090,					"argumentNames" : [ ]				},				"CTDfsWalker" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\t\"Both the dfs clock and the shapes stack is managed locally, so",						"\t no client of me can interact with these data.\"",						"\tdfsClock := 0.",						"\tsccShapeStack := nil.",						"",						"\t\"The handling of quoted shapes is my own responsibility only.\"",						"\tquotedShapes := IdentityDictionary new.",						"",						"\tself",						"\t\tmaxLevel: 0;",						"\t\tstronglyConnectedComponents: OrderedCollection new;",						"\t\tlevels: Dictionary new;",						"\t\toneToManyShapes: IdentityDictionary new;",						"\t\tshapeBuilder: CTDfsShapeBuilder new"					],					"body" : [						"super initialize.",						"",						"\"Both the dfs clock and the shapes stack is managed locally, so",						"\t no client of me can interact with these data.\"",						"dfsClock := 0.",						"sccShapeStack := nil.",						"",						"\"The handling of quoted shapes is my own responsibility only.\"",						"quotedShapes := IdentityDictionary new.",						"",						"self",						"\tmaxLevel: 0;",						"\tstronglyConnectedComponents: OrderedCollection new;",						"\tlevels: Dictionary new;",						"\toneToManyShapes: IdentityDictionary new;",						"\tshapeBuilder: CTDfsShapeBuilder new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3656049,					"argumentNames" : [ ]				},				"PragmaMenuAndShortcutRegistration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\titems := OrderedCollection new"					],					"body" : [						"super initialize.",						"",						"items := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2461465,					"argumentNames" : [ ]				},				"MWHandlerToggling" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tenable := true"					],					"body" : [						"super initialize.",						"",						"enable := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4177352,					"argumentNames" : [ ]				},				"SpCompositeTableColumn" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\t\"there will be at least two, if it is composed :)\"",						"\tcolumns := OrderedCollection new: 2"					],					"body" : [						"super initialize.",						"\"there will be at least two, if it is composed :)\"",						"columns := OrderedCollection new: 2"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2987091,					"argumentNames" : [ ]				},				"ReSmalltalkGlobalsRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself",						"\t\treplace: 'Smalltalk allClasses'",						"\t\twith: 'Smalltalk globals allClasses';",						"\t\treplace: 'Smalltalk allClassesDo: `@statements'",						"\t\twith: 'Smalltalk globals allClassesDo: `@statements';",						"\t\treplace: 'Smalltalk allTraits' with: 'Smalltalk globals allTraits';",						"\t\treplace: 'Smalltalk includes:`@statements'",						"\t\twith: 'Smalltalk globals includes: `@statements';",						"\t\treplace: 'Smalltalk flushClassNameCache'",						"\t\twith: 'Smalltalk globals flushClassNameCache';",						"\t\treplace: 'Smalltalk includesKey: `@statements'",						"\t\twith: 'Smalltalk globals includesKey: `@statements'"					],					"body" : [						"super initialize.",						"self",						"\treplace: 'Smalltalk allClasses' with: 'Smalltalk globals allClasses';",						"\treplace: 'Smalltalk allClassesDo: `@statements'",						"\twith: 'Smalltalk globals allClassesDo: `@statements';",						"\treplace: 'Smalltalk allTraits' with: 'Smalltalk globals allTraits';",						"\treplace: 'Smalltalk includes:`@statements'",						"\twith: 'Smalltalk globals includes: `@statements';",						"\treplace: 'Smalltalk flushClassNameCache'",						"\twith: 'Smalltalk globals flushClassNameCache';",						"\treplace: 'Smalltalk includesKey: `@statements'",						"\twith: 'Smalltalk globals includesKey: `@statements'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4738384,					"argumentNames" : [ ]				},				"ZipFileConstants class" : {					"sourceCode" : [						"initialize",						"",						"\tFaMsdos := 0.",						"\tFaUnix := 3.",						"\tDeflatingCompressionNormal := 0.",						"\tDeflatingCompressionMaximum := 2.",						"\tDeflatingCompressionFast := 4.",						"\tDeflatingCompressionSuperFast := 6.",						"\tCompressionStored := 0.",						"\tCompressionDeflated := 8.",						"\tCompressionLevelNone := 0.",						"\tCompressionLevelDefault := 6.",						"\tIfaTextFile := 1.",						"\tIfaBinaryFile := 0.",						"\tDataDescriptorLength := 12.",						"",						"\t\"Unix permission bits\"",						"\tDefaultDirectoryPermissions := 8r040755.",						"\tDefaultFilePermissions := 8r0100666.",						"\tDirectoryAttrib := 8r040000.",						"\tFileAttrib := 8r0100000.",						"",						"\t\"0x02014b50 little-endian i.e. #(16r50 16r4B 16r01 16r02) [1]\"",						"\tCentralDirectoryFileHeaderSignature := #[ 80 75 1 2 ].",						"",						"\t\"0x04034b50 little-endian i.e. #(16r50 16r4B 16r03 16r04) [1]\"",						"\tLocalFileHeaderSignature := #[ 80 75 3 4 ].",						"",						"\t\"0x06054b50 little-endian i.e. #(16r50 16r4B 16r05 16r06) [1]\"",						"\tEndOfCentralDirectorySignature := #[ 80 75 5 6 ]",						"",						"\t\"[1] http://en.wikipedia.org/wiki/Zip_(file_format)#File_headers\""					],					"body" : [						"FaMsdos := 0.",						"FaUnix := 3.",						"DeflatingCompressionNormal := 0.",						"DeflatingCompressionMaximum := 2.",						"DeflatingCompressionFast := 4.",						"DeflatingCompressionSuperFast := 6.",						"CompressionStored := 0.",						"CompressionDeflated := 8.",						"CompressionLevelNone := 0.",						"CompressionLevelDefault := 6.",						"IfaTextFile := 1.",						"IfaBinaryFile := 0.",						"DataDescriptorLength := 12.",						"",						"\"Unix permission bits\"",						"DefaultDirectoryPermissions := 8r040755.",						"DefaultFilePermissions := 8r0100666.",						"DirectoryAttrib := 8r040000.",						"FileAttrib := 8r0100000.",						"",						"\"0x02014b50 little-endian i.e. #(16r50 16r4B 16r01 16r02) [1]\"",						"CentralDirectoryFileHeaderSignature := #[ 80 75 1 2 ].",						"",						"\"0x04034b50 little-endian i.e. #(16r50 16r4B 16r03 16r04) [1]\"",						"LocalFileHeaderSignature := #[ 80 75 3 4 ].",						"",						"\"0x06054b50 little-endian i.e. #(16r50 16r4B 16r05 16r06) [1]\"",						"EndOfCentralDirectorySignature := #[ 80 75 5 6 ]",						"",						"\"[1] http://en.wikipedia.org/wiki/Zip_(file_format)#File_headers\""					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2137472,					"argumentNames" : [ ]				},				"SDL_RendererInfo class" : {					"sourceCode" : [						"initialize",						"",						"\tUint32_16 := FFITypeArray ofType: Uint32 size: 16"					],					"body" : [						"Uint32_16 := FFITypeArray ofType: Uint32 size: 16"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4894914,					"argumentNames" : [ ]				},				"Watch" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tvalues := OrderedCollection new.",						"\trecording := true"					],					"body" : [						"super initialize.",						"values := OrderedCollection new.",						"recording := true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3842871,					"argumentNames" : [ ]				},				"SpCodePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\t\"Use the default menu\"",						"\toverrideContextMenu := false.",						"",						"\tself withSyntaxHighlight.",						"\tself withLineNumbers.",						"",						"\tself registerEventsForStyling.",						"\tself clearInteractionModel"					],					"body" : [						"super initialize.",						"",						"\"Use the default menu\"",						"overrideContextMenu := false.",						"",						"self withSyntaxHighlight.",						"self withLineNumbers.",						"",						"self registerEventsForStyling.",						"self clearInteractionModel"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6143244,					"argumentNames" : [ ]				},				"SDL2ConstantsHint class" : {					"sourceCode" : [						"initialize",						"",						"\tSDL_HINT_FRAMEBUFFER_ACCELERATION := 'SDL_FRAMEBUFFER_ACCELERATION'.",						"\tSDL_HINT_RENDER_DRIVER := 'SDL_RENDER_DRIVER'.",						"\tSDL_HINT_RENDER_OPENGL_SHADERS := 'SDL_RENDER_OPENGL_SHADERS'.",						"\tSDL_HINT_RENDER_DIRECT3D_THREADSAFE := 'SDL_RENDER_DIRECT3D_THREADSAFE'.",						"\tSDL_HINT_RENDER_DIRECT3D11_DEBUG := 'SDL_RENDER_DIRECT3D11_DEBUG'.",						"\tSDL_HINT_RENDER_LOGICAL_SIZE_MODE := 'SDL_RENDER_LOGICAL_SIZE_MODE'.",						"\tSDL_HINT_RENDER_SCALE_QUALITY := 'SDL_RENDER_SCALE_QUALITY'.",						"\tSDL_HINT_RENDER_VSYNC := 'SDL_RENDER_VSYNC'.",						"\tSDL_HINT_VIDEO_ALLOW_SCREENSAVER := 'SDL_VIDEO_ALLOW_SCREENSAVER'.",						"\tSDL_HINT_VIDEO_X11_XVIDMODE := 'SDL_VIDEO_X11_XVIDMODE'.",						"\tSDL_HINT_VIDEO_X11_XINERAMA := 'SDL_VIDEO_X11_XINERAMA'.",						"\tSDL_HINT_VIDEO_X11_XRANDR := 'SDL_VIDEO_X11_XRANDR'.",						"\tSDL_HINT_VIDEO_X11_NET_WM_PING := 'SDL_VIDEO_X11_NET_WM_PING'.",						"\tSDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN := 'SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN'.",						"\tSDL_HINT_WINDOWS_INTRESOURCE_ICON := 'SDL_WINDOWS_INTRESOURCE_ICON'.",						"\tSDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL := 'SDL_WINDOWS_INTRESOURCE_ICON_SMALL'.",						"\tSDL_HINT_WINDOWS_ENABLE_MESSAGELOOP := 'SDL_WINDOWS_ENABLE_MESSAGELOOP'.",						"\tSDL_HINT_GRAB_KEYBOARD := 'SDL_GRAB_KEYBOARD'.",						"\tSDL_HINT_MOUSE_NORMAL_SPEED_SCALE := 'SDL_MOUSE_NORMAL_SPEED_SCALE'.",						"\tSDL_HINT_MOUSE_RELATIVE_SPEED_SCALE := 'SDL_MOUSE_RELATIVE_SPEED_SCALE'.",						"\tSDL_HINT_MOUSE_RELATIVE_MODE_WARP := 'SDL_MOUSE_RELATIVE_MODE_WARP'.",						"\tSDL_HINT_MOUSE_FOCUS_CLICKTHROUGH := 'SDL_MOUSE_FOCUS_CLICKTHROUGH'.",						"\tSDL_HINT_TOUCH_MOUSE_EVENTS := 'SDL_TOUCH_MOUSE_EVENTS'.",						"\tSDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS := 'SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS'.",						"\tSDL_HINT_IDLE_TIMER_DISABLED := 'SDL_IOS_IDLE_TIMER_DISABLED'.",						"\tSDL_HINT_ORIENTATIONS := 'SDL_IOS_ORIENTATIONS'.",						"\tSDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS := 'SDL_APPLE_TV_CONTROLLER_UI_EVENTS'.",						"\tSDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION := 'SDL_APPLE_TV_REMOTE_ALLOW_ROTATION'.",						"\tSDL_HINT_ACCELEROMETER_AS_JOYSTICK := 'SDL_ACCELEROMETER_AS_JOYSTICK'.",						"\tSDL_HINT_XINPUT_ENABLED := 'SDL_XINPUT_ENABLED'.",						"\tSDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING := 'SDL_XINPUT_USE_OLD_JOYSTICK_MAPPING'.",						"\tSDL_HINT_GAMECONTROLLERCONFIG := 'SDL_GAMECONTROLLERCONFIG'.",						"\tSDL_HINT_GAMECONTROLLER_IGNORE_DEVICES := 'SDL_GAMECONTROLLER_IGNORE_DEVICES'.",						"\tSDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT := 'SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT'.",						"\tSDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS := 'SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS'.",						"\tSDL_HINT_ALLOW_TOPMOST := 'SDL_ALLOW_TOPMOST'.",						"\tSDL_HINT_TIMER_RESOLUTION := 'SDL_TIMER_RESOLUTION'.",						"\tSDL_HINT_QTWAYLAND_CONTENT_ORIENTATION := 'SDL_QTWAYLAND_CONTENT_ORIENTATION'.",						"\tSDL_HINT_QTWAYLAND_WINDOW_FLAGS := 'SDL_QTWAYLAND_WINDOW_FLAGS'.",						"\tSDL_HINT_THREAD_STACK_SIZE := 'SDL_THREAD_STACK_SIZE'.",						"\tSDL_HINT_VIDEO_HIGHDPI_DISABLED := 'SDL_VIDEO_HIGHDPI_DISABLED'.",						"\tSDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK := 'SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK'.",						"\tSDL_HINT_VIDEO_WIN_D3DCOMPILER := 'SDL_VIDEO_WIN_D3DCOMPILER'.",						"\tSDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT := 'SDL_VIDEO_WINDOW_SHARE_PIXEL_FORMAT'.",						"\tSDL_HINT_WINRT_PRIVACY_POLICY_URL := 'SDL_WINRT_PRIVACY_POLICY_URL'.",						"\tSDL_HINT_WINRT_PRIVACY_POLICY_LABEL := 'SDL_WINRT_PRIVACY_POLICY_LABEL'.",						"\tSDL_HINT_WINRT_HANDLE_BACK_BUTTON := 'SDL_WINRT_HANDLE_BACK_BUTTON'.",						"\tSDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES := 'SDL_VIDEO_MAC_FULLSCREEN_SPACES'.",						"\tSDL_HINT_MAC_BACKGROUND_APP := 'SDL_MAC_BACKGROUND_APP'.",						"\tSDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION := 'SDL_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION'.",						"\tSDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION := 'SDL_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION'.",						"\tSDL_HINT_IME_INTERNAL_EDITING := 'SDL_IME_INTERNAL_EDITING'.",						"\tSDL_HINT_ANDROID_SEPARATE_MOUSE_AND_TOUCH := 'SDL_ANDROID_SEPARATE_MOUSE_AND_TOUCH'.",						"\tSDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT := 'SDL_EMSCRIPTEN_KEYBOARD_ELEMENT'.",						"\tSDL_HINT_NO_SIGNAL_HANDLERS := 'SDL_NO_SIGNAL_HANDLERS'.",						"\tSDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4 := 'SDL_WINDOWS_NO_CLOSE_ON_ALT_F4'.",						"\tSDL_HINT_BMP_SAVE_LEGACY_FORMAT := 'SDL_BMP_SAVE_LEGACY_FORMAT'.",						"\tSDL_HINT_WINDOWS_DISABLE_THREAD_NAMING := 'SDL_WINDOWS_DISABLE_THREAD_NAMING'.",						"\tSDL_HINT_RPI_VIDEO_LAYER := 'SDL_RPI_VIDEO_LAYER'.",						"\tSDL_HINT_OPENGL_ES_DRIVER := 'SDL_OPENGL_ES_DRIVER'.",						"\tSDL_HINT_AUDIO_RESAMPLING_MODE := 'SDL_AUDIO_RESAMPLING_MODE'.",						"\tSDL_HINT_AUDIO_CATEGORY := 'SDL_AUDIO_CATEGORY'"					],					"body" : [						"SDL_HINT_FRAMEBUFFER_ACCELERATION := 'SDL_FRAMEBUFFER_ACCELERATION'.",						"SDL_HINT_RENDER_DRIVER := 'SDL_RENDER_DRIVER'.",						"SDL_HINT_RENDER_OPENGL_SHADERS := 'SDL_RENDER_OPENGL_SHADERS'.",						"SDL_HINT_RENDER_DIRECT3D_THREADSAFE := 'SDL_RENDER_DIRECT3D_THREADSAFE'.",						"SDL_HINT_RENDER_DIRECT3D11_DEBUG := 'SDL_RENDER_DIRECT3D11_DEBUG'.",						"SDL_HINT_RENDER_LOGICAL_SIZE_MODE := 'SDL_RENDER_LOGICAL_SIZE_MODE'.",						"SDL_HINT_RENDER_SCALE_QUALITY := 'SDL_RENDER_SCALE_QUALITY'.",						"SDL_HINT_RENDER_VSYNC := 'SDL_RENDER_VSYNC'.",						"SDL_HINT_VIDEO_ALLOW_SCREENSAVER := 'SDL_VIDEO_ALLOW_SCREENSAVER'.",						"SDL_HINT_VIDEO_X11_XVIDMODE := 'SDL_VIDEO_X11_XVIDMODE'.",						"SDL_HINT_VIDEO_X11_XINERAMA := 'SDL_VIDEO_X11_XINERAMA'.",						"SDL_HINT_VIDEO_X11_XRANDR := 'SDL_VIDEO_X11_XRANDR'.",						"SDL_HINT_VIDEO_X11_NET_WM_PING := 'SDL_VIDEO_X11_NET_WM_PING'.",						"SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN := 'SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN'.",						"SDL_HINT_WINDOWS_INTRESOURCE_ICON := 'SDL_WINDOWS_INTRESOURCE_ICON'.",						"SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL := 'SDL_WINDOWS_INTRESOURCE_ICON_SMALL'.",						"SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP := 'SDL_WINDOWS_ENABLE_MESSAGELOOP'.",						"SDL_HINT_GRAB_KEYBOARD := 'SDL_GRAB_KEYBOARD'.",						"SDL_HINT_MOUSE_NORMAL_SPEED_SCALE := 'SDL_MOUSE_NORMAL_SPEED_SCALE'.",						"SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE := 'SDL_MOUSE_RELATIVE_SPEED_SCALE'.",						"SDL_HINT_MOUSE_RELATIVE_MODE_WARP := 'SDL_MOUSE_RELATIVE_MODE_WARP'.",						"SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH := 'SDL_MOUSE_FOCUS_CLICKTHROUGH'.",						"SDL_HINT_TOUCH_MOUSE_EVENTS := 'SDL_TOUCH_MOUSE_EVENTS'.",						"SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS := 'SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS'.",						"SDL_HINT_IDLE_TIMER_DISABLED := 'SDL_IOS_IDLE_TIMER_DISABLED'.",						"SDL_HINT_ORIENTATIONS := 'SDL_IOS_ORIENTATIONS'.",						"SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS := 'SDL_APPLE_TV_CONTROLLER_UI_EVENTS'.",						"SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION := 'SDL_APPLE_TV_REMOTE_ALLOW_ROTATION'.",						"SDL_HINT_ACCELEROMETER_AS_JOYSTICK := 'SDL_ACCELEROMETER_AS_JOYSTICK'.",						"SDL_HINT_XINPUT_ENABLED := 'SDL_XINPUT_ENABLED'.",						"SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING := 'SDL_XINPUT_USE_OLD_JOYSTICK_MAPPING'.",						"SDL_HINT_GAMECONTROLLERCONFIG := 'SDL_GAMECONTROLLERCONFIG'.",						"SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES := 'SDL_GAMECONTROLLER_IGNORE_DEVICES'.",						"SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT := 'SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT'.",						"SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS := 'SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS'.",						"SDL_HINT_ALLOW_TOPMOST := 'SDL_ALLOW_TOPMOST'.",						"SDL_HINT_TIMER_RESOLUTION := 'SDL_TIMER_RESOLUTION'.",						"SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION := 'SDL_QTWAYLAND_CONTENT_ORIENTATION'.",						"SDL_HINT_QTWAYLAND_WINDOW_FLAGS := 'SDL_QTWAYLAND_WINDOW_FLAGS'.",						"SDL_HINT_THREAD_STACK_SIZE := 'SDL_THREAD_STACK_SIZE'.",						"SDL_HINT_VIDEO_HIGHDPI_DISABLED := 'SDL_VIDEO_HIGHDPI_DISABLED'.",						"SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK := 'SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK'.",						"SDL_HINT_VIDEO_WIN_D3DCOMPILER := 'SDL_VIDEO_WIN_D3DCOMPILER'.",						"SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT := 'SDL_VIDEO_WINDOW_SHARE_PIXEL_FORMAT'.",						"SDL_HINT_WINRT_PRIVACY_POLICY_URL := 'SDL_WINRT_PRIVACY_POLICY_URL'.",						"SDL_HINT_WINRT_PRIVACY_POLICY_LABEL := 'SDL_WINRT_PRIVACY_POLICY_LABEL'.",						"SDL_HINT_WINRT_HANDLE_BACK_BUTTON := 'SDL_WINRT_HANDLE_BACK_BUTTON'.",						"SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES := 'SDL_VIDEO_MAC_FULLSCREEN_SPACES'.",						"SDL_HINT_MAC_BACKGROUND_APP := 'SDL_MAC_BACKGROUND_APP'.",						"SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION := 'SDL_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION'.",						"SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION := 'SDL_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION'.",						"SDL_HINT_IME_INTERNAL_EDITING := 'SDL_IME_INTERNAL_EDITING'.",						"SDL_HINT_ANDROID_SEPARATE_MOUSE_AND_TOUCH := 'SDL_ANDROID_SEPARATE_MOUSE_AND_TOUCH'.",						"SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT := 'SDL_EMSCRIPTEN_KEYBOARD_ELEMENT'.",						"SDL_HINT_NO_SIGNAL_HANDLERS := 'SDL_NO_SIGNAL_HANDLERS'.",						"SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4 := 'SDL_WINDOWS_NO_CLOSE_ON_ALT_F4'.",						"SDL_HINT_BMP_SAVE_LEGACY_FORMAT := 'SDL_BMP_SAVE_LEGACY_FORMAT'.",						"SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING := 'SDL_WINDOWS_DISABLE_THREAD_NAMING'.",						"SDL_HINT_RPI_VIDEO_LAYER := 'SDL_RPI_VIDEO_LAYER'.",						"SDL_HINT_OPENGL_ES_DRIVER := 'SDL_OPENGL_ES_DRIVER'.",						"SDL_HINT_AUDIO_RESAMPLING_MODE := 'SDL_AUDIO_RESAMPLING_MODE'.",						"SDL_HINT_AUDIO_CATEGORY := 'SDL_AUDIO_CATEGORY'"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4864222,					"argumentNames" : [ ]				},				"RSRotated" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tdrag := false"					],					"body" : [						"super initialize.",						"drag := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6529224,					"argumentNames" : [ ]				},				"OSNullBackendWindow" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tisTextInputActive := false"					],					"body" : [						"super initialize.",						"",						"isTextInputActive := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4797643,					"argumentNames" : [ ]				},				"CalendarDayMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself highlighted: false"					],					"body" : [						"super initialize.",						"self highlighted: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1516232,					"argumentNames" : [ ]				},				"CoStatistics" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tacceptedEntries := Dictionary new.",						"\tcancelledCompletions := OrderedCollection new"					],					"body" : [						"super initialize.",						"acceptedEntries := Dictionary new.",						"cancelledCompletions := OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6118788,					"argumentNames" : [ ]				},				"FinderUI" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\twrapBlockOrSelector := [ :i | i asString ]"					],					"body" : [						"super initialize.",						"wrapBlockOrSelector := [ :i | i asString ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4128654,					"argumentNames" : [ ]				},				"OSKeySymbols class" : {					"sourceCode" : [						"initialize",						"",						"\tOSKeySymbolValueToKeyboardKeyMap := Dictionary new.",						"\tOSKeySymbolNameToValueMap := Dictionary new.",						"\tself data do: [ :each | ",						"\t\t| symbolValue classVarName symbolName keyboardKey |",						"\t\tsymbolValue := each first.",						"\t\tclassVarName := each second.",						"\t\tsymbolName := each third asString asUppercase asSymbol.",						"\t\tkeyboardKey := KeyboardKey named: symbolName.",						"\t\t(self hasClassVarNamed: classVarName) ifFalse: [ ",						"\t\t\tself addClassVarNamed: classVarName ].",						"\t\tself classVarNamed: classVarName put: symbolValue.",						"\t\tOSKeySymbolValueToKeyboardKeyMap at: symbolValue put: keyboardKey.",						"\t\tOSKeySymbolNameToValueMap at: symbolName put: symbolValue ]"					],					"body" : [						"OSKeySymbolValueToKeyboardKeyMap := Dictionary new.",						"OSKeySymbolNameToValueMap := Dictionary new.",						"self data do: [ :each | ",						"\t| symbolValue classVarName symbolName keyboardKey |",						"\tsymbolValue := each first.",						"\tclassVarName := each second.",						"\tsymbolName := each third asString asUppercase asSymbol.",						"\tkeyboardKey := KeyboardKey named: symbolName.",						"\t(self hasClassVarNamed: classVarName) ifFalse: [ ",						"\t\tself addClassVarNamed: classVarName ].",						"\tself classVarNamed: classVarName put: symbolValue.",						"\tOSKeySymbolValueToKeyboardKeyMap at: symbolValue put: keyboardKey.",						"\tOSKeySymbolNameToValueMap at: symbolName put: symbolValue ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4796172,					"argumentNames" : [ ]				},				"IdentifierChooserMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself borderWidth: 1.",						"\tself layoutInset: 0.",						"\tself changeTableLayout.",						"\tself hResizing: #shrinkWrap.",						"\tself vResizing: #shrinkWrap.",						"\tself color: self defaultBaseColor"					],					"body" : [						"super initialize.",						"self borderWidth: 1.",						"self layoutInset: 0.",						"self changeTableLayout.",						"self hResizing: #shrinkWrap.",						"self vResizing: #shrinkWrap.",						"self color: self defaultBaseColor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2714957,					"argumentNames" : [ ]				},				"CairoFontOptions" : {					"sourceCode" : [						"initialize",						"",						"\tself autoRelease.",						"\tself setDefaults"					],					"body" : [						"self autoRelease.",						"self setDefaults"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3878397,					"argumentNames" : [ ]				},				"SpAbstractWidgetPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tenabled := true.",						"\tdragEnabled := false.",						"\tdropEnabled := false.",						"\twantsDrop := [ :transfer | self dropEnabled ].",						"\tacceptDrop := [ :transfer |  ].",						"\tself whenEnabledChangedDo: [ :value | ",						"\t\tself withAdapterDo: [ :w | w update: #enabled: with: { value } ] ].",						"\tself property: #dragEnabled whenChangedDo: [ :value | ",						"\t\tself withWidgetDo: [ :w | w update: #dragEnabled: with: { value } ] ].",						"\tself property: #dropEnabled whenChangedDo: [ :value | ",						"\t\tself withWidgetDo: [ :w | w update: #dropEnabled: with: { value } ] ]"					],					"body" : [						"super initialize.",						"",						"enabled := true.",						"dragEnabled := false.",						"dropEnabled := false.",						"wantsDrop := [ :transfer | self dropEnabled ].",						"acceptDrop := [ :transfer |  ].",						"self whenEnabledChangedDo: [ :value | ",						"\tself withAdapterDo: [ :w | w update: #enabled: with: { value } ] ].",						"self property: #dragEnabled whenChangedDo: [ :value | ",						"\tself withWidgetDo: [ :w | w update: #dragEnabled: with: { value } ] ].",						"self property: #dropEnabled whenChangedDo: [ :value | ",						"\tself withWidgetDo: [ :w | w update: #dropEnabled: with: { value } ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3264686,					"argumentNames" : [ ]				},				"SpSliderPresenter" : {					"sourceCode" : [						"initialize",						"",						"\t| isChanging |",						"\tsuper initialize.",						"",						"\tisHorizontal := true.",						"\tmarks := OrderedCollection new.",						"\tmax := 100.",						"\tmin := 0.",						"\tquantum := 1.",						"\tvalue := 0.",						"\tabsoluteValue := 0.",						"\tlabel := ''.",						"\tisChanging := false.",						"",						"\tself whenMaxChangedDo: [ :m | ",						"\t\tself changed: { ",						"\t\t\t\t#max:.",						"\t\t\t\tm } ].",						"\tself whenMinChangedDo: [ :m | ",						"\t\tself changed: { ",						"\t\t\t\t#min:.",						"\t\t\t\tm } ].",						"\tself whenQuantumChangedDo: [ :m | ",						"\t\tself changed: { ",						"\t\t\t\t#quantum:.",						"\t\t\t\tm } ].",						"\tself whenValueChangedDo: [ :v | ",						"\t\tisChanging ifFalse: [ ",						"\t\t\tisChanging := true.",						"\t\t\tself absoluteValue: (self valueToAbsoluteValue: v).",						"\t\t\tself changed: { ",						"\t\t\t\t\t#scaledValue:.",						"\t\t\t\t\tv }.",						"\t\t\tisChanging := false ].",						"\t\tself changed: #value ].",						"\tself whenAbsoluteValueChangedDo: [ :v | ",						"\t\tisChanging ifFalse: [ ",						"\t\t\tisChanging := true.",						"\t\t\tself value: (self absoluteValueToValue: v).",						"\t\t\tself changed: { ",						"\t\t\t\t\t#value:.",						"\t\t\t\t\tv }.",						"\t\t\tisChanging := false ] ].",						"\tself whenLabelChangedDo: [ :v | self changed: #label ]"					],					"body" : [						"| isChanging |",						"super initialize.",						"",						"isHorizontal := true.",						"marks := OrderedCollection new.",						"max := 100.",						"min := 0.",						"quantum := 1.",						"value := 0.",						"absoluteValue := 0.",						"label := ''.",						"isChanging := false.",						"",						"self whenMaxChangedDo: [ :m | ",						"\tself changed: { ",						"\t\t\t#max:.",						"\t\t\tm } ].",						"self whenMinChangedDo: [ :m | ",						"\tself changed: { ",						"\t\t\t#min:.",						"\t\t\tm } ].",						"self whenQuantumChangedDo: [ :m | ",						"\tself changed: { ",						"\t\t\t#quantum:.",						"\t\t\tm } ].",						"self whenValueChangedDo: [ :v | ",						"\tisChanging ifFalse: [ ",						"\t\tisChanging := true.",						"\t\tself absoluteValue: (self valueToAbsoluteValue: v).",						"\t\tself changed: { ",						"\t\t\t\t#scaledValue:.",						"\t\t\t\tv }.",						"\t\tisChanging := false ].",						"\tself changed: #value ].",						"self whenAbsoluteValueChangedDo: [ :v | ",						"\tisChanging ifFalse: [ ",						"\t\tisChanging := true.",						"\t\tself value: (self absoluteValueToValue: v).",						"\t\tself changed: { ",						"\t\t\t\t#value:.",						"\t\t\t\tv }.",						"\t\tisChanging := false ] ].",						"self whenLabelChangedDo: [ :v | self changed: #label ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3543800,					"argumentNames" : [ ]				},				"ZnUTF8Encoder class" : {					"sourceCode" : [						"initialize",						"",						"\t| encoder stream |",						"\tByteASCIISet := ByteArray new: 256.",						"\tByteUTF8Encoding := Array new: 256.",						"\tencoder := self new.",						"\tstream := ByteArray new writeStream.",						"\t0 to: 255 do: [ :each | ",						"\t\t| bytes |",						"\t\tstream reset.",						"\t\tencoder nextPut: (Character value: each) toStream: stream.",						"\t\tbytes := stream contents.",						"\t\t(bytes size = 1 and: [ bytes first = each ])",						"\t\t\tifTrue: [ ByteASCIISet at: each + 1 put: 0 ]",						"\t\t\tifFalse: [ ",						"\t\t\t\tByteASCIISet at: each + 1 put: 1.",						"\t\t\t\tByteUTF8Encoding at: each + 1 put: bytes ] ]"					],					"body" : [						"| encoder stream |",						"ByteASCIISet := ByteArray new: 256.",						"ByteUTF8Encoding := Array new: 256.",						"encoder := self new.",						"stream := ByteArray new writeStream.",						"0 to: 255 do: [ :each | ",						"\t| bytes |",						"\tstream reset.",						"\tencoder nextPut: (Character value: each) toStream: stream.",						"\tbytes := stream contents.",						"\t(bytes size = 1 and: [ bytes first = each ])",						"\t\tifTrue: [ ByteASCIISet at: each + 1 put: 0 ]",						"\t\tifFalse: [ ",						"\t\t\tByteASCIISet at: each + 1 put: 1.",						"\t\t\tByteUTF8Encoding at: each + 1 put: bytes ] ]"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 3063052,					"argumentNames" : [ ]				},				"SpKMCategoryBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tkmCategory := KMCategory new"					],					"body" : [						"super initialize.",						"kmCategory := KMCategory new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3191833,					"argumentNames" : [ ]				},				"NavigationHistory" : {					"sourceCode" : [						"initialize",						"",						"\tstorage := OrderedCollection new.",						"\tindex := 0.",						"\tpaused := false"					],					"body" : [						"storage := OrderedCollection new.",						"index := 0.",						"paused := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2645034,					"argumentNames" : [ ]				},				"ReNodeMatchRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmatchers := Set new"					],					"body" : [						"super initialize.",						"matchers := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2518553,					"argumentNames" : [ ]				},				"OSTouchOneFingerDoubleTapDetector class" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tDoubleTouchSpeed := 700.",						"\tMaxDistance := 0.05"					],					"body" : [						"super initialize.",						"DoubleTouchSpeed := 700.",						"MaxDistance := 0.05"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 4842790,					"argumentNames" : [ ]				},				"SpMorphicRoassalAdapter class" : {					"sourceCode" : [						"initialize",						"",						"\t\"we need to reset the cached adapter bindigns\"",						"",						"\tSpNullApplication reset"					],					"body" : [						"SpNullApplication reset"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"we need to reset the cached adapter bindigns"					],					"hash" : 2775578,					"argumentNames" : [ ]				},				"SpAbstractFormButtonPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tstate := false.",						"",						"\tlabelClickable := true.",						"\tlabel := ''.",						"\tself whenLabelClickableChangedDo: [ :aBoolean | ",						"\t\tself changed: { ",						"\t\t\t\t#labelClickable:.",						"\t\t\t\taBoolean } ]"					],					"body" : [						"super initialize.",						"",						"state := false.",						"",						"labelClickable := true.",						"label := ''.",						"self whenLabelClickableChangedDo: [ :aBoolean | ",						"\tself changed: { ",						"\t\t\t#labelClickable:.",						"\t\t\taBoolean } ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3268492,					"argumentNames" : [ ]				},				"ReShouldTransformedIntoAssertRule" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself",						"\t\treplace: 'self should: [ ``@object1 ]'",						"\t\twith: 'self assert: ``@object1'"					],					"body" : [						"super initialize.",						"",						"self",						"\treplace: 'self should: [ ``@object1 ]'",						"\twith: 'self assert: ``@object1'"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4925170,					"argumentNames" : [ ]				},				"EFContext" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself useBasicCommentFormat: true.",						"\tself formatCommentCloseToStatements: true.",						"\tindentsForKeywords := 1.",						"\tkeepBlockInMessage := true.",						"\tlineUpBlockBrackets := false.",						"\tmaxLineLength := 70.",						"\tmethodSignatureOnMultipleLines := false.",						"\tminimumNewLinesBetweenStatements := 1.",						"\tself configureMultiLineMessages.",						"\tnewLineAfterCascade := true.",						"\tnewLineBeforeFirstCascade := true.",						"\tnewLineBeforeFirstKeyword := true.",						"\tnumberOfNewLinesAfterMethodComment := 2.",						"\tnewLinesAfterMethodSignature := 2.",						"\tnewLinesAfterTemporaries := 1.",						"\tnumberOfArgumentsForMultiLine := 4.",						"\tself configureOneLineMessages.",						"\tself periodAtEndOfBlock: false.",						"\tself periodAtEndOfMethod: false.",						"\tself retainBlankLinesBetweenStatements: true.",						"\tself retainBlankLinesBeforeComments: true.",						"\tself selectorAndArgumentCombinedMaxSize: 40.",						"\tself numberOfSpacesInsideBlock: 1.",						"\tself numberOfSpacesInsideParentheses: 0.",						"\tself numberOfSpacesAfterCaretSymbolInReturn: 1.",						"\tself indentStyle: #tabulation.",						"\tself numberOfSpacesInIndent: 3.",						"\tself numberOfSpacesBeforeDotInDynamicArray: 0.",						"\tself indentExtraSpaces: 0.",						"\tself numberOfSpacesInsideArray: 1"					],					"body" : [						"super initialize.",						"self useBasicCommentFormat: true.",						"self formatCommentCloseToStatements: true.",						"indentsForKeywords := 1.",						"keepBlockInMessage := true.",						"lineUpBlockBrackets := false.",						"maxLineLength := 70.",						"methodSignatureOnMultipleLines := false.",						"minimumNewLinesBetweenStatements := 1.",						"self configureMultiLineMessages.",						"newLineAfterCascade := true.",						"newLineBeforeFirstCascade := true.",						"newLineBeforeFirstKeyword := true.",						"numberOfNewLinesAfterMethodComment := 2.",						"newLinesAfterMethodSignature := 2.",						"newLinesAfterTemporaries := 1.",						"numberOfArgumentsForMultiLine := 4.",						"self configureOneLineMessages.",						"self periodAtEndOfBlock: false.",						"self periodAtEndOfMethod: false.",						"self retainBlankLinesBetweenStatements: true.",						"self retainBlankLinesBeforeComments: true.",						"self selectorAndArgumentCombinedMaxSize: 40.",						"self numberOfSpacesInsideBlock: 1.",						"self numberOfSpacesInsideParentheses: 0.",						"self numberOfSpacesAfterCaretSymbolInReturn: 1.",						"self indentStyle: #tabulation.",						"self numberOfSpacesInIndent: 3.",						"self numberOfSpacesBeforeDotInDynamicArray: 0.",						"self indentExtraSpaces: 0.",						"self numberOfSpacesInsideArray: 1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3901763,					"argumentNames" : [ ]				},				"RSBasicUMLClassRenderer" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tpopup := RSPopup new model: #yourself.",						"\tpopup shapeBuilder: (RSAdaptativePopup new",						"\t\t\t smallBuilder: popup shapeBuilder;",						"\t\t\t bigBuilder: self;",						"\t\t\t yourself)"					],					"body" : [						"super initialize.",						"popup := RSPopup new model: #yourself.",						"popup shapeBuilder: (RSAdaptativePopup new",						"\t\t smallBuilder: popup shapeBuilder;",						"\t\t bigBuilder: self;",						"\t\t yourself)"					],					"isTestMethod" : false,					"category" : "hooks",					"comment" : [ ],					"hash" : 6574710,					"argumentNames" : [ ]				},				"FFITestEnumeration class" : {					"sourceCode" : [						"initialize",						"",						"\tself initializeEnumeration"					],					"body" : [						"self initializeEnumeration"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2373188,					"argumentNames" : [ ]				},				"MWHandlerCounting" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tcount := 0"					],					"body" : [						"super initialize.",						"",						"count := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4178378,					"argumentNames" : [ ]				},				"RSTimeLinePlot" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself gapRatio: 0.1"					],					"body" : [						"super initialize.",						"self gapRatio: 0.1"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6608557,					"argumentNames" : [ ]				},				"GLMOSWindowWorldMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tself layoutPolicy: ProportionalLayout new.",						"\tself clipSubmorphs: true"					],					"body" : [						"super initialize.",						"",						"self layoutPolicy: ProportionalLayout new.",						"self clipSubmorphs: true"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4795955,					"argumentNames" : [ ]				},				"FileCompilerRequestor" : {					"sourceCode" : [						"initialize",						"",						"\tinteractive := false"					],					"body" : [						"interactive := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2059942,					"argumentNames" : [ ]				},				"TextAction" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tactOnClickBlock := ActOnClickBlock"					],					"body" : [						"super initialize.",						"actOnClickBlock := ActOnClickBlock"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2426268,					"argumentNames" : [ ]				},				"MouseOverHandler" : {					"sourceCode" : [						"initialize",						"",						"\tmouseOverMorphs := #(  ).",						"",						"\tself initializeTrackedMorphs"					],					"body" : [						"mouseOverMorphs := #(  ).",						"",						"self initializeTrackedMorphs"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2456896,					"argumentNames" : [ ]				},				"LRUCache" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tkeyIndex := Dictionary new.",						"\tlruList := DoubleLinkedList new"					],					"body" : [						"super initialize.",						"keyIndex := Dictionary new.",						"lruList := DoubleLinkedList new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2403468,					"argumentNames" : [ ]				},				"SpGridLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself beColumnHomogeneous.",						"\tself beRowNotHomogeneous.",						"\tcolumnConstraints := Dictionary new.",						"\trowConstraints := Dictionary new.",						"\tchildrenByPosition := Dictionary new"					],					"body" : [						"super initialize.",						"self beColumnHomogeneous.",						"self beRowNotHomogeneous.",						"columnConstraints := Dictionary new.",						"rowConstraints := Dictionary new.",						"childrenByPosition := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2944174,					"argumentNames" : [ ]				},				"ListPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself initializeValueHolders.",						"\tself registerEvents.",						"",						"\tself",						"\t\tbindKeyCombination: Character space",						"\t\ttoAction: [ self clickOnSelectedItem ]"					],					"body" : [						"super initialize.",						"self initializeValueHolders.",						"self registerEvents.",						"",						"self",						"\tbindKeyCombination: Character space",						"\ttoAction: [ self clickOnSelectedItem ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1688270,					"argumentNames" : [ ]				},				"ZdcPluginSSLSession" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver\"",						"",						"\t[ handle := self primitiveSSLCreate ]",						"\t\ton: PrimitiveFailed",						"\t\tdo: [ :exception | \"Give a more human friendly error message\" ",						"\t\t\tZdcPluginMissing signal ].",						"\tself logging: false"					],					"body" : [						"[ handle := self primitiveSSLCreate ]",						"\ton: PrimitiveFailed",						"\tdo: [ :exception | \"Give a more human friendly error message\" ",						"\t\tZdcPluginMissing signal ].",						"self logging: false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver"					],					"hash" : 2223220,					"argumentNames" : [ ]				},				"HaloMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tgrowingOrRotating := false.",						"\tself borderStyle:",						"\t\t(SimpleBorderStyle width: 2 color: self theme menuSelectionColor)"					],					"body" : [						"super initialize.",						"",						"growingOrRotating := false.",						"self borderStyle:",						"\t(SimpleBorderStyle width: 2 color: self theme menuSelectionColor)"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1375311,					"argumentNames" : [ ]				},				"SpImagePresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\taction := [  ].",						"\tautoScale := false"					],					"body" : [						"super initialize.",						"action := [  ].",						"autoScale := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2623962,					"argumentNames" : [ ]				},				"NullStream" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver\"",						"",						"\tbinary := false.",						"\tposition := 0"					],					"body" : [						"binary := false.",						"position := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver"					],					"hash" : 1870271,					"argumentNames" : [ ]				},				"PSMCChangesGrouper" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tclassChanges := OrderedCollection new.",						"\tnonClassChanges := OrderedCollection new.",						"\tclasses := Set new"					],					"body" : [						"super initialize.",						"classChanges := OrderedCollection new.",						"nonClassChanges := OrderedCollection new.",						"classes := Set new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4135904,					"argumentNames" : [ ]				},				"PluggableToggleButtonMorph" : {					"sourceCode" : [						"initialize",						"",						"\tpressed := false.",						"\tsuper initialize"					],					"body" : [						"pressed := false.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2706454,					"argumentNames" : [ ]				},				"SpRoassal3InspectorPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize"					],					"body" : [						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6590384,					"argumentNames" : [ ]				},				"Base64MimeConverter class" : {					"sourceCode" : [						"initialize",						"",						"\tFromCharTable := Array new: 256. \"nils\"",						"\tToCharTable := Array new: 64.",						"\t($A asciiValue to: $Z asciiValue) doWithIndex: [ :val :ind | ",						"\t\tFromCharTable at: val + 1 put: ind - 1.",						"\t\tToCharTable at: ind put: val asCharacter ].",						"\t($a asciiValue to: $z asciiValue) doWithIndex: [ :val :ind | ",						"\t\tFromCharTable at: val + 1 put: ind + 25.",						"\t\tToCharTable at: ind + 26 put: val asCharacter ].",						"\t($0 asciiValue to: $9 asciiValue) doWithIndex: [ :val :ind | ",						"\t\tFromCharTable at: val + 1 put: ind + 25 + 26.",						"\t\tToCharTable at: ind + 26 + 26 put: val asCharacter ].",						"\tFromCharTable at: $+ asciiValue + 1 put: 62.",						"\tToCharTable at: 63 put: $+.",						"\tFromCharTable at: $/ asciiValue + 1 put: 63.",						"\tToCharTable at: 64 put: $/"					],					"body" : [						"FromCharTable := Array new: 256. \"nils\"",						"ToCharTable := Array new: 64.",						"($A asciiValue to: $Z asciiValue) doWithIndex: [ :val :ind | ",						"\tFromCharTable at: val + 1 put: ind - 1.",						"\tToCharTable at: ind put: val asCharacter ].",						"($a asciiValue to: $z asciiValue) doWithIndex: [ :val :ind | ",						"\tFromCharTable at: val + 1 put: ind + 25.",						"\tToCharTable at: ind + 26 put: val asCharacter ].",						"($0 asciiValue to: $9 asciiValue) doWithIndex: [ :val :ind | ",						"\tFromCharTable at: val + 1 put: ind + 25 + 26.",						"\tToCharTable at: ind + 26 + 26 put: val asCharacter ].",						"FromCharTable at: $+ asciiValue + 1 put: 62.",						"ToCharTable at: 63 put: $+.",						"FromCharTable at: $/ asciiValue + 1 put: 63.",						"ToCharTable at: 64 put: $/"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [ ],					"hash" : 2164652,					"argumentNames" : [ ]				},				"RBClassEnvironment" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tclasses := IdentitySet new.",						"\tmetaClasses := IdentitySet new"					],					"body" : [						"super initialize.",						"classes := IdentitySet new.",						"metaClasses := IdentitySet new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3927508,					"argumentNames" : [ ]				},				"HistorySlot" : {					"sourceCode" : [						"initialize",						"",						"\tsize := 5"					],					"body" : [						"size := 5"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1172875,					"argumentNames" : [ ]				},				"IcePackage" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tisDirty := false"					],					"body" : [						"super initialize.",						"isDirty := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6995914,					"argumentNames" : [ ]				},				"ThreadSafeTranscript" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\taccessSemaphore := Mutex new.",						"\tstream := String new writeStream.",						"\tdeferredClear := false.",						"\tdeferredEndEntry := false.",						"\tstepContents := ''"					],					"body" : [						"super initialize.",						"accessSemaphore := Mutex new.",						"stream := String new writeStream.",						"deferredClear := false.",						"deferredEndEntry := false.",						"stepContents := ''"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1492827,					"argumentNames" : [ ]				},				"TFCallbackQueue" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tmutex := Mutex new.",						"\tsemaphore := Semaphore new.",						"\tcallbacksByAddress := WeakValueDictionary new.",						"\tpendingQueue := OrderedCollection new.",						"\tself forkCallbackProcess"					],					"body" : [						"super initialize.",						"",						"mutex := Mutex new.",						"semaphore := Semaphore new.",						"callbacksByAddress := WeakValueDictionary new.",						"pendingQueue := OrderedCollection new.",						"self forkCallbackProcess"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2822430,					"argumentNames" : [ ]				},				"FTExampleClassInfoTableDataSource" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself elements: Smalltalk allClassesAndTraits shuffled"					],					"body" : [						"super initialize.",						"self elements: Smalltalk allClassesAndTraits shuffled"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1533896,					"argumentNames" : [ ]				},				"SpMorphicBoxLayoutTest" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbackend := SpMorphicBackendForTest new"					],					"body" : [						"super initialize.",						"backend := SpMorphicBackendForTest new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3719196,					"argumentNames" : [ ]				},				"ThumbnailMorph" : {					"sourceCode" : [						"initialize",						"",						"\t\"Initialize the receiver, obeying a #nominalExtent property if I have one\"",						"",						"\t| anExtent |",						"\tsuper initialize.",						"\tanExtent := self",						"\t\t            valueOfProperty: #nominalExtent",						"\t\t            ifAbsent: [ 25 @ 25 ].",						"\tself extent: anExtent"					],					"body" : [						"| anExtent |",						"super initialize.",						"anExtent := self valueOfProperty: #nominalExtent ifAbsent: [ 25 @ 25 ].",						"self extent: anExtent"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [						"Initialize the receiver, obeying a #nominalExtent property if I have one"					],					"hash" : 3023314,					"argumentNames" : [ ]				},				"RSAbstractLabelDecoration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tbaseShape := RSLabel new.",						"\tlocation := RSLocation new"					],					"body" : [						"super initialize.",						"baseShape := RSLabel new.",						"location := RSLocation new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6609804,					"argumentNames" : [ ]				},				"MenuRegistration" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tisGroup := false"					],					"body" : [						"super initialize.",						"isGroup := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2458829,					"argumentNames" : [ ]				},				"RubAbstractTextArea" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself compose.",						"\tself addCursor.",						"\tself plugFindReplace.",						"\tDefaultTextColor := self theme textColor"					],					"body" : [						"super initialize.",						"self compose.",						"self addCursor.",						"self plugFindReplace.",						"DefaultTextColor := self theme textColor"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1386594,					"argumentNames" : [ ]				},				"RSLineBuilder" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself noRepetition.",						"\tshouldMoveBehind := false.",						"",						"\t\"The view has to be explicitly set by the end-user\"",						"\tcanvasHasBeenManuallySet := false.",						"\t\"We could have edges from A to B, and from B to A\"",						"\tself beDirectional"					],					"body" : [						"super initialize.",						"self noRepetition.",						"shouldMoveBehind := false.",						"",						"\"The view has to be explicitly set by the end-user\"",						"canvasHasBeenManuallySet := false.",						"\"We could have edges from A to B, and from B to A\"",						"self beDirectional"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6482566,					"argumentNames" : [ ]				},				"RxMatcher class" : {					"sourceCode" : [						"initialize",						"",						"\t\"RxMatcher initialize\"",						"",						"\tCr := Character cr.",						"\tLf := Character lf"					],					"body" : [						"Cr := Character cr.",						"Lf := Character lf"					],					"isTestMethod" : false,					"category" : "class initialization",					"comment" : [						"RxMatcher initialize"					],					"hash" : 2236149,					"argumentNames" : [ ]				},				"FileDialogWindow" : {					"sourceCode" : [						"initialize",						"",						"\tselectedFileIndex := 0.",						"\tfileNameText := ''.",						"\tself",						"\t\tanswerPathName;",						"\t\tdirectories: self initialDirectories;",						"\t\tshowDirectoriesInFileList: true;",						"\t\tfileSelectionBlock: self defaultFileSelectionBlock;",						"\t\tfileSortBlock: self defaultFileSortBlock.",						"\tsuper initialize \"Must be at end or signals error. No idea why - SeanDeNigris\""					],					"body" : [						"selectedFileIndex := 0.",						"fileNameText := ''.",						"self",						"\tanswerPathName;",						"\tdirectories: self initialDirectories;",						"\tshowDirectoriesInFileList: true;",						"\tfileSelectionBlock: self defaultFileSelectionBlock;",						"\tfileSortBlock: self defaultFileSortBlock.",						"super initialize \"Must be at end or signals error. No idea why - SeanDeNigris\""					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4154532,					"argumentNames" : [ ]				},				"SpecWrapperTableLayout" : {					"sourceCode" : [						"initialize",						"",						"\telementAdded := false.",						"\tsuper initialize"					],					"body" : [						"elementAdded := false.",						"super initialize"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1776843,					"argumentNames" : [ ]				},				"MCPackageManager class" : {					"sourceCode" : [						"initialize",						"",						"\t\"Remove this later\"",						"",						"\tself unregisterForNotifications"					],					"body" : [						"self unregisterForNotifications"					],					"isTestMethod" : false,					"category" : "initialize",					"comment" : [						"Remove this later"					],					"hash" : 1056580,					"argumentNames" : [ ]				},				"DADependencyChecker" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself newReport"					],					"body" : [						"super initialize.",						"self newReport"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2572905,					"argumentNames" : [ ]				},				"RBReturnNode" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\treturn := 0"					],					"body" : [						"super initialize.",						"",						"return := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1959628,					"argumentNames" : [ ]				},				"RBRenameInstanceVariableRefactoring" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\trenameAccessors := false"					],					"body" : [						"super initialize.",						"renameAccessors := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 3977166,					"argumentNames" : [ ]				},				"RGPointerLayout" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tslots := self unresolvedValue: self defaultSlots"					],					"body" : [						"super initialize.",						"slots := self unresolvedValue: self defaultSlots"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 6058573,					"argumentNames" : [ ]				},				"FreeTypeCache" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmaximumSize := self class defaultMaximumSize.",						"\tfontTable := self dictionaryClass new: 100.",						"\tused := 0.",						"\tfifo := self fifoClass new"					],					"body" : [						"super initialize.",						"maximumSize := self class defaultMaximumSize.",						"fontTable := self dictionaryClass new: 100.",						"used := 0.",						"fifo := self fifoClass new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2698902,					"argumentNames" : [ ]				},				"TextMorph" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tborderWidth := 0.",						"\ttextStyle := TextStyle default copy.",						"\twrapFlag := true.",						"\tmargins := Margin",						"\t\t           left: 0",						"\t\t           right: 0",						"\t\t           top: 0",						"\t\t           bottom: 0.",						"",						"\tself attachKeymapCategory: #TextMorph"					],					"body" : [						"super initialize.",						"borderWidth := 0.",						"textStyle := TextStyle default copy.",						"wrapFlag := true.",						"margins := Margin",						"\t           left: 0",						"\t           right: 0",						"\t           top: 0",						"\t           bottom: 0.",						"",						"self attachKeymapCategory: #TextMorph"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2761469,					"argumentNames" : [ ]				},				"RGPackageDefinition" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tself withoutPackages. \"By default the receiver has no child packages\"",						"\tself extensionMethods: IdentityDictionary new.",						"\tself categories: OrderedCollection new"					],					"body" : [						"super initialize.",						"self withoutPackages. \"By default the receiver has no child packages\"",						"self extensionMethods: IdentityDictionary new.",						"self categories: OrderedCollection new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 2130501,					"argumentNames" : [ ]				},				"DiffPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"",						"\tleftTextHolder := '' asValueHolder.",						"\trightTextHolder := '' asValueHolder.",						"\tcontextClassHolder := nil asValueHolder.",						"\tshowOptions := true asValueHolder.",						"\tshowOnlyDestination := false asValueHolder.",						"\tshowOnlySource := false asValueHolder.",						"\tleftLabelHolder := nil asValueHolder.",						"\trightLabelHolder := nil asValueHolder.",						"",						"\tleftTextHolder whenChangedDo: [ :newText | ",						"\t\tself changed: #leftText: with: { newText } ].",						"\trightTextHolder whenChangedDo: [ :newText | ",						"\t\tself changed: #rightText: with: { newText } ].",						"\tcontextClassHolder whenChangedDo: [ :newClass | ",						"\t\tself changed: #contextClass: with: { newClass } ].",						"\tshowOptions whenChangedDo: [ :aBoolean | ",						"\t\tself changed: #showOptions: with: { aBoolean } ].",						"\tshowOnlyDestination whenChangedDo: [ :aBoolean | ",						"\t\tself changed: #showOnlyDestination: with: { aBoolean } ].",						"\tshowOnlySource whenChangedDo: [ :aBoolean | ",						"\t\tself changed: #showOnlySource: with: { aBoolean } ].",						"",						"\tleftLabelHolder whenChangedDo: [ :newText | ",						"\t\tself changed: #leftLabel: with: { newText } ].",						"\trightLabelHolder whenChangedDo: [ :newText | ",						"\t\tself changed: #rightLabel: with: { newText } ]"					],					"body" : [						"super initialize.",						"",						"leftTextHolder := '' asValueHolder.",						"rightTextHolder := '' asValueHolder.",						"contextClassHolder := nil asValueHolder.",						"showOptions := true asValueHolder.",						"showOnlyDestination := false asValueHolder.",						"showOnlySource := false asValueHolder.",						"leftLabelHolder := nil asValueHolder.",						"rightLabelHolder := nil asValueHolder.",						"",						"leftTextHolder whenChangedDo: [ :newText | ",						"\tself changed: #leftText: with: { newText } ].",						"rightTextHolder whenChangedDo: [ :newText | ",						"\tself changed: #rightText: with: { newText } ].",						"contextClassHolder whenChangedDo: [ :newClass | ",						"\tself changed: #contextClass: with: { newClass } ].",						"showOptions whenChangedDo: [ :aBoolean | ",						"\tself changed: #showOptions: with: { aBoolean } ].",						"showOnlyDestination whenChangedDo: [ :aBoolean | ",						"\tself changed: #showOnlyDestination: with: { aBoolean } ].",						"showOnlySource whenChangedDo: [ :aBoolean | ",						"\tself changed: #showOnlySource: with: { aBoolean } ].",						"",						"leftLabelHolder whenChangedDo: [ :newText | ",						"\tself changed: #leftLabel: with: { newText } ].",						"rightLabelHolder whenChangedDo: [ :newText | ",						"\tself changed: #rightLabel: with: { newText } ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1683442,					"argumentNames" : [ ]				},				"SDL2TuioObjectStateMachine" : {					"sourceCode" : [						"initialize",						"",						"\tposition := 0 @ 0.",						"\tcolor := Color random.",						"\tangle := 0"					],					"body" : [						"position := 0 @ 0.",						"color := Color random.",						"angle := 0"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4914942,					"argumentNames" : [ ]				},				"MenuPresenter" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tgroups := OrderedCollection new asValueHolder.",						"\ttitle := nil asValueHolder.",						"\ticon := nil asValueHolder.",						"\tautoRefresh := nil asValueHolder.",						"\tautoRefresh whenChangedDo: [ :aBoolean | ",						"\t\tself menuGroups do: [ :each | each autoRefresh: aBoolean ] ]"					],					"body" : [						"super initialize.",						"groups := OrderedCollection new asValueHolder.",						"title := nil asValueHolder.",						"icon := nil asValueHolder.",						"autoRefresh := nil asValueHolder.",						"autoRefresh whenChangedDo: [ :aBoolean | ",						"\tself menuGroups do: [ :each | each autoRefresh: aBoolean ] ]"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 1698083,					"argumentNames" : [ ]				},				"IceRepositoryCommand" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tsuccess := false"					],					"body" : [						"super initialize.",						"success := false"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 7044553,					"argumentNames" : [ ]				},				"SDL2TouchExample" : {					"sourceCode" : [						"initialize",						"",						"\tsuper initialize.",						"\tmoveToDraw := Dictionary new"					],					"body" : [						"super initialize.",						"moveToDraw := Dictionary new"					],					"isTestMethod" : false,					"category" : "initialization",					"comment" : [ ],					"hash" : 4912157,					"argumentNames" : [ ]				}			}		},		"testGCDofZ17" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"SymbolicIntegerTest>>#testGCDofMultiplicativeInversesInZ17"			],			"implementors" : {				"SymbolicIntegerTest" : {					"sourceCode" : [						"testGCDofZ17",						"",						"\t| field prime interval |",						"\tprime := 17.",						"\tinterval := 1 to: prime - 1.",						"\tfield := interval collect: [ :each | each >|< prime ].",						"",						"\tself",						"\t\tassert: field",						"\t\tequals: (interval collect: [ :each | prime gcd: each ]).",						"",						"\t^ self exportSlotsGraphOf: field"					],					"body" : [						"| field prime interval |",						"prime := 17.",						"interval := 1 to: prime - 1.",						"field := interval collect: [ :each | each >|< prime ].",						"",						"self",						"\tassert: field",						"\tequals: (interval collect: [ :each | prime gcd: each ]).",						"",						"^ self exportSlotsGraphOf: field"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 4446172,					"argumentNames" : [ ]				}			}		},		"/%~" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"SymbolicIntegerTest>>#testComplementaryQuoRem21Over9",				"SymbolicIntegerTest>>#testComplementaryQuoRem9Over21"			],			"implementors" : {				"Integer" : {					"sourceCode" : [						"/%~ anObject",						"",						"\t^ anObject quoRemComplementaryInteger: self"					],					"body" : [						"^ anObject quoRemComplementaryInteger: self"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [ ],					"hash" : 18845632,					"argumentNames" : [						"anObject"					]				}			}		},		"testQuoRem9Over21" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"SymbolicIntegerTest" : {					"sourceCode" : [						"testQuoRem9Over21",						"",						"\t| quoRem |",						"\tquoRem := 9 /% 21.",						"",						"\tself assert: quoRem equals: 9 / 21.",						"",						"\t^ self exportSlotsGraphOf: quoRem"					],					"body" : [						"| quoRem |",						"quoRem := 9 /% 21.",						"",						"self assert: quoRem equals: 9 / 21.",						"",						"^ self exportSlotsGraphOf: quoRem"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 3920231,					"argumentNames" : [ ]				}			}		},		"slowFibonacciMemo:" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"Integer>>#slowFibonacciMemo:",				"MWVisualizationsTest>>#testProfileSlowFibonacciMemoingWithAdd"			],			"implementors" : {				"Integer" : {					"sourceCode" : [						"slowFibonacciMemo: aDictionary",						"",						"\t^ self < 2",						"\t\t  ifTrue: [ self ]",						"\t\t  ifFalse: [ ",						"\t\t\t  aDictionary at: self ifAbsentPut: [ ",						"\t\t\t\t  (self - 1 slowFibonacciMemo: aDictionary) addNumber:",						"\t\t\t\t\t  (self - 2 slowFibonacciMemo: aDictionary) ] ]"					],					"body" : [						"^ self < 2",						"\t  ifTrue: [ self ]",						"\t  ifFalse: [ ",						"\t\t  aDictionary at: self ifAbsentPut: [ ",						"\t\t\t  (self - 1 slowFibonacciMemo: aDictionary) addNumber:",						"\t\t\t\t  (self - 2 slowFibonacciMemo: aDictionary) ] ]"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [ ],					"hash" : 18846683,					"argumentNames" : [						"aDictionary"					]				}			}		},		"testComplementaryQuoRem21Over9" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"SymbolicIntegerTest" : {					"sourceCode" : [						"testComplementaryQuoRem21Over9",						"",						"\t| quoRem |",						"\tquoRem := 21 /%~ 9.",						"",						"\tself assert: quoRem equals: 21 / 9.",						"",						"\t^ self exportSlotsGraphOf: quoRem"					],					"body" : [						"| quoRem |",						"quoRem := 21 /%~ 9.",						"",						"self assert: quoRem equals: 21 / 9.",						"",						"^ self exportSlotsGraphOf: quoRem"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 3920231,					"argumentNames" : [ ]				}			}		},		"testProfileSlowFibonacciMemoingWithAdd" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"MWVisualizationsTest" : {					"sourceCode" : [						"testProfileSlowFibonacciMemoingWithAdd",						"",						"\t| tree result handlerExecution metadata presenter handlerCopying |",						"\ttree := CTOrderPreservingTree new.",						"",						"\thandlerExecution := MWHandlerProfiling new",						"\t\t                    tree: tree;",						"\t\t                    yourself.",						"",						"\thandlerCopying := MWHandlerReceiverArgumentsCopying new",						"\t\t                  handler: handlerExecution;",						"\t\t                  yourself.",						"",						"\tresult := MWSession new",						"\t\t          add: (MWDecorator new",						"\t\t\t\t           compiledMethod: Integer >> #slowFibonacciMemo:;",						"\t\t\t\t           handler: handlerCopying;",						"\t\t\t\t           yourself);",						"\t\t          add: (MWDecorator new",						"\t\t\t\t           compiledMethod: Number >> #addNumber:;",						"\t\t\t\t           handler: handlerExecution;",						"\t\t\t\t           yourself);",						"\t\t          value: [ 6 slowFibonacciMemo: Dictionary new ].",						"",						"\tmetadata := IdentityDictionary new.",						"\thandlerExecution metadata: metadata.",						"\thandlerCopying metadata: metadata.",						"",						"\t\"Show here the new presenter.\"",						"\tpresenter := (MWSpPresenter on: tree -> metadata)",						"\t\t             useShapeSlotsDfsTree;",						"\t\t             openWithSpec;",						"\t\t             yourself.",						"",						"\tself",						"\t\tassert: tree size equals: 16;",						"\t\tassert: result equals: 7 fibonacciNumbers last.",						"",						"\tself",						"\t\texport: tree",						"\t\tpathSuffix: 'sequence-diagram'",						"\t\tonCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ]"					],					"body" : [						"| tree result handlerExecution metadata presenter handlerCopying |",						"tree := CTOrderPreservingTree new.",						"",						"handlerExecution := MWHandlerProfiling new",						"\t                    tree: tree;",						"\t                    yourself.",						"",						"handlerCopying := MWHandlerReceiverArgumentsCopying new",						"\t                  handler: handlerExecution;",						"\t                  yourself.",						"",						"result := MWSession new",						"\t          add: (MWDecorator new",						"\t\t\t           compiledMethod: Integer >> #slowFibonacciMemo:;",						"\t\t\t           handler: handlerCopying;",						"\t\t\t           yourself);",						"\t          add: (MWDecorator new",						"\t\t\t           compiledMethod: Number >> #addNumber:;",						"\t\t\t           handler: handlerExecution;",						"\t\t\t           yourself);",						"\t          value: [ 6 slowFibonacciMemo: Dictionary new ].",						"",						"metadata := IdentityDictionary new.",						"handlerExecution metadata: metadata.",						"handlerCopying metadata: metadata.",						"",						"\"Show here the new presenter.\"",						"presenter := (MWSpPresenter on: tree -> metadata)",						"\t             useShapeSlotsDfsTree;",						"\t             openWithSpec;",						"\t             yourself.",						"",						"self",						"\tassert: tree size equals: 16;",						"\tassert: result equals: 7 fibonacciNumbers last.",						"",						"self",						"\texport: tree",						"\tpathSuffix: 'sequence-diagram'",						"\tonCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ]"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 5772250,					"argumentNames" : [ ]				}			}		},		"quoRemMinimalInteger:" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"Integer>>#'/%<'"			],			"implementors" : {				"Integer" : {					"sourceCode" : [						"quoRemMinimalInteger: anInteger",						"",						"\t^ QuoRemMinimal a: anInteger b: self"					],					"body" : [						"^ QuoRemMinimal a: anInteger b: self"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [ ],					"hash" : 18845683,					"argumentNames" : [						"anInteger"					]				}			}		},		"productTo:" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"Integer>>#productTo:",				"MWVisualizationsTest>>#testInspectProductTo"			],			"implementors" : {				"Integer" : {					"sourceCode" : [						"productTo: upper",						"",						"\t\"Return the product of all integers between ",						"   the receiver (exclusive) and upper (inclusive).\"",						"",						"\t| delta product middle |",						"\tdelta := upper subtractNumber: self.",						"\t^ delta <= 0",						"\t\t  ifTrue: [ Error signal ]",						"\t\t  ifFalse: [ ",						"\t\t\t  delta < 5",						"\t\t\t\t  ifTrue: [ ",						"\t\t\t\t\t  product := upper.",						"\t\t\t\t\t  1 to: delta - 1 do: [ :each | ",						"\t\t\t\t\t\t  product := (upper subtractNumber: each) multiplyNumber:",						"\t\t\t\t\t\t\t             product ].",						"\t\t\t\t\t  product ]",						"\t\t\t\t  ifFalse: [ ",						"\t\t\t\t\t  middle := self + upper >> 1.",						"\t\t\t\t\t  (self productTo: middle) multiplyNumber:",						"\t\t\t\t\t\t  (middle productTo: upper) ] ]"					],					"body" : [						"| delta product middle |",						"delta := upper subtractNumber: self.",						"^ delta <= 0",						"\t  ifTrue: [ Error signal ]",						"\t  ifFalse: [ ",						"\t\t  delta < 5",						"\t\t\t  ifTrue: [ ",						"\t\t\t\t  product := upper.",						"\t\t\t\t  1 to: delta - 1 do: [ :each | ",						"\t\t\t\t\t  product := (upper subtractNumber: each) multiplyNumber: product ].",						"\t\t\t\t  product ]",						"\t\t\t  ifFalse: [ ",						"\t\t\t\t  middle := self + upper >> 1.",						"\t\t\t\t  (self productTo: middle) multiplyNumber:",						"\t\t\t\t\t  (middle productTo: upper) ] ]"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [						"Return the product of all integers between ",						"   the receiver (exclusive) and upper (inclusive)."					],					"hash" : 20158918,					"argumentNames" : [						"upper"					]				}			}		},		"testProfileSlowFibonacciWithAddOnly" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"MWVisualizationsTest" : {					"sourceCode" : [						"testProfileSlowFibonacciWithAddOnly",						"",						"\t| handlerExecution tree metadata result wrapperAdd presenter |",						"\ttree := CTOrderPreservingTree new.",						"",						"\thandlerExecution := MWHandlerProfiling new",						"\t\t                    tree: tree;",						"\t\t                    yourself.",						"",						"\twrapperAdd := MWDecorator new",						"\t\t              compiledMethod: Number >> #addNumber:;",						"\t\t              handler: handlerExecution;",						"\t\t              yourself.",						"",						"\tresult := MWSession new",						"\t\t          add: wrapperAdd;",						"\t\t          value: [ 6 slowFibonacci ].",						"",						"\tmetadata := IdentityDictionary new.",						"\thandlerExecution metadata: metadata.",						"",						"\t\"Show here the new presenter.\"",						"\tpresenter := (MWSpPresenter on: tree -> metadata)",						"\t\t             useShapeSlotsDfsTree;",						"\t\t             openWithSpec;",						"\t\t             yourself.",						"",						"\tself",						"\t\tassert: tree size equals: 12;",						"\t\tassert: result equals: 7 fibonacciNumbers last. \" 55\"",						"",						"\tself",						"\t\texport: tree",						"\t\tpathSuffix: 'sequence-diagram'",						"\t\tonCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ]"					],					"body" : [						"| handlerExecution tree metadata result wrapperAdd presenter |",						"tree := CTOrderPreservingTree new.",						"",						"handlerExecution := MWHandlerProfiling new",						"\t                    tree: tree;",						"\t                    yourself.",						"",						"wrapperAdd := MWDecorator new",						"\t              compiledMethod: Number >> #addNumber:;",						"\t              handler: handlerExecution;",						"\t              yourself.",						"",						"result := MWSession new",						"\t          add: wrapperAdd;",						"\t          value: [ 6 slowFibonacci ].",						"",						"metadata := IdentityDictionary new.",						"handlerExecution metadata: metadata.",						"",						"\"Show here the new presenter.\"",						"presenter := (MWSpPresenter on: tree -> metadata)",						"\t             useShapeSlotsDfsTree;",						"\t             openWithSpec;",						"\t             yourself.",						"",						"self",						"\tassert: tree size equals: 12;",						"\tassert: result equals: 7 fibonacciNumbers last. \" 55\"",						"",						"self",						"\texport: tree",						"\tpathSuffix: 'sequence-diagram'",						"\tonCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ]"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 5771688,					"argumentNames" : [ ]				}			}		},		"testGCDof12and21" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"SymbolicIntegerTest" : {					"sourceCode" : [						"testGCDof12and21",						"",						"\t| quoRem |",						"\tquoRem := 12 >|< 21.",						"",						"\tself assert: quoRem equals: (12 gcd: 21).",						"",						"\t^ self exportSlotsGraphOf: quoRem"					],					"body" : [						"| quoRem |",						"quoRem := 12 >|< 21.",						"",						"self assert: quoRem equals: (12 gcd: 21).",						"",						"^ self exportSlotsGraphOf: quoRem"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 3920292,					"argumentNames" : [ ]				}			}		},		"testSequenceableCollectionEstrinInit" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"MWVisualizationsTest" : {					"sourceCode" : [						"testSequenceableCollectionEstrinInit",						"",						"\t| tree metadata result handlerExecution handlerCopying presenter |",						"\ttree := CTOrderPreservingTree new.",						"",						"\thandlerExecution := MWHandlerProfiling new",						"\t\t                    tree: tree;",						"\t\t                    yourself.",						"",						"\thandlerCopying := MWHandlerReceiverArgumentsCopying new",						"\t\t                  handler: handlerExecution;",						"\t\t                  yourself.",						"",						"\tresult := (MWSession withAllImplementations: { ",						"\t\t\t\t           (SequenceableCollection >> #estrin:init:).",						"\t\t\t\t           \"(Collection >> #inject:into:).\"",						"\t\t\t\t           (Number >> #addNumber:).",						"\t\t\t\t           (Number >> #multiplyNumber:) })",						"\t\t          do: [ :each | each handler: handlerCopying ];",						"\t\t          value: [ { 1. 3. 5. 6. 9 } estrin: 10 ].",						"",						"\tmetadata := IdentityDictionary new.",						"\thandlerExecution metadata: metadata.",						"\thandlerCopying metadata: metadata.",						"",						"\t\"Show here the new presenter.\"",						"\tpresenter := (MWSpPresenter on: tree -> metadata)",						"\t\t             useShapeSlotsDfsTree;",						"\t\t             openWithSpec;",						"\t\t             yourself.",						"",						"\tself",						"\t\tassert: tree size equals: 17;",						"\t\tassert: result equals: 13569.",						"",						"\tself",						"\t\texport: tree",						"\t\tpathSuffix: 'sequence-diagram'",						"\t\tonCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ];",						"\t\texportSlotsGraphOf: result"					],					"body" : [						"| tree metadata result handlerExecution handlerCopying presenter |",						"tree := CTOrderPreservingTree new.",						"",						"handlerExecution := MWHandlerProfiling new",						"\t                    tree: tree;",						"\t                    yourself.",						"",						"handlerCopying := MWHandlerReceiverArgumentsCopying new",						"\t                  handler: handlerExecution;",						"\t                  yourself.",						"",						"result := (MWSession withAllImplementations: { ",						"\t\t\t           (SequenceableCollection >> #estrin:init:).",						"\t\t\t           \"(Collection >> #inject:into:).\"",						"\t\t\t           (Number >> #addNumber:).",						"\t\t\t           (Number >> #multiplyNumber:) })",						"\t          do: [ :each | each handler: handlerCopying ];",						"\t          value: [ { 1. 3. 5. 6. 9 } estrin: 10 ].",						"",						"metadata := IdentityDictionary new.",						"handlerExecution metadata: metadata.",						"handlerCopying metadata: metadata.",						"",						"\"Show here the new presenter.\"",						"presenter := (MWSpPresenter on: tree -> metadata)",						"\t             useShapeSlotsDfsTree;",						"\t             openWithSpec;",						"\t             yourself.",						"",						"self",						"\tassert: tree size equals: 17;",						"\tassert: result equals: 13569.",						"",						"self",						"\texport: tree",						"\tpathSuffix: 'sequence-diagram'",						"\tonCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ];",						"\texportSlotsGraphOf: result"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 5771202,					"argumentNames" : [ ]				}			}		},		">|<" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"Fraction>>#kissingFractions",				"SymbolicIntegerTest>>#testGCDof9and21",				"SymbolicIntegerTest>>#testGCDof83and71",				"SymbolicIntegerTest>>#testGCDofZ17",				"SymbolicIntegerTest>>#testGCDofAdjacentFibonacciNumbers",				"SymbolicIntegerTest>>#testGCDof12and21"			],			"implementors" : {				"Integer" : {					"sourceCode" : [						">|< anObject",						"",						"\t^ anObject greatestCommonDisivorInteger: self"					],					"body" : [						"^ anObject greatestCommonDisivorInteger: self"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [ ],					"hash" : 18845632,					"argumentNames" : [						"anObject"					]				}			}		},		"testStandardQuoRem21Over9" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"SymbolicIntegerTest" : {					"sourceCode" : [						"testStandardQuoRem21Over9",						"",						"\t| quoRem |",						"\tquoRem := 21 /% 9.",						"",						"\tself assert: quoRem equals: 21 / 9.",						"",						"\t^ self exportSlotsGraphOf: quoRem"					],					"body" : [						"| quoRem |",						"quoRem := 21 /% 9.",						"",						"self assert: quoRem equals: 21 / 9.",						"",						"^ self exportSlotsGraphOf: quoRem"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 3920231,					"argumentNames" : [ ]				}			}		},		"testInspectProductTo" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"MWVisualizationsTest" : {					"sourceCode" : [						"testInspectProductTo",						"",						"\t| n factorial tree handlerExecution handlerCopying metadata presenter |",						"\ttree := CTOrderPreservingTree new.",						"",						"\thandlerExecution := MWHandlerProfiling new",						"\t\t                    tree: tree;",						"\t\t                    yourself.",						"",						"\thandlerCopying := MWHandlerReceiverArgumentsCopying new",						"\t\t                  handler: handlerExecution;",						"\t\t                  yourself.",						"",						"\tn := 1 << 4.",						"",						"\tfactorial := (MWSession withAllImplementations: { ",						"\t\t\t\t              (Integer >> #productTo:).",						"\t\t\t\t              (Number >> #addNumber:).",						"\t\t\t\t              \"(Number >> #subtractNumber:).\"",						"\t\t\t\t              (Number >> #multiplyNumber:) })",						"\t\t             do: [ :each | each handler: handlerCopying ];",						"\t\t             value: [ 1 productTo: n ].",						"",						"\tmetadata := IdentityDictionary new.",						"\thandlerExecution metadata: metadata.",						"\thandlerCopying metadata: metadata.",						"",						"\t\"Show here the new presenter.\"",						"\tpresenter := (MWSpPresenter on: tree -> metadata)",						"\t\t             useShapeSlotsDfsTree;",						"\t\t             openWithSpec;",						"\t\t             yourself.",						"\t\"\t\tuseShapeSlotsDfsTree;\"",						"",						"\tself",						"\t\tassert: tree size equals: 21;",						"\t\tassert: factorial equals: n factorial.",						"",						"\t^ self",						"\t\t  export: tree",						"\t\t  pathSuffix: 'sequence-diagram'",						"\t\t  onCanvasDo: [ :aCanvas :useless | ",						"\t\t\t  presenter currentCanvas: aCanvas ];",						"\t\t  exportSlotsGraphOf: factorial",						"\t\"exportShapeOf: tree",						"\t\t  accessorBlock: [ :aTree | ",						"\t\t\t  aTree asShapeValuesHorizontalTreeWithLabelShapes ]",						"\t\t  pathSuffix: 'contexts-tree';\""					],					"body" : [						"| n factorial tree handlerExecution handlerCopying metadata presenter |",						"tree := CTOrderPreservingTree new.",						"",						"handlerExecution := MWHandlerProfiling new",						"\t                    tree: tree;",						"\t                    yourself.",						"",						"handlerCopying := MWHandlerReceiverArgumentsCopying new",						"\t                  handler: handlerExecution;",						"\t                  yourself.",						"",						"n := 1 << 4.",						"",						"factorial := (MWSession withAllImplementations: { ",						"\t\t\t              (Integer >> #productTo:).",						"\t\t\t              (Number >> #addNumber:).",						"\t\t\t              \"(Number >> #subtractNumber:).\"",						"\t\t\t              (Number >> #multiplyNumber:) })",						"\t             do: [ :each | each handler: handlerCopying ];",						"\t             value: [ 1 productTo: n ].",						"",						"metadata := IdentityDictionary new.",						"handlerExecution metadata: metadata.",						"handlerCopying metadata: metadata.",						"",						"\"Show here the new presenter.\"",						"presenter := (MWSpPresenter on: tree -> metadata)",						"\t             useShapeSlotsDfsTree;",						"\t             openWithSpec;",						"\t             yourself.",						"\"\t\tuseShapeSlotsDfsTree;\"",						"",						"self",						"\tassert: tree size equals: 21;",						"\tassert: factorial equals: n factorial.",						"",						"^ self",						"\t  export: tree",						"\t  pathSuffix: 'sequence-diagram'",						"\t  onCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ];",						"\t  exportSlotsGraphOf: factorial",						"\"exportShapeOf: tree",						"\t\t  accessorBlock: [ :aTree | ",						"\t\t\t  aTree asShapeValuesHorizontalTreeWithLabelShapes ]",						"\t\t  pathSuffix: 'contexts-tree';\""					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 6033810,					"argumentNames" : [ ]				}			}		},		"testGCDof83and71" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"SymbolicIntegerTest" : {					"sourceCode" : [						"testGCDof83and71",						"",						"\t| quoRem |",						"\tquoRem := 83 >|< 71.",						"",						"\tself assert: quoRem equals: (83 gcd: 71).",						"",						"\t^ self exportSlotsGraphOf: quoRem"					],					"body" : [						"| quoRem |",						"quoRem := 83 >|< 71.",						"",						"self assert: quoRem equals: (83 gcd: 71).",						"",						"^ self exportSlotsGraphOf: quoRem"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 3920292,					"argumentNames" : [ ]				}			}		},		"/%" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"GreatestCommonDivisor>>#divisibility",				"GreatestCommonDivisor>>#asShapeDivisorOverGCD",				"GreatestCommonDivisor>>#asShapeDividendOverGCD",				"SymbolicIntegerTest>>#testStandardQuoRem21Over9",				"SymbolicIntegerTest>>#testQuoRem9Over21"			],			"implementors" : {				"Integer" : {					"sourceCode" : [						"/% anObject",						"",						"\t^ anObject quoRemInteger: self"					],					"body" : [						"^ anObject quoRemInteger: self"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [ ],					"hash" : 18845632,					"argumentNames" : [						"anObject"					]				}			}		},		"testInspectLargeIntegerProfiled" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"MWVisualizationsTest" : {					"sourceCode" : [						"testInspectLargeIntegerProfiled",						"",						"\t| m n large tree handlerExecution handlerCopying metadata presenter |",						"\ttree := CTOrderPreservingTree new.",						"",						"\thandlerExecution := MWHandlerProfiling new",						"\t\t                    tree: tree;",						"\t\t                    yourself.",						"",						"\thandlerCopying := MWHandlerReceiverArgumentsCopying new",						"\t\t                  handler: handlerExecution;",						"\t\t                  yourself.",						"",						"\tm := 835.",						"\tn := 714.",						"",						"\tlarge := (MWSession withAllImplementations: { ",						"\t\t\t\t          (Integer >> #karatsuba:base:).",						"\t\t\t\t          (Number >> #addNumber:).",						"\t\t\t\t          (Number >> #subtractNumber:).",						"\t\t\t\t          (Number >> #multiplyNumber:) })",						"\t\t         do: [ :each | each handler: handlerCopying ];",						"\t\t         value: [ large := m karatsuba: n base: 10 ].",						"",						"\tmetadata := IdentityDictionary new.",						"\thandlerExecution metadata: metadata.",						"\thandlerCopying metadata: metadata.",						"",						"\t\"Show here the new presenter.\"",						"\tpresenter := (MWSpPresenter on: tree -> metadata)",						"\t\t             useShapeSlotsDfsTree;",						"\t\t             openWithSpec;",						"\t\t             yourself.",						"",						"\tself",						"\t\tassert: tree size equals: 41;",						"\t\tassert: large equals: m * n.",						"",						"\t^ self",						"\t\t  export: tree",						"\t\t  pathSuffix: 'sequence-diagram'",						"\t\t  onCanvasDo: [ :aCanvas :useless | ",						"\t\t\t  presenter currentCanvas: aCanvas ];",						"\t\t  exportSlotsGraphOf: large",						"\t\"exportShapeOf: tree",						"\t\t  accessorBlock: [ :aTree | ",						"\t\t\t  aTree asShapeValuesHorizontalTreeWithLabelShapes ]",						"\t\t  pathSuffix: 'contexts-tree';\""					],					"body" : [						"| m n large tree handlerExecution handlerCopying metadata presenter |",						"tree := CTOrderPreservingTree new.",						"",						"handlerExecution := MWHandlerProfiling new",						"\t                    tree: tree;",						"\t                    yourself.",						"",						"handlerCopying := MWHandlerReceiverArgumentsCopying new",						"\t                  handler: handlerExecution;",						"\t                  yourself.",						"",						"m := 835.",						"n := 714.",						"",						"large := (MWSession withAllImplementations: { ",						"\t\t\t          (Integer >> #karatsuba:base:).",						"\t\t\t          (Number >> #addNumber:).",						"\t\t\t          (Number >> #subtractNumber:).",						"\t\t\t          (Number >> #multiplyNumber:) })",						"\t         do: [ :each | each handler: handlerCopying ];",						"\t         value: [ large := m karatsuba: n base: 10 ].",						"",						"metadata := IdentityDictionary new.",						"handlerExecution metadata: metadata.",						"handlerCopying metadata: metadata.",						"",						"\"Show here the new presenter.\"",						"presenter := (MWSpPresenter on: tree -> metadata)",						"\t             useShapeSlotsDfsTree;",						"\t             openWithSpec;",						"\t             yourself.",						"",						"self",						"\tassert: tree size equals: 41;",						"\tassert: large equals: m * n.",						"",						"^ self",						"\t  export: tree",						"\t  pathSuffix: 'sequence-diagram'",						"\t  onCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ];",						"\t  exportSlotsGraphOf: large",						"\"exportShapeOf: tree",						"\t\t  accessorBlock: [ :aTree | ",						"\t\t\t  aTree asShapeValuesHorizontalTreeWithLabelShapes ]",						"\t\t  pathSuffix: 'contexts-tree';\""					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 6296310,					"argumentNames" : [ ]				}			}		},		"a:b:" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"GreatestCommonDivisor>>#initialize",				"Integer>>#quoRemInteger:",				"Integer>>#quoRemMinimalInteger:",				"Integer>>#quoRemComplementaryInteger:",				"Integer>>#greatestCommonDisivorInteger:",				"QuoRemStandard>>#complement"			],			"implementors" : {				"QuoRemComplementary class" : {					"sourceCode" : [						"a: a b: b",						"",						"\t^ self basicNew",						"\t\t  a: a;",						"\t\t  b: b;",						"\t\t  initialize;",						"\t\t  yourself"					],					"body" : [						"^ self basicNew",						"\t  a: a;",						"\t  b: b;",						"\t  initialize;",						"\t  yourself"					],					"isTestMethod" : false,					"category" : "as yet unclassified",					"comment" : [ ],					"hash" : 37193707,					"argumentNames" : [						"a",						"b"					]				}			}		},		"testSequenceableCollectionHornerInit" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"MWVisualizationsTest" : {					"sourceCode" : [						"testSequenceableCollectionHornerInit",						"",						"\t| tree metadata result handlerExecution handlerCopying presenter |",						"\ttree := CTOrderPreservingTree new.",						"",						"\thandlerExecution := MWHandlerProfiling new",						"\t\t                    tree: tree;",						"\t\t                    yourself.",						"",						"\thandlerCopying := MWHandlerReceiverArgumentsCopying new",						"\t\t                  handler: handlerExecution;",						"\t\t                  yourself.",						"",						"\tresult := (MWSession withAllImplementations: { ",						"\t\t\t\t           (SequenceableCollection >> #horner:init:).",						"\t\t\t\t           \"(Collection >> #inject:into:).\"",						"\t\t\t\t           (Number >> #addNumber:).",						"\t\t\t\t           (Number >> #multiplyNumber:) })",						"\t\t          do: [ :each | each handler: handlerCopying ];",						"\t\t          value: [ { 1. 3. 5. 6 } hornerBase10 ].",						"",						"\tmetadata := IdentityDictionary new.",						"\thandlerExecution metadata: metadata.",						"\thandlerCopying metadata: metadata.",						"",						"\t\"Show here the new presenter.\"",						"\tpresenter := (MWSpPresenter on: tree -> metadata)",						"\t\t             useShapeSlotsDfsTree;",						"\t\t             openWithSpec;",						"\t\t             yourself.",						"",						"\tself",						"\t\tassert: tree size equals: 9;",						"\t\tassert: result equals: 1356.",						"",						"\tself",						"\t\texport: tree",						"\t\tpathSuffix: 'sequence-diagram'",						"\t\tonCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ];",						"\t\texportSlotsGraphOf: result"					],					"body" : [						"| tree metadata result handlerExecution handlerCopying presenter |",						"tree := CTOrderPreservingTree new.",						"",						"handlerExecution := MWHandlerProfiling new",						"\t                    tree: tree;",						"\t                    yourself.",						"",						"handlerCopying := MWHandlerReceiverArgumentsCopying new",						"\t                  handler: handlerExecution;",						"\t                  yourself.",						"",						"result := (MWSession withAllImplementations: { ",						"\t\t\t           (SequenceableCollection >> #horner:init:).",						"\t\t\t           \"(Collection >> #inject:into:).\"",						"\t\t\t           (Number >> #addNumber:).",						"\t\t\t           (Number >> #multiplyNumber:) })",						"\t          do: [ :each | each handler: handlerCopying ];",						"\t          value: [ { 1. 3. 5. 6 } hornerBase10 ].",						"",						"metadata := IdentityDictionary new.",						"handlerExecution metadata: metadata.",						"handlerCopying metadata: metadata.",						"",						"\"Show here the new presenter.\"",						"presenter := (MWSpPresenter on: tree -> metadata)",						"\t             useShapeSlotsDfsTree;",						"\t             openWithSpec;",						"\t             yourself.",						"",						"self",						"\tassert: tree size equals: 9;",						"\tassert: result equals: 1356.",						"",						"self",						"\texport: tree",						"\tpathSuffix: 'sequence-diagram'",						"\tonCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ];",						"\texportSlotsGraphOf: result"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 5771202,					"argumentNames" : [ ]				}			}		},		"slowFibonacci" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"Integer>>#slowFibonacci",				"MWHandlerTest>>#testSelfSendsSimpleUsingPlus",				"MWHandlerTest>>#testSelfSendsSimpleWithOutlinerShapes",				"MWHandlerTest>>#testProfileSlowFibonacciMemoing",				"MWHandlerTest>>#testSelfSendsSimple",				"MWHandlerTest>>#selfSend2",				"MWHandlerTest>>#selfSend3",				"MWHandlerTest>>#testTimingSlowFibonacciMemoing",				"MWHandlerTest>>#testProfileSlowFibonacci",				"MWVisualizationsTest>>#testProfileSlowFibonacciWithAddOnly",				"MWVisualizationsTest>>#testProfileSlowFibonacciWithAdd"			],			"implementors" : {				"Integer" : {					"sourceCode" : [						"slowFibonacci",						"",						"\t^ self < 2",						"\t\t  ifTrue: [ self ]",						"\t\t  ifFalse: [ ",						"\t\t  (self - 1) slowFibonacci addNumber: (self - 2) slowFibonacci ]"					],					"body" : [						"^ self < 2",						"\t  ifTrue: [ self ]",						"\t  ifFalse: [ ",						"\t  (self - 1) slowFibonacci addNumber: (self - 2) slowFibonacci ]"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [ ],					"hash" : 1807637,					"argumentNames" : [ ]				}			}		},		"quoRemInteger:" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"Integer>>#'/%'"			],			"implementors" : {				"Integer" : {					"sourceCode" : [						"quoRemInteger: anInteger",						"",						"\t^ QuoRemStandard a: anInteger b: self"					],					"body" : [						"^ QuoRemStandard a: anInteger b: self"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [ ],					"hash" : 18845683,					"argumentNames" : [						"anInteger"					]				}			}		},		"testProfileSlowFibonacciTailWithAdd" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"MWVisualizationsTest" : {					"sourceCode" : [						"testProfileSlowFibonacciTailWithAdd",						"",						"\t| wrapper handlerExecution tree metadata result wrapperAdd presenter |",						"\ttree := CTOrderPreservingTree new.",						"",						"\thandlerExecution := MWHandlerProfiling new",						"\t\t                    tree: tree;",						"\t\t                    yourself.",						"",						"\twrapper := MWDecorator new",						"\t\t           compiledMethod: Integer >> #slowFibonacci:tail:;",						"\t\t           handler: handlerExecution;",						"\t\t           yourself.",						"",						"\twrapperAdd := MWDecorator new",						"\t\t              compiledMethod: Number >> #addNumber:;",						"\t\t              handler: handlerExecution;",						"\t\t              yourself.",						"",						"\tresult := MWSession new",						"\t\t          add: wrapper;",						"\t\t          add: wrapperAdd;",						"\t\t          value: [ 6 slowFibonacci: 0 tail: 1 ].",						"",						"\tmetadata := IdentityDictionary new.",						"\thandlerExecution metadata: metadata.",						"",						"\t\"Show here the new presenter.\"",						"\tpresenter := (MWSpPresenter on: tree -> metadata)",						"\t\t             useShapeSlotsDfsTree;",						"\t\t             openWithSpec;",						"\t\t             yourself.",						"",						"\tself",						"\t\tassert: tree size equals: 13;",						"\t\tassert: result equals: 7 fibonacciNumbers last.",						"",						"\tself",						"\t\texport: tree",						"\t\tpathSuffix: 'sequence-diagram'",						"\t\tonCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ]"					],					"body" : [						"| wrapper handlerExecution tree metadata result wrapperAdd presenter |",						"tree := CTOrderPreservingTree new.",						"",						"handlerExecution := MWHandlerProfiling new",						"\t                    tree: tree;",						"\t                    yourself.",						"",						"wrapper := MWDecorator new",						"\t           compiledMethod: Integer >> #slowFibonacci:tail:;",						"\t           handler: handlerExecution;",						"\t           yourself.",						"",						"wrapperAdd := MWDecorator new",						"\t              compiledMethod: Number >> #addNumber:;",						"\t              handler: handlerExecution;",						"\t              yourself.",						"",						"result := MWSession new",						"\t          add: wrapper;",						"\t          add: wrapperAdd;",						"\t          value: [ 6 slowFibonacci: 0 tail: 1 ].",						"",						"metadata := IdentityDictionary new.",						"handlerExecution metadata: metadata.",						"",						"\"Show here the new presenter.\"",						"presenter := (MWSpPresenter on: tree -> metadata)",						"\t             useShapeSlotsDfsTree;",						"\t             openWithSpec;",						"\t             yourself.",						"",						"self",						"\tassert: tree size equals: 13;",						"\tassert: result equals: 7 fibonacciNumbers last.",						"",						"self",						"\texport: tree",						"\tpathSuffix: 'sequence-diagram'",						"\tonCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ]"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 6033889,					"argumentNames" : [ ]				}			}		},		"testInspectFactorialRecursive" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"MWVisualizationsTest" : {					"sourceCode" : [						"testInspectFactorialRecursive",						"",						"\t| n factorial tree handlerExecution handlerCopying metadata presenter |",						"\ttree := CTOrderPreservingTree new.",						"",						"\thandlerExecution := MWHandlerProfiling new",						"\t\t                    tree: tree;",						"\t\t                    yourself.",						"",						"\thandlerCopying := MWHandlerReceiverArgumentsCopying new",						"\t\t                  handler: handlerExecution;",						"\t\t                  yourself.",						"",						"\tn := 1 << 4.",						"",						"\tfactorial := (MWSession withAllImplementations: { ",						"\t\t\t\t              (Integer >> #factorialRecursive).",						"\t\t\t\t              \"(Number >> #subtractNumber:).\"",						"\t\t\t\t              (Number >> #multiplyNumber:) })",						"\t\t             do: [ :each | each handler: handlerCopying ];",						"\t\t             value: [ n factorialRecursive ].",						"",						"\tmetadata := IdentityDictionary new.",						"\thandlerExecution metadata: metadata.",						"\thandlerCopying metadata: metadata.",						"",						"\t\"Show here the new presenter.\"",						"\tpresenter := (MWSpPresenter on: tree -> metadata)",						"\t\t             useShapeSlotsDfsTree;",						"\t\t             openWithSpec;",						"\t\t             yourself.",						"\t\"\t\tuseShapeSlotsDfsTree;\"",						"",						"\tself",						"\t\tassert: tree size equals: 33;",						"\t\tassert: factorial equals: 20922789888000;",						"\t\tassert: factorial equals: n factorial.",						"",						"\t^ self",						"\t\t  export: tree",						"\t\t  pathSuffix: 'sequence-diagram'",						"\t\t  onCanvasDo: [ :aCanvas :useless | ",						"\t\t\t  presenter currentCanvas: aCanvas ];",						"\t\t  exportSlotsGraphOf: factorial",						"\t\"exportShapeOf: tree",						"\t\t  accessorBlock: [ :aTree | ",						"\t\t\t  aTree asShapeValuesHorizontalTreeWithLabelShapes ]",						"\t\t  pathSuffix: 'contexts-tree';\""					],					"body" : [						"| n factorial tree handlerExecution handlerCopying metadata presenter |",						"tree := CTOrderPreservingTree new.",						"",						"handlerExecution := MWHandlerProfiling new",						"\t                    tree: tree;",						"\t                    yourself.",						"",						"handlerCopying := MWHandlerReceiverArgumentsCopying new",						"\t                  handler: handlerExecution;",						"\t                  yourself.",						"",						"n := 1 << 4.",						"",						"factorial := (MWSession withAllImplementations: { ",						"\t\t\t              (Integer >> #factorialRecursive).",						"\t\t\t              \"(Number >> #subtractNumber:).\"",						"\t\t\t              (Number >> #multiplyNumber:) })",						"\t             do: [ :each | each handler: handlerCopying ];",						"\t             value: [ n factorialRecursive ].",						"",						"metadata := IdentityDictionary new.",						"handlerExecution metadata: metadata.",						"handlerCopying metadata: metadata.",						"",						"\"Show here the new presenter.\"",						"presenter := (MWSpPresenter on: tree -> metadata)",						"\t             useShapeSlotsDfsTree;",						"\t             openWithSpec;",						"\t             yourself.",						"\"\t\tuseShapeSlotsDfsTree;\"",						"",						"self",						"\tassert: tree size equals: 33;",						"\tassert: factorial equals: 20922789888000;",						"\tassert: factorial equals: n factorial.",						"",						"^ self",						"\t  export: tree",						"\t  pathSuffix: 'sequence-diagram'",						"\t  onCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ];",						"\t  exportSlotsGraphOf: factorial",						"\"exportShapeOf: tree",						"\t\t  accessorBlock: [ :aTree | ",						"\t\t\t  aTree asShapeValuesHorizontalTreeWithLabelShapes ]",						"\t\t  pathSuffix: 'contexts-tree';\""					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 6034385,					"argumentNames" : [ ]				}			}		},		"testGCDofMultiplicativeInversesInZ17" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"SymbolicIntegerTest" : {					"sourceCode" : [						"testGCDofMultiplicativeInversesInZ17",						"",						"\t| gcds inverses |",						"\tgcds := self testGCDofZ17.",						"\tinverses := PointArray new: gcds size.",						"\tgcds withIndexDo: [ :each :index | ",						"\t\tinverses at: index put: each b @ each inverseMultiplicativeOfb key ].",						"",						"\t^ self exportSlotsGraphOf: inverses"					],					"body" : [						"| gcds inverses |",						"gcds := self testGCDofZ17.",						"inverses := PointArray new: gcds size.",						"gcds withIndexDo: [ :each :index | ",						"\tinverses at: index put: each b @ each inverseMultiplicativeOfb key ].",						"",						"^ self exportSlotsGraphOf: inverses"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 4182957,					"argumentNames" : [ ]				}			}		},		"slowFibonacci:tail:" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"Integer>>#slowFibonacci:tail:",				"MWVisualizationsTest>>#testProfileSlowFibonacciTailWithAdd"			],			"implementors" : {				"Integer" : {					"sourceCode" : [						"slowFibonacci: a tail: b",						"",						"\t^ self > 0",						"\t\t  ifTrue: [ self - 1 slowFibonacci: b tail: (a addNumber: b) ]",						"\t\t  ifFalse: [ a ]"					],					"body" : [						"^ self > 0",						"\t  ifTrue: [ self - 1 slowFibonacci: b tail: (a addNumber: b) ]",						"\t  ifFalse: [ a ]"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [ ],					"hash" : 35886250,					"argumentNames" : [						"a",						"b"					]				}			}		},		"testProfileSlowFibonacciWithAdd" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"MWVisualizationsTest" : {					"sourceCode" : [						"testProfileSlowFibonacciWithAdd",						"",						"\t| wrapper handlerExecution tree metadata result wrapperAdd presenter |",						"\ttree := CTOrderPreservingTree new.",						"",						"\thandlerExecution := MWHandlerProfiling new",						"\t\t                    tree: tree;",						"\t\t                    yourself.",						"",						"\twrapper := MWDecorator new",						"\t\t           compiledMethod: Integer >> #slowFibonacci;",						"\t\t           handler: handlerExecution;",						"\t\t           yourself.",						"",						"\twrapperAdd := MWDecorator new",						"\t\t              compiledMethod: Number >> #addNumber:;",						"\t\t              handler: handlerExecution;",						"\t\t              yourself.",						"",						"\tresult := MWSession new",						"\t\t          add: wrapper;",						"\t\t          add: wrapperAdd;",						"\t\t          value: [ 6 slowFibonacci ].",						"",						"\tmetadata := IdentityDictionary new.",						"\thandlerExecution metadata: metadata.",						"",						"\t\"Show here the new presenter.\"",						"\tpresenter := (MWSpPresenter on: tree -> metadata)",						"\t\t             useShapeSlotsDfsTree;",						"\t\t             openWithSpec;",						"\t\t             yourself.",						"",						"\tself",						"\t\tassert: tree size equals: 37;",						"\t\tassert: result equals: 7 fibonacciNumbers last. \" 55\"",						"",						"\tself",						"\t\texport: tree",						"\t\tpathSuffix: 'sequence-diagram'",						"\t\tonCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ]"					],					"body" : [						"| wrapper handlerExecution tree metadata result wrapperAdd presenter |",						"tree := CTOrderPreservingTree new.",						"",						"handlerExecution := MWHandlerProfiling new",						"\t                    tree: tree;",						"\t                    yourself.",						"",						"wrapper := MWDecorator new",						"\t           compiledMethod: Integer >> #slowFibonacci;",						"\t           handler: handlerExecution;",						"\t           yourself.",						"",						"wrapperAdd := MWDecorator new",						"\t              compiledMethod: Number >> #addNumber:;",						"\t              handler: handlerExecution;",						"\t              yourself.",						"",						"result := MWSession new",						"\t          add: wrapper;",						"\t          add: wrapperAdd;",						"\t          value: [ 6 slowFibonacci ].",						"",						"metadata := IdentityDictionary new.",						"handlerExecution metadata: metadata.",						"",						"\"Show here the new presenter.\"",						"presenter := (MWSpPresenter on: tree -> metadata)",						"\t             useShapeSlotsDfsTree;",						"\t             openWithSpec;",						"\t             yourself.",						"",						"self",						"\tassert: tree size equals: 37;",						"\tassert: result equals: 7 fibonacciNumbers last. \" 55\"",						"",						"self",						"\texport: tree",						"\tpathSuffix: 'sequence-diagram'",						"\tonCanvasDo: [ :aCanvas :useless | presenter currentCanvas: aCanvas ]"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 6033889,					"argumentNames" : [ ]				}			}		},		"testQuoRemMinimal9Over21" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"SymbolicIntegerTest" : {					"sourceCode" : [						"testQuoRemMinimal9Over21",						"",						"\t| quoRem |",						"\tquoRem := 9 /%< 21.",						"",						"\tself assert: quoRem equals: 9 / 21.",						"",						"\t^ self exportSlotsGraphOf: quoRem"					],					"body" : [						"| quoRem |",						"quoRem := 9 /%< 21.",						"",						"self assert: quoRem equals: 9 / 21.",						"",						"^ self exportSlotsGraphOf: quoRem"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 3920231,					"argumentNames" : [ ]				}			}		},		"testComplementaryQuoRem9Over21" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"SymbolicIntegerTest" : {					"sourceCode" : [						"testComplementaryQuoRem9Over21",						"",						"\t| quoRem |",						"\tquoRem := 9 /%~ 21.",						"",						"\tself assert: quoRem equals: 9 / 21.",						"",						"\t^ self exportSlotsGraphOf: quoRem"					],					"body" : [						"| quoRem |",						"quoRem := 9 /%~ 21.",						"",						"self assert: quoRem equals: 9 / 21.",						"",						"^ self exportSlotsGraphOf: quoRem"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 3920231,					"argumentNames" : [ ]				}			}		},		"testGCDof9and21" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"SymbolicIntegerTest" : {					"sourceCode" : [						"testGCDof9and21",						"",						"\t| quoRem |",						"\tquoRem := 9 >|< 21.",						"",						"\tself assert: quoRem equals: (9 gcd: 21).",						"",						"\t^ self exportSlotsGraphOf: quoRem"					],					"body" : [						"| quoRem |",						"quoRem := 9 >|< 21.",						"",						"self assert: quoRem equals: (9 gcd: 21).",						"",						"^ self exportSlotsGraphOf: quoRem"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 3920292,					"argumentNames" : [ ]				}			}		},		"factorialRecursive" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc",				"Integer>>#factorialRecursive",				"MWVisualizationsTest>>#testInspectFactorialRecursive"			],			"implementors" : {				"Integer" : {					"sourceCode" : [						"factorialRecursive",						"",						"\t^ self > 0",						"\t\t  ifTrue: [ ",						"\t\t  self multiplyNumber: (self subtractNumber: 1) factorialRecursive ]",						"\t\t  ifFalse: [ ",						"\t\t\t  self = 0",						"\t\t\t\t  ifTrue: [ 1 ]",						"\t\t\t\t  ifFalse: [ self error: 'Not valid for negative integers' ] ]"					],					"body" : [						"^ self > 0",						"\t  ifTrue: [ ",						"\t  self multiplyNumber: (self subtractNumber: 1) factorialRecursive ]",						"\t  ifFalse: [ ",						"\t\t  self = 0",						"\t\t\t  ifTrue: [ 1 ]",						"\t\t\t  ifFalse: [ self error: 'Not valid for negative integers' ] ]"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [ ],					"hash" : 1808412,					"argumentNames" : [ ]				}			}		},		"testGCDofAdjacentFibonacciNumbers" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptSymbolicDivisibilityForDoc"			],			"implementors" : {				"SymbolicIntegerTest" : {					"sourceCode" : [						"testGCDofAdjacentFibonacciNumbers",						"",						"\t| fibs gcds |",						"\tfibs := OrderedCollection with: 1 with: 1.",						"",						"\t3 to: 11 do: [ :i | fibs add: (fibs at: i - 2) + (fibs at: i - 1) ].",						"",						"\tgcds := fibs",						"\t\t        with: fibs allButFirst , { (fibs lastButOne + fibs last) }",						"\t\t        collect: [ :r :s | r >|< s ].",						"",						"\tself assert: gcds equals: (gcds collect: [ :each | 1 ]).",						"",						"\t^ self exportSlotsGraphOf: gcds"					],					"body" : [						"| fibs gcds |",						"fibs := OrderedCollection with: 1 with: 1.",						"",						"3 to: 11 do: [ :i | fibs add: (fibs at: i - 2) + (fibs at: i - 1) ].",						"",						"gcds := fibs",						"\t        with: fibs allButFirst , { (fibs lastButOne + fibs last) }",						"\t        collect: [ :r :s | r >|< s ].",						"",						"self assert: gcds equals: (gcds collect: [ :each | 1 ]).",						"",						"^ self exportSlotsGraphOf: gcds"					],					"isTestMethod" : true,					"category" : "tests",					"comment" : [ ],					"hash" : 4445880,					"argumentNames" : [ ]				}			}		}	}}