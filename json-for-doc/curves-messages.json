{	"classes" : {		"RSParametricCurveTest" : {			"hash" : 2440960,			"definition" : "TestCase subclass: #RSParametricCurveTest\r\tuses: TIceImagesExporting\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Containers-Essentials-Tests'",			"comment" : [				"This class contains tests"			],			"category" : "Containers-Essentials-Tests"		},		"Point" : {			"hash" : 13824,			"definition" : "Object subclass: #Point\r\tinstanceVariableNames: 'x y'\r\tclassVariableNames: ''\r\tpackage: 'Kernel-BasicObjects'",			"comment" : [				"I represent an x,y pair of numbers usually designating a location on the screen.",				"",				"My instances are created either using the message `@` or `x:y:` or `r:degrees:` as follows:",				"",				"```",				"| pt |",				"pt := 10@20.",				"pt x ",				">>> 10",				"pt y",				">>> 20 \t\t\t ",				"```",				"",				"```",				"| pt |",				"pt := Point x: 10 y: 20.",				"pt x ",				"> 10",				"pt y",				"> 20 \t\t\t ",				"```",				"",				"I define many nice messages that deal with point such as: ",				"- arithmetic such as \\+, \\*, reciprocal, min, abs,",				"- comparison \\<, \\<=, \\=, \\>, \\>=, closeTo: ",				"- geometry such as sideOf:, to:intersects:to:, ",				"- polar coordinates,",				"- extent such as scaleTo:",				"- transformation such as negated, translatedBy:, scaleBy:",				"- rounding with roundTo:, roundUpTo:, truncateTo:, truncated",				""			],			"category" : "Kernel-BasicObjects"		},		"RSBasicShapeExamples" : {			"hash" : 2361088,			"definition" : "RSAbstractExamples subclass: #RSBasicShapeExamples\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Roassal3-Examples-Basic'",			"comment" : [				"I have the basic examples for shapes"			],			"category" : "Roassal3-Examples-Basic"		}	},	"messages" : {		"lineParametricUnitCircle" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#example45ParametricUnitCircle",				"RSParametricCurveTest>>#testLineParametricUnitCircle"			],			"implementors" : {				"RSBasicShapeExamples" : {					"sourceCode" : [						"lineParametricUnitCircle",						"",						"\t^ RSParametricLineXY new",						"\t\t  param: ((0 to: Float pi * 2) linspace: 100);",						"\t\t  x: [ :t | t cos ] y: [ :t | t sin ];",						"\t\t  scale: 100"					],					"body" : [						"^ RSParametricLineXY new",						"\t  param: ((0 to: Float pi * 2) linspace: 100);",						"\t  x: [ :t | t cos ] y: [ :t | t sin ];",						"\t  scale: 100"					],					"isTestMethod" : false,					"category" : "lines",					"comment" : [ ],					"hash" : 3157783,					"argumentNames" : [ ]				}			}		},		"lineDeCasteljauLineNoteBox" : {			"implementors" : {				"RSBasicShapeExamples" : {					"sourceCode" : [						"lineDeCasteljauLineNoteBox",						"",						"\t^ RSdeCasteljauLine new",						"\t\t  samples: 50;",						"\t\t  controlPoints: { ",						"\t\t\t\t  (0 @ 0).",						"\t\t\t\t  (8.461 @ 36.411).",						"\t\t\t\t  (0.6 @ 129.887).",						"\t\t\t\t  (25.3 @ 195.304).",						"\t\t\t\t  (-67.3 @ 222.719).",						"\t\t\t\t  (16.72 @ 245.576).",						"\t\t\t\t  (-55.8 @ 178.406).",						"\t\t\t\t  (60 @ 136.3).",						"\t\t\t\t  (136 @ 136).",						"\t\t\t\t  (142.2 @ 222.332).",						"\t\t\t\t  (393.292 @ 192.739).",						"\t\t\t\t  (247.8 @ 244.8).",						"\t\t\t\t  (179.5 @ 201.105).",						"\t\t\t\t  (221.9 @ 163.04).",						"\t\t\t\t  (200 @ 125.8).",						"\t\t\t\t  (204.4 @ 101.697).",						"\t\t\t\t  (210.405 @ 85.124).",						"\t\t\t\t  (217.89 @ 18.03).",						"\t\t\t\t  (151.73 @ 29.54).",						"\t\t\t\t  (244.5 @ -26.58).",						"\t\t\t\t  (318.633 @ -42.131).",						"\t\t\t\t  (145.27 @ 1.9).",						"\t\t\t\t  (52.05 @ 8.718).",						"\t\t\t\t  (0 @ 0) };",						"\t\t  yourself"					],					"body" : [						"^ RSdeCasteljauLine new",						"\t  samples: 50;",						"\t  controlPoints: { ",						"\t\t\t  (0 @ 0).",						"\t\t\t  (8.461 @ 36.411).",						"\t\t\t  (0.6 @ 129.887).",						"\t\t\t  (25.3 @ 195.304).",						"\t\t\t  (-67.3 @ 222.719).",						"\t\t\t  (16.72 @ 245.576).",						"\t\t\t  (-55.8 @ 178.406).",						"\t\t\t  (60 @ 136.3).",						"\t\t\t  (136 @ 136).",						"\t\t\t  (142.2 @ 222.332).",						"\t\t\t  (393.292 @ 192.739).",						"\t\t\t  (247.8 @ 244.8).",						"\t\t\t  (179.5 @ 201.105).",						"\t\t\t  (221.9 @ 163.04).",						"\t\t\t  (200 @ 125.8).",						"\t\t\t  (204.4 @ 101.697).",						"\t\t\t  (210.405 @ 85.124).",						"\t\t\t  (217.89 @ 18.03).",						"\t\t\t  (151.73 @ 29.54).",						"\t\t\t  (244.5 @ -26.58).",						"\t\t\t  (318.633 @ -42.131).",						"\t\t\t  (145.27 @ 1.9).",						"\t\t\t  (52.05 @ 8.718).",						"\t\t\t  (0 @ 0) };",						"\t  yourself"					],					"isTestMethod" : false,					"category" : "lines",					"comment" : [ ],					"hash" : 3289953,					"argumentNames" : [ ]				}			},			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#example44deCasteljauLineNoteBox",				"RSBasicShapeExamples>>#example44deCasteljauLineNoteBoxDegreeElevation",				"RSParametricCurveTest>>#testLineDeCasteljauLineNoteBox"			]		},		"lineParametricButterfly" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#example45ParametricButterfly",				"RSParametricCurveTest>>#testLineParametricButterfly"			],			"implementors" : {				"RSBasicShapeExamples" : {					"sourceCode" : [						"lineParametricButterfly",						"",						"\t^ RSParametricLineXY new",						"\t\t  param: ((0 to: Float pi * 12) linspace: 10000);",						"\t\t  x: [ :t | ",						"\t\t\t  t sin",						"\t\t\t  * (t cos exp - (2 * (4 * t) cos) - ((t / 12) sin raisedTo: 5)) ]",						"\t\t  y: [ :t | ",						"\t\t\t  t cos",						"\t\t\t  * (t cos exp - (2 * (4 * t) cos) - ((t / 12) sin raisedTo: 5)) ];",						"\t\t  scale: 30"					],					"body" : [						"^ RSParametricLineXY new",						"\t  param: ((0 to: Float pi * 12) linspace: 10000);",						"\t  x: [ :t | ",						"\t\t  t sin",						"\t\t  * (t cos exp - (2 * (4 * t) cos) - ((t / 12) sin raisedTo: 5)) ]",						"\t  y: [ :t | ",						"\t\t  t cos",						"\t\t  * (t cos exp - (2 * (4 * t) cos) - ((t / 12) sin raisedTo: 5)) ];",						"\t  scale: 30"					],					"isTestMethod" : false,					"category" : "lines",					"comment" : [ ],					"hash" : 3157807,					"argumentNames" : [ ]				}			}		},		"unitAffine:at:and:at:" : {			"implementors" : {				"Point" : {					"sourceCode" : [						"unitAffine: aPoint at: aParam and: anotherPoint at: anotherParam",						"",						"\t| t s |",						"\tt := aParam min: 1 max: 0.",						"\ts := anotherParam min: 1 max: 0.",						"",						"",						"\t^ self * t + (aPoint * s) + (1 - t - s * anotherPoint)"					],					"body" : [						"| t s |",						"t := aParam min: 1 max: 0.",						"s := anotherParam min: 1 max: 0.",						"",						"",						"^ self * t + (aPoint * s) + (1 - t - s * anotherPoint)"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [ ],					"hash" : 69492052,					"argumentNames" : [						"aPoint",						"aParam",						"anotherPoint",						"anotherParam"					]				}			},			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#groupBaricentricCoordinatesTriangle",				"RSParametricCurveTest>>#sutBaricentricCoordinatesTriangle:"			]		},		"lineParametricNeil2" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#example45ParametricNeil2",				"RSParametricCurveTest>>#testLineParametricNeil2"			],			"implementors" : {				"RSBasicShapeExamples" : {					"sourceCode" : [						"lineParametricNeil2",						"",						"\t^ RSParametricLineXY new",						"\t\t  param: ((-2 to: 2) linspace: 100);",						"\t\t  x: [ :t | t raisedTo: 2 ] y: [ :t | (t raisedTo: 3) - t ];",						"\t\t  scale: 10"					],					"body" : [						"^ RSParametricLineXY new",						"\t  param: ((-2 to: 2) linspace: 100);",						"\t  x: [ :t | t raisedTo: 2 ] y: [ :t | (t raisedTo: 3) - t ];",						"\t  scale: 10"					],					"isTestMethod" : false,					"category" : "lines",					"comment" : [ ],					"hash" : 3157479,					"argumentNames" : [ ]				}			}		},		"sutBaricentricCoordinates:" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSParametricCurveTest>>#testBaricentricCoordinates",				"RSParametricCurveTest>>#exampleBaricentricCoordinates"			],			"implementors" : {				"RSParametricCurveTest" : {					"sourceCode" : [						"sutBaricentricCoordinates: aBlock",						"",						"\t| aPoint anotherPoint param baricentricPoint |",						"\taPoint := 100 @ 100.",						"\tanotherPoint := 300 @ 400.",						"\tparam := 1 / 4.",						"",						"\tbaricentricPoint := aPoint unitAffine: anotherPoint at: param.",						"",						"\tself assert: baricentricPoint equals: 250 @ 325.",						"",						"\t^ aBlock",						"\t\t  value: { ",						"\t\t\t\t  aPoint.",						"\t\t\t\t  anotherPoint.",						"\t\t\t\t  baricentricPoint }",						"\t\t  value: param"					],					"body" : [						"| aPoint anotherPoint param baricentricPoint |",						"aPoint := 100 @ 100.",						"anotherPoint := 300 @ 400.",						"param := 1 / 4.",						"",						"baricentricPoint := aPoint unitAffine: anotherPoint at: param.",						"",						"self assert: baricentricPoint equals: 250 @ 325.",						"",						"^ aBlock",						"\t  value: { ",						"\t\t\t  aPoint.",						"\t\t\t  anotherPoint.",						"\t\t\t  baricentricPoint }",						"\t  value: param"					],					"isTestMethod" : false,					"category" : "tests",					"comment" : [ ],					"hash" : 21326420,					"argumentNames" : [						"aBlock"					]				}			}		},		"lineParametricHypotrochoid" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#example45ParametricHypotrochoid",				"RSParametricCurveTest>>#testLineParametricHypotrochoid"			],			"implementors" : {				"RSBasicShapeExamples" : {					"sourceCode" : [						"lineParametricHypotrochoid",						"",						"\t| s r d a b |",						"\ts := 5.",						"\tr := 3.",						"\td := 5.",						"",						"\ta := s - r.",						"\tb := a / r.",						"",						"\t^ RSParametricLineXY new",						"\t\t  param: ((-10 to: 10) linspace: 10000);",						"\t\t  x: [ :t | a * t cos + (d * (b * t) cos) ]",						"\t\t  y: [ :t | a * t sin - (d * (b * t) sin) ];",						"\t\t  scale: 10"					],					"body" : [						"| s r d a b |",						"s := 5.",						"r := 3.",						"d := 5.",						"",						"a := s - r.",						"b := a / r.",						"",						"^ RSParametricLineXY new",						"\t  param: ((-10 to: 10) linspace: 10000);",						"\t  x: [ :t | a * t cos + (d * (b * t) cos) ]",						"\t  y: [ :t | a * t sin - (d * (b * t) sin) ];",						"\t  scale: 10"					],					"isTestMethod" : false,					"category" : "lines",					"comment" : [ ],					"hash" : 4467828,					"argumentNames" : [ ]				}			}		},		"noteLoremIpsum" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#example46NoteLoremIpsum",				"RSParametricCurveTest>>#testNoteLoremIpsum"			],			"implementors" : {				"RSBasicShapeExamples" : {					"sourceCode" : [						"noteLoremIpsum",						"",						"\t^ RSLabel new",						"\t\t  text: (String loremIpsum: 50);",						"\t\t  useDefaultCodeFont;",						"\t\t  padded: Float goldenPlatinumRatio",						"\t\t  withNoteDo: [ :aBox | aBox color: Color yellow translucent ]"					],					"body" : [						"^ RSLabel new",						"\t  text: (String loremIpsum: 50);",						"\t  useDefaultCodeFont;",						"\t  padded: Float goldenPlatinumRatio",						"\t  withNoteDo: [ :aBox | aBox color: Color yellow translucent ]"					],					"isTestMethod" : false,					"category" : "lines",					"comment" : [ ],					"hash" : 3157075,					"argumentNames" : [ ]				}			}		},		"unitAffine:at:" : {			"implementors" : {				"Point" : {					"sourceCode" : [						"unitAffine: aPoint at: aParam",						"",						"\t| t |",						"\tt := aParam min: 1 max: 0.",						"",						"\t^ self * t + (1 - t * aPoint)"					],					"body" : [						"| t |",						"t := aParam min: 1 max: 0.",						"",						"^ self * t + (1 - t * aPoint)"					],					"isTestMethod" : false,					"category" : "*Containers-Essentials",					"comment" : [ ],					"hash" : 35150069,					"argumentNames" : [						"aPoint",						"aParam"					]				}			},			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#groupBaricentricCoordinatesTriangle",				"RSParametricCurveTest>>#groupBaricentricCoordinatesPoint:anotherPoint:yetAnotherPoint:baricentricPoint:at:at:",				"RSParametricCurveTest>>#groupBaricentricCoordinatesPoint:anotherPoint:baricentricPoint:at:",				"RSParametricCurveTest>>#sutBaricentricCoordinates:",				"RSdeCasteljauLine>>#deCasteljau:at:",				"RSdeCasteljauLine>>#increment"			]		},		"lineParametricLissajous" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#example45ParametricLissajous",				"RSParametricCurveTest>>#testLineParametricLissajous"			],			"implementors" : {				"RSBasicShapeExamples" : {					"sourceCode" : [						"lineParametricLissajous",						"",						"\t^ RSParametricLineXY new",						"\t\t  param: ((0 to: Float pi * 2) linspace: 1000);",						"\t\t  x: [ :t | (3 * t) cos ] y: [ :t | (2 * t) sin ];",						"\t\t  scale: 100"					],					"body" : [						"^ RSParametricLineXY new",						"\t  param: ((0 to: Float pi * 2) linspace: 1000);",						"\t  x: [ :t | (3 * t) cos ] y: [ :t | (2 * t) sin ];",						"\t  scale: 100"					],					"isTestMethod" : false,					"category" : "lines",					"comment" : [ ],					"hash" : 3157807,					"argumentNames" : [ ]				}			}		},		"sutBaricentricCoordinatesTriangle:" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSParametricCurveTest>>#exampleBaricentricCoordinatesTriangle",				"RSParametricCurveTest>>#testBaricentricCoordinatesTriangle"			],			"implementors" : {				"RSParametricCurveTest" : {					"sourceCode" : [						"sutBaricentricCoordinatesTriangle: aBlock",						"",						"\t| aPoint anotherPoint param baricentricPoint yetAnotherPoint anotherParam |",						"\taPoint := 100 @ 100.",						"\tanotherPoint := 300 @ 400.",						"\tyetAnotherPoint := -100 @ 250.",						"",						"\tparam := 1 / 6.",						"\tanotherParam := 1 / 2.",						"",						"\tbaricentricPoint := aPoint",						"\t\t                    unitAffine: anotherPoint",						"\t\t                    at: param",						"\t\t                    and: yetAnotherPoint",						"\t\t                    at: anotherParam.",						"",						"\tself assert: baricentricPoint equals: 400 / 3 @ 300.",						"",						"\t^ aBlock",						"\t\t  value: { ",						"\t\t\t\t  aPoint.",						"\t\t\t\t  anotherPoint.",						"\t\t\t\t  yetAnotherPoint.",						"\t\t\t\t  baricentricPoint }",						"\t\t  value: param",						"\t\t  value: anotherParam"					],					"body" : [						"| aPoint anotherPoint param baricentricPoint yetAnotherPoint anotherParam |",						"aPoint := 100 @ 100.",						"anotherPoint := 300 @ 400.",						"yetAnotherPoint := -100 @ 250.",						"",						"param := 1 / 6.",						"anotherParam := 1 / 2.",						"",						"baricentricPoint := aPoint",						"\t                    unitAffine: anotherPoint",						"\t                    at: param",						"\t                    and: yetAnotherPoint",						"\t                    at: anotherParam.",						"",						"self assert: baricentricPoint equals: 400 / 3 @ 300.",						"",						"^ aBlock",						"\t  value: { ",						"\t\t\t  aPoint.",						"\t\t\t  anotherPoint.",						"\t\t\t  yetAnotherPoint.",						"\t\t\t  baricentricPoint }",						"\t  value: param",						"\t  value: anotherParam"					],					"isTestMethod" : false,					"category" : "systems under tests",					"comment" : [ ],					"hash" : 21849678,					"argumentNames" : [						"aBlock"					]				}			}		},		"lineParametricTrochoid" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#example45ParametricTrochoid",				"RSParametricCurveTest>>#testLineParametricTrochoid"			],			"implementors" : {				"RSBasicShapeExamples" : {					"sourceCode" : [						"lineParametricTrochoid",						"",						"\t^ RSParametricLineXY new",						"\t\t  param: ((0 to: Float pi) linspace: 100);",						"\t\t  x: [ :t | t cos * (3 * t) cos ] y: [ :t | t sin * (3 * t) cos ];",						"\t\t  scale: 100"					],					"body" : [						"^ RSParametricLineXY new",						"\t  param: ((0 to: Float pi) linspace: 100);",						"\t  x: [ :t | t cos * (3 * t) cos ] y: [ :t | t sin * (3 * t) cos ];",						"\t  scale: 100"					],					"isTestMethod" : false,					"category" : "lines",					"comment" : [ ],					"hash" : 3157616,					"argumentNames" : [ ]				}			}		},		"lineDeCasteljauLineClosedControlPoints" : {			"implementors" : {				"RSBasicShapeExamples" : {					"sourceCode" : [						"lineDeCasteljauLineClosedControlPoints",						"",						"\t| points |",						"\tpoints := { ",						"\t\t          (1 @ 1).",						"\t\t          (3 @ 4).",						"\t\t          (5 @ 6).",						"\t\t          (7 @ 8).",						"\t\t          (10 @ 2).",						"\t\t          (1 @ 1) }.",						"",						"\t^ RSdeCasteljauLine new",						"\t\t  samples: 50;",						"\t\t  controlPoints: points;",						"\t\t  scale: 100"					],					"body" : [						"| points |",						"points := { ",						"\t          (1 @ 1).",						"\t          (3 @ 4).",						"\t          (5 @ 6).",						"\t          (7 @ 8).",						"\t          (10 @ 2).",						"\t          (1 @ 1) }.",						"",						"^ RSdeCasteljauLine new",						"\t  samples: 50;",						"\t  controlPoints: points;",						"\t  scale: 100"					],					"isTestMethod" : false,					"category" : "lines",					"comment" : [ ],					"hash" : 3420687,					"argumentNames" : [ ]				}			},			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#example44deCasteljauLineClosedControlPoints",				"RSParametricCurveTest>>#testLineDeCasteljauLineClosedControlPoints"			]		},		"noteInteger" : {			"implementors" : {				"RSBasicShapeExamples" : {					"sourceCode" : [						"noteInteger",						"",						"\t^ RSLabel new",						"\t\t  model: 541;",						"\t\t  useDefaultCodeFont;",						"\t\t  notedWithPad: Float goldenPlatinumRatio"					],					"body" : [						"^ RSLabel new",						"\t  model: 541;",						"\t  useDefaultCodeFont;",						"\t  notedWithPad: Float goldenPlatinumRatio"					],					"isTestMethod" : false,					"category" : "lines",					"comment" : [ ],					"hash" : 3156570,					"argumentNames" : [ ]				}			},			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#example46NoteInteger",				"RSParametricCurveTest>>#testNoteInteger"			]		},		"lineParametricNeil" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#example45ParametricNeil",				"RSParametricCurveTest>>#testLineParametricNeil"			],			"implementors" : {				"RSBasicShapeExamples" : {					"sourceCode" : [						"lineParametricNeil",						"",						"\t^ RSParametricLineXY new",						"\t\t  param: ((-2 to: 2) linspace: 100);",						"\t\t  x: [ :t | t raisedTo: 2 ] y: [ :t | t raisedTo: 3 ];",						"\t\t  scale: 10"					],					"body" : [						"^ RSParametricLineXY new",						"\t  param: ((-2 to: 2) linspace: 100);",						"\t  x: [ :t | t raisedTo: 2 ] y: [ :t | t raisedTo: 3 ];",						"\t  scale: 10"					],					"isTestMethod" : false,					"category" : "lines",					"comment" : [ ],					"hash" : 3157479,					"argumentNames" : [ ]				}			}		},		"linesDeCasteljauLineDegreeElevation" : {			"senders" : [				"BaselineOfBookletDSst>>#scriptCurvesMessagesForDoc",				"RSBasicShapeExamples>>#example44deCasteljauLineDegreeElevation",				"RSParametricCurveTest>>#testLinesDeCasteljauLineDegreeElevation"			],			"implementors" : {				"RSBasicShapeExamples" : {					"sourceCode" : [						"linesDeCasteljauLineDegreeElevation",						"",						"\t| points bspline1 bspline2 bspline3 bspline4 |",						"\tpoints := { ",						"\t\t          (1 @ 1).",						"\t\t          (3 @ 4).",						"\t\t          (5 @ 6).",						"\t\t          (7 @ (3 / 2)).",						"\t\t          (10 @ 2) }.",						"",						"\tbspline1 := RSdeCasteljauLine new",						"\t\t            samples: 50;",						"\t\t            controlPoints: points;",						"\t\t            scale: 100.",						"",						"\tbspline2 := bspline1 increment.",						"\tbspline3 := bspline2 increment.",						"\tbspline4 := bspline3 increment.",						"",						"\t^ RSGroup",						"\t\t  with: bspline1",						"\t\t  with: bspline2",						"\t\t  with: bspline3",						"\t\t  with: bspline4"					],					"body" : [						"| points bspline1 bspline2 bspline3 bspline4 |",						"points := { ",						"\t          (1 @ 1).",						"\t          (3 @ 4).",						"\t          (5 @ 6).",						"\t          (7 @ (3 / 2)).",						"\t          (10 @ 2) }.",						"",						"bspline1 := RSdeCasteljauLine new",						"\t            samples: 50;",						"\t            controlPoints: points;",						"\t            scale: 100.",						"",						"bspline2 := bspline1 increment.",						"bspline3 := bspline2 increment.",						"bspline4 := bspline3 increment.",						"",						"^ RSGroup",						"\t  with: bspline1",						"\t  with: bspline2",						"\t  with: bspline3",						"\t  with: bspline4"					],					"isTestMethod" : false,					"category" : "lines",					"comment" : [ ],					"hash" : 4468409,					"argumentNames" : [ ]				}			}		}	}}